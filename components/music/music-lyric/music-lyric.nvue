<template><view></view></template>

<script>
	import lyricMixin from '@/common/mixin/lyric.js'
	import appMixin from '@/common/mixin/app.js'
	let musicLyric = null;
	const fontSize = uni.upx2px(35);
	export default {
		mixins: [appMixin, lyricMixin],
		computed: {
			lyricLine () {
				return [{
					tag:'font', id:'lyricBorder', text: this.lyricNowTitle, textStyles: {whiteSpace: 'normal', size: fontSize + 'px', color: this.skinColor.color_1, verticalAlign: 'bottom', weight: 'bold'}
				},{
					tag:'font', id:'lyric', text: this.lyricNowTitle, textStyles: {whiteSpace: 'normal', size: fontSize + 'px', color: this.skinColor.color_blue, verticalAlign: 'bottom'}
				}]
			}
		},
		created () {
			this.initLyric()
		},
		methods: {
			initLyric () {
				if ( this.lyricShow && this.player ) {
					musicLyric = new plus.nativeObj.View('line',{
						bottom: uni.upx2px(15) + 'px',left:'5%',height: 'wrap_content', width: '90%'
					}, this.lyricLine);
					musicLyric.interceptTouchEvent(false);
					musicLyric.show()
				}
			},
			destroyLyric () {
				if ( musicLyric ) {
					musicLyric.close();
					musicLyric = null;
				}
			}
		},
		watch: {
			lyricNowTitle () {
				if ( musicLyric ) {
					musicLyric.draw(this.lyricLine)
				}
			},
			// lyricShow (val) {
			// 	if ( val ) {
			// 		this.initLyric();
			// 	} else {
			// 		this.destroyLyric()
			// 	}
			// },
			skinMode () {
				if ( musicLyric ) {
					musicLyric.draw(this.lyricLine)
				}
			},
			player (val) {
				if ( val ) {
					this.destroyLyric()
					this.initLyric();
				} else {
					this.destroyLyric()
				}
			}
		},
		beforeDestroy() {
			this.destroyLyric()
		}
	}
</script>

<style>
</style>
