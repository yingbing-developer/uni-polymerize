<template>
	<scroll-view
	scroll-with-animation
	:scroll-into-view="scrollId"
	:show-scrollbar="false"
	class="tabs"
	scroll-x="true"
	:style="{
		'border-color': borderColor
	}">
		<view class="tab" :style="{width: column == 'auto' ? column : (750 / column) + 'rpx'}" v-for="(item, index) in tabs" :key="index" :id="'yb-tab_' + index" @tap="changeTab(index)">
			<text class="tab-text" :style="{color: index == currentSync ? activedColor : frontColor}">{{item.label}}</text>
		</view>
	</scroll-view>
</template>

<script>
	export default {
		props: {
			tabs: {
				type: Array,
				default () {
					return new Array
				}
			},
			frontColor: {
				type: String,
				default: '#333333'
			},
			borderColor: {
				type: String,
				default: '#666'
			},
			activedColor: {
				type: String,
				default: '#2196F5'
			},
			current: {
				type: Number,
				default: 0
			},
			column: {
				type: Number | String,
				default: 'auto'
			}
		},
		data () {
			return {
				currentSync: 0,
				scrollId: ''
			}
		},
		created() {
			this.currentSync = this.current
		},
		methods: {
			changeTab (index) {
				if ( this.currentSync != index ) {
					this.$emit('change', {
						current: index
					})
				}
				this.currentSync = index
				this.scrollId = 'yb-tab_' + (index - 1 >= 0 ? index - 1 : 0)
				
			}
		},
		watch: {
			current (newVal) {
				this.currentSync = newVal
				this.scrollId = 'yb-tab_' + (newVal - 1 >= 0 ? newVal - 1 : 0)
			}
		}
	}
</script>

<style scoped>
	.tabs {
		flex-direction: row;
		border-bottom-width: 1rpx;
		border-color: #666;
	}
	.tabs .tab {
		padding: 32rpx 46rpx;
	}
	.tabs .tab .tab-text {
		font-size: 30rpx;
		text-align: center;
		lines: 1;
		color: #333333;
	}
</style>
