<template>
	<scroll-view
	scroll-with-animation
	:scroll-into-view="scrollId"
	:show-scrollbar="false"
	class="tabs"
	ref="ybTabs"
	scroll-x="true"
	:style="tabsStyle">
		<view class="tab"
		:style="{
			width: column == 'auto' ? '' : (fullWidth / column) + 'px',
			'padding-top': type == 'normal' ? '32rpx' : '20rpx',
			'padding-bottom': type == 'normal' ? '32rpx' : '20rpx',
			'padding-left': column == 'auto' ? '46rpx' : '',
			'padding-right': column == 'auto' ? '46rpx' : '',
			'border-right': type == 'normal' ? '' : '1rpx solid ' + activedColor,
			'background-color': type == 'normal' ? '' : (index == currentSync ? activedColor : '')
		}" v-for="(item, index) in tabs" :key="index" :id="'yb-tab_' + index" @tap="changeTab(index)">
			<text class="tab-text"
			:style="{
				color: type == 'normal' ? (index == currentSync ? activedColor : frontColor) : (index == currentSync ? frontColor : activedColor),
				fontSize: size + 'rpx'
			}">{{item.label}}</text>
		</view>
	</scroll-view>
</template>

<script>
	export default {
		props: {
			tabs: {
				type: Array,
				default () {
					return new Array
				}
			},
			size: {
				type: String | Number,
				default: 30
			},
			frontColor: {
				type: String,
				default: '#333333'
			},
			type: {
				type: String,
				default: 'normal'
			},
			borderColor: {
				type: String,
				default: '#666'
			},
			activedColor: {
				type: String,
				default: '#2196F5'
			},
			current: {
				type: Number,
				default: 0
			},
			column: {
				type: Number | String,
				default: 'auto'
			}
		},
		computed: {
			tabsStyle () {
				return this.type == 'normal' ? {
					'border-bottom-width': '1rpx',
					'border-color': this.borderColor
				} : {
					'border-width': '1rpx',
					'border-color': this.activedColor
				}
			}
		},
		data () {
			return {
				currentSync: 0,
				scrollId: '',
				fullWidth: 0
			}
		},
		created() {
			this.currentSync = this.current
		},
		mounted () {
			setTimeout(() => {
				weex.requireModule('dom').getComponentRect(this.$refs.ybTabs, (e) => {
					this.fullWidth = e.size.width
				})
			}, 200)
		},
		methods: {
			changeTab (index) {
				if ( this.currentSync != index ) {
					this.$emit('change', {
						current: index
					})
				}
				this.currentSync = index
				this.scrollId = 'yb-tab_' + (index - 1 >= 0 ? index - 1 : 0)
				
			}
		},
		watch: {
			current (newVal) {
				this.currentSync = newVal
				this.scrollId = 'yb-tab_' + (newVal - 1 >= 0 ? newVal - 1 : 0)
			}
		}
	}
</script>

<style scoped>
	.tabs {
		flex-direction: row;
		border-color: #666;
	}
	.tabs .tab .tab-text {
		text-align: center;
		lines: 1;
		color: #333333;
	}
</style>
