<template>
	<view class="yb-switch"
	:style="{
		'background-color': bgColor,
		'border-color': gapColor,
		width: (size * 3.5) + 'rpx',
		height: size + 'rpx',
		'border-radius': size + 'rpx'
	}">
		<view class="switch-item"
		:style="{
			'background-color': itemColor,
			transform: `translateX(${valueSync ? 0 : '20rpx'})`,
			width: ((size * 3.5) / 2) + 'rpx',
			height: size + 'rpx',
			'border-radius': size + 'rpx'
		}"></view>
		<view class="text-box" @tap="change(true)"><text class="text"
		:style="{
			'color': valueSync ? checkedColor : uncheckedColor
		}">{{trueText}}</text></view>
		<view class="text-box" @tap="change(false)"><text class="text"
		:style="{
			'color': !valueSync ? checkedColor : uncheckedColor
		}">{{falseText}}</text></view>
	</view>
</template>

<script>
	export default {
		props: {
			value: {
				type: Boolean,
				default: false
			},
			trueText: {
				type: String,
				default: '开'
			},
			falseText: {
				type: String,
				default: '关'
			},
			itemColor: {
				type: String,
				default: '#1989FA'
			},
			bgColor: {
				type: String,
				default: '#FAFAFA'
			},
			checkedColor: {
				type: String,
				default: '#FAFAFA'
			},
			uncheckedColor: {
				type: String,
				default: '#424249'
			},
			gapColor: {
				type: String,
				default: '#eeeeee'
			},
			size: {
				type: Number,
				default: 45
			}
		},
		data () {
			return {
				valueSync: false
			}
		},
		created () {
			this.valueSync = this.value;
		},
		methods: {
			change (bool) {
				if ( this.valueSync != bool ) {
					this.valueSync = bool;
					this.$emit('input', bool);
				}
			}
		},
		watch: {
			value (newVal) {
				this.valueSync = newVal;
			}
		}
	}
</script>

<style scoped>
	.yb-switch {
		position: relative;
		border-width: 1px;
		flex-direction: row;
		align-items: center;
	}
	.yb-switch .text-box {
		justify-content: center;
		align-items: center;
		flex: 1;
	}
	.yb-switch .text {
		font-size: 25rpx;
	}
	.yb-switch .switch-item {
		position: absolute;
		left: 0;
		top: 0;
		transition: transform 0.3s;
	}
</style>
