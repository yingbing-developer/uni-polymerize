<template>
	<view class="yb-swiper-list">
		<yb-tabs
		:type="type"
		:size="size"
		:column="column"
		:tabs="tabs"
		:borderColor="borderColor"
		:frontColor="frontColor"
		:activedColor="activedColor"
		:current="currentSync"
		@change="changeTab"></yb-tabs>
		<swiper class="swiper" :current="currentSync" skip-hidden-item-layout :interval="3000" :duration="1000" @change="swiperChange">
			<swiper-item v-for="(item, index) in tabs" :key="index">
				<view class="swiper-item">
					<slot :swiperSlot="{
						detail: item,
						index: index
					}"></slot>
				</view>
			</swiper-item>
		</swiper>
	</view>
</template>

<script>
	export default {
		props: {
			tabs: {
				type: Array,
				default () {
					return new Array
				}
			},
			size: {
				type: String | Number,
				default: 30
			},
			type: {
				type: String,
				default: 'normal'
			},
			frontColor: {
				type: String,
				default: '#333333'
			},
			borderColor: {
				type: String,
				default: '#666'
			},
			activedColor: {
				type: String,
				default: '#2196F5'
			},
			current: {
				type: Number,
				default: 0
			},
			column: {
				type: Number | String,
				default: 'auto'
			}
		},
		data () {
			return {
				currentSync: 0
			}
		},
		created() {
			this.currentSync = this.current
		},
		methods: {
			changeTab (e) {
				if ( this.currentSync != e.current ) {
					this.$emit('change', {
						current: e.current
					})
				}
				this.currentSync = e.current
			},
			swiperChange (e) {
				this.changeTab(e.detail)
			}
		},
		watch: {
			current (newVal) {
				this.currentSync = newVal
			}
		}
	}
</script>

<style scoped>
	.yb-swiper-list {
		flex: 1;
	}
	.swiper {
		flex: 1;
	}
	.swiper .swiper-item {
		flex: 1;
	}
</style>
