<template>
	<view class="cell-item_3"
	:style="itemStyle"
	@tap="readBook(item)">
		<view elevation="3">
			<rd-image :style="coverStyle" lazyLoad class="cover" :src="item.cover" :mode="mode == 'row' ? 'aspectFill' : 'widthFix'"></rd-image>
		</view>
		<yb-gap v-if="mode != 'row'"></yb-gap>
		<view class="info" :style="{'margin-left': mode == 'row' ? '30rpx' : 0}">
			<text class="title" :style="{'color': skinColor.color_1}">{{item.title}}</text>
			<view class="author">
				<rd-icon class="icon" name="person" size="25" :color="skinColor.color_2"></rd-icon>
				<text class="name" :style="{'color': skinColor.color_2}">{{item.author}}</text>
			</view>
			<text class="desc" :style="descStyle">{{desc}}</text>
			<view class="badges" :style="{'margin-top': mode == 'row' ? '10rpx' : '20rpx'}">
				<yb-tag class="badge" :color="item.isEnd ? skinColor.color_green : skinColor.color_orange" :value="item.isEnd ? '已完结' : '连载中'"></yb-tag>
				<yb-tag class="badge" v-if="item.style" :color="skinColor.color_2" :value="item.style"></yb-tag>
				<yb-tag class="badge" v-if="item.size" :color="skinColor.color_blue" :value="item.size"></yb-tag>
				<yb-tag class="badge" :color="skinColor.color_red" :value="filterSource(item.source)"></yb-tag>
			</view>
		</view>
	</view>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		props: {
			item: {
				type: Object,
				default () {
					return new Object
				}
			},
			mode: {
				type: String,
				default: 'row'
			}
		},
		computed: {
			itemStyle () {
				return this.mode == 'row' ? {
					'flex-direction': 'row',
					height: '270rpx',
					'border-bottom-color': this.skinColor.color_gap_1,
					'background-color': this.skinColor.color_bg_1
				} : {
					'border-bottom-color': this.skinColor.color_gap_1,
					'background-color': this.skinColor.color_bg_1
				}
			},
			coverStyle () {
				return this.mode == 'row' ? {
					width: '160rpx',
					height: '240rpx'
				} : {}
			},
			descStyle () {
				return this.mode == 'row' ? {
					height: '90rpx',
					color: this.skinColor.color_2
				} : {
					color: this.skinColor.color_2
				}
			},
			desc () {
				if ( this.item.desc ) {
					return this.item.desc.trim()
				} else if ( this.item.lastChapter ) {
					return '更新到：' + this.item.lastChapter
				} else {
					return '这是一部来自《' + this.filterSource(this.item.source) + '》的' + (this.item.type == 'story' ? '小说' : '漫画')
				}
			}
		}
	}
</script>

<style scoped>
.cell-item_3 {
	border-bottom-width: 1px;
	border-bottom-style: solid;
	padding: 20rpx 0;
	position: relative;
}
.cell-item_3 .info {
	flex: 1;
}
.cell-item_3 .title {
	font-size: 30rpx;
	font-weight: bold;
	lines: 1;
	text-overflow: ellipsis;
}
.cell-item_3 .desc {
	font-size: 26rpx;
	lines: 3;
	text-overflow: ellipsis;
	margin-top: 20rpx;
}
.cell-item_3 .author {
	flex-direction: row;
	align-items: center;
	margin-top: 10rpx;
}
.cell-item_3 .author .icon {
	margin-top: 5rpx;
}
.cell-item_3 .name {
	font-size: 24rpx;
	lines: 1;
	text-overflow: ellipsis;
	margin-top: 10rpx;
	margin-left: 10rpx;
}
.cell-item_3 .badges {
	flex-direction: row;
	align-items: center;
}
.cell-item_3 .badge {
	margin-right: 10rpx;
}
.cell-item_3 .delete {
	position: absolute;
	right: 20rpx;
	bottom: 20rpx;
}
</style>
