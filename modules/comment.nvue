<template>
	<yb-popup popout="fade" direction="bottom" height="800rpx" :visible="show" @hide="hide">
		<view class="comment" :style="{'background-color': skinColor.color_bg_2}">
			<text class="title" :style="{color: skinColor.color_3}">全部评论</text>
			<yb-comment
			:comments="comments"
			:contentColor="skinColor.color_1"
			:titleColor="skinColor.color_2"
			:lineColor="skinColor.color_gap_2"
			:themeColor="skinColor.color_blue"
			v-if="comments.length > 0">
			<template slot="bottom">
				<yb-pullup ref="pullup" :color="skinColor.color_1" @pullup="pullup"  v-if="!isLastPage"></yb-pullup>
				<cell v-if="isLastPage && comments.length > 0">
					<yb-no-more :color="skinColor.color_3"></yb-no-more>
				</cell>
			</template>
			</yb-comment>
			<view class="loading" v-if="loading || comments.length == 0">
				<yb-no-data title="暂无评论" v-if="comments.length == 0 && !loading"></yb-no-data>
				<yb-loading :color="skinColor.color_3" size="60" v-if="loading"></yb-loading>
			</view>
		</view>
	</yb-popup>
</template>

<script>
	import appMixin from '@/common/mixin/app.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				show: false,
				comments: [],
				params: '',
				loading: true,
				currentPage: 1,
				isLastPage: false
			}
		},
		onLoad () {
			this.show = true
			this.params = JSON.parse(decodeURIComponent(getApp().globalData.$Route.query.data))
			if ( this.params.commentId ) {
				this.getComment().then(data => {
					this.isLastPage = data.isLastPage
					this.loading = false
					this.comments = data.list
				})
			} else {
				this.isLastPage = true
				this.loading = false
			}
		},
		methods: {
			pullup () {
				this.currentPage++
				this.params.source == 'qqmusic' ? this.params.extra.seqNo = this.comments[this.comments.length - 1].id : null
				this.getComment().then(data => {
					this.currentPage = data.currentPage
					data.isLastPage ? this.$refs.pullup.finish() : this.$refs.pullup.success()
					this.isLastPage = data.isLastPage
					this.comments = this.comments.concat(data.list)
				})
			},
			async getComment () {
				return await getApp().globalData.$api.music.getComment({
					id: this.params.commentId,
					page: this.currentPage,
					source: this.params.source,
					extra: this.params.extra
				}).then((res) => {
					return {
						list: res.data.list,
						currentPage: res.data.currentPage,
						isLastPage: res.data.isLastPage
					}
				})
			},
			hide () {
				getApp().globalData.$Router.back()
			}
		}
	}
</script>

<style scoped>
	.comment {
		flex: 1;
	}
	.comment .title {
		text-align: center;
		font-size: 24rpx;
		padding: 20rpx 0;
	}
	.comment .loading {
		flex: 1;
		align-items: center;
		justify-content: center;
	}
</style>
