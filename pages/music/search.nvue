<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<rd-search placeholder="搜索歌曲/歌手" :keywords="keywords" :records="records" :value="keyword" @input="change" @clearRecord="clearRecord" @removeRecord="removeRecord">
			<view class="result" v-if="keyword" :style="{'background-color': skinColor.color_bg_1}">
				<list class="list" v-if="results.length > 0 && !loading">
					<cell><view ref="listTop"></view></cell>
					<cell v-for="(item, index) in results">
						<view class="item" :style="{'border-color': skinColor.color_gap_1}" @tap="itemClick(item)">
							<view class="item-left">
								<rd-icon name="person" size="34" :color="skinColor.color_1" v-if="item.type == 'singer'"></rd-icon>
								<rd-icon name="music" size="34" :color="skinColor.color_1" v-else></rd-icon>
								<view style="flex: 1;">
									<text class="label" :style="{color: skinColor.color_1}">{{item.title}}</text>
									<text class="label sub" :style="{color: skinColor.color_3}" v-if="item.type == 'song'">{{item.singer}}</text>
									<text class="label sub" :style="{color: skinColor.color_3}" v-else>专辑数量：{{item.albumSize}}</text>
								</view>
							</view>
							<view class="item-right">
								<rd-icon v-if="item.type == 'song'" enableClick @click="musicPanel(item, true)" class="icon opac-actived" name="more-horizontal" size="32" :color="skinColor.color_3"></rd-icon>
								<view v-else @tap="toCollection(item)">
									<rd-icon v-if="isCollection(item.id)" class="icon" name="love-fill" size="32" :color="skinColor.color_red"></rd-icon>
									<rd-icon v-else class="icon" name="love" size="32" :color="skinColor.color_3"></rd-icon>
								</view>
							</view>
						</view>
					</cell>
					<yb-pullup ref="pullup" :color="skinColor.color_1" @pullup="pullup" v-if="!isLastPage"></yb-pullup>
					<cell v-if="isLastPage && results.length > 0">
						<yb-no-more :color="skinColor.color_3"></yb-no-more>
					</cell>
				</list>
				<template v-else>
					<rd-no-data title="暂无搜索数据" v-if="results.length == 0 && !loading" />
					<rd-loading size="80" :color="skinColor.color_3" title="搜索中" v-if="loading" />
				</template>
			</view>
		</rd-search>
	</yb-page-anime>
</template>

<script>
	const dom = weex.requireModule('dom');
	import appMixin from '@/common/mixin/app.js'
	import History from '@/assets/constructor/search.js' 
	export default {
		mixins: [appMixin],
		data () {
			return {
				keyword: '',
				loading: false,
				keywords: [],
				results: [],
				//当前页数
				nowPages: {},
				isLastPages: {},
				//是否已经加载完了所有数据
				isLastPage: false,
			}
		},
		computed: {
			records () {
				const history = this.$store.getters['search/getHistory']
				return history.filter(his => his.type == 'music')
			},
			sources () {
				return this.$store.getters['source/get'].filter(source => source.type == 'music')
			}
		},
		onLoad () {
			this.sources.forEach(source => {
				if ( source.request.search?.value && source.isOpen && (!source.isAdult || this.$store.getters['app/getAdult']) ) {
					this.nowPages[source.id] = 1 ;
					this.isLastPages[source.id] = false;
				}
			})
			this.getHotKeyword()
			this.keyword = getApp().globalData.$Route.query.keyword || ''
		},
		methods: {
			getHotKeyword () {
				getApp().globalData.$api.music.getHotKeyword().then((ress) => {
					let keywords = []
					ress.forEach((res, index) => {
						if ( res.code == getApp().globalData.$config.ERR_OK ) {
							keywords = keywords.concat(res.data.list)
						}
					})
					this.keywords = [...new Set(keywords)]
				})
			},
			async search (keyword) {
				this.keyword = keyword
				return await getApp().globalData.$api.music.search({
					keyword: this.keyword,
					page: this.nowPages,
					isLastPage: this.isLastPages
				}).then((ress) => {
					let results = [];
					ress.forEach(res => {
						if ( res.code == getApp().globalData.$config.ERR_OK ) {
							results = results.concat(res.data.list);
							this.$set(this.isLastPages, res.data.source, res.data.isLastPage);
						} else {
							//请求失败
							this.nowPages[res.data.source] = this.nowPages[res.data.source] > 1 ? this.nowPages[res.data.source] - 1 : 1;
						}
					})
					//判断是不是所有网站数据都加载完了
					this.isLastPage = Object.keys(this.isLastPages).every(key => this.isLastPages[key]);
					this.$store.dispatch('search/addHistory', new History({
						title: keyword,
						type: 'music'
					}))
					return results
				})
			},
			scrollTop () {
				dom.scrollToElement(this.$refs.listTop, {animated: false});
			},
			change (keyword) {
				clearTimeout(this.timer);
				this.timer = null
				this.results = []
				this.loading = true;
				this.keyword = keyword
				this.isLastPage = false;
				this.timer = setTimeout(() => {
					this.sources.forEach(source => {
						if ( source.request.search?.value && source.isOpen && (!source.isAdult || this.$store.getters['app/getAdult']) ) {
							this.nowPages[source.id] = 1 ;
							this.isLastPages[source.id] = false;
						}
					})
					if ( keyword ) {
						this.search(keyword).then(results => {
							this.loading = false
							results.sort((a, b) => {
								return a.type == 'singer' && b.type != 'singer' ? -1 : 1
							})
							this.results = results;
							this.scrollTop();
						})
					} else {
						this.results = []
					}
					clearTimeout(this.timer);
					this.timer = null
				}, 200)
			},
			pullup () {
				Object.keys(this.nowPages).forEach(key => {
					this.nowPages[key] += 1;
				})
				this.search(this.keyword).then(results => {
					this.results = this.results.concat(results);
					if ( this.isLastPage ) {
						this.$refs.pullup.finish()
					} else {
						this.$refs.pullup.success()
					}
				})
			},
			removeRecord (item) {
				this.$store.dispatch('search/removeHistory', item)
			},
			clearRecord () {
				getApp().globalData.$nativeUI.confirm({
					title: '提示',
					content: '是否清空所有搜索历史',
					themeColor: this.skinColor.color_blue,
					dark: this.skinMode == 'night',
					success: (e) => {
						if ( e.confirm ) {
							this.$store.dispatch('search/clearHistory', 'music')
						}
					}
				})
			},
			itemClick (params) {
				if ( params.type == 'singer' ) {
					this.goDetail(params)
				} else {
					this.playSong(params)
				}
			},
			goDetail (params) {
				getApp().globalData.$Router.push({
					path: '/pages/music/detail',
					query: {
						params: encodeURIComponent(JSON.stringify(params))
					}
				})
			}
		}
	}
</script>

<style scoped>	
	.result {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
	.result .list {
		flex: 1;
	}
	.result .item {
		padding: 20rpx 30rpx;
		border-bottom-width: 1rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.result .item .label {
		font-size: 28rpx;
		margin-left: 10rpx;
		lines: 1;
		text-overflow: ellipsis;
		flex: 1;
	}
	.result .item .sub {
		font-size: 24rpx;
		margin-top: 10rpx;
	}
	.result .item .item-left {
		flex-direction: row;
		align-items: center;
		flex: 1;
	}
	.result .item .item-right {
		flex-direction: row;
		align-items: center;
	}
	.result .item .item-right .icon {
		margin-left: 20rpx;
	}
	
</style>
