<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="我喜欢的"></yb-nav-bar>
		<yb-swiper-list
		:column="tabs.length < 5 ? tabs.length : 'auto'"
		:tabs="tabs"
		@change="changeTab"
		:frontColor="skinColor.color_2"
		:borderColor="skinColor.color_3"
		:activedColor="skinColor.color_actived_1">
			<template v-slot="{swiperSlot}">
				<template v-if="swiperSlot.detail.value == 'album' || swiperSlot.detail.value == 'newAlbum' || swiperSlot.detail.value == 'song'">
					<list v-if="swiperSlot.detail.data.length > 0">
						<cell>
							<yb-gap height="30rpx"></yb-gap>
						</cell>
						<cell v-for="(item, index) in swiperSlot.detail.data.slice(0, list[swiperSlot.index].currentPage * size)">
							<view class="cell-item_1 padding-gap" @tap="goDetail(item)">
								<rd-image lazyLoad border-radius="12" class="cover" :src="item.cover" mode="aspectFill"></rd-image>
								<view class="info">
									<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
									<text class="label" :style="{color: skinColor.color_3}">{{item.type == 'song' ? item.singer : item.creator}}</text>
								</view>
								<view class="actions">
									<rd-icon v-if="item.type == 'song'" enableClick @click="musicPanel(item)" class="more opac-actived" name="more-vertical" :color="skinColor.color_3"></rd-icon>
									<rd-icon v-else enableClick @click="remove(item.id)" class="opac-actived" name="more dustbin" size="28" :color="skinColor.color_3"></rd-icon>
								</view>
							</view>
						</cell>
						<cell v-if="list[swiperSlot.index].currentPage * size >= swiperSlot.detail.data.length && swiperSlot.detail.data.length > 0">
							<yb-no-more :color="skinColor.color_3"></yb-no-more>
						</cell>
						<yb-pullup v-if="list[swiperSlot.index].currentPage * size < swiperSlot.detail.data.length" :ref="'pullup_' + swiperSlot.index" :color="skinColor.color_1" @pullup="pullup(swiperSlot.index)"></yb-pullup>
					</list>
					<view class="loading" v-else>
						<yb-no-data title="暂无数据" />
					</view>
				</template>
				<template v-else-if="swiperSlot.detail.value == 'singer'">
					<yb-index-list :data="swiperSlot.detail.data" :headerBgColor="skinColor.color_red_2" v-if="swiperSlot.detail.data.length > 0">
						<template v-slot="{indexItem}">
							<view class="singer" :style="{'border-color': skinColor.color_gap_1}" @tap="goDetail(indexItem)">
								<rd-image lazyLoad class="cover" :src="indexItem.cover" mode="aspectFill"></rd-image>
								<text class="name" :style="{color: skinColor.color_1}">{{indexItem.title}}（{{filterSource(indexItem.source)}}）</text>
							</view>
						</template>
					</yb-index-list>
					<view class="loading" v-else>
						<yb-no-data title="还没有收藏歌手" />
					</view>
				</template>
				<template v-else>
					<list v-if="swiperSlot.detail.data.length > 0">
						<cell>
							<yb-gap height="30rpx"></yb-gap>
						</cell>
						<cell v-for="(item, index) in swiperSlot.detail.data.slice(0, list[swiperSlot.index].currentPage * size)">
							<view class="top" :style="{'background-color': skinColor.color_black}" @tap="goDetail(item)">
								<rd-image class="cover" lazyLoad
									:src="item.cover"
									mode="aspectFill"></rd-image>
								<view class="top-desc">
									<text class="top-desc-text" :style="{'color': skinColor.color_white}">{{item.desc || item.title}}</text>
								</view>
							</view>
						</cell>
						<cell v-if="list[swiperSlot.index].currentPage * size >= swiperSlot.detail.data.length && swiperSlot.detail.data.length > 0">
							<yb-no-more :color="skinColor.color_3"></yb-no-more>
						</cell>
						<yb-pullup v-if="list[swiperSlot.index].currentPage * size < swiperSlot.detail.data.length" :ref="'pullup_' + swiperSlot.index" :color="skinColor.color_1" @pullup="pullup(swiperSlot.index)"></yb-pullup>
					</list>
					<view class="loading" v-else>
						<yb-no-data title="暂无数据"/></yb-no-data>
					</view>
				</template>
			</template>
		</yb-swiper-list>
		<view class="fixed-bottom">
			<yb-button @click="playAllsong" v-if="tabs[current].value == 'song' && tabs[current].data.length > 0" class="button" title="播放全部" size="22" round />
			<yb-button @click="clear(current)" v-if="tabs[current].value != 'song' && tabs[current].data.length > 0" class="button" title="清空全部" size="22" round />
		</view>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import pinyin from '@/assets/other/pinyin.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				size: 20,
				list: [],
				current: 0
			}
		},
		onLoad () {
			this.tabs.forEach(tab => {
				this.list.push({
					currentPage: 1
				})
			})
		},
		computed: {
			data () {
				return this.$store.getters['collection/getCollection']
			},
			tabs () {
				return [{
					label: '歌曲',
					value: 'song',
					data: this.data.filter(item => item.type == 'song').reverse()
				},{
					label: '歌手',
					value: 'singer',
					data: this.data.filter(item => item.type == 'singer').map(item => {
						return Object.assign(item, {
							index: pinyin.chineseToInitials(pinyin.chineseToPinYin(item.title.slice(0, 1))) || '#'
						})
					}).reverse()
				},{
					label: '歌单',
					value: 'album',
					data: this.data.filter(item => item.type == 'album').reverse()
				},{
					label: '专辑',
					value: 'newAlbum',
					data: this.data.filter(item => item.type == 'newAlbum').reverse()
				},{
					label: '排行榜',
					value: 'top',
					data: this.data.filter(item => item.type == 'top').reverse()
				}]
			}
		},
		methods: {
			pullup (index) {
				this.list[index].currentPage++;
				this.$refs['pullup_' + index].success()
			},
			changeTab (e) {
				this.current = e.current
			},
			goDetail (params) {
				if ( params.type == 'song' ) {
					this.playSong(params)
				} else {
					this.app.$Router.push({
						path: '/pages/music/detail',
						query: {
							params: encodeURIComponent(JSON.stringify(params))
						}
					})
				}
			},
			playAllsong () {
				this.playAlbum(this.data.filter(item => item.type == 'song'))
			},
			clear (index) {
				this.app.$nativeUI.confirm({
					title: '提示',
					content: '真的要清空收藏的' + this.tabs[index].label + '吗？',
					dark: this.skinMode == 'night',
					success: (res) => {
						if ( res.confirm ) {
							this.$store.dispatch('collection/clearCollection', this.tabs[index].value)
							this.list[index].currentPage = 1
						}
					}
				})
			},
			remove (id) {
				this.$store.dispatch('collection/removeCollection', id)
			}
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.loading {
		flex: 1;
		align-items: center;
		justify-content: center;
	}
	.singer {
		flex-direction: row;
		align-items: center;
		height: 120rpx;
		padding: 0 30rpx;
		border-bottom-width: 1prx;
	}
	.singer .cover {
		width: 90rpx;
		height: 90rpx;
	}
	.singer .name {
		font-size: 28rpx;
		margin-left: 20rpx;
		lines: 1;
		flex: 1;
	}
	.top {
		margin: 0 20rpx 20rpx 20rpx;
		height: 200rpx;
		flex-direction: row;
	}
	.top .cover {
		width: 200rpx;
		height: 200rpx;
	}
	.top .top-desc {
		padding: 0 40rpx;
		justify-content: center;
		flex: 1;
	}
	.top .top-desc-text {
		font-size: 24rpx;
		line-height: 52rpx;
		lines: 3;
	}
</style>
