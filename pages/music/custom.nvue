<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="我的歌单"></yb-nav-bar>
		<list>
			<cell v-for="(item, index) in list">
				<view class="album" :style="{'border-color': skinColor.color_gap_1}" @tap="goDetail(item)">
					<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
					<view class="info">
						<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
						<text class="label" :style="{color: skinColor.color_3}">{{item.song.length}}首歌曲</text>
					</view>
					<view class="actions">
						<rd-icon enableClick @click="showPanel(item)" class="more opac-actived" name="more-vertical" :color="skinColor.color_3"></rd-icon>
					</view>
				</view>
			</cell>
			<cell v-if="isLastPage && list.length > 0">
				<yb-no-more :color="skinColor.color_3"></yb-no-more>
			</cell>
			<yb-page-anime-fixed>
				<yb-list-no-data :color="skinColor.color_3" v-if="list.length == 0" title="还没有创建歌单"></yb-list-no-data>
			</yb-page-anime-fixed>
			<view class="fixed-bottom">
				<yb-button @click="showCreate = true" class="button" title="创建歌单" size="22" round />
			</view>
			<yb-pullup ref="pullup" :color="skinColor.color_1" @pullup="pullup" v-if="!isLastPage"></yb-pullup>
		</list>
		<yb-modal-input
		:visible.sync="showCreate"
		title="新建歌单"
		placeholder="请输入歌单名称"
		v-model="albumTitle"
		:bgColor="skinColor.color_bg_2"
		:frontColor="skinColor.color_1"
		:themeColor="skinColor.color_blue"
		:tipColor="skinColor.color_2"
		:gapColor="skinColor.color_gap_1"
		@confirm="createAlbum"
		@cancel="albumTitle = ''"></yb-modal-input>
		<yb-modal-input
		:visible.sync="showEdit"
		title="编辑歌单"
		placeholder="请输入新的歌单名称"
		v-model="albumTitle"
		:bgColor="skinColor.color_bg_2"
		:frontColor="skinColor.color_1"
		:themeColor="skinColor.color_blue"
		:tipColor="skinColor.color_2"
		:gapColor="skinColor.color_gap_1"
		@confirm="editAlbum"
		@cancel="albumTitle = ''"></yb-modal-input>
		<rd-action-sheet
		:visible.sync="showMore"
		:title="'歌单：' + (panelInfo ? panelInfo.title : '')"
		:itemList="actions"
		@confirm="moreConfirm"></rd-action-sheet>
		<yb-popup direction="right" width="750rpx" :visible.sync="showDetail">
			<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" :title="detail.title"></yb-nav-bar>
			<list :style="{'background-color': skinColor.color_bg_1, flex: 1}">
				<cell v-for="(item, index) in detail.song">
					<uni-swipe-action>
						<uni-swipe-action-item :right-options="options" :left-options="options" @click="onClick($event, item)">
					        <view class="cell-item_2 margin-gap"
					        :style="{'border-color': skinColor.color_gap_1}"
					        @tap="playSong(item)">
					        	<text class="index" :style="{color: skinColor.color_red_2}" v-if="index > 2">{{index + 1}}</text>
					        	<image v-if="index == 0" class="trophy" src="/static/music/trophy_1.png" mode="aspectFill"></image>
					        	<image v-if="index == 1" class="trophy" src="/static/music/trophy_2.png" mode="aspectFill"></image>
					        	<image v-if="index == 2" class="trophy" src="/static/music/trophy_3.png" mode="aspectFill"></image>
					        	<rd-icon name="music-fill" size="30" :color="skinColor.color_green"></rd-icon>
					        	<view class="info">
					        		<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
					        		<text class="label" :style="{color: skinColor.color_3}">{{item.singer}}</text>
					        	</view>
					        	<rd-icon enableClick @click="musicPanel(item)" class="more opac-actived" name="more-vertical" :color="skinColor.color_3"></rd-icon>
					        </view>
					    </uni-swipe-action-item>
					</uni-swipe-action>
				</cell>
			</list>
			<view class="fixed-bottom">
				<yb-button @click="playAlbum(detail.song)" v-if="detail.song ? detail.song.length > 0 : false" class="button" title="播放全部" size="22" round />
			</view>
			<rd-no-data :color="skinColor.color_3" title="还未添加歌曲" v-if="detail.song ? detail.song.length == 0 : true"></rd-no-data>
		</yb-popup>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import Album from '@/assets/constructor/album.js'
	let that;
	export default {
		mixins: [appMixin],
		data () {
			return {
				page: 1,
				size: 20,
				showCreate: false,
				albumTitle: '',
				showMore: false,
				panelInfo: '',
				actions: [{
					label: '编辑歌单名称',
					icon: 'edit-rect',
					size: 40
				},{
					label: '删除歌单',
					icon: 'dustbin',
					size: 40
				}],
				showEdit: false,
				showDetail: false,
				detail: '',
				options:[{
				    text: '删除',
				    style: {
				        backgroundColor: '#dd524d'
				    }
				}]
			}
		},
		computed: {
			list () {
				return this.$store.getters['custom/get'].filter(item => item.type == 'album')
			},
			max () {
				return this.page * this.size
			},
			isLastPage () {
				return this.max >= this.list.length
			}
		},
		onLoad () {
			that = this
		},
		methods: {
			pullup () {
				this.page++
				this.$refs.pullup.success()
			},
			createAlbum () {
				if ( !this.albumTitle ) {
					uni.showToast({
						title: '请输入歌单标题',
						icon: 'none'
					})
					return
				}
				let index = this.list.findIndex(item => item.title == this.albumTitle)
				if ( index > -1 ) {
					uni.showToast({
						title: '歌单标题重复',
						icon: 'none'
					})
					return
				}
				this.$store.dispatch('custom/add', new Album({
					albumId: new Date().getTime().toString() + Math.floor(Math.random() * Math.pow(10, 5)),
					title: this.albumTitle,
					cover: '/static/music/album.png',
					creator: '自定义歌单',
					type: 'album',
					source: 'local'
				}))
				this.albumTitle = ''
				this.showCreate = false
			},
			moreConfirm (e) {
				if ( e.index == 0 ) {
					this.showEditAlbum()
				}
				if ( e.index == 1 ) {
					this.deleteAlbum(this.panelInfo.id)
				}
			},
			showEditAlbum () {
				this.showMore = false
				this.albumTitle = this.panelInfo.title
				this.showEdit = true
			},
			editAlbum () {
				if ( !this.albumTitle ) {
					uni.showToast({
						title: '请输入歌单标题',
						icon: 'none'
					})
					return
				}
				let index = this.list.findIndex(item => item.title == this.albumTitle)
				if ( index > -1 ) {
					uni.showToast({
						title: '歌单标题重复',
						icon: 'none'
					})
					return
				}
				this.panelInfo.title = this.albumTitle
				this.$store.dispatch('custom/add', this.panelInfo)
				this.albumTitle = ''
				this.showEdit = false
				this.panelInfo = ''
			},
			deleteAlbum (id) {
				getApp().globalData.$nativeUI.confirm({
					title: '提示',
					content: '确认要删除该歌单吗？',
					dark: this.skinMode == 'night',
					success: (res) => {
						if ( res.confirm ) {
							this.$store.dispatch('custom/remove', id)
							this.showMore = false
							this.panelInfo = ''
						}
					}
				})
			},
			showPanel (params) {
				this.panelInfo = params
				this.showMore = true
			},
			goDetail (params) {
				this.detail = params
				this.showDetail = true
			},
			onClick (e, params) {
				if ( e.index == 0 ) {
					this.removeCustom(params)
				}
			},
			removeCustom (params) {
				let index = this.detail.song.findIndex(item => item.id == params.id)
				if ( index > -1 ) {
					this.detail.song.splice(index, 1)
					this.$store.dispatch('custom/add', this.detail)
				}
			}
		},
		onBackPress (event) {
			if ( that.showMore ) {
				that.showMore = false
				return true
			}
			if ( that.showDetail ) {
				that.showDetail = false
				return true
			}
			return false
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.album {
		flex-direction: row;
		align-items: center;
		padding: 10rpx;
		border-bottom-width: 1rpx;
	}
	.album .cover {
		width: 100rpx;
		height: 100rpx;
	}
	.album .info {
		flex: 1;
		justify-content: space-between;
		height: 80rpx;
		margin-left: 20rpx;
	}
	.album .title {
		font-size: 26rpx;
		text-overflow: ellipsis;
		lines: 1;
	}
	.album .label {
		font-size: 24rpx;
		lines: 1;
	}
</style>
