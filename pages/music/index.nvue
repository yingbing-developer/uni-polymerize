<template>
	<view class="music" :style="{'background-color': skinColor.color_bg_1}">
		<template v-if="!loading">
			<list class="list">
				<yb-pulldown ref="pulldown" :color="skinColor.color_1" @pulldown="pulldown"></yb-pulldown>
				<cell>
					<swiper
					:style="{'height': (statusBarHeight + 150) + 'px'}"
					class="ad-swiper"
					circular
					:indicator-dots="true"
					:indicator-color="skinColor.color_bg_1"
					:indicator-active-color="skinColor.color_actived_1"
					:autoplay="true"
					:interval="3000"
					:duration="1000">
						<swiper-item v-for="(item, index) in banners" :key="index" @tap="goDetail(item)">
							<rd-image lazyLoad class="ad" :src="item.cover" mode="aspectFill"></rd-image>
						</swiper-item>
					</swiper>
				</cell>
				<cell>
					<view class="singer-line opac-actived" :style="{'background-color': skinColor.color_theme_2}" @tap="app.$Router.push({path: '/pages/music/search'})">
						<view class="singer-left">
							<rd-icon name="search" color="#ffa916" size="50"></rd-icon>
							<text class="singer-text" :style="{color: skinColor.color_1}">搜索歌曲/歌手</text>
						</view>
						<view class="go">
							<text class="go-text">GO</text>
						</view>
					</view>
				</cell>
				
				<!-- 音乐模块 -->
				<cell v-for="(module, i) in modules" :key="i">
					<template v-if="module.hotTop.length > 0 || module.hotSinger.length > 0">
						<view class="padding-gap" v-if="module.hotSinger.length > 0">
							<rd-title :title="module.title" moreText="更多"
							@more="app.$Router.push({
								path: '/pages/music/more',
								query: {
									module: encodeURIComponent(JSON.stringify(module))
								}
							})"></rd-title>
							<yb-grid :data="module.hotSinger" :count="4" :column="4">
								<template v-slot="{gridItem}">
									<view class="singer" @tap="goDetail(gridItem.detail)">
										<rd-image lazyLoad border-radius="12" class="cover" :src="gridItem.detail.cover" mode="aspectFill"></rd-image>
										<text class="name" :style="{color: skinColor.color_1}">{{gridItem.detail.title}}</text>
									</view>
								</template>
							</yb-grid>
						</view>
						<yb-gap></yb-gap>
						<!-- 排行榜 -->
						<view class="types" v-if="module.hotTop.length > 0">
							<view class="type opac-actived"
							v-for="(item, index) in module.hotTop"
							@tap="goRank(item)"
							:key="index"
							:style="{
								'background-color': skinColor.color_theme_2,
								'margin-right': ((parseInt(index / 4) + 1) * 4) - 1 == index ? '0' : '24rpx'
							}">
								<text class="type-text" :style="{color: skinColor.color_1}">{{item.title}}</text>
								<rd-icon name="arrow-right" v-if="index == 7" :color="skinColor.color_1"></rd-icon>
							</view>
						</view>
						
						<!-- 推荐歌单 -->
						<rd-type title="推荐歌单"></rd-type>
						<view class="cellItem padding-gap" v-for="(item, index) in module.hotDisc.slice(0, 3)" :key="index" @tap="goDetail(item)">
							<rd-image lazyLoad border-radius="12" class="cover" :src="item.cover"></rd-image>
							<view class="info">
								<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
								<text class="label" :style="{color: skinColor.color_3}">{{item.creator}}</text>
							</view>
						</view>
						<view class="newAlbum" :style="{'border-color': skinColor.color_gap_1}" v-if="MUSICURL[module.source].newSong">
							<view class="newAlbum-center"
							@tap="app.$Router.push({
								path: '/pages/music/album',
								query: {
									source: module.source,
									title: module.title
								}
							})">
								<text class="newAlbum-text"
								:style="{color: skinColor.color_actived_1}"
								>新碟上架</text>
								<rd-icon name="arrow-right" size="36" :color="skinColor.color_actived_1" />
							</view>
						</view>
					</template>
				</cell>
			</list>
		</template>
		<yb-list-loading :color="skinColor.color_3" v-else size="70" title="加载中"></yb-list-loading>
	</view>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		data () {
			return {
				statusBarHeight: 0,
				modules: [],//音乐模块展示
				banners: [],
				loading: true,
			}
		},
		computed: {
			MUSICURL () {
				return getApp().globalData.$config.MUSICURL
			}
		},
		onLoad () {
			this.statusBarHeight = uni.getSystemInfoSync().statusBarHeight
			this.getRecome().then(status => {
				status ? this.loading = false : null
			})
		},
		onShow () {
			getApp().globalData.$business.setSkinColor();
		},
		onReady() {
			
		},
		methods: {
			pulldown () {
				setTimeout(() => {
					this.getRecome().then(status => {
						status ? this.$refs.pulldown.success() : this.$refs.pulldown.fail()
					})
				}, 500)
			},
			async getRecome () {
				return await getApp().globalData.$api.music.getRecom().then((ress) => {
					let modules = []
					let banners = []
					ress.forEach((res, index) => {
						if ( res.code == getApp().globalData.$config.ERR_OK ) {
							let module = res.data.data
							module.banners.forEach(banner => {
								banners.push(banner)
							})
							const hotTop = module.topList.filter(top => top.title.length < 6)
							module.hotTop = hotTop.slice(0, 7)
							module.hotTop.push({
								title: '更多',
								source: res.data.source
							})
							modules.push(module)
						}
					})
					this.modules = modules
					this.banners = banners
					return modules.length > 0
				})
			},
			goDetail (params) {
				getApp().globalData.$Router.push({
					path: '/pages/music/detail',
					query: {
						params: encodeURIComponent(JSON.stringify(params))
					}
				})
			},
			goRank (item) {
				if ( item.title == '更多' ) {
					const moduleIndex = this.modules.findIndex(module => module.source == item.source)
					getApp().globalData.$Router.push({
						path: '/pages/music/rank',
						query: {
							title: this.modules[moduleIndex].title,
							source: item.source,
							data: encodeURIComponent(JSON.stringify(this.modules[moduleIndex].topList))
						}
					})
				} else {
					this.goDetail(item)
				}
			}
		}
	}
</script>

<style scoped>
	.ad-swiper {
		height: 200rpx;
	}
	.ad-swiper .ad {
		flex: 1;
	}
	.singer-line {
		height: 120rpx;
		margin: 24rpx 30rpx;
		border-radius: 16rpx;
		padding: 0 30rpx;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}
	.singer-line .singer-left {
		flex-direction: row;
		align-items: center;
	}
	.singer-line .singer-text {
		font-weight: bold;
		font-size: 36rpx;
		margin-left: 45rpx;
	}
	.singer-line .go {
		width: 80rpx;
		height: 80rpx;
		border-radius: 80rpx;
		background: linear-gradient(to bottom, #ffdca0, #ffab1f);
		align-items: center;
		justify-content: center;
	}
	.singer-line .go .go-text {
		font-weight: bold;
		font-size: 38rpx;
		color: #fff;
	}
	.types {
		flex-direction: row;
		justify-content: center;
		flex-wrap: wrap;
		padding: 0 30rpx;
	}
	.types .type {
		width: 150rpx;
		height: 64rpx;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		margin: 0 0 24rpx 0;
	}
	.types .type .type-text {
		font-size: 24rpx;
	}
	
	.singer {
		width: 160rpx;
	}
	.singer .cover {
		width: 160rpx;
		height: 200rpx;
	}
	.singer .name {
		font-size: 24rpx;
		lines: 1;
		text-overflow: ellipsis;
		text-align: center;
		margin: 10rpx 0;
	}
	
	.cellItem {
		flex-direction: row;
		align-items: center;
		padding-bottom: 30rpx;
	}
	.cellItem .cover {
		width: 150rpx;
		height: 150rpx;
	}
	.cellItem .info {
		flex: 1;
		height: 100rpx;
		justify-content: space-between;
		margin-left: 30rpx;
	}
	.cellItem .info .title, .cellItem .info .label {
		font-size: 28rpx;
		text-overflow: ellipsis;
		lines: 1;
	}
	
	.newAlbum {
		flex-direction: row;
		justify-content: center;
		margin: 20rpx 30rpx;
		padding: 30rpx 0;
		border-bottom-width: 1rpx;
	}
	.newAlbum-center {
		flex-direction: row;
		justify-content: center;
		align-items: center;
	}
	.newAlbum-text {
		font-size: 26rpx;
	}
</style>
