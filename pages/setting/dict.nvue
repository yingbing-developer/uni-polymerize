<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="字典设置"></yb-nav-bar>
		<yb-swiper-list
		:column="tabs.length < 5 ? tabs.length : 'auto'"
		:tabs="tabs"
		@change="changeTab"
		:frontColor="skinColor.color_2"
		:borderColor="skinColor.color_3"
		:activedColor="skinColor.color_actived_1">
			<template v-slot="{swiperSlot}">
				<list v-if="swiperSlot.detail.data.length > 0">
					<cell v-for="(item, index) in swiperSlot.detail.data.slice(0, list[swiperSlot.index].currentPage * size)">
						<view class="dict padding-gap" :style="{'border-color': skinColor.color_gap_2}">
							<text class="value" :style="{color: skinColor.color_2}">{{item.title}}</text>
							<rd-icon enableClick @click="remove(item.id)" name="dustbin" :color="skinColor.color_2" size="30"></rd-icon>
						</view>
					</cell>
					<cell v-if="list[swiperSlot.index].currentPage * size >= swiperSlot.detail.data.length && swiperSlot.detail.data.length > 0">
						<yb-no-more :color="skinColor.color_3"></yb-no-more>
					</cell>
					<yb-pullup v-if="list[swiperSlot.index].currentPage * size < swiperSlot.detail.data.length" :ref="'pullup_' + swiperSlot.index" :color="skinColor.color_1" @pullup="pullup(swiperSlot.index)"></yb-pullup>
				</list>
				<rd-no-data title="暂无数据" v-else />
			</template>
		</yb-swiper-list>
		<view class="fixed-bottom">
			<yb-button @click="createShow = true" class="button" title="新增字典" size="22" round />
		</view>
		<yb-modal
		:visible.sync="createShow"
		:bgColor="skinColor.color_bg_2"
		:frontColor="skinColor.color_1"
		:themeColor="skinColor.color_blue"
		title="新增字典"
		@confirm="createDict"
		@cancel="onCancel">
			<view class="modal-input-box">
				<input class="input" max-length="40" v-model="dictTitle" :style="{'border-color': skinColor.color_gap_1, color: skinColor.color_2}" type="text" placeholder="请输入词汇">
				<text class="tip" :style="{color: skinColor.color_gap_1}">{{dictTitle.length}}/40</text>
			</view>
			<view class="modal-check" @tap="isAdult = !isAdult" v-if="$store.getters['app/getAdult']">
				<checkbox class="checkbox" :checked="isAdult" />
				<text class="text" :style="{color: skinColor.color_2}">是否属于敏感词汇</text>
			</view>
		</yb-modal>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import Dict from '@/assets/constructor/dict.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				size: 20,
				list: [],
				current: 0,
				createShow: false,
				dictTitle: '',
				isAdult: false
			}
		},
		onLoad () {
			this.tabs.forEach(tab => {
				this.list.push({
					currentPage: 1
				})
			})
		},
		computed: {
			tabs () {
				return [{
					label: '小说',
					value: 'story',
					data: this.$store.getters['dict/get'].filter(item => item.type == 'story' && (!item.isAdult || this.$store.getters['app/getAdult'])).reverse()
				},{
					label: '漫画',
					value: 'comic',
					data: this.$store.getters['dict/get'].filter(item => item.type == 'comic' && (!item.isAdult || this.$store.getters['app/getAdult'])).reverse()
				}]
			}
		},
		methods: {
			pullup (index) {
				this.list[index].currentPage++;
				this.$refs['pullup_' + index].success()
			},
			changeTab (e) {
				this.current = e.current
			},
			createDict () {
				if ( !this.dictTitle ) {
					uni.showToast({
						title: '请输入词汇',
						icon: 'none'
					})
					return
				}
				let index = this.tabs[this.current].data.findIndex(item => item.title == this.dictTitle)
				if ( index > -1 ) {
					uni.showToast({
						title: '不能输入重复词汇',
						icon: 'none'
					})
					return
				}
				this.$store.dispatch('dict/add', new Dict({
					title: this.dictTitle,
					type: this.tabs[this.current].value,
					isAdult: this.isAdult
				}))
				this.createShow = false
				this.dictTitle = ''
				this.isAdult = false
				uni.showToast({
					title: '新增字典成功',
					icon: 'none'
				})
			},
			onCancel () {
				this.dictTitle = ''
				this.isAdult = false
			},
			remove (id) {
				this.$store.dispatch('dict/remove', id)
			}
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.dict {
		flex-direction: row;
		align-items: center;
		border-bottom-width: 2rpx;
		height: 80rpx;
	}
	.dict .value {
		font-size: 30rpx;
		flex: 1;
		lines: 1;
		text-overflow: ellipsis;
		margin-right: 20rpx;
	}
	.modal-input-box {
		flex-direction: row;
		align-items: center;
	}
	.modal-input-box .input {
		border-bottom-width: 1rpx;
		flex: 1;
		font-size: 24rpx;
	}
	.modal-input-box .tip {
		font-size: 24rpx;
	}
	.modal-check {
		flex-direction: row;
		align-items: center;
	}
	.modal-check .checkbox {
		transform: scale(0.5);
	}
	.modal-check .text {
		font-size: 22rpx;
	}
</style>
