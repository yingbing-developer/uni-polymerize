<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="我的书单"></yb-nav-bar>
		<list>
			<cell v-for="(item, index) in list">
				<view class="album" :style="{'border-color': skinColor.color_gap_1}" @tap="app.$Router.push({
					path: '/pages/book/shelf',
					query: {
						params: encodeURIComponent(JSON.stringify(item))
					}
				})">
					<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
					<view class="info">
						<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
						<text class="label" :style="{color: skinColor.color_3}">{{item.book.length}}本书籍</text>
					</view>
					<view class="actions">
						<rd-icon enableClick @click="showPanel(item)" class="more opac-actived" name="more-vertical" :color="skinColor.color_3"></rd-icon>
					</view>
				</view>
			</cell>
			<cell v-if="isLastPage && list.length > 0">
				<yb-no-more :color="skinColor.color_3"></yb-no-more>
			</cell>
			<yb-page-anime-fixed>
				<yb-list-no-data :color="skinColor.color_3" v-if="list.length == 0" title="还没有创建书单"></yb-list-no-data>
			</yb-page-anime-fixed>
			<view class="fixed-bottom">
				<yb-button @click="showCreate = true" class="button" title="创建书单" size="22" round />
			</view>
			<yb-pullup ref="pullup" :color="skinColor.color_1" @pullup="pullup" v-if="!isLastPage"></yb-pullup>
		</list>
		<yb-modal
		:visible.sync="showCreate"
		:bgColor="skinColor.color_bg_2"
		:frontColor="skinColor.color_1"
		:themeColor="skinColor.color_blue"
		title="新建书单"
		@confirm="createShelf"
		@cancel="onCancel">
			<view class="modal-input-box">
				<input class="input" max-length="40" v-model="shelfTitle" :style="{'border-color': skinColor.color_gap_1, color: skinColor.color_2}" type="text" placeholder="请输入书单标题">
				<text class="tip" :style="{color: skinColor.color_gap_1}">{{shelfTitle.length}}/40</text>
			</view>
			<view class="modal-check" @tap="isAdult = !isAdult" v-if="$store.getters['app/getAdult']">
				<checkbox class="checkbox" :checked="isAdult" />
				<text class="text" :style="{color: skinColor.color_2}">是否属于青壮年内容</text>
			</view>
		</yb-modal>
		<yb-modal
		:visible.sync="showEdit"
		:bgColor="skinColor.color_bg_2"
		:frontColor="skinColor.color_1"
		:themeColor="skinColor.color_blue"
		title="编辑书单"
		@confirm="editName"
		@cancel="onCancel">
			<view class="modal-input-box">
				<input class="input" max-length="40" v-model="shelfTitle" :style="{'border-color': skinColor.color_gap_1, color: skinColor.color_2}" type="text" placeholder="请输入歌单标题">
				<text class="tip" :style="{color: skinColor.color_gap_1}">{{shelfTitle.length}}/40</text>
			</view>
			<view class="modal-check" @tap="isAdult = !isAdult" v-if="$store.getters['app/getAdult']">
				<checkbox class="checkbox" :checked="isAdult" />
				<text class="text" :style="{color: skinColor.color_2}">是否属于青壮年内容</text>
			</view>
		</yb-modal>
		<rd-action-sheet
		:visible.sync="showMore"
		:title="'书单：' + (panelInfo ? panelInfo.title : '')"
		:itemList="actions"
		@confirm="moreConfirm"></rd-action-sheet>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import Bookshelf from '@/assets/constructor/bookshelf.js'
	import Reader from '@/assets/constructor/reader.js'
	let that;
	export default {
		mixins: [appMixin],
		data () {
			return {
				page: 1,
				size: 20,
				showCreate: false,
				shelfTitle: '',
				showMore: false,
				panelInfo: '',
				actions: [{
					label: '编辑书单',
					icon: 'edit-rect',
					size: 40
				},{
					label: '删除书单',
					icon: 'dustbin',
					size: 40
				}],
				showEdit: false,
				isAdult: false
			}
		},
		computed: {
			list () {
				return this.$store.getters['custom/get'].filter(item => item.type == 'book' && (!item.isAdult || this.$store.getters['app/getAdult']))
			},
			max () {
				return this.page * this.size
			},
			isLastPage () {
				return this.max >= this.list.length
			}
		},
		onLoad () {
			that = this
		},
		methods: {
			pullup () {
				this.page++
				this.$refs.pullup.success()
			},
			createShelf () {
				if ( !this.shelfTitle ) {
					uni.showToast({
						title: '请输入书单标题',
						icon: 'none'
					})
					return
				}
				let index = this.list.findIndex(item => item.title == this.shelfTitle)
				if ( index > -1 ) {
					uni.showToast({
						title: '书单标题重复',
						icon: 'none'
					})
					return
				}
				this.$store.dispatch('custom/add', new Bookshelf({
					shelfId: new Date().getTime().toString() + Math.floor(Math.random() * Math.pow(10, 5)),
					title: this.shelfTitle,
					cover: '/static/book/shelf.png',
					creator: '自定义书单',
					style: 'list',
					type: 'book',
					isAdult: this.isAdult,
					source: 'local'
				}))
				this.shelfTitle = ''
				this.isAdult = false
				this.showCreate = false
			},
			moreConfirm (e) {
				if ( e.index == 0 ) {
					this.showEditName()
				}
				if ( e.index == 1 ) {
					this.deleteShelf(this.panelInfo.id)
				}
			},
			showEditName () {
				this.showMore = false
				this.shelfTitle = this.panelInfo.title
				this.isAdult = this.panelInfo.isAdult
				this.showEdit = true
			},
			onCancel () {
				this.shelfTitle = ''
				this.isAdult = false
			},
			editName () {
				if ( !this.shelfTitle ) {
					uni.showToast({
						title: '请输入书单标题',
						icon: 'none'
					})
					return
				}
				let index = this.list.findIndex(item => item.title == this.shelfTitle)
				if ( index > -1 ) {
					uni.showToast({
						title: '书单标题重复',
						icon: 'none'
					})
					return
				}
				this.panelInfo.title = this.shelfTitle
				this.panelInfo.isAdult = this.isAdult
				this.$store.dispatch('custom/add', this.panelInfo)
				this.shelfTitle = ''
				this.isAdult = false
				this.showEdit = false
				this.panelInfo = ''
			},
			deleteShelf (id) {
				getApp().globalData.$nativeUI.confirm({
					title: '提示',
					content: '确认要删除该书单吗？',
					dark: this.skinMode == 'night',
					success: (res) => {
						if ( res.confirm ) {
							this.$store.dispatch('custom/remove', id)
							this.showMore = false
							this.panelInfo = ''
						}
					}
				})
			},
			showPanel (params) {
				this.panelInfo = params
				this.showMore = true
			}
		},
		onBackPress (event) {
			if ( that.showMore ) {
				that.showMore = false
				return true
			}
			if ( that.detailShow ) {
				that.detailShow = false
				return true
			}
			return false
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.album {
		flex-direction: row;
		align-items: center;
		padding: 10rpx;
		border-bottom-width: 1rpx;
	}
	.album .cover {
		width: 100rpx;
		height: 100rpx;
	}
	.album .info {
		flex: 1;
		justify-content: space-between;
		height: 80rpx;
		margin-left: 20rpx;
	}
	.album .title {
		font-size: 26rpx;
		text-overflow: ellipsis;
		lines: 1;
	}
	.album .label {
		font-size: 24rpx;
		lines: 1;
	}
	.modal-input-box {
		flex-direction: row;
		align-items: center;
	}
	.modal-input-box .input {
		border-bottom-width: 1rpx;
		flex: 1;
		font-size: 24rpx;
	}
	.modal-input-box .tip {
		font-size: 24rpx;
	}
	.modal-check {
		flex-direction: row;
		align-items: center;
	}
	.modal-check .checkbox {
		transform: scale(0.5);
	}
	.modal-check .text {
		font-size: 22rpx;
	}
</style>
