<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" :title="title"></yb-nav-bar>
		<yb-swiper-list
		:column="tabs.length < 5 ? tabs.length : 'auto'"
		:tabs="tabs"
		:frontColor="skinColor.color_2"
		:borderColor="skinColor.color_3"
		:activedColor="skinColor.color_actived_1">
			<template v-slot="{swiperSlot}">
				<list>
					<template v-if="type == 'update'">
						<cell v-for="(item, index) in swiperSlot.detail.book">
							<rd-cell-book-2 class="padding-gap" :item="item" />
						</cell>
					</template>
					<template v-else-if="type == 'detail'">
						<cell v-for="(item, index) in swiperSlot.detail.book">
							<rd-cell-book class="padding-gap" :item="item" />
						</cell>
					</template>
					<template v-else>
						<cell>
							<yb-gap></yb-gap>
						</cell>
						<cell v-for="(grid, i) in Math.ceil(swiperSlot.detail.book.length / 3)">
							<yb-grid class="padding-gap" :data="swiperSlot.detail.book.slice(i * 3, (i * 3) + 3)" :column="3" :count="3">
								<template v-slot="{gridItem}">
									<rd-grid-book :item="gridItem.detail" />
								</template>
							</yb-grid>
						</cell>
					</template>
				</list>
			</template>
		</yb-swiper-list>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		data () {
			return {
				tabs: [],
				current: 0
			}
		},
		computed: {
			title () {
				return getApp().globalData.$Route.query.title
			},
			type () {
				return getApp().globalData.$Route.query.type || 'default'
			}
		},
		onLoad() {
			this.tabs = JSON.parse(decodeURIComponent(this.app.$Route.query.tabs))
		}
	}
</script>

<style>
</style>
