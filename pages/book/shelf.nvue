<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar ref="navbar" class="nav-bar" :title="title" :bg-color="skinColor.color_theme_1" :front-color="skinColor.color_4">
		</yb-nav-bar>
		<list>
			<template v-if="type == 'top'">
				<cell v-for="(item, index) in params.book">
					<view class="cell-item_2 padding-gap"
					:style="{'border-color': skinColor.color_gap_1}"
					@tap="readBook(item)">
						<text class="index" :style="{color: skinColor.color_red_2}" v-if="index > 2">{{index + 1}}</text>
						<image v-if="index == 0" class="trophy" src="/static/music/trophy_1.png" mode="aspectFill"></image>
						<image v-if="index == 1" class="trophy" src="/static/music/trophy_2.png" mode="aspectFill"></image>
						<image v-if="index == 2" class="trophy" src="/static/music/trophy_3.png" mode="aspectFill"></image>
						<rd-cell-book-2 style="flex: 1;" class="padding-gap" :item="item" />
					</view>
				</cell>
			</template>
			<template v-else-if="type == 'detail'">
				<cell v-for="(item, index) in params.book">
					<uni-swipe-action>
					    <uni-swipe-action-item :right-options="options" :left-options="options" @click="onClick($event, item)">
							<rd-cell-book class="padding-gap" :item="item" />
					    </uni-swipe-action-item>
					</uni-swipe-action>
				</cell>
			</template>
			<template v-else>
				<cell>
					<yb-gap></yb-gap>
				</cell>
				<cell v-for="(grid, i) in Math.ceil(params.book.length / 3)">
					<yb-grid class="padding-gap" :data="params.book.slice(i * 3, (i * 3) + 3)" :column="3" :count="3">
						<template v-slot="{gridItem}">
							<rd-grid-book @onLongpress="showActionSheet" :item="gridItem.detail" />
						</template>
					</yb-grid>
				</cell>
			</template>
			<yb-page-anime-fixed>
				<yb-list-no-data :color="skinColor.color_3" v-if="params.book.length == 0" title="还没有书籍"></yb-list-no-data>
			</yb-page-anime-fixed>
			<view class="fixed-bottom">
				<yb-button v-if="params.source == 'local' && params.book.length > 0" @click="clearCustom('story')" class="button" title="清空全部" size="22" round />
			</view>
		</list>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				params: ''
			}
		},
		computed: {
			title () {
				return this.params?.title || '书架信息'
			},
			options () {
				return [{
					text: this.params.source == 'local' ? '删除' : '查看',
					style: {
						backgroundColor: '#dd524d'
					}
				}]
			},
			type () {
				return getApp().globalData.$Route.query.type || 'default'
			}
		},
		onLoad() {
			this.params = JSON.parse(decodeURIComponent(getApp().globalData.$Route.query.params))
		},
		methods: {
			onClick (e, params) {
				if ( e.content.text == '删除' ) {
					this.removeCustom(params)
				} else {
					this.readBook(params)
				}
			},
			removeCustom (params) {
				let index = this.params.book.findIndex(item => item.id == params.id)
				if ( index > -1 ) {
					this.params.book.splice(index, 1)
					this.$store.dispatch('custom/add', this.params)
				}
			},
			clearCustom () {
				this.app.$nativeUI.confirm({
					title: '操作提示',
					content: '确认要清空所有书籍吗？',
					success: (res) => {
						if ( res.confirm ) {
							this.params.book = []
							this.$store.dispatch('custom/add', this.params)
						}
					}
				})
			},
			showActionSheet (params) {
				if ( this.params.source == 'local' ) {
					getApp().globalData.$modules.showActionSheet({
						title: '操作列表',
						itemList: ['阅读', '删除'],
						success: (res) => {
							if ( res.confirm ) {
								switch (res.data.index) {
									case 0:
										this.readBook(params)
										break;
									case 1:
										this.removeCustom(params)
										break;
									default:
										break;
								}
							}
						}
					})
				}
			}
		}
	}
</script>

<style>
	@import url("@/assets/css/app.css");
</style>
