<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar ref="navbar" class="nav-bar" :title="title" :bg-color="skinColor.color_theme_1" :front-color="skinColor.color_4">
		</yb-nav-bar>
		<list>
			<template v-if="params.style == 'top'">
				<cell v-for="(item, index) in params.book">
					<view class="cell-item_2 margin-gap"
					:style="{'border-color': skinColor.color_gap_1}"
					@tap="playSong(item)">
						<text class="index" :style="{color: skinColor.color_red_2}" v-if="index > 2">{{index + 1}}</text>
						<image v-if="index == 0" class="trophy" src="/static/music/trophy_1.png" mode="aspectFill"></image>
						<image v-if="index == 1" class="trophy" src="/static/music/trophy_2.png" mode="aspectFill"></image>
						<image v-if="index == 2" class="trophy" src="/static/music/trophy_3.png" mode="aspectFill"></image>
						<rd-icon v-if="item.type == 'story'" name="read-fill" size="30" :color="skinColor.color_green"></rd-icon>
						<rd-image v-else class="cover" :src="item.cover" mode="aspectFill"></rd-image>
						<view class="info">
							<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
							<text class="label" :style="{color: skinColor.color_3}">{{item.style || item.author}}</text>
						</view>
					</view>
				</cell>
			</template>
			<template v-else>
				<cell v-for="(item, index) in params.book">
					<view class="cell-item_3"
					@tap="readBook(item)"
					:style="{'border-bottom-color': skinColor.color_gap_1, 'background-color': skinColor.color_bg_1}">
						<view elevation="3">
							<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
						</view>
						<view class="info">
							<text class="title" :style="{'color': skinColor.color_1}">{{item.title}}</text>
							<view class="subtitles">
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">作者：{{item.author}}</text>
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">题材：{{item.style || '未知题材'}}</text>
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">来源：{{filterSource(item.source)}}</text>
							</view>
							<text class="desc" :style="{'color': skinColor.color_2}">简介：{{item.desc.replace(/\n/g, '') || '暂无简介'}}</text>
							<view class="badges">
								<yb-tag class="badge" :color="item.isEnd ? skinColor.color_green : skinColor.color_orange" :value="item.isEnd ? '已完结' : '连载中'"></yb-tag>
								<yb-tag class="badge" v-if="isRecord(item.id)" :color="skinColor.color_yellow" value="正在阅读中"></yb-tag>
								<yb-tag class="badge" v-if="isCollection(item.id)" :color="skinColor.color_red" value="已收藏"></yb-tag>
							</view>
						</view>
						<rd-icon v-if="params.source == 'local'" enableClick @click="removeCustom(item)" class="delete opac-actived" name="dustbin" :color="skinColor.color_3"></rd-icon>
					</view>
				</cell>
			</template>
			<yb-page-anime-fixed>
				<yb-list-no-data :color="skinColor.color_3" v-if="params.book.length == 0" title="还没有书籍"></yb-list-no-data>
			</yb-page-anime-fixed>
			<view class="fixed-bottom">
				<yb-button v-if="params.source == 'local' && params.book.length > 0" @click="clearCustom('story')" class="button" title="清空全部" size="22" round />
			</view>
		</list>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				params: ''
			}
		},
		computed: {
			title () {
				return this.params?.title || '书架信息'
			}
		},
		onLoad() {
			this.params = JSON.parse(decodeURIComponent(getApp().globalData.$Route.query.params))
		},
		methods: {
			removeCustom (params) {
				let index = this.params.book.findIndex(item => item.id == params.id)
				if ( index > -1 ) {
					this.params.book.splice(index, 1)
					this.$store.dispatch('custom/add', this.params)
				}
			},
			clearCustom () {
				this.app.$nativeUI.confirm({
					title: '操作提示',
					content: '确认要清空所有书籍吗？',
					success: (res) => {
						if ( res.confirm ) {
							this.params.book = []
							this.$store.dispatch('custom/add', this.params)
						}
					}
				})
			}
		}
	}
</script>

<style>
	@import url("@/assets/css/app.css");
</style>
