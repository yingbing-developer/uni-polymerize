<template>
	<yb-page-anime ref="ybPageAnime" tabbar :bgColor="skinColor.color_gap_2">
		<list>
			<yb-pulldown ref="pulldown" :color="skinColor.color_1" @pulldown="pulldown"></yb-pulldown>
			<cell>
				<yb-gap-bar></yb-gap-bar>
				<view class="statusbar padding-gap" :style="{'background-color': skinColor.color_bg_1}">
					<text class="title" :style="{color: skinColor.color_1}">聚合小说</text>
				</view>
			</cell>
			<cell>
				<swiper
				v-if="banners.length > 0"
				class="ad-swiper"
				circular
				:indicator-dots="false"
				:indicator-color="skinColor.color_bg_1"
				:indicator-active-color="skinColor.color_actived_1"
				:autoplay="true"
				:interval="3000"
				:duration="1000">
					<swiper-item v-for="(item, index) in banners" :key="index" @tap="app.$Router.push({
						path: '/pages/book/detail',
						query: {
							params: encodeURIComponent(JSON.stringify(item))
						}
					})">
						<rd-image lazyLoad class="ad" :src="item.cover" mode="aspectFill"></rd-image>
					</swiper-item>
				</swiper>
				<rd-image v-if="banners.length > 0" class="banner-bottom" :src="'/static/book/banner-bottom-' + skinMode + '.png'" mode="widthFix"></rd-image>
				<view class="menus" :style="{'background-color': skinColor.color_bg_1}">
					<view class="menu" @click="app.$Router.push({
						path: '/pages/book/type'
					})">
						<rd-image class="image" src="/static/book/menu-type.png" mode="widthFix"></rd-image>
						<text class="title" :style="{color: skinColor.color_2}">分类</text>
					</view>
					<view class="menu" @click="app.$Router.push({
						path: '/pages/book/custom'
					})">
						<rd-image class="image" src="/static/book/menu-rank.png" mode="widthFix"></rd-image>
						<text class="title" :style="{color: skinColor.color_2}">书架</text>
					</view>
					<view class="menu" @click="app.$Router.push({
						path: '/pages/book/sub',
						query: {
							title: '最近更新',
							type: 'update',
							tabs: encodeURIComponent(JSON.stringify(updates))
						}
					})">
						<rd-image class="image" src="/static/book/menu-update.png" mode="widthFix"></rd-image>
						<text class="title" :style="{color: skinColor.color_2}">更新</text>
					</view>
					<view class="menu" @click="app.$Router.push({
						path: '/pages/book/record'
					})">
						<rd-image class="image" src="/static/book/menu-record.png" mode="widthFix"></rd-image>
						<text class="title" :style="{color: skinColor.color_2}">记录</text>
					</view>
				</view>
				<yb-gap height="15rpx"></yb-gap>
				<view class="margin-gap search opac-actived" :style="{'background-color': skinColor.color_bg_1}" @tap="app.$Router.push({
					path: '/pages/book/search'
				})">
					<rd-icon name="search" :color="skinColor.color_2"></rd-icon>
					<text class="text" :style="{color: skinColor.color_2}">搜索小说</text>
				</view>
			</cell>
			<template v-if="hotBooks.length > 0">
			<cell>
				<yb-gap height="15rpx"></yb-gap>
				<view class="box padding-gap" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title title="热门小说" moreText="更多"
					@more="app.$Router.push({
						path: '/pages/book/sub',
						query: {
							title: '热门小说',
							tabs: encodeURIComponent(JSON.stringify(hotBooks))
						}
					})"></rd-title>
					<yb-swiper-list
					:style="{height: hotBooks.length > 1 ? '820rpx' : '770rpx'}"
					type="card"
					:size="24"
					:column="hotBooks.length < 5 ? hotBooks.length : 'auto'"
					:tabs="hotBooks"
					:frontColor="skinColor.color_white"
					:activedColor="skinColor.color_red">
						<template v-slot="{swiperSlot}">
							<yb-gap></yb-gap>
							<yb-grid :style="{'background-color': skinColor.color_bg_1}" :data="swiperSlot.detail.book" :column="3" :count="6">
								<template v-slot="{gridItem}">
									<rd-grid-book :item="gridItem.detail" />
								</template>
							</yb-grid>
						</template>
					</yb-swiper-list>
				</view>
			</cell>
			</template>
			<template v-if="populars.length > 0">
			<cell>
				<yb-gap></yb-gap>
				<view class="box padding-gap" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title title="人气推荐" moreText="更多"
					@more="app.$Router.push({
						path: '/pages/book/sub',
						query: {
							title: '人气推荐',
							type: 'detail',
							tabs: encodeURIComponent(JSON.stringify(populars))
						}
					})"></rd-title>
					<yb-swiper-list
					:style="{height: populars.length > 1 ? '1150rpx' : '1100rpx'}"
					type="card"
					:size="24"
					:column="populars.length < 5 ? populars.length : 'auto'"
					:tabs="populars"
					:frontColor="skinColor.color_white"
					:activedColor="skinColor.color_red">
						<template v-slot="{swiperSlot}">
							<rd-cell-book v-for="(item, index) in swiperSlot.detail.book.slice(0, 4)" :key="item.id" :item="item" />
						</template>
					</yb-swiper-list>
				</view>
			</cell>
			</template>
			<template v-if="updates.length > 0">
				<cell>
					<yb-gap></yb-gap>
					<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
						<rd-title title="最近更新" moreText="更多"
						@more="app.$Router.push({
							path: '/pages/book/sub',
							query: {
								title: '最近更新',
								type: 'update',
								tabs: encodeURIComponent(JSON.stringify(updates))
							}
						})"></rd-title>
						<yb-swiper-list
						:style="{height: updates.length > 1 ? '620rpx' : '550rpx'}"
						type="card"
						:size="24"
						:column="updates.length < 5 ? updates.length : 'auto'"
						:tabs="updates"
						:frontColor="skinColor.color_white"
						:activedColor="skinColor.color_red">
							<template v-slot="{swiperSlot}">
								<yb-gap></yb-gap>
								<view style="flex: 1;position: relative;">
									<rd-cell-book-2 v-for="(item, index) in swiperSlot.detail.book.slice(0, 4)" :key="item.id" :item="item" />
								</view>
							</template>
						</yb-swiper-list>
					</view>
				</cell>
			</template>
			<template v-if="hotTops.length > 0">
			<cell>
				<yb-gap></yb-gap>
				<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title title="排行榜" :moreShow="false"></rd-title>
				</view>
			</cell>
			<cell v-for="(item, index) in hotTops">
				<view class="cell-item_4" :style="{'background-color': skinColor.color_bg_1}">
					<view class="left" >
						<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
						<yb-mask color="rgba(0,0,0,0.2)" @click="app.$Router.push({
						path: '/pages/book/shelf',
						query: {
							type: 'top',
							params: encodeURIComponent(JSON.stringify(item))
						}
					})"></yb-mask>
						<text class="title" :style="{color: skinColor.color_white}">{{item.title}}</text>
						<text class="source" :style="{color: skinColor.color_white}">{{'（' + filterSource(item.source) + '）'}}</text>
						<rd-icon name="arrow-top-circle-fill" style="transform: rotateZ(90deg);transform-origin: center;" size="50" :color="skinColor.color_white"></rd-icon>
					</view>
					<view class="top">
						<view class="list"
						v-for="(top, i) in item.book.slice(0, 5)" :key="i"
						:style="{'border-color': skinColor.color_gap_1}"
						@tap="app.$Router.push({
							path: '/pages/book/detail',
							query: {
								params: encodeURIComponent(JSON.stringify(top))
							}
						})">
							<text class="label" :style="{color: skinColor.color_1}">{{i + 1}}. {{top.title}}</text>
							<rd-icon name="arrow-right" size="30" :color="skinColor.color_2"></rd-icon>
						</view>
					</view>
				</view>
				<yb-gap></yb-gap>
			</cell>
			</template>
			<cell v-for="(type, i) in hotTypes">
				<template v-if="type.desc">
					<view @tap="app.$Router.push({
						path: '/pages/book/shelf',
						query: {
							params: encodeURIComponent(JSON.stringify(type))
						}
					})" class="shelf padding-gap" :style="{'background-color': skinColor.color_bg_1}">
						<yb-gap></yb-gap>
						<yb-grid :data="type.book" :column="3" :count="3">
							<template v-slot="{gridItem}">
								<rd-grid-book :item="gridItem.detail" />
							</template>
						</yb-grid>
						<text class="title" :style="{color: skinColor.color_1}">{{type.title}}</text>
						<text class="desc" :style="{color: skinColor.color_3}">{{type.desc}}</text>
						<yb-gap></yb-gap>
					</view>
				</template>
				<template v-else>
					<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
						<rd-title :title="type.title" @more="app.$Router.push({
							path: '/pages/book/shelf',
							query: {
								params: encodeURIComponent(JSON.stringify(type))
							}
						})"></rd-title>
						<yb-grid :style="{'background-color': skinColor.color_bg_1}" :data="type.book" :column="3" :count="9">
							<template v-slot="{gridItem}">
								<rd-grid-book :item="gridItem.detail" />
							</template>
						</yb-grid>
					</view>
				</template>
				<yb-gap></yb-gap>
			</cell>
		</list>
		<yb-list-loading :style="{'background-color': skinColor.color_bg_1}" :color="skinColor.color_3" v-if="loading" size="70" title="加载中"></yb-list-loading>
		<music-audio></music-audio>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		data () {
			return {
				windowHeight: 0,
				loading: true,
				banners: [],
				populars: [],
				hotBooks: [],
				updates: [],
				hotTops: [],
				hotTypes: []
			}
		},
		onLoad() {
			this.$store.dispatch('cache/clearCache', 'image')
			this.windowHeight = uni.getSystemInfoSync().windowWidth
		},
		onReady() {
			this.app.$api.book.getRecome().then((ress) => {
				this.loading = false
				this.onRequested(ress)
			})
		},
		onShow () {
			getApp().globalData.$business.setSkinColor();
		},
		methods: {
			pulldown () {
				this.app.$api.book.getRecome().then((ress) => {
					this.$refs.pulldown.success()
					this.banners = []
					this.hotBooks = []
					this.populars = []
					this.updates = []
					this.hotTops = []
					this.hotTypes = []
					this.onRequested(ress)
				})
			},
			onRequested (ress) {
				ress.forEach(res => {
					if ( res.code == this.app.$config.ERR_OK ) {
						if ( res.data.hotBooks?.length > 0 ) {
							this.hotBooks.push({
								label: this.filterSource(res.data.source),
								value: res.data.source,
								source: res.data.source,
								book: res.data.hotBooks
							})
							this.hotBooks.sort((a, b) => {
								return b.book.length - a.book.length
							})
						}
						if ( res.data.updates?.length > 0 ) {
							this.updates.push({
								label: this.filterSource(res.data.source),
								value: res.data.source,
								source: res.data.source,
								book: res.data.updates
							})
							this.updates.sort((a, b) => {
								return b.book.length - a.book.length
							})
						}
						if ( res.data.populars?.length > 0 ) {
							this.populars.push({
								label: this.filterSource(res.data.source),
								value: res.data.source,
								source: res.data.source,
								book: res.data.populars
							})
							this.populars.sort((a, b) => {
								return b.book.length - a.book.length
							})
						}
						this.banners = res.data.banners?.length > 0 ? this.banners.concat(res.data.banners) : this.banners
						this.hotTops = res.data.hotTops?.length > 0 ? this.hotTops.concat(res.data.hotTops) : this.hotTops
						this.hotTypes = res.data.hotTypes?.length > 0 ? this.hotTypes.concat(res.data.hotTypes) : this.hotTypes
					}
				})
			}
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.statusbar {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		height: 80rpx;
	}
	.statusbar .title {
		font-size: 32rpx;
	}
	.statusbar .right {
		flex-direction: row;
		align-items: center;
	}
	.statusbar .right .icon {
		margin-left: 20rpx;
	}
	.ad-swiper {
		height: 255rpx;
	}
	.ad-swiper .ad {
		flex: 1;
	}
	.search {
		flex-direction: row;
		align-items: center;
		justify-content: center;
		height: 60rpx;
		border-radius: 6rpx;
	}
	.search .text {
		font-size: 24rpx;
		margin-left: 5rpx;
	}
	.hotTops {
		height: 440rpx;
	}
	.banner-bottom {
		margin-top: -30rpx;
	}
	.menus {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 0 90rpx;
	}
	.menus .menu {
		align-items: center;
	}
	.menus .menu .image {
		width: 70rpx;
	}
	.menus .menu .title {
		font-size: 30rpx;
		margin: 15rpx 0 25rpx 0;
	}
	.shelf .title {
		font-size: 32rpx;
	}
	.shelf .desc {
		font-size: 28rpx;
		lines: 3;
		text-overflow: ellipsis;
		margin-top: 20rpx;
	}
</style>
