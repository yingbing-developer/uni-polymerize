<template>
	<yb-page-anime ref="ybPageAnime" tabbar :bgColor="skinColor.color_gap_2">
		<list>
			<yb-pulldown ref="pulldown" :color="skinColor.color_1" @pulldown="pulldown"></yb-pulldown>
			<cell>
				<yb-gap-bar></yb-gap-bar>
				<view class="statusbar padding-gap">
					<text class="title" :style="{color: skinColor.color_1}">聚合小说</text>
					<view class="right">
						<rd-icon enableClick @click="app.$Router.push({
							path: '/pages/book/record'
						})" class="icon opac-actived" name="read" size="36" :color="skinColor.color_2"></rd-icon>
						<rd-icon enableClick @click="app.$Router.push({
							path: '/pages/book/custom'
						})" class="icon opac-actived" name="bookshelf-fill" size="26" :color="skinColor.color_2"></rd-icon>
					</view>
				</view>
				<swiper
				v-if="banners.length > 0"
				class="ad-swiper"
				circular
				:indicator-dots="true"
				:indicator-color="skinColor.color_bg_1"
				:indicator-active-color="skinColor.color_actived_1"
				:autoplay="true"
				:interval="3000"
				:duration="1000">
					<swiper-item v-for="(item, index) in banners" :key="index" @tap="app.$Router.push({
						path: '/pages/book/detail',
						query: {
							params: encodeURIComponent(JSON.stringify(item))
						}
					})">
						<rd-image lazyLoad class="ad margin-gap" :src="item.cover" mode="aspectFill"></rd-image>
					</swiper-item>
				</swiper>
				<view class="margin-gap search opac-actived" :style="{'background-color': skinColor.color_bg_1}" @tap="app.$Router.push({
					path: '/pages/book/search'
				})">
					<rd-icon name="search" :color="skinColor.color_2"></rd-icon>
					<text class="text" :style="{color: skinColor.color_2}">搜索小说</text>
				</view>
			</cell>
			<cell>
				<yb-gap></yb-gap>
				<view class="box padding-gap" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title title="热门小说" titleSize="25" moreText="更多"
					@more="app.$Router.push({
						path: '/pages/book/type'
					})"></rd-title>
					<yb-swiper-list
					style="height: 650rpx;"
					type="card"
					:size="24"
					:column="hotBooks.length < 5 ? hotBooks.length : 'auto'"
					:tabs="hotBooks"
					:frontColor="skinColor.color_white"
					:activedColor="skinColor.color_red">
						<template v-slot="{swiperSlot}">
							<yb-gap></yb-gap>
							<yb-grid :style="{'background-color': skinColor.color_bg_1}" :data="swiperSlot.detail.book" :column="4" :count="8">
								<template v-slot="{gridItem}">
									<view class="grid_item_1" @tap="app.$Router.push({
										path: '/pages/book/detail',
										query: {
											params: encodeURIComponent(JSON.stringify(gridItem.detail))
										}
									})">
										<view elevation="3">
											<rd-image lazyLoad class="cover" :src="gridItem.detail.cover" mode="aspectFill"></rd-image>
										</view>
										<text class="title" :style="{color: skinColor.color_1}">{{gridItem.detail.title}}</text>
									</view>
								</template>
							</yb-grid>
						</template>
					</yb-swiper-list>
				</view>
			</cell>
			<template v-if="populars.length > 0">
				<cell>
					<yb-gap></yb-gap>
					<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
						<rd-title title="人气推荐" titleSize="25" :moreShow="false"></rd-title>
					</view>
				</cell>
				<cell v-for="(item, index) in populars">
					<view class="cell-item_3"
					@tap="app.$Router.push({
						path: '/pages/book/detail',
						query: {
							params: encodeURIComponent(JSON.stringify(item))
						}
					})"
					:style="{'border-bottom-color': skinColor.color_gap_1, 'background-color': skinColor.color_bg_1}">
						<view elevation="3">
							<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
						</view>
						<view class="info">
							<text class="title" :style="{'color': skinColor.color_1}">{{item.title}}</text>
							<view class="subtitles">
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">作者：{{item.author}}</text>
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">题材：{{item.style || '未知题材'}}</text>
								<text class="subtitle" :style="{
									'color': skinColor.color_3
								}">来源：{{filterSource(item.source)}}</text>
							</view>
							<text class="desc" :style="{'color': skinColor.color_2}">简介：{{item.desc || '暂无简介'}}</text>
							<text class="tip" :style="{'color': skinColor.color_red}" v-if="item.lastChapter">更新至：{{item.lastChapter}}</text>
							<view class="badges" v-else>
								<yb-tag class="badge" :color="item.isEnd ? skinColor.color_green : skinColor.color_orange" :value="item.isEnd ? '已完结' : '连载中'"></yb-tag>
								<yb-tag class="badge" v-if="isRecord(item.id)" :color="skinColor.color_yellow" value="正在阅读中"></yb-tag>
								<yb-tag class="badge" v-if="isCollection(item.id)" :color="skinColor.color_red" value="已收藏"></yb-tag>
							</view>
						</view>
					</view>
				</cell>
			</template>
			<template v-if="updates.length > 0">
				<cell>
					<yb-gap></yb-gap>
					<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
						<rd-title title="最近更新" titleSize="25" moreText="更多"
						@more="app.$Router.push({
							path: '/pages/book/update',
							query: {
								title: '最近更新',
								tabs: encodeURIComponent(JSON.stringify(updates))
							}
						})"></rd-title>
						<yb-swiper-list
						style="height: 500rpx;"
						type="card"
						:size="24"
						:column="updates.length < 5 ? updates.length : 'auto'"
						:tabs="updates"
						:frontColor="skinColor.color_white"
						:activedColor="skinColor.color_red">
							<template v-slot="{swiperSlot}">
								<yb-gap></yb-gap>
								<view style="flex: 1;position: relative;">
									<view
									v-for="(item, index) in swiperSlot.detail.book.slice(0, 5)"
									class="cell-item_5 opac-actived"
									@tap="app.$Router.push({
										path: '/pages/book/detail',
										query: {
											params: encodeURIComponent(JSON.stringify(item))
										}
									})"
									:style="{'border-bottom-color': skinColor.color_gap_1, 'background-color': skinColor.color_bg_1}">
										<text class="label" :style="{color: skinColor.color_3}">{{item.style || item.author}}</text>
										<text class="title" :style="{color: skinColor.color_1}"> | {{item.title}}</text>
										<text class="value" :style="{color: skinColor.color_3}">{{filterSource(item.source)}}</text>
									</view>
								</view>
							</template>
						</yb-swiper-list>
					</view>
				</cell>
			</template>
			<cell>
				<yb-gap></yb-gap>
				<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title title="排行榜" titleSize="25" :moreShow="false"></rd-title>
				</view>
			</cell>
			<cell v-for="(item, index) in hotTops">
				<view class="cell-item_4" :style="{'background-color': skinColor.color_bg_1}">
					<view class="left" >
						<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
						<yb-mask color="rgba(0,0,0,0.2)" @click="app.$Router.push({
						path: '/pages/book/shelf',
						query: {
							params: encodeURIComponent(JSON.stringify(item))
						}
					})"></yb-mask>
						<text class="title" :style="{color: skinColor.color_white}">{{item.title}}</text>
						<text class="source" :style="{color: skinColor.color_white}">{{'（' + filterSource(item.source) + '）'}}</text>
						<rd-icon name="arrow-top-circle-fill" style="transform: rotateZ(90deg);transform-origin: center;" size="50" :color="skinColor.color_white"></rd-icon>
					</view>
					<view class="top">
						<view class="list"
						v-for="(top, i) in item.book.slice(0, 5)" :key="i"
						:style="{'border-color': skinColor.color_gap_1}"
						@tap="app.$Router.push({
							path: '/pages/book/detail',
							query: {
								params: encodeURIComponent(JSON.stringify(top))
							}
						})">
							<text class="label" :style="{color: skinColor.color_1}">{{i + 1}}. {{top.title}}</text>
							<rd-icon name="arrow-right" size="30" :color="skinColor.color_2"></rd-icon>
						</view>
					</view>
				</view>
				<yb-gap></yb-gap>
			</cell>
			<cell v-for="(type, i) in hotTypes">
				<view class="padding-gap box" :style="{'background-color': skinColor.color_bg_1}">
					<rd-title :title="type.title" titleSize="25" @more="app.$Router.push({
						path: '/pages/book/shelf',
						query: {
							params: encodeURIComponent(JSON.stringify(type))
						}
					})"></rd-title>
					<yb-grid :style="{'background-color': skinColor.color_bg_1}" :data="type.book" :column="4" :count="8" v-if="i % 3 == 0">
						<template v-slot="{gridItem}">
							<view class="grid_item_1" @tap="app.$Router.push({
								path: '/pages/book/detail',
								query: {
									params: encodeURIComponent(JSON.stringify(gridItem.detail))
								}
							})">
								<view elevation="3">
									<rd-image lazyLoad class="cover" :src="gridItem.detail.cover" mode="aspectFill"></rd-image>
								</view>
								<text class="title" :style="{color: skinColor.color_1}">{{gridItem.detail.title}}</text>
							</view>
						</template>
					</yb-grid>
					<scroll-view class="scroller-book" :show-scrollbar="false" scroll-x="true" v-else>
						<view class="grid_item_1"
						style="margin-right: 40rpx;"
						v-for="(item, index) in type.book.slice(0, 8)"
						:key="item.id"
						@tap="app.$Router.push({
							path: '/pages/book/detail',
							query: {
								params: encodeURIComponent(JSON.stringify(item))
							}
						})">
							<view elevation="3">
								<rd-image lazyLoad class="cover" :src="item.cover" mode="aspectFill"></rd-image>
							</view>
							<text class="title" :style="{color: skinColor.color_1}">{{item.title}}</text>
						</view>
					</scroll-view>
				</view>
				<yb-gap></yb-gap>
			</cell>
		</list>
		<yb-list-loading :style="{'background-color': skinColor.color_bg_1}" :color="skinColor.color_3" v-if="loading" size="70" title="加载中"></yb-list-loading>
		<music-audio></music-audio>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		data () {
			return {
				windowHeight: 0,
				loading: true,
				banners: [],
				populars: [],
				hotBooks: [],
				updates: [],
				hotTops: [],
				hotTypes: []
			}
		},
		onLoad() {
			this.$store.dispatch('cache/clearCache', 'image')
			this.windowHeight = uni.getSystemInfoSync().windowWidth
		},
		onReady() {
			this.app.$api.book.getRecome().then((ress) => {
				this.loading = false
				ress.forEach(res => {
					if ( res.code == this.app.$config.ERR_OK ) {
						if ( res.data.hotBooks?.length > 0 ) {
							this.hotBooks.push({
								label: this.filterSource(res.data.source),
								value: res.data.source,
								source: res.data.source,
								book: res.data.hotBooks
							})
						}
						if ( res.data.updates?.length > 0 ) {
							this.updates.push({
								label: this.filterSource(res.data.source),
								value: res.data.source,
								source: res.data.source,
								book: res.data.updates
							})
						}
						this.banners = res.data.banners?.length > 0 ? this.banners.concat(res.data.banners) : this.banners
						this.populars = res.data.populars?.length > 0 ? this.populars.concat(res.data.populars) : this.populars
						this.hotTops = res.data.hotTops?.length > 0 ? this.hotTops.concat(res.data.hotTops) : this.hotTops
						this.hotTypes = res.data.hotTypes?.length > 0 ? this.hotTypes.concat(res.data.hotTypes) : this.hotTypes
					}
				})
			})
		},
		onShow () {
			getApp().globalData.$business.setSkinColor();
		},
		methods: {
			pulldown () {
				this.app.$api.book.getRecome().then((ress) => {
					this.$refs.pulldown.success()
					this.banners = []
					this.hotBooks = []
					this.populars = []
					this.updates = []
					this.hotTops = []
					this.hotTypes = []
					ress.forEach(res => {
						if ( res.code == this.app.$config.ERR_OK ) {
							if ( res.data.hotBooks?.length > 0 ) {
								this.hotBooks.push({
									label: this.filterSource(res.data.source),
									value: res.data.source,
									source: res.data.source,
									book: res.data.hotBooks
								})
							}
							if ( res.data.updates?.length > 0 ) {
								this.updates.push({
									label: this.filterSource(res.data.source),
									value: res.data.source,
									source: res.data.source,
									book: res.data.updates
								})
							}
							this.banners = res.data.banners?.length > 0 ? this.banners.concat(res.data.banners) : this.banners
							this.populars = res.data.populars?.length > 0 ? this.populars.concat(res.data.populars) : this.populars
							this.hotTops = res.data.hotTops?.length > 0 ? this.hotTops.concat(res.data.hotTops) : this.hotTops
							this.hotTypes = res.data.hotTypes?.length > 0 ? this.hotTypes.concat(res.data.hotTypes) : this.hotTypes
						}
					})
				})
			}
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.statusbar {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		height: 80rpx;
	}
	.statusbar .title {
		font-size: 32rpx;
	}
	.statusbar .right {
		flex-direction: row;
		align-items: center;
	}
	.statusbar .right .icon {
		margin-left: 20rpx;
	}
	.ad-swiper {
		height: 200rpx;
	}
	.ad-swiper .ad {
		flex: 1;
	}
	.search {
		flex-direction: row;
		align-items: center;
		justify-content: center;
		height: 60rpx;
		margin-top: 15rpx;
		border-radius: 6rpx;
	}
	.search .text {
		font-size: 24rpx;
		margin-left: 5rpx;
	}
	.hotTops {
		height: 440rpx;
	}
</style>
