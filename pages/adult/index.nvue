<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="青壮年模式"></yb-nav-bar>
		<scroll-view scroll-y="true" style="flex: 1;">
			<view class="list padding-gap" :class="skinMode + '-actived'" :style="{'border-color': skinColor.color_gap_1}" @tap="onEditPwd">
				<text class="label" :style="{color: skinColor.color_1}">设置密码</text>
				<rd-icon name="arrow-right" size="40" :color="skinColor.color_1"></rd-icon>
			</view>
			<view v-if="oldPwd" class="list padding-gap" :class="skinMode + '-actived'" :style="{'border-color': skinColor.color_gap_1}" @tap="onClearPwd">
				<text class="label" :style="{color: skinColor.color_1}">清除密码</text>
				<rd-icon name="arrow-right" size="40" :color="skinColor.color_1"></rd-icon>
			</view>
		</scroll-view>
		<yb-security
		ref="security"
		:visible.sync="securityShow"
		:title="title"
		:tip="tip"
		:dark="skinMode == 'night'"
		@confirm="onPwdConfirm"></yb-security>
		<yb-button @click="closeAdult" :themeColor="skinColor.color_gap_1" class="out" title="点击关闭" size="22" />
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	let that;
	export default {
		mixins: [appMixin],
		data () {
			return {
				securityShow: false,
				step: -1,
				title: '',
				tip: '',
				newPwd: ''
			}
		},
		computed: {
			oldPwd () {
				return this.$store.getters['app/getAdultPwd']
			}
		},
		onLoad () {
			that = this
		},
		methods: {
			closeAdult () {
				this.$store.commit('app/setAdult', false)
				getApp().globalData.$Router.back()
			},
			onClearPwd () {
				this.title = '清除密码'
				this.tip = '请输入密码'
				this.step = 3
				this.securityShow = true
			},
			onEditPwd () {
				if ( this.oldPwd ) {
					this.title = '修改密码'
					this.tip = '请输入旧密码'
					this.step = 0
				} else {
					this.title = '设置密码'
					this.tip = '请输入新密码'
					this.step = 1
				}
				this.securityShow = true
			},
			onPwdConfirm (pwd) {
				switch (this.step) {
					case 0:
						if ( this.oldPwd == pwd ) {
							this.$refs.security.reset()
							this.tip = '请输入新密码'
							this.step = 1
						} else {
							this.$refs.security.reset()
							this.tip = '密码输入错误'
							this.step = 0
						}
						break
					case 1:
						this.newPwd = pwd
						this.$refs.security.reset()
						this.tip = '请确认新密码'
						this.step = 2
						break
					case 2:
						if ( this.newPwd == pwd ) {
							this.securityShow = false
							this.$store.dispatch('app/changeAdultPwd', pwd)
							uni.showToast({
								title: '设置密码成功',
								icon: 'none'
							})
						} else {
							this.$refs.security.reset()
							this.tip = '两次密码输入不一致'
							this.step = 2
						}
						break
					default:
						if ( this.oldPwd == pwd ) {
							this.securityShow = false
							this.$store.dispatch('app/changeAdultPwd', '')
							uni.showToast({
								title: '清除密码成功',
								icon: 'none'
							})
						} else {
							this.$refs.security.reset()
							this.tip = '密码输入错误'
							this.step = 3
						}
				}
			}
		},
		onBackPress(event) {
			if ( event.from == 'backbutton' && that.securityShow ) {
				that.securityShow = false
				return true
			}
			return false
		}
	}
</script>

<style scoped>
	.list {
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		height: 100rpx;
		border-bottom-width: 1rpx;
	}
	.list .label {
		font-size: 28rpx;
	}
	.list .controls .control {
		padding: 10rpx 20rpx;
		align-items: center;
		border-radius: 10rpx;
		margin-left: 10rpx;
	}
	.list .controls .control .text {
		font-size: 22rpx;
	}
	.out {
		position: absolute;
		bottom: 50rpx;
		width: 600rpx;
		left: 75rpx;
		height: 60rpx;
	}
</style>
