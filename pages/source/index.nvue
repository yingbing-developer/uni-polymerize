<template>
	<yb-page-anime ref="ybPageAnime" :bgColor="skinColor.color_bg_1">
		<yb-nav-bar :bgColor="skinColor.color_theme_1" :frontColor="skinColor.color_4" title="网站来源">
			<template slot="right">
				<view class="rd-nav-right">
					<rd-icon class="opac-actived" enableClick @click="chooseFile" name="load-rect" size="45" :color="skinColor.color_white"></rd-icon>
				</view>
			</template>
		</yb-nav-bar>
		<yb-swiper-list
		:column="tabs.length < 5 ? tabs.length : 'auto'"
		:tabs="tabs"
		@change="changeTab"
		:frontColor="skinColor.color_2"
		:borderColor="skinColor.color_3"
		:activedColor="skinColor.color_actived_1">
			<template v-slot="{swiperSlot}">
				<list v-if="swiperSlot.detail.data.length > 0">
					<cell v-for="(item, index) in swiperSlot.detail.data.slice(0, list[swiperSlot.index].currentPage * size)">
						<view class="list padding-gap" :style="{'border-color': skinColor.color_gap_1}">
							<text class="label" :style="{color: skinColor.color_1}">{{item.title}}</text>
							<view class="right">
								<switch :checked="item.isOpen" @change="onChange($event, item.id)" style="transform:scale(0.6)" />
								<rd-icon enableClick @click="app.$Router.push({
									path: '/pages/source/form',
									query: {
										current: swiperSlot.index,
										form: encodeURIComponent(JSON.stringify(item))
									}
								})" class="icon opac-actived" name="edit-rect" :color="skinColor.color_orange" size="35"></rd-icon>
								<view style="width: 10rpx;"></view>
								<rd-icon enableClick @click="remove(item.id)" class="icon opac-actived" name="dustbin" :color="skinColor.color_orange" size="35"></rd-icon>
							</view>
						</view>
					</cell>
					<cell v-if="list[swiperSlot.index].currentPage * size >= swiperSlot.detail.data.length && swiperSlot.detail.data.length > 0">
						<yb-no-more :color="skinColor.color_3"></yb-no-more>
					</cell>
					<yb-pullup v-if="list[swiperSlot.index].currentPage * size < swiperSlot.detail.data.length" :ref="'pullup_' + swiperSlot.index" :color="skinColor.color_1" @pullup="pullup(swiperSlot.index)"></yb-pullup>
				</list>
				<rd-no-data title="暂无数据" v-else />
			</template>
		</yb-swiper-list>
		<view class="fixed-bottom">
			<yb-button @click="app.$Router.push({
				path: '/pages/source/form',
				query: {
					current: current,
					action: 'add'
				}
			})" class="button" :title="'新建' + (current == 0 ? '书源' : current == 1 ? '图源' : '音源')" size="22" round />
		</view>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	import Source from '@/assets/constructor/source.js'
	export default {
		mixins: [appMixin],
		data () {
			return {
				size: 20,
				list: [],
				current: 0
			}
		},
		onLoad () {
			this.tabs.forEach(tab => {
				this.list.push({
					currentPage: 1
				})
			})
		},
		computed: {
			tabs () {
				return [{
					label: '书源',
					value: 'story',
					data: this.$store.getters['source/get'].filter(item => item.type == 'story' && (!item.isAdult || this.$store.getters['app/getAdult'])).reverse()
				},{
					label: '图源',
					value: 'comic',
					data: this.$store.getters['source/get'].filter(item => item.type == 'comic' && (!item.isAdult || this.$store.getters['app/getAdult'])).reverse()
				},{
					label: '音源',
					value: 'comic',
					data: this.$store.getters['source/get'].filter(item => item.type == 'music' && (!item.isAdult || this.$store.getters['app/getAdult'])).reverse()
				}]
			},
			type () {
				return this.current == 0 ? 'story' : this.current == 1 ? 'comic' : 'music'
			},
			title () {
				return this.current == 0 ? '书源' :  this.current == 1 ? '图源' : '音源'
			}
		},
		methods: {
			pullup (index) {
				this.list[index].currentPage++;
				this.$refs['pullup_' + index].success()
			},
			changeTab (e) {
				this.current = e.current
			},
			clear (index) {
				this.app.$nativeUI.confirm({
					title: '提示',
					content: '真的要清空收藏的' + this.tabs[index].label + '吗？',
					dark: this.skinMode == 'night',
					success: (res) => {
						if ( res.confirm ) {
							this.$store.dispatch('collection/clearCollection', this.tabs[index].value)
						}
					}
				})
			},
			remove (id) {
				this.$store.dispatch('source/remove', id)
			},
			onChange (e, id) {
				let index = this.$store.getters['source/get'].findIndex(source => source.id == id)
				if ( index > -1 ) {
					let source = this.$store.getters['source/get'][index]
					source.isOpen = e.detail.value
					this.$store.dispatch('source/add', source)
				}
			},
			chooseFile () {
				getApp().globalData.$modules.chooseFile({
					title: '选择' + this.title,
					suffix: 'json',
					multiple: true,
					success: (res) => {
						if ( res.confirm ) {
							res.data.files.forEach(ff => {
								plus.io.resolveLocalFileSystemURL(ff.path, ( entry ) => {
									// 可通过entry对象操作test.html文件 
									entry.file( (file) => {
										let fileReader = new plus.io.FileReader();
										fileReader.readAsText(file, 'UTF-8');
										fileReader.onloadend = (evt) => {
											try{
												let data = evt.target.result.replace(/\r|\n|\t/g, '')
												let requesValues = data.match(/\"value\": \"*([\s\S]*?)\"}/ig)
												if ( requesValues ) {
													requesValues.forEach((value, key) => {
														let val = value.match(/\"value\": \"*([\s\S]*?)\"}/)[1]
														data = data.replace(val, key)
													})
												}
												let result = JSON.parse(data)
												Object.keys(result.request).forEach(key => {
													if ( result.request[key].value ) {
														let val = requesValues[result.request[key].value].match(/\"value\": \"*([\s\S]*?)\"}/)[1]
														result.request[key].value = val
													}
												})
												this.$store.dispatch('source/add', new Source({
													id: result.id,
													title: result.title,
													href: result.href,
													isAdult: result.isAdult,
													isOpen: true,
													request: result.request,
													type: result.type
												}))
											}catch(e){
												throw new Error('错误的文件来源');
											}
										}
									} );
								}, ( err ) => {
									throw new Error('错误的文件来源');
								});
							})
						}
					}
				})
			}
		}
	}
</script>

<style scoped>
	@import url("@/assets/css/app.css");
	.list {
		flex-direction: row;
		align-items: center;
		height: 80rpx;
	}
	.list .label {
		font-size: 30rpx;
		flex: 1;
		text-overflow: ellipsis;
		lines: 1;
	}
	.list .right {
		flex-direction: row;
		align-items: center;
	}
	.list .right .icon {
	}
</style>
