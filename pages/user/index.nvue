<template>
	<yb-page-anime ref="ybPageAnime" tabbar :bgColor="skinColor.color_gap_2">
		<scroll-view style="flex: 1;" scroll-y="true" >
			<view class="top" :style="{'background-color': skinColor.color_theme_1}">
				<yb-gap-bar></yb-gap-bar>
				<view class="content">
					<yb-avatar enablePreview :src="avatar"></yb-avatar>
					<text class="title" :style="{color: skinColor.color_4}">{{name}}</text>
					<view class="icons">
						<rd-icon enableClick @click="changeSkin" class="icon" :name="skinMode == 'night' ? 'sun' : 'moon'" size="40" :color="skinColor.color_4"></rd-icon>
						<rd-icon enableClick @click="app.$Router.push({
							path: '/pages/user/edit'
						})" class="icon opac-actived" name="edit-rect" size="38" :color="skinColor.color_4"></rd-icon>
					</view>
				</view>
			</view>
			<view class="box" :style="{'background-color': skinColor.color_bg_2, 'margin-top': '-30rpx'}">
				<text class="title" :style="{color: skinColor.color_1}">我的音乐</text>
				<yb-grid :data="music" :column="5">
					<template v-slot="{gridItem}">
						<view class="menu" @tap="jumpTo(gridItem.detail)">
							<view class="icon">
								<rd-icon :name="gridItem.detail.icon" :size="gridItem.detail.size" :color="gridItem.detail.color"></rd-icon>
							</view>
							<text class="name" :style="{color: skinColor.color_1}">{{gridItem.detail.title}}</text>
						</view>
					</template>
				</yb-grid>
			</view>
			<view class="box" :style="{'background-color': skinColor.color_bg_2, 'margin-top': '20rpx'}">
				<text class="title" :style="{color: skinColor.color_1}">我的书籍</text>
				<yb-grid :data="book" :column="5">
					<template v-slot="{gridItem}">
						<view class="menu" @tap="jumpTo(gridItem.detail)">
							<view class="icon">
								<rd-icon :name="gridItem.detail.icon" :size="gridItem.detail.size" :color="gridItem.detail.color"></rd-icon>
							</view>
							<text class="name" :style="{color: skinColor.color_1}">{{gridItem.detail.title}}</text>
						</view>
					</template>
				</yb-grid>
			</view>
			<view class="box list" :style="{'background-color': skinColor.color_bg_2, 'margin-top': '20rpx'}">
				<view class="cell" :style="{'border-color': skinColor.color_gap_2}" @tap="app.$Router.push({
					path: '/pages/user/download'
				})">
					<view class="left">
						<rd-icon class="icon" name="download-cloud-fill" size="40" :color="skinColor.color_blue"></rd-icon>
						<text class="title" :style="{color: skinColor.color_1}">下载列表</text>
					</view>
					<rd-icon name="arrow-right" size="40" :color="skinColor.color_2"></rd-icon>
				</view>
				<view class="cell" :style="{'border-color': skinColor.color_gap_2}" @tap="app.$Router.push({
					path: '/pages/setting/index'
				})">
					<view class="left">
						<rd-icon class="icon" name="setting-fill" size="40" :color="skinColor.color_green"></rd-icon>
						<text class="title" :style="{color: skinColor.color_1}">设置中心</text>
					</view>
					<rd-icon name="arrow-right" size="40" :color="skinColor.color_2"></rd-icon>
				</view>
				<view class="cell" v-if="adult" :style="{'border-color': skinColor.color_gap_2}" @tap="app.$Router.push({
					path: '/pages/adult/index'
				})">
					<view class="left">
						<rd-icon class="icon" name="person" size="40" :color="skinColor.color_yellow"></rd-icon>
						<text class="title" :style="{color: skinColor.color_1}">青壮年模式</text>
					</view>
					<rd-icon name="arrow-right" size="40" :color="skinColor.color_2"></rd-icon>
				</view>
				<view class="cell" :style="{'border-color': skinColor.color_gap_2}" @tap="app.$Router.push({
					path: '/pages/about/index'
				})">
					<view class="left">
						<rd-icon class="icon" name="info-fill" size="40" :color="skinColor.color_cyan"></rd-icon>
						<text class="title" :style="{color: skinColor.color_1}">关于软件</text>
					</view>
					<rd-icon name="arrow-right" size="40" :color="skinColor.color_2"></rd-icon>
				</view>
			</view>
			<yb-gap></yb-gap>
		</scroll-view>
	</yb-page-anime>
</template>

<script>
	import appMixin from '@/common/mixin/app.js';
	export default {
		mixins: [appMixin],
		computed: {
			music () {
				return [{
					title: '我的歌单',
					to: '/pages/music/custom',
					icon: 'music-circle-fill',
					size: 63,
					color: this.skinColor.color_green
				},{
					title: '我喜欢的',
					to: '/pages/music/collection',
					icon: 'love-rect-fill',
					size: 77,
					color: this.skinColor.color_red
				},{
					title: '最近听的',
					to: '/pages/music/record',
					icon: 'later-rect-fill',
					size: 80,
					color: this.skinColor.color_blue
				},{
					title: '本地音乐',
					to: '/pages/music/local',
					icon: 'folder-open-fill',
					size: 65,
					color: this.skinColor.color_orange
				}]
			},
			book () {
				return [{
					title: '我的书单',
					to: '/pages/book/custom',
					icon: 'bookshelf-fill',
					size: 63,
					color: this.skinColor.color_green
				},{
					title: '我喜欢的',
					to: '/pages/book/collection',
					icon: 'love-rect-fill',
					size: 75,
					color: this.skinColor.color_red
				},{
					title: '正在看的',
					to: '/pages/book/record',
					icon: 'read-fill',
					size: 75,
					color: this.skinColor.color_blue
				},{
					title: '本地小说',
					to: '/pages/book/local',
					icon: 'folder-open-fill',
					size: 65,
					color: this.skinColor.color_orange
				},{
					title: '本地漫画',
					to: '/pages/comic/local',
					icon: 'folder-open-fill',
					size: 65,
					color: this.skinColor.color_orange
				}]
			},
			name () {
				return this.$store.getters['user/getName']
			},
			avatar () {
				return this.$store.getters['user/getAvatar']
			},
			adult () {
				return this.$store.getters['app/getAdult']
			}
		},
		onShow() {
			getApp().globalData.$business.setSkinColor();
		},
		methods: {
			jumpTo (params) {
				if ( params.to ) {
					getApp().globalData.$Router.push({
						path: params.to
					})
				}
			}
		}
	}
</script>

<style scoped>
	.top {
		height: 340rpx;
		border-bottom-left-radius: 50rpx;
		border-bottom-right-radius: 50rpx;
	}
	.top .content {
		flex: 1;
		align-items: center;
		justify-content: center;
		position: relative;
	}
	.top .content .icons {
		position: absolute;
		flex-direction: row;
		top: 0;
		left: 0;
		right: 0;
		height: 50rpx;
		align-items: center;
		justify-content: flex-end;
	}
	.top .content .icons .icon {
		margin-right: 20rpx;
	}
	.top .title {
		font-size: 26rpx;
		margin-top: 15rpx;
	}
	.box {
		margin: 0 20rpx;
		border-radius: 20rpx;
		padding: 20rpx;
	}
	.box .title {
		font-size: 25rpx;
		margin-left: 10rpx;
		font-weight: bold;
	}
	.box .menu {
		align-items: center;
		margin-top: 20rpx;
		width: 100rpx;
	}
	.box .menu .icon {
		width: 80rpx;
		height: 80rpx;
		align-items: center;
		justify-content: center;
	}
	.box .menu .name {
		font-size: 22rpx;
		text-align: center;
	}
	.list {
		padding: 0 20rpx;
	}
	.list .cell {
		justify-content: space-between;
		height: 80rpx;
		border-bottom-width: 1rpx;
	}
	.list .cell, .list .cell .left {
		flex-direction: row;
		align-items: center;
	}
	.list .cell .left .icon {
		width: 50rpx;
	}
</style>
