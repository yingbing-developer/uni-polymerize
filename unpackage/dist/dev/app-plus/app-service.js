(this["webpackJsonp"] = this["webpackJsonp"] || []).push([["app-service"],[
/* 0 */
/*!********************************************!*\
  !*** G:/my-project/uni-polymerize/main.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("__webpack_require__(/*! uni-pages */ 1);var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 50));\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 51));\nvar _store = _interopRequireDefault(__webpack_require__(/*! ./store */ 65));\n__webpack_require__(/*! @/plugins */ 118);\n__webpack_require__(/*! @/assets/js */ 119);\nvar _api = _interopRequireDefault(__webpack_require__(/*! @/assets/api */ 111));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/js_sdk/yb-native-ui/index.js */ 83));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n_vue.default.config.productionTip = false;\n\n_vue.default.prototype.$api = _api.default;\n_vue.default.prototype.$nativeUI = _index.default;\n\n_App.default.mpType = 'app';\n\nvar app = new _vue.default(_objectSpread(_objectSpread({},\n_App.default), {}, {\n  store: _store.default }));\n\napp.$mount();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vbWFpbi5qcyJdLCJuYW1lcyI6WyJWdWUiLCJjb25maWciLCJwcm9kdWN0aW9uVGlwIiwicHJvdG90eXBlIiwiJGFwaSIsIkFwaSIsIiRuYXRpdmVVSSIsIk5hdGl2ZVVJIiwiQXBwIiwibXBUeXBlIiwiYXBwIiwic3RvcmUiLCIkbW91bnQiXSwibWFwcGluZ3MiOiJBQUFBLHdDQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUc7O0FBRUFBLGFBQUlDLE1BQUosQ0FBV0MsYUFBWCxHQUEyQixLQUEzQjs7QUFFQUYsYUFBSUcsU0FBSixDQUFjQyxJQUFkLEdBQXFCQyxZQUFyQjtBQUNBTCxhQUFJRyxTQUFKLENBQWNHLFNBQWQsR0FBMEJDLGNBQTFCOztBQUVBQyxhQUFJQyxNQUFKLEdBQWEsS0FBYjs7QUFFQSxJQUFNQyxHQUFHLEdBQUcsSUFBSVYsWUFBSjtBQUNMUSxZQURLO0FBRVhHLE9BQUssRUFBTEEsY0FGVyxJQUFaOztBQUlBRCxHQUFHLENBQUNFLE1BQUoiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAndW5pLXBhZ2VzJztpbXBvcnQgVnVlIGZyb20gJ3Z1ZSdcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCdcclxuaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnLy/lvJXlhaV2dWV4XHJcbmltcG9ydCAnQC9wbHVnaW5zJ1xyXG5pbXBvcnQgJ0AvYXNzZXRzL2pzJ1xyXG5pbXBvcnQgQXBpIGZyb20gJ0AvYXNzZXRzL2FwaSdcclxuaW1wb3J0IE5hdGl2ZVVJIGZyb20gJ0AvanNfc2RrL3liLW5hdGl2ZS11aS9pbmRleC5qcydcclxuXHJcblZ1ZS5jb25maWcucHJvZHVjdGlvblRpcCA9IGZhbHNlXHJcblxyXG5WdWUucHJvdG90eXBlLiRhcGkgPSBBcGlcclxuVnVlLnByb3RvdHlwZS4kbmF0aXZlVUkgPSBOYXRpdmVVSVxyXG5cclxuQXBwLm1wVHlwZSA9ICdhcHAnXHJcblxyXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcclxuICAgIC4uLkFwcCxcclxuXHRzdG9yZVxyXG59KVxyXG5hcHAuJG1vdW50KCkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!***********************************************!*\
  !*** G:/my-project/uni-polymerize/pages.json ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


if (typeof Promise !== 'undefined' && !Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

if (uni.restoreGlobal) {
  uni.restoreGlobal(weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}






__definePage('pages/book/reader', function () {return Vue.extend(__webpack_require__(/*! pages/book/reader.vue?mpType=page */ 2).default);});

/***/ }),
/* 2 */
/*!**********************************************************************!*\
  !*** G:/my-project/uni-polymerize/pages/book/reader.vue?mpType=page ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reader.vue?vue&type=template&id=65eb0790&scoped=true&mpType=page */ 3);\n/* harmony import */ var _reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reader.vue?vue&type=script&lang=js&mpType=page */ 41);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"65eb0790\",\n  null,\n  false,\n  _reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/book/reader.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMEk7QUFDMUk7QUFDcUU7QUFDTDs7O0FBR2hFO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLHVGQUFNO0FBQ1IsRUFBRSx3R0FBTTtBQUNSLEVBQUUsaUhBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNEdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4vcmVhZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NWViMDc5MCZzY29wZWQ9dHJ1ZSZtcFR5cGU9cGFnZVwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vcmVhZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5leHBvcnQgKiBmcm9tIFwiLi9yZWFkZXIudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI2NWViMDc5MFwiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9ib29rL3JlYWRlci52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!****************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/pages/book/reader.vue?vue&type=template&id=65eb0790&scoped=true&mpType=page ***!
  \****************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./reader.vue?vue&type=template&id=65eb0790&scoped=true&mpType=page */ 4);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_template_id_65eb0790_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 4 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/pages/book/reader.vue?vue&type=template&id=65eb0790&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
try {
  components = {
    ybPageAnime: __webpack_require__(/*! @/components/yb/yb-page-anime/yb-page-anime.nvue */ 5)
      .default,
    yingbingReadPage: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue */ 11)
      .default
  }
} catch (e) {
  if (
    e.message.indexOf("Cannot find module") !== -1 &&
    e.message.indexOf(".vue") !== -1
  ) {
    console.error(e.message)
    console.error("1. 排查组件名称拼写是否正确")
    console.error(
      "2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"
    )
    console.error(
      "3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件"
    )
  } else {
    throw e
  }
}
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "yb-page-anime",
    { attrs: { touch: true, _i: 0 } },
    [
      _c("yingbing-ReadPage", {
        ref: "page",
        attrs: {
          "page-type": _vm.pageType,
          "font-size": _vm.fontSize,
          "line-height": _vm.lineHeight,
          color: _vm.skinColor.color_read_text,
          "bg-color": _vm.skinColor.color_read_bg,
          slide: 40,
          "top-gap": _vm.barHeight,
          "bottom-gap": _vm.barHeight,
          "no-chapter": _vm.reader.source == "local",
          enablePreload: true,
          enableClick: true,
          _i: 1
        },
        on: {
          clickTo: _vm.openSettingNvue,
          currentChange: _vm.savePageRecord,
          setCatalog: _vm.setCatalog,
          preload: _vm.preloadContent,
          loadmore: _vm.loadmoreContent
        }
      }),
      _c(
        "view",
        {
          staticClass: _vm._$s(2, "sc", "progress"),
          style: _vm._$s(2, "s", {
            color: _vm.skinColor.color_white,
            "background-color": _vm.progressBg
          }),
          attrs: { _i: 2 }
        },
        [
          _vm._v(
            _vm._$s(
              2,
              "t0-0",
              _vm._s(
                _vm.reader.source == "local"
                  ? _vm.reader.book.title + "    " + _vm.record.progress + "%"
                  : _vm.record.title +
                      "    " +
                      _vm.currentPage +
                      "/" +
                      _vm.totalPage
              )
            )
          )
        ]
      )
    ],
    1
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 5 */
/*!***********************************************************************************!*\
  !*** G:/my-project/uni-polymerize/components/yb/yb-page-anime/yb-page-anime.nvue ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./yb-page-anime.nvue?vue&type=template&id=66841978&scoped=true& */ 6);\n/* harmony import */ var _yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./yb-page-anime.nvue?vue&type=script&lang=js& */ 8);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"66841978\",\n  null,\n  false,\n  _yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"components/yb/yb-page-anime/yb-page-anime.nvue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBdUk7QUFDdkk7QUFDa0U7QUFDTDs7O0FBRzdEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLG9GQUFNO0FBQ1IsRUFBRSxxR0FBTTtBQUNSLEVBQUUsOEdBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUseUdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4veWItcGFnZS1hbmltZS5udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY2ODQxOTc4JnNjb3BlZD10cnVlJlwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4veWItcGFnZS1hbmltZS5udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi95Yi1wYWdlLWFuaW1lLm52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI2Njg0MTk3OFwiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJjb21wb25lbnRzL3liL3liLXBhZ2UtYW5pbWUveWItcGFnZS1hbmltZS5udnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!******************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/components/yb/yb-page-anime/yb-page-anime.nvue?vue&type=template&id=66841978&scoped=true& ***!
  \******************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./yb-page-anime.nvue?vue&type=template&id=66841978&scoped=true& */ 7);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_template_id_66841978_scoped_true___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 7 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/components/yb/yb-page-anime/yb-page-anime.nvue?vue&type=template&id=66841978&scoped=true& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("view", [
    _c("view", {
      staticClass: _vm._$s(1, "sc", "mask"),
      style: _vm._$s(1, "s", { opacity: _vm.opacity }),
      attrs: { _i: 1 }
    }),
    _vm._$s(2, "i", _vm.touch)
      ? _c(
          "view",
          {
            ref: "ybPageAnime",
            staticClass: _vm._$s(2, "sc", "yb-page-anime"),
            style: _vm._$s(2, "s", {
              transform: _vm.transform,
              opacity: _vm.opacity,
              "background-color": _vm.bgColor
            }),
            attrs: { _i: 2 }
          },
          [_vm._t("default", null, { _i: 3 })],
          2
        )
      : _c(
          "view",
          {
            ref: "ybPageAnime",
            staticClass: _vm._$s(4, "sc", "yb-page-anime"),
            style: _vm._$s(4, "s", {
              transform: _vm.transform,
              opacity: _vm.opacity,
              "background-color": _vm.bgColor
            }),
            attrs: { _i: 4 },
            on: {
              touchmove: function($event) {
                $event.stopPropagation()
                $event.preventDefault()
              }
            }
          },
          [_vm._t("default", null, { _i: 5 })],
          2
        )
  ])
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 8 */
/*!************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/components/yb/yb-page-anime/yb-page-anime.nvue?vue&type=script&lang=js& ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./yb-page-anime.nvue?vue&type=script&lang=js& */ 9);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yb_page_anime_nvue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXlpQixDQUFnQiw0a0JBQUcsRUFBQyIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4veWItcGFnZS1hbmltZS5udnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtMSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stdW5pLWFwcC1sb2FkZXJcXFxcdXNpbmctY29tcG9uZW50cy5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi95Yi1wYWdlLWFuaW1lLm52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/components/yb/yb-page-anime/yb-page-anime.nvue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  props: {\n    bgColor: {\n      type: String,\n      default: '#FAFAFA' },\n\n    animationType: {\n      type: String,\n      default: 'slide-in-right' },\n\n    duration: {\n      type: Number,\n      default: 300 },\n\n    //是否允许点击穿透\n    touch: {\n      type: Boolean,\n      default: false },\n\n    //是否是tabbar页面\n    tabbar: {\n      type: Boolean,\n      default: false } },\n\n\n  data: function data() {\n    return {\n      transform: '',\n      opacity: 0,\n      isBack: false };\n\n  },\n  beforeCreate: function beforeCreate() {\n    var pages = getCurrentPages();\n    if (pages.length - 2 >= 0) {\n      var page = pages[pages.length - 2];\n      if (page.$vm.$refs.ybPageAnime) {\n        page.$vm.$refs.ybPageAnime.hide();\n      }\n    }\n  },\n  created: function created() {\n    if (!this.tabbar) {\n      this.init();\n      this.onBack();\n    } else {\n      this.opacity = 1;\n      var pages = getCurrentPages();\n      var page = pages[pages.length - 1];\n      var shows = page.$vm.$options.onShow;\n      var showEvnet = function showEvnet(e) {\n        shows ? shows[0](e) : false;\n        uni.showTabBar();\n      };\n      page.$vm.$options.onShow = new Array(0);\n      page.$vm.$options.onShow.push(showEvnet);\n    }\n  },\n  mounted: function mounted() {var _this = this;\n    setTimeout(function () {\n      _this.pushin();\n    }, 20);\n  },\n  methods: {\n    init: function init() {\n      switch (this.animationType) {\n        case 'slide-in-right':\n          var windowWidth = uni.getSystemInfoSync().windowWidth;\n          this.transform = 'translateX(' + windowWidth + 'px)';\n          break;\n        case 'slide-in-bottom':\n          var windowHeight = uni.getSystemInfoSync().windowHeight;\n          this.transform = 'translateY(' + windowHeight + 'px)';\n          break;\n        case 'zoom-out':\n          this.transform = 'scale(0)';\n          break;\n        default:\n          this.transform = '';}\n\n    },\n    //页面显示时效果\n    show: function show() {\n      var animation = weex.requireModule('animation');\n\n\n\n\n\n\n\n\n\n\n\n\n      this.transform = 'scale(1)';\n\n    },\n    //页面隐藏时效果\n    hide: function hide() {\n      var animation = weex.requireModule('animation');\n\n\n\n\n\n\n\n\n\n\n\n\n      this.transform = 'scale(0.97)';\n\n    },\n    pushin: function pushin() {\n      var animation = weex.requireModule('animation');\n      var transform = this.animationType == 'slide-in-right' ? 'translateX(0)' : this.animationType == 'zoom-out' ? 'scale(1)' : 'translateY(0)';\n\n\n\n\n\n\n\n\n\n\n\n\n\n      this.transform = transform;\n      this.opacity = 1;\n\n\n    },\n    popout: function popout() {\n      this.isBack = true;\n      var animationType = '';\n      switch (this.animationType) {\n        case 'slide-in-right':\n          animationType = 'slide-out-right';\n          break;\n        case 'slide-in-bottom':\n          animationType = 'slide-out-bottom';\n          break;\n        case 'zoom-out':\n          animationType = 'zoom-in';\n          break;\n        default:\n          animationType = 'fade-out';}\n\n      var pages = getCurrentPages();\n      if (pages.length - 2 >= 0) {\n        var page = pages[pages.length - 2];\n        if (page.$vm.$refs.ybPageAnime) {\n          page.$vm.$refs.ybPageAnime.show();\n        }\n      }\n      uni.navigateBack({\n        animationType: animationType,\n        animationDuration: this.duration,\n        delta: 1 });\n\n    },\n    onBack: function onBack() {var _this2 = this;\n      var pages = getCurrentPages();\n      var page = pages[pages.length - 1];\n      var backs = page.$vm.$options.onBackPress;\n      var evnet = function evnet(e) {\n        var bol = backs ? backs[0](e) : false;\n        if (bol) return bol;\n        if (!_this2.isBack) {\n          _this2.popout();\n          return true;\n        }\n        return false;\n      };\n      page.$vm.$options.onBackPress = new Array(0);\n      page.$vm.$options.onBackPress.push(evnet);\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 11 */
/*!*********************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./yingbing-ReadPage.vue?vue&type=template&id=81457e16&scoped=true& */ 12);\n/* harmony import */ var _yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./yingbing-ReadPage.vue?vue&type=script&lang=js& */ 39);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"81457e16\",\n  null,\n  false,\n  _yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMEk7QUFDMUk7QUFDcUU7QUFDTDs7O0FBR2hFO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLHVGQUFNO0FBQ1IsRUFBRSx3R0FBTTtBQUNSLEVBQUUsaUhBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNEdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3lpbmdiaW5nLVJlYWRQYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04MTQ1N2UxNiZzY29wZWQ9dHJ1ZSZcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3lpbmdiaW5nLVJlYWRQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4veWluZ2JpbmctUmVhZFBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiODE0NTdlMTZcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwidW5pX21vZHVsZXMveWluZ2JpbmctUmVhZFBhZ2UvY29tcG9uZW50cy95aW5nYmluZy1SZWFkUGFnZS95aW5nYmluZy1SZWFkUGFnZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!****************************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue?vue&type=template&id=81457e16&scoped=true& ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./yingbing-ReadPage.vue?vue&type=template&id=81457e16&scoped=true& */ 13);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_template_id_81457e16_scoped_true___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 13 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue?vue&type=template&id=81457e16&scoped=true& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
try {
  components = {
    flipPage: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue */ 14)
      .default,
    scrollPage: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue */ 29)
      .default,
    pageNoChapter: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue */ 34)
      .default
  }
} catch (e) {
  if (
    e.message.indexOf("Cannot find module") !== -1 &&
    e.message.indexOf(".vue") !== -1
  ) {
    console.error(e.message)
    console.error("1. 排查组件名称拼写是否正确")
    console.error(
      "2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"
    )
    console.error(
      "3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件"
    )
  } else {
    throw e
  }
}
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    {
      staticClass: _vm._$s(0, "sc", "page"),
      attrs: { _i: 0 },
      on: {
        touchstart: _vm.touchstart,
        touchmove: _vm.touchmove,
        touchend: _vm.touchend
      }
    },
    [
      _vm._$s(1, "i", !_vm.noChapter)
        ? [
            _vm._$s(2, "i", _vm.pageType != "scroll")
              ? _c("flip-page", {
                  ref: "filpPage",
                  attrs: {
                    "page-type": _vm.pageType,
                    "font-size": _vm.prop.fontSize,
                    "line-height": _vm.prop.lineHeight,
                    color: _vm.color,
                    "bg-color": _vm.bgColor,
                    slide: _vm.prop.slide,
                    topGap: _vm.prop.topGap,
                    bottomGap: _vm.prop.bottomGap,
                    enablePreload: _vm.enablePreload,
                    _i: 2
                  },
                  on: {
                    loadmore: _vm.loadmore,
                    preload: _vm.preload,
                    currentChange: _vm.currentChange
                  }
                })
              : _vm._e(),
            _vm._$s(3, "i", _vm.pageType == "scroll")
              ? _c("scroll-page", {
                  ref: "scrollPage",
                  attrs: {
                    "page-type": _vm.pageType,
                    "font-size": _vm.prop.fontSize,
                    "line-height": _vm.prop.lineHeight,
                    color: _vm.color,
                    "bg-color": _vm.bgColor,
                    slide: _vm.prop.slide,
                    topGap: _vm.prop.topGap,
                    bottomGap: _vm.prop.bottomGap,
                    enablePreload: _vm.enablePreload,
                    _i: 3
                  },
                  on: {
                    loadmore: _vm.loadmore,
                    preload: _vm.preload,
                    scrollEnd: _vm.currentChange
                  }
                })
              : _vm._e()
          ]
        : [
            _c("page-no-chapter", {
              ref: "pageNoChapter",
              attrs: {
                "page-type": _vm.pageType,
                "font-size": _vm.prop.fontSize,
                "line-height": _vm.prop.lineHeight,
                color: _vm.color,
                "bg-color": _vm.bgColor,
                slide: _vm.prop.slide,
                topGap: _vm.prop.topGap,
                bottomGap: _vm.prop.bottomGap,
                _i: 5
              },
              on: {
                currentChange: _vm.currentChangeNoChater,
                setCatalog: _vm.setCatalog
              }
            })
          ]
    ],
    2
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 14 */
/*!*****************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flip-page.vue?vue&type=template&id=4f0bc5fe&scoped=true&filter-modules=eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19& */ 15);\n/* harmony import */ var _flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flip-page.vue?vue&type=script&lang=js& */ 27);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"4f0bc5fe\",\n  null,\n  false,\n  _flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBOFQ7QUFDOVQ7QUFDNkQ7QUFDTDs7O0FBR3hEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLCtFQUFNO0FBQ1IsRUFBRSw0UkFBTTtBQUNSLEVBQUUscVNBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsZ1NBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2ZsaXAtcGFnZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NGYwYmM1ZmUmc2NvcGVkPXRydWUmZmlsdGVyLW1vZHVsZXM9ZXlKbWJHbHdVR0ZuWlNJNmV5SjBlWEJsSWpvaWNtVnVaR1Z5YW5NaUxDSmpiMjUwWlc1MElqb2lJaXdpYzNSaGNuUWlPakV3TkRJMUxDSmhkSFJ5Y3lJNmV5SnNZVzVuSWpvaWFuTWlMQ0owZVhCbElqb2liVzlrZFd4bElpd2liVzlrZFd4bElqb2labXhwY0ZCaFoyVWlmU3dpWlc1a0lqb3lOekF4T0gxOSZcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2ZsaXAtcGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2ZsaXAtcGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI0ZjBiYzVmZVwiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJ1bmlfbW9kdWxlcy95aW5nYmluZy1SZWFkUGFnZS9jb21wb25lbnRzL2ZsaXAtcGFnZS9mbGlwLXBhZ2UudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue?vue&type=template&id=4f0bc5fe&scoped=true&filter-modules=eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./flip-page.vue?vue&type=template&id=4f0bc5fe&scoped=true&filter-modules=eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19& */ 16);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_template_id_4f0bc5fe_scoped_true_filter_modules_eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 16 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue?vue&type=template&id=4f0bc5fe&scoped=true&filter-modules=eyJmbGlwUGFnZSI6eyJ0eXBlIjoicmVuZGVyanMiLCJjb250ZW50IjoiIiwic3RhcnQiOjEwNDI1LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiZmxpcFBhZ2UifSwiZW5kIjoyNzAxOH19& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
try {
  components = {
    computedPage: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue */ 17)
      .default,
    pageRefresh: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue */ 22)
      .default
  }
} catch (e) {
  if (
    e.message.indexOf("Cannot find module") !== -1 &&
    e.message.indexOf(".vue") !== -1
  ) {
    console.error(e.message)
    console.error("1. 排查组件名称拼写是否正确")
    console.error(
      "2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"
    )
    console.error(
      "3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件"
    )
  } else {
    throw e
  }
}
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      wxsProps: { "change:prop": "flipPageProp" },
      staticClass: _vm._$s(0, "sc", "flip-page"),
      style: _vm._$s(0, "s", { background: _vm.bgColor }),
      attrs: {
        prop: _vm._$s(0, "change:flipPageProp", _vm.flipPageProp),
        id: "flipPage",
        _i: 0
      },
      on: {}
    },
    [
      _c("div", { attrs: { id: "flip-content", _i: 1 } }),
      _c("computed-page", {
        ref: "computedPage",
        attrs: {
          pageType: _vm.pageType,
          fontSize: _vm.fontSize,
          lineHeight: _vm.lineHeight,
          slide: _vm.slide,
          topGap: _vm.topGap,
          bottomGap: _vm.bottomGap,
          _i: 2
        }
      }),
      _vm._$s(3, "i", _vm.initLoading)
        ? _c(
            "div",
            {
              staticClass: _vm._$s(3, "sc", "loading"),
              style: _vm._$s(3, "s", {
                background: _vm.bgColor,
                color: _vm.color,
                "font-size": _vm.fontSize + "px"
              }),
              attrs: { _i: 3 },
              on: { click: _vm.refresh }
            },
            [
              _vm._$s(4, "i", _vm.loadStatus == "none")
                ? _c("page-refresh", { attrs: { color: _vm.color, _i: 4 } }, [
                    _vm._v(_vm._$s(4, "t0-0", _vm._s(_vm.loadingText)))
                  ])
                : _c("text", [
                    _vm._v(_vm._$s(5, "t0-0", _vm._s(_vm.loadingText)))
                  ])
            ],
            1
          )
        : _vm._e()
    ],
    1
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 17 */
/*!*************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed-page.vue?vue&type=template&id=896f147e&scoped=true&filter-modules=eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19& */ 18);\n/* harmony import */ var _computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computed-page.vue?vue&type=script&lang=js& */ 20);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"896f147e\",\n  null,\n  false,\n  _computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBMFU7QUFDMVU7QUFDaUU7QUFDTDs7O0FBRzVEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLG1GQUFNO0FBQ1IsRUFBRSx3U0FBTTtBQUNSLEVBQUUsaVRBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsNFNBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2NvbXB1dGVkLXBhZ2UudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTg5NmYxNDdlJnNjb3BlZD10cnVlJmZpbHRlci1tb2R1bGVzPWV5SmpiMjF3ZFhSbFpGQmhaMlVpT25zaWRIbHdaU0k2SW5KbGJtUmxjbXB6SWl3aVkyOXVkR1Z1ZENJNklpSXNJbk4wWVhKMElqb3lNVFk0TENKaGRIUnljeUk2ZXlKc1lXNW5Jam9pYW5NaUxDSjBlWEJsSWpvaWJXOWtkV3hsSWl3aWJXOWtkV3hsSWpvaVkyOXRjSFYwWldSUVlXZGxJbjBzSW1WdVpDSTZOVGN5TlgxOSZcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2NvbXB1dGVkLXBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9jb21wdXRlZC1wYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBcIjg5NmYxNDdlXCIsXG4gIG51bGwsXG4gIGZhbHNlLFxuICBjb21wb25lbnRzLFxuICByZW5kZXJqc1xuKVxuXG5jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInVuaV9tb2R1bGVzL3lpbmdiaW5nLVJlYWRQYWdlL2NvbXBvbmVudHMvY29tcHV0ZWQtcGFnZS9jb21wdXRlZC1wYWdlLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue?vue&type=template&id=896f147e&scoped=true&filter-modules=eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./computed-page.vue?vue&type=template&id=896f147e&scoped=true&filter-modules=eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19& */ 19);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_template_id_896f147e_scoped_true_filter_modules_eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 19 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue?vue&type=template&id=896f147e&scoped=true&filter-modules=eyJjb21wdXRlZFBhZ2UiOnsidHlwZSI6InJlbmRlcmpzIiwiY29udGVudCI6IiIsInN0YXJ0IjoyMTY4LCJhdHRycyI6eyJsYW5nIjoianMiLCJ0eXBlIjoibW9kdWxlIiwibW9kdWxlIjoiY29tcHV0ZWRQYWdlIn0sImVuZCI6NTcyNX19& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", {
    wxsProps: { "change:prop": "computedPageProp" },
    staticClass: _vm._$s(0, "sc", "computed-page"),
    attrs: {
      prop: _vm._$s(0, "change:computedPageProp", _vm.computedPageProp),
      id: _vm._$s(0, "a-id", "computedPage" + _vm.dataId),
      _i: 0
    }
  })
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 20 */
/*!**************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./computed-page.vue?vue&type=script&lang=js& */ 21);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_computed_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXdpQixDQUFnQiwya0JBQUcsRUFBQyIsImZpbGUiOiIyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2NvbXB1dGVkLXBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXGJhYmVsLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyXFxcXGluZGV4LmpzPz9yZWYtLTYtMSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stdW5pLWFwcC1sb2FkZXJcXFxcdXNpbmctY29tcG9uZW50cy5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jb21wdXRlZC1wYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\nvar _default2 =\n{\n  props: {\n    //传入唯一标识动态命名ID用于获取dom对象（可选）默认已经生成\n    dataId: {\n      type: String,\n      default: function _default() {\n        var mydate = new Date();\n        return 'cms' + mydate.getMinutes() + mydate.getSeconds() + mydate.getMilliseconds() + Math.round(Math.random() * 10000);\n      } },\n\n    //翻页方式\n    pageType: {\n      type: String,\n      default: 'scroll' },\n\n    //字体大小（单位px）\n    fontSize: {\n      type: String | Number,\n      default: 15 },\n\n    //行间距（单位px）\n    lineHeight: {\n      type: Number | String,\n      default: 15 },\n\n    //页面左右边距（单位px）\n    slide: {\n      type: Number | String,\n      default: 40 },\n\n    //页面上边距（单位px）\n    topGap: {\n      type: Number | String,\n      default: 10 },\n\n    //页面下边距（单位px）\n    bottomGap: {\n      type: Number | String,\n      default: 10 } },\n\n\n  data: function data() {\n    return {\n      content: '',\n      isStart: false,\n      chapter: null,\n      resolve: null };\n\n  },\n  computed: {\n    computedPageProp: function computedPageProp() {\n      return {\n        dataId: this.dataId,\n        isStart: this.isStart,\n        slide: this.slide > 0 ? parseInt(this.slide) : 0,\n        topGap: this.topGap > 0 ? parseInt(this.topGap) : 0,\n        bottomGap: this.bottomGap > 0 ? parseInt(this.bottomGap) : 0,\n        fontSize: this.fontSize >= 12 ? parseInt(this.fontSize) : 12, //字体大小最小只能到12px，因为谷歌浏览器最小只支持12px\n        lineHeight: this.lineHeight >= 5 ? parseInt(this.lineHeight) : 5,\n        pageType: this.pageType,\n        content: this.content,\n        chapter: this.chapter };\n\n    } },\n\n  methods: {\n    computed: function computed(_ref) {var _this = this;var content = _ref.content,chapter = _ref.chapter;\n      return new Promise(function (resolve) {\n        _this.content = content;\n        _this.chapter = chapter || null;\n        _this.isStart = true;\n        _this.resolve = resolve;\n      });\n    },\n    reset: function reset(pages) {\n      this.resolve(pages);\n      this.resolve = null;\n      this.isStart = false;\n      this.content = '';\n      this.chapter = null;\n      this.start = null;\n      this.end = null;\n    } } };exports.default = _default2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/*!***********************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page-refresh.vue?vue&type=template&id=182c96fe&scoped=true& */ 23);\n/* harmony import */ var _page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page-refresh.vue?vue&type=script&lang=js& */ 25);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"182c96fe\",\n  null,\n  false,\n  _page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBcUk7QUFDckk7QUFDZ0U7QUFDTDs7O0FBRzNEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLGtGQUFNO0FBQ1IsRUFBRSxtR0FBTTtBQUNSLEVBQUUsNEdBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsdUdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3BhZ2UtcmVmcmVzaC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MTgyYzk2ZmUmc2NvcGVkPXRydWUmXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9wYWdlLXJlZnJlc2gudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9wYWdlLXJlZnJlc2gudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMTgyYzk2ZmVcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwidW5pX21vZHVsZXMveWluZ2JpbmctUmVhZFBhZ2UvY29tcG9uZW50cy9wYWdlLXJlZnJlc2gvcGFnZS1yZWZyZXNoLnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/*!******************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue?vue&type=template&id=182c96fe&scoped=true& ***!
  \******************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./page-refresh.vue?vue&type=template&id=182c96fe&scoped=true& */ 24);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_template_id_182c96fe_scoped_true___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 24 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue?vue&type=template&id=182c96fe&scoped=true& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: _vm._$s(0, "sc", "page-refresh"),
      style: _vm._$s(0, "s", { color: _vm.color, padding: _vm.padding }),
      attrs: { _i: 0 }
    },
    [
      _c("div", {
        staticClass: _vm._$s(1, "sc", "refresh-icon"),
        style: _vm._$s(1, "s", {
          "border-top": "5rpx solid" + _vm.color,
          "border-left": "5rpx solid" + _vm.color,
          "border-bottom": "5rpx solid" + _vm.color,
          "border-right": "5rpx solid transparent"
        }),
        attrs: { _i: 1 }
      }),
      _vm._t("default", [_vm._v("")], { _i: 2 })
    ],
    2
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 25 */
/*!************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./page-refresh.vue?vue&type=script&lang=js& */ 26);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_refresh_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVpQixDQUFnQiwwa0JBQUcsRUFBQyIsImZpbGUiOiIyNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhZ2UtcmVmcmVzaC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhZ2UtcmVmcmVzaC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  props: {\n    color: {\n      type: String,\n      default: '#333' },\n\n    padding: {\n      type: String,\n      default: '0 0 0 0' } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdW5pX21vZHVsZXMveWluZ2JpbmctUmVhZFBhZ2UvY29tcG9uZW50cy9wYWdlLXJlZnJlc2gvcGFnZS1yZWZyZXNoLnZ1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBYUE7QUFDQTtBQUNBO0FBQ0Esa0JBREE7QUFFQSxxQkFGQSxFQURBOztBQUtBO0FBQ0Esa0JBREE7QUFFQSx3QkFGQSxFQUxBLEVBREEsRSIsImZpbGUiOiIyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cclxuXHQ8ZGl2IGNsYXNzPVwicGFnZS1yZWZyZXNoXCIgOnN0eWxlPVwieydjb2xvcic6IGNvbG9yLCBwYWRkaW5nOiBwYWRkaW5nfVwiPlxyXG5cdFx0PGRpdiBjbGFzcz1cInJlZnJlc2gtaWNvblwiIDpzdHlsZT1cIntcclxuXHRcdFx0J2JvcmRlci10b3AnOiAnNXJweCBzb2xpZCcgKyBjb2xvcixcclxuXHRcdFx0J2JvcmRlci1sZWZ0JzogJzVycHggc29saWQnICsgY29sb3IsXHJcblx0XHRcdCdib3JkZXItYm90dG9tJzogJzVycHggc29saWQnICsgY29sb3IsXHJcblx0XHRcdCdib3JkZXItcmlnaHQnOiAnNXJweCBzb2xpZCB0cmFuc3BhcmVudCdcclxuXHRcdH1cIj48L2Rpdj5cclxuXHRcdDxzbG90PuWKoOi9veWGheWuuTwvc2xvdD5cclxuXHQ8L2Rpdj5cclxuPC90ZW1wbGF0ZT5cclxuXHJcbjxzY3JpcHQ+XHJcblx0ZXhwb3J0IGRlZmF1bHQge1xyXG5cdFx0cHJvcHM6IHtcclxuXHRcdFx0Y29sb3I6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJyMzMzMnXHJcblx0XHRcdH0sXHJcblx0XHRcdHBhZGRpbmc6IHtcclxuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXHJcblx0XHRcdFx0ZGVmYXVsdDogJzAgMCAwIDAnXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbjwvc2NyaXB0PlxyXG5cclxuPHN0eWxlIHNjb3BlZD5cclxuXHRAa2V5ZnJhbWVzIGFuaW1hdGlvblJvdGF0ZXtcclxuXHQgICAgMCUge1xyXG5cdCAgICAgIHRyYW5zZm9ybTogcm90YXRlWigwKTtcclxuXHQgICAgfVxyXG5cdCAgICAxMDAlIHtcclxuXHQgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVooMzYwZGVnKTtcclxuXHQgICAgfVxyXG5cdH1cclxuXHQucGFnZS1yZWZyZXNoIHtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cdFx0aGVpZ2h0OiAxMDBycHg7XHJcblx0XHRkaXNwbGF5OiBmbGV4O1xyXG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHRcdGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG5cdH1cclxuXHQucmVmcmVzaC1pY29uIHtcclxuXHRcdHdpZHRoOiAzMHJweDtcclxuXHRcdGhlaWdodDogMzBycHg7XHJcblx0XHRib3JkZXItcmFkaXVzOiAzMHJweDtcclxuXHRcdG1hcmdpbi1yaWdodDogMTBycHg7XHJcblx0XHRhbmltYXRpb246IGFuaW1hdGlvblJvdGF0ZSAxcyBsaW5lYXIgaW5maW5pdGU7XHJcblx0fVxyXG48L3N0eWxlPlxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/*!******************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./flip-page.vue?vue&type=script&lang=js& */ 28);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_flip_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQW9pQixDQUFnQix1a0JBQUcsRUFBQyIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2ZsaXAtcGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2ZsaXAtcGFnZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/flip-page/flip-page.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  props: {\n    //字体颜色\n    color: {\n      type: String,\n      default: '#333333' },\n\n    //字体大小（单位px）\n    fontSize: {\n      type: String | Number,\n      default: 15 },\n\n    //背景颜色\n    bgColor: {\n      type: String,\n      default: '#fcd281' },\n\n    //翻页方式\n    pageType: {\n      type: String,\n      default: 'scroll' },\n\n    //行间距（单位px）\n    lineHeight: {\n      type: Number | String,\n      default: 15 },\n\n    //页面左右边距（单位px）\n    slide: {\n      type: Number | String,\n      default: 40 },\n\n    //页面上边距（单位px）\n    topGap: {\n      type: Number | String,\n      default: 10 },\n\n    //页面下边距（单位px）\n    bottomGap: {\n      type: Number | String,\n      default: 10 },\n\n    //开启预加载\n    enablePreload: {\n      type: Boolean,\n      default: false } },\n\n\n  data: function data() {\n    return {\n      contents: [],\n      pages: [],\n      currentPageDataId: -1,\n      moreLoading: false,\n      initLoading: true,\n      loadingText: '正在加载内容',\n      loadStatus: 'none',\n      loadChapter: -1,\n      loadValue: 0 };\n\n  },\n  computed: {\n    flipPageProp: function flipPageProp() {\n      return {\n        pageType: this.pageType,\n        pages: JSON.parse(JSON.stringify(this.pages)),\n        topGap: this.topGap,\n        bottomGap: this.bottomGap,\n        slide: this.slide,\n        color: this.color,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        bgColor: this.bgColor,\n        currentPageDataId: this.currentPageDataId };\n\n    } },\n\n  methods: {\n    init: function init(data) {\n      this.initLoading = true;\n      this.contents = data.contents;\n      this.resetPage(data);\n    },\n    //绘制页面\n    resetPage: function resetPage(data) {var _this = this;\n      setTimeout(function () {\n        //一次最多渲染3章的内容，根据定位的章节剪切出3章内容渲染\n        var nowIndex = _this.contents.findIndex(function (item) {return item.chapter == data.currentChapter;});\n        var prevIndex = -1;\n        var nextIndex = -1;\n        var contents = [];\n        if (!_this.contents[nowIndex].isStart) prevIndex = _this.contents.findIndex(function (item) {return item.\n          chapter == data.currentChapter - 1;});\n        if (!_this.contents[nowIndex].isEnd) nextIndex = _this.contents.findIndex(function (item) {return item.chapter ==\n          data.currentChapter + 1;});\n        if (prevIndex > -1) {\n          contents.push(_this.contents[prevIndex]);\n        }\n        contents.push(_this.contents[nowIndex]);\n        if (nextIndex > -1) {\n          contents.push(_this.contents[nextIndex]);\n        }\n        var arr = [];\n        var dowhile = function dowhile(i) {\n          var item = contents[i];\n          _this.computedChapter(item).then(function (pages) {\n            if (data.currentChapter == item.chapter) {\n              var index = Object.keys(pages).findIndex(function (key) {return data.start >= pages[\n                key].start &&\n                data.start < pages[key].end;});\n              _this.currentPageDataId = pages[index].dataId;\n            }\n            arr = arr.concat(pages);\n            if (i == contents.length - 1) {\n              arr.unshift({\n                chapter: contents[0].chapter,\n                type: contents[0].isStart ? 'top' : 'prevLoading',\n                dataId: arr[0].dataId - 1,\n                start: 0,\n                end: 0 });\n\n              arr.push({\n                chapter: item.chapter,\n                type: item.isEnd ? 'bottom' : 'nextLoading',\n                dataId: arr[arr.length - 1].dataId + 1,\n                start: 0,\n                end: 0 });\n\n              _this.pages = arr;\n              _this.$nextTick(function () {\n                _this.currentChange();\n                _this.initLoading = false;\n                _this.preload(data.currentChapter);\n              });\n            } else {\n              setTimeout(function () {\n                dowhile(i + 1);\n              }, 100);\n            }\n          });\n        };\n        dowhile(0);\n      }, 50);\n    },\n    //预加载章节\n    preload: function preload(chapter) {var _this2 = this;\n      if (!this.enablePreload) return false;\n      var nowIndex = this.contents.findIndex(function (item) {return item.chapter == chapter;});\n      var prevIndex = -2;\n      var nextIndex = -2;\n      var chapters = [];\n      if (!this.contents[nowIndex].isStart) prevIndex = this.contents.findIndex(function (item) {return item.chapter == chapter -\n        1;});\n      if (!this.contents[nowIndex].isEnd) nextIndex = this.contents.findIndex(function (item) {return item.chapter == chapter +\n        1;});\n      if (prevIndex == -1) {\n        chapters.push(chapter - 1);\n      }\n      if (nextIndex == -1) {\n        chapters.push(chapter + 1);\n      }\n      if (chapters.length > 0) {\n        this.$emit('preload', chapters, function (status, contents) {\n          if (status == 'success') {\n            _this2.contents = JSON.parse(JSON.stringify(contents));\n          }\n        });\n      }\n    },\n    computedChapter: function computedChapter(content) {var _this3 = this;\n      return new Promise(function (resolve) {\n        _this3.$refs.computedPage.computed({\n          content: content.content,\n          chapter: content.chapter }).\n        then(function (pages) {\n          resolve(pages);\n        });\n      }).catch(function () {\n        resolve([]);\n      });\n    },\n    computedPage: function computedPage(e) {var _this4 = this;\n      this.computedChapter(e.content).then(function (pages) {\n        var arr = [];\n        var newPages = [];\n        var pagesSync = e.type == 'prev' ? pages.concat(_this4.pages) : _this4.pages.concat(pages);\n        pagesSync.forEach(function (item) {\n          if (arr.indexOf(item.chapter) == -1) arr.push(item.chapter);\n        });\n        if (arr.length > 3) {\n          var reChapter = e.type == 'prev' ? pagesSync[pagesSync.length - 1].chapter : pagesSync[0].\n          chapter;\n          newPages = pagesSync.filter(function (item) {return item.chapter != reChapter && item.type == 'text';});\n        } else {\n          newPages = pagesSync.filter(function (item) {return item.type == 'text';});\n        }\n        var prevIndex = _this4.contents.findIndex(function (content) {return content.chapter == newPages[0].chapter;});\n        var nextIndex = _this4.contents.findIndex(function (content) {return content.chapter == newPages[newPages.\n          length - 1].chapter;});\n        newPages.unshift({\n          chapter: _this4.contents[prevIndex].chapter,\n          type: _this4.contents[prevIndex].isStart ? 'top' : 'prevLoading',\n          dataId: newPages[0].dataId - 1,\n          start: 0,\n          end: 0 });\n\n        newPages.push({\n          chapter: _this4.contents[nextIndex].chapter,\n          type: _this4.contents[nextIndex].isEnd ? 'bottom' : 'nextLoading',\n          dataId: newPages[newPages.length - 1].dataId + 1,\n          start: 0,\n          end: 0 });\n\n        _this4.pages = JSON.parse(JSON.stringify(newPages));\n        var nowIndex = newPages.findIndex(function (page) {return page.dataId == _this4.currentPageDataId;});\n        if (nowIndex == -1) {\n          _this4.currentPageDataId = e.type == 'next' ? pages[0].dataId : pages[pages.length - 1].dataId;\n          _this4.currentChange();\n        }\n      });\n    },\n    changePageActived: function changePageActived(value) {var _this5 = this;\n      var index = this.pages.findIndex(function (page) {return page.dataId == _this5.currentPageDataId;});\n      var newIndex = index + value;\n      this.currentPageDataId = this.pages[newIndex].dataId;\n      this.currentChange();\n      var nowType = this.pages[newIndex].type;\n      var newType = this.pages[newIndex + value] ? this.pages[newIndex + value].type : null;\n      if (nowType == 'nextLoading' || nowType == 'prevLoading' || newType == 'nextLoading' || newType ==\n      'prevLoading') {\n        if (this.moreLoading) return;\n        this.moreLoading = true;\n        var loadChapter = this.pages[newIndex].chapter + value;\n        var contentIndex = this.contents.findIndex(function (content) {return content.chapter == loadChapter;});\n        if (contentIndex > -1) {\n          var data = {\n            content: this.contents[contentIndex],\n            type: value > 0 ? 'next' : 'prev' };\n\n          this.computedPage(data);\n          this.preload(loadChapter);\n          this.moreLoading = false;\n        } else {\n          this.loadmore(loadChapter, value);\n        }\n      }\n    },\n    refresh: function refresh() {\n      if (this.loadStatus == 'fail' || this.loadStatus == 'timeout') {\n        this.initLoading = false;\n        this.loadingText = '正在加载内容';\n        this.loadStatus = 'none';\n        this.loadmore(this.loadChapter, this.loadValue);\n        this.loadChapter = -1;\n        this.loadValue = 0;\n      }\n    },\n    loadmore: function loadmore(chapter, value) {var _this6 = this;\n      this.$emit('loadmore', chapter, function (status, contents) {\n        if (status == 'success') {\n          _this6.contents = JSON.parse(JSON.stringify(contents));\n          var index = _this6.contents.findIndex(function (item) {return item.chapter == chapter;});\n          var data = {\n            content: _this6.contents[index],\n            type: value > 0 ? 'next' : 'prev' };\n\n          _this6.computedPage(data);\n          _this6.preload(chapter);\n          _this6.moreLoading = false;\n        } else if (status == 'fail') {\n          _this6.loadStatus = status;\n          _this6.loadingText = '请求失败，点击重试';\n          _this6.initLoading = true;\n          _this6.loadChapter = chapter;\n          _this6.loadValue = value;\n        } else {\n          _this6.loadStatus = status;\n          _this6.loadingText = '请求超时，点击重试';\n          _this6.initLoading = true;\n          _this6.loadChapter = chapter;\n          _this6.loadValue = value;\n        }\n      });\n    },\n    currentChange: function currentChange() {var _this7 = this;\n      var types = ['top', 'bottom', 'prevLoading', 'nextLoading'];\n      var index = this.pages.findIndex(function (page) {return page.dataId == _this7.currentPageDataId;});\n      var type = this.pages[index].type;\n      var pageInfo = types.indexOf(type) == -1 ? this.pages[index] : type == 'top' || type == 'prevLoading' ?\n      JSON.parse(JSON.stringify(this.pages[index + 1])) : JSON.parse(JSON.stringify(this.pages[index - 1]));\n      var nowChapters = this.pages.filter(function (item) {return item.chapter == pageInfo.chapter;});\n      var contentIndex = this.contents.findIndex(function (content) {return content.chapter == pageInfo.chapter;});\n      pageInfo.totalPage = nowChapters.length;\n      pageInfo.currentPage = nowChapters.findIndex(function (item) {return item.dataId == pageInfo.dataId;}) + 1;\n      if (this.contents[contentIndex].title) pageInfo.title = this.contents[contentIndex].title;\n      this.$emit('currentChange', pageInfo);\n    },\n    showToast: function showToast(e) {\n      uni.showToast({\n        title: e.title,\n        icon: 'none' });\n\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/*!*********************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scroll-page.vue?vue&type=template&id=02f8b97e&scoped=true&filter-modules=eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19& */ 30);\n/* harmony import */ var _scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scroll-page.vue?vue&type=script&lang=js& */ 32);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"02f8b97e\",\n  null,\n  false,\n  _scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBb1U7QUFDcFU7QUFDK0Q7QUFDTDs7O0FBRzFEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLGlGQUFNO0FBQ1IsRUFBRSxrU0FBTTtBQUNSLEVBQUUsMlNBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc1NBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3Njcm9sbC1wYWdlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wMmY4Yjk3ZSZzY29wZWQ9dHJ1ZSZmaWx0ZXItbW9kdWxlcz1leUp6WTNKdmJHeFFZV2RsSWpwN0luUjVjR1VpT2lKeVpXNWtaWEpxY3lJc0ltTnZiblJsYm5RaU9pSWlMQ0p6ZEdGeWRDSTZPREE0T0N3aVlYUjBjbk1pT25zaWJHRnVaeUk2SW1weklpd2lkSGx3WlNJNkltMXZaSFZzWlNJc0ltMXZaSFZzWlNJNkluTmpjbTlzYkZCaFoyVWlmU3dpWlc1a0lqb3lORGd6Tm4xOSZcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3Njcm9sbC1wYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vc2Nyb2xsLXBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHZ1ZS1sb2FkZXJcXFxcbGliXFxcXHJ1bnRpbWVcXFxcY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMDJmOGI5N2VcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwidW5pX21vZHVsZXMveWluZ2JpbmctUmVhZFBhZ2UvY29tcG9uZW50cy9zY3JvbGwtcGFnZS9zY3JvbGwtcGFnZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue?vue&type=template&id=02f8b97e&scoped=true&filter-modules=eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./scroll-page.vue?vue&type=template&id=02f8b97e&scoped=true&filter-modules=eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19& */ 31);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_template_id_02f8b97e_scoped_true_filter_modules_eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 31 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue?vue&type=template&id=02f8b97e&scoped=true&filter-modules=eyJzY3JvbGxQYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6ODA4OCwiYXR0cnMiOnsibGFuZyI6ImpzIiwidHlwZSI6Im1vZHVsZSIsIm1vZHVsZSI6InNjcm9sbFBhZ2UifSwiZW5kIjoyNDgzNn19& ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
try {
  components = {
    pageRefresh: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue */ 22)
      .default,
    computedPage: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/computed-page/computed-page.vue */ 17)
      .default
  }
} catch (e) {
  if (
    e.message.indexOf("Cannot find module") !== -1 &&
    e.message.indexOf(".vue") !== -1
  ) {
    console.error(e.message)
    console.error("1. 排查组件名称拼写是否正确")
    console.error(
      "2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"
    )
    console.error(
      "3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件"
    )
  } else {
    throw e
  }
}
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      wxsProps: { "change:prop": "scrollPageProp" },
      staticClass: _vm._$s(0, "sc", "scroll-page"),
      style: _vm._$s(0, "s", {
        color: _vm.color,
        background: _vm.bgColor
      }),
      attrs: {
        prop: _vm._$s(0, "change:scrollPageProp", _vm.scrollPageProp),
        id: "scrollPage",
        _i: 0
      }
    },
    [
      _c("div", [
        _c(
          "div",
          {
            staticClass: _vm._$s(2, "sc", "pulldown-wrapper"),
            attrs: { _i: 2 }
          },
          [
            _c(
              "div",
              {
                staticClass: _vm._$s(3, "sc", "pulldown-loading"),
                attrs: { _i: 3 }
              },
              [
                _c(
                  "page-refresh",
                  {
                    attrs: {
                      padding: _vm.topGap + "px 0 0 0",
                      color: _vm.color,
                      _i: 4
                    }
                  },
                  [_vm._v("")]
                )
              ],
              1
            ),
            _c("div", {
              staticClass: _vm._$s(5, "sc", "pulldown-finish"),
              style: _vm._$s(5, "s", {
                color: _vm.color,
                "padding-top": _vm.topGap + "px"
              }),
              attrs: { _i: 5 }
            })
          ]
        ),
        _c("div", {
          style: _vm._$s(6, "s", { height: _vm.topGap + "px", width: "100%" }),
          attrs: { _i: 6 }
        }),
        _c("div", { attrs: { id: "scrollContent", _i: 7 } }),
        _c("div", {
          style: _vm._$s(8, "s", {
            height: _vm.bottomGap + "px",
            width: "100%"
          }),
          attrs: { _i: 8 }
        }),
        _c(
          "div",
          { staticClass: _vm._$s(9, "sc", "pullup-tips"), attrs: { _i: 9 } },
          [
            _c(
              "div",
              {
                staticClass: _vm._$s(10, "sc", "pullup-loading"),
                attrs: { _i: 10 }
              },
              [
                _c(
                  "page-refresh",
                  {
                    attrs: {
                      padding: "0 0 " + _vm.bottomGap + "px 0",
                      color: _vm.color,
                      _i: 11
                    }
                  },
                  [_vm._v("")]
                )
              ],
              1
            ),
            _c("div", {
              staticClass: _vm._$s(12, "sc", "pullup-finish"),
              style: _vm._$s(12, "s", {
                color: _vm.color,
                "padding-top": _vm.topGap + "px"
              }),
              attrs: { _i: 12 }
            })
          ]
        )
      ]),
      _c("computed-page", {
        ref: "computedPage",
        attrs: {
          pageType: _vm.pageType,
          fontSize: _vm.fontSize,
          lineHeight: _vm.lineHeight,
          slide: _vm.slide,
          topGap: _vm.topGap,
          bottomGap: _vm.bottomGap,
          _i: 13
        }
      })
    ],
    1
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 32 */
/*!**********************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./scroll-page.vue?vue&type=script&lang=js& */ 33);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_scroll_page_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXNpQixDQUFnQix5a0JBQUcsRUFBQyIsImZpbGUiOiIzMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3Njcm9sbC1wYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vc2Nyb2xsLXBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/scroll-page/scroll-page.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default =\n{\n  props: {\n    //字体颜色\n    color: {\n      type: String,\n      default: '#333333' },\n\n    //字体大小（单位px）\n    fontSize: {\n      type: String | Number,\n      default: 15 },\n\n    //背景颜色\n    bgColor: {\n      type: String,\n      default: '#fcd281' },\n\n    //翻页方式\n    pageType: {\n      type: String,\n      default: 'scroll' },\n\n    //行间距（单位px）\n    lineHeight: {\n      type: Number | String,\n      default: 15 },\n\n    //页面左右边距（单位px）\n    slide: {\n      type: Number | String,\n      default: 40 },\n\n    //页面上边距（单位px）\n    topGap: {\n      type: Number | String,\n      default: 10 },\n\n    //页面下边距（单位px）\n    bottomGap: {\n      type: Number | String,\n      default: 10 },\n\n    //开启预加载\n    enablePreload: {\n      type: Boolean,\n      default: false } },\n\n\n  data: function data() {\n    return {\n      contents: [],\n      pages: [],\n      pullupStatus: 'none',\n      pulldownStatus: 'none' };\n\n  },\n  computed: {\n    scrollPageProp: function scrollPageProp() {\n      return {\n        slide: this.slide,\n        topGap: this.topGap,\n        bottomGap: this.bottomGap,\n        fontSize: this.fontSize,\n        lineHeight: this.lineHeight,\n        refreshHeight: uni.upx2px(100),\n        contents: JSON.parse(JSON.stringify(this.contents)),\n        pages: JSON.parse(JSON.stringify(this.pages)),\n        pullupStatus: this.pullupStatus,\n        pulldownStatus: this.pulldownStatus };\n\n    } },\n\n  methods: {\n    init: function init(data) {\n      this.contents = data.contents;\n      this.resetPage(data);\n    },\n    //重绘页面\n    resetPage: function resetPage(data) {var _this = this;\n      this.pages = [];\n      setTimeout(function () {\n        //一次最多渲染3章的内容，根据定位的章节剪切出3章内容渲染\n        var nowIndex = _this.contents.findIndex(function (item) {return item.chapter == data.currentChapter;});\n        var prevIndex = -1;\n        var nextIndex = -1;\n        var contents = [];\n        if (!_this.contents[nowIndex].isStart) prevIndex = _this.contents.findIndex(function (item) {return item.chapter == data.currentChapter - 1;});\n        if (!_this.contents[nowIndex].isEnd) nextIndex = _this.contents.findIndex(function (item) {return item.chapter == data.currentChapter + 1;});\n        if (prevIndex > -1) {\n          contents.push(_this.contents[prevIndex]);\n        }\n        contents.push(_this.contents[nowIndex]);\n        if (nextIndex > -1) {\n          contents.push(_this.contents[nextIndex]);\n        }\n\n        var arr = [];\n        var dowhile = function dowhile(i) {\n          var item = contents[i];\n          _this.computedChapter(item).then(function (pages) {\n            if (data.currentChapter == item.chapter) {\n              var index = Object.keys(pages).findIndex(function (key) {return data.start >= pages[key].start &&\n                data.start < pages[key].end;});\n              pages[index].init = true;\n            }\n            arr = arr.concat(pages);\n            if (i == contents.length - 1) {\n              _this.pages = arr;\n              _this.preload(data.currentChapter);\n            } else {\n              setTimeout(function () {\n                dowhile(i + 1);\n              }, 100);\n            }\n          });\n        };\n        dowhile(0);\n      }, 20);\n    },\n    //加载上个章节\n    // scrolltoUpper(chapter) {\n    // \tthis.$emit('loadmore', chapter, (status, contents) => {\n    // \t\tif (status == 'success') {\n    // \t\t\tthis.contents = JSON.parse(JSON.stringify(contents))\n    // \t\t\tconst index = this.contents.findIndex(item => item.chapter == chapter)\n    // \t\t\tconst data = {\n    // \t\t\t\tcontent: this.contents[index],\n    // \t\t\t\ttype: 'prev'\n    // \t\t\t}\n    // \t\t\tthis.computedPage(data);\n    // \t\t\tthis.preload(chapter)\n    // \t\t}\n    // \t\tthis.pulldownStatus = status;\n    // \t})\n    // },\n    // //加载下个章节\n    // scrolltoLower(chapter) {\n    // \tthis.$emit('loadmore', chapter, (status, contents) => {\n    // \t\tif (status == 'success') {\n    // \t\t\tthis.contents = JSON.parse(JSON.stringify(contents))\n    // \t\t\tconst index = this.contents.findIndex(item => item.chapter == chapter)\n    // \t\t\tconst data = {\n    // \t\t\t\tcontent: this.contents[index],\n    // \t\t\t\ttype: 'next'\n    // \t\t\t}\n    // \t\t\tthis.computedPage(data);\n    // \t\t\tthis.preload(chapter)\n    // \t\t}\n    // \t\tthis.pullupStatus = status;\n    // \t})\n    // },\n    //加载更多章节\n    loadmore: function loadmore(load) {var _this2 = this;\n      var chapter = load.chapter;\n      var type = load.type;\n      var contentIndex = this.contents.findIndex(function (item) {return item.chapter == chapter;});\n      if (contentIndex > -1) {\n        var data = {\n          content: this.contents[contentIndex],\n          type: type };\n\n        this.computedPage(data);\n        this.preload(chapter);\n        if (type == 'next')\n        this.pullupStatus = 'success';else\n\n        this.pulldownStatus = 'success';\n      } else {\n        this.$emit('loadmore', chapter, function (status, contents) {\n          if (status == 'success') {\n            _this2.contents = JSON.parse(JSON.stringify(contents));\n            var index = _this2.contents.findIndex(function (item) {return item.chapter == chapter;});\n            var _data = {\n              content: _this2.contents[index],\n              type: type };\n\n            _this2.computedPage(_data);\n            _this2.preload(chapter);\n          }\n          if (type == 'next')\n          _this2.pullupStatus = status;else\n\n          _this2.pulldownStatus = status;\n        });\n      }\n    },\n    //预加载章节\n    preload: function preload(chapter) {var _this3 = this;\n      if (!this.enablePreload) return false;\n      var nowIndex = this.contents.findIndex(function (item) {return item.chapter == chapter;});\n      var prevIndex = -2;\n      var nextIndex = -2;\n      var chapters = [];\n      if (!this.contents[nowIndex].isStart) prevIndex = this.contents.findIndex(function (item) {return item.chapter == chapter - 1;});\n      if (!this.contents[nowIndex].isEnd) nextIndex = this.contents.findIndex(function (item) {return item.chapter == chapter + 1;});\n      if (prevIndex == -1) {\n        chapters.push(chapter - 1);\n      }\n      if (nextIndex == -1) {\n        chapters.push(chapter + 1);\n      }\n      if (chapters.length > 0) {\n        this.$emit('preload', chapters, function (status, contents) {\n          if (status == 'success') {\n            _this3.contents = JSON.parse(JSON.stringify(contents));\n          }\n        });\n      }\n    },\n    computedChapter: function computedChapter(content) {var _this4 = this;\n      return new Promise(function (resolve) {\n        _this4.$refs.computedPage.computed({\n          content: content.content,\n          chapter: content.chapter }).\n        then(function (pages) {\n          resolve(pages);\n        });\n      }).catch(function () {\n        resolve([]);\n      });\n    },\n    computedPage: function computedPage(e) {var _this5 = this;\n      this.computedChapter(e.content).then(function (pages) {\n        var pagesSync = e.type == 'prev' ? pages.concat(_this5.pages) : _this5.pages.concat(pages);\n        var arr = [];\n        pagesSync.forEach(function (item) {\n          if (arr.indexOf(item.chapter) == -1) arr.push(item.chapter);\n        });\n        if (arr.length > 3) {\n          var reChapter = e.type == 'prev' ? pagesSync[pagesSync.length - 1].chapter : pagesSync[0].\n          chapter;\n          _this5.pages = pagesSync.filter(function (item) {return item.chapter != reChapter;});\n        } else {\n          _this5.pages = pagesSync;\n        }\n      });\n    },\n    scrollEnd: function scrollEnd(e) {\n      this.$emit('scrollEnd', e);\n    },\n    resetPulldownStatus: function resetPulldownStatus() {\n      this.pulldownStatus = 'none';\n    },\n    resetPullupStatus: function resetPullupStatus() {\n      this.pullupStatus = 'none';\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/*!*****************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page-no-chapter.vue?vue&type=template&id=666c0abe&scoped=true&filter-modules=eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19& */ 35);\n/* harmony import */ var _page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./page-no-chapter.vue?vue&type=script&lang=js& */ 37);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"666c0abe\",\n  null,\n  false,\n  _page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd1Q7QUFDeFQ7QUFDbUU7QUFDTDs7O0FBRzlEO0FBQ3FLO0FBQ3JLLGdCQUFnQiwrS0FBVTtBQUMxQixFQUFFLHFGQUFNO0FBQ1IsRUFBRSxzUkFBTTtBQUNSLEVBQUUsK1JBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMFJBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL3BhZ2Utbm8tY2hhcHRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY2YzBhYmUmc2NvcGVkPXRydWUmZmlsdGVyLW1vZHVsZXM9ZXlKd1lXZGxJanA3SW5SNWNHVWlPaUp5Wlc1a1pYSnFjeUlzSW1OdmJuUmxiblFpT2lJaUxDSnpkR0Z5ZENJNk5EVTFOU3dpWVhSMGNuTWlPbnNpYkdGdVp5STZJbXB6SWl3aWJXOWtkV3hsSWpvaWNHRm5aU0lzSW5SNWNHVWlPaUp0YjJSMWJHVWlmU3dpWlc1a0lqb3lPVEl5Tm4xOSZcIlxudmFyIHJlbmRlcmpzXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3BhZ2Utbm8tY2hhcHRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL3BhZ2Utbm8tY2hhcHRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxccnVudGltZVxcXFxjb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI2NjZjMGFiZVwiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJ1bmlfbW9kdWxlcy95aW5nYmluZy1SZWFkUGFnZS9jb21wb25lbnRzL3BhZ2Utbm8tY2hhcHRlci9wYWdlLW5vLWNoYXB0ZXIudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue?vue&type=template&id=666c0abe&scoped=true&filter-modules=eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./page-no-chapter.vue?vue&type=template&id=666c0abe&scoped=true&filter-modules=eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19& */ 36);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_template_id_666c0abe_scoped_true_filter_modules_eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19___WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 36 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue?vue&type=template&id=666c0abe&scoped=true&filter-modules=eyJwYWdlIjp7InR5cGUiOiJyZW5kZXJqcyIsImNvbnRlbnQiOiIiLCJzdGFydCI6NDU1NSwiYXR0cnMiOnsibGFuZyI6ImpzIiwibW9kdWxlIjoicGFnZSIsInR5cGUiOiJtb2R1bGUifSwiZW5kIjoyOTIyNn19& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
try {
  components = {
    pageRefresh: __webpack_require__(/*! @/uni_modules/yingbing-ReadPage/components/page-refresh/page-refresh.vue */ 22)
      .default
  }
} catch (e) {
  if (
    e.message.indexOf("Cannot find module") !== -1 &&
    e.message.indexOf(".vue") !== -1
  ) {
    console.error(e.message)
    console.error("1. 排查组件名称拼写是否正确")
    console.error(
      "2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom"
    )
    console.error(
      "3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件"
    )
  } else {
    throw e
  }
}
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    {
      wxsProps: { "change:prop": "pageProp" },
      staticClass: _vm._$s(0, "sc", "page"),
      attrs: {
        id: _vm._$s(0, "a-id", "page" + _vm.dataId),
        prop: _vm._$s(0, "change:pageProp", _vm.pageProp),
        _i: 0
      }
    },
    [
      _c("view", { staticClass: _vm._$s(1, "sc", "box"), attrs: { _i: 1 } }, [
        _vm._$s(2, "i", _vm.pageType != "scroll")
          ? _c("view", {
              staticClass: _vm._$s(2, "sc", "content"),
              attrs: { id: _vm._$s(2, "a-id", "content" + _vm.dataId), _i: 2 },
              on: {}
            })
          : _vm._e(),
        _c("view", {
          staticClass: _vm._$s(3, "sc", "content"),
          attrs: { id: _vm._$s(3, "a-id", "computed" + _vm.dataId), _i: 3 }
        })
      ]),
      _vm._$s(4, "i", _vm.pageType == "scroll")
        ? _c("view", {
            staticClass: _vm._$s(4, "sc", "scroll-box"),
            style: _vm._$s(4, "s", {
              color: _vm.color,
              "padding-left": _vm.slide + "px",
              "padding-right": _vm.slide + "px",
              "padding-top": _vm.topGap + "px",
              "padding-bottom": _vm.bottomGap + "px",
              background: _vm.bgColor
            }),
            attrs: { id: _vm._$s(4, "a-id", "scroll-box" + _vm.dataId), _i: 4 }
          })
        : _vm._e(),
      _vm._$s(5, "i", _vm.initLoading)
        ? _c(
            "div",
            {
              staticClass: _vm._$s(5, "sc", "loading"),
              style: _vm._$s(5, "s", {
                background: _vm.bgColor,
                "font-size": _vm.fontSize + "px"
              }),
              attrs: { _i: 5 }
            },
            [
              _c("page-refresh", { attrs: { color: _vm.color, _i: 6 } }, [
                _vm._v("")
              ])
            ],
            1
          )
        : _vm._e()
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 37 */
/*!******************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue?vue&type=script&lang=js& ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./page-no-chapter.vue?vue&type=script&lang=js& */ 38);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_page_no_chapter_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTBpQixDQUFnQiw2a0JBQUcsRUFBQyIsImZpbGUiOiIzNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhZ2Utbm8tY2hhcHRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhZ2Utbm8tY2hhcHRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/page-no-chapter/page-no-chapter.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 =\n{\n  props: {\n    //传入唯一标识动态命名ID用于获取dom对象（可选）默认已经生成\n    dataId: {\n      type: String,\n      default: function _default() {\n        var mydate = new Date();\n        return 'cms' + mydate.getMinutes() + mydate.getSeconds() + mydate.getMilliseconds() + Math.round(Math.random() * 10000);\n      } },\n\n    //字体颜色\n    color: {\n      type: String,\n      default: '#333333' },\n\n    //字体大小（单位px）\n    fontSize: {\n      type: String | Number,\n      default: 15 },\n\n    //背景颜色\n    bgColor: {\n      type: String,\n      default: '#fcd281' },\n\n    //翻页方式\n    pageType: {\n      type: String,\n      default: 'scroll' },\n\n    //行间距（单位px）\n    lineHeight: {\n      type: Number | String,\n      default: 15 },\n\n    //页面左右边距（单位px）\n    slide: {\n      type: Number | String,\n      default: 40 },\n\n    //页面上边距（单位px）\n    topGap: {\n      type: Number | String,\n      default: 10 },\n\n    //页面下边距（单位px）\n    bottomGap: {\n      type: Number | String,\n      default: 10 } },\n\n\n  data: function data() {\n    return {\n      title: '',\n      content: '',\n      start: 0,\n      loading: false, //等待内容请求\n      upper: false, //文章是否到最前面\n      lower: false, //文章是否到最后面\n      restart: false, //是否重绘页面\n      preLoading: false, //等待预加载请求\n      initLoading: true,\n      chapters: [] };\n\n  },\n  computed: {\n    pageProp: function pageProp() {\n      return {\n        content: this.content,\n        start: this.start,\n        dataId: this.dataId,\n        color: this.color,\n        bgColor: this.bgColor,\n        slide: this.slide,\n        topGap: this.topGap,\n        bottomGap: this.bottomGap,\n        fontSize: this.fontSize,\n        pageType: this.pageType,\n        lineHeight: this.lineHeight,\n        restart: this.restart };\n\n    } },\n\n  methods: {\n    //初始化\n    init: function init(data) {\n      this.content = data.content;\n      this.start = data.start;\n      this.title = data.title;\n      this.restart = true;\n      this.getCatalog(this.content);\n    },\n    //跳转\n    change: function change(data) {\n      this.initLoading = true;\n      this.start = data.start;\n      this.restart = true;\n    },\n    showToast: function showToast(e) {\n      uni.showToast({\n        title: e.title,\n        icon: 'none' });\n\n    },\n    //抛出阅读页面改变事件\n    currentChange: function currentChange(e) {var _this = this;\n      var start = e.currentInfo.start;\n      var chapterIndex = this.chapters.findIndex(function (chapter, key) {\n        if (key < _this.chapters.length - 1) {\n          return start >= chapter.start && start < _this.chapters[parseInt(key) + 1].start;\n        } else {\n          return start >= chapter.start;\n        }\n      });\n      if (chapterIndex > -1) {\n        e.currentInfo.chapter = this.chapters[chapterIndex].chapter;\n        e.currentInfo.title = this.chapters[chapterIndex].title;\n      } else {\n        e.currentInfo.chapter = this.chapters[0].chapter;\n        e.currentInfo.title = this.chapters[0].title;\n      }\n      this.$emit('currentChange', e.currentInfo);\n    },\n    //重置部分变量，方便下次使用\n    resetPageProp: function resetPageProp() {\n      this.restart = false;\n      this.isNewChapter = false;\n    },\n    resetInitLoading: function resetInitLoading() {\n      this.initLoading = false;\n    },\n    //使用正则获取章节目录 并抛出事件\n    getCatalog: function getCatalog(content) {\n      var reg = new RegExp(/(第?[一二两三四五六七八九十○零百千万亿0-9１２３４５６７８９０※✩★☆]{1,6}[章回卷节折篇幕集部]?[、.-\\s][^\\n]*)[_,-]?/g);\n      var match = '';\n      var catalog = [];\n      var chapter = 0;\n      while ((match = reg.exec(content)) != null) {\n        chapter++;\n        catalog.push({\n          title: match[0],\n          start: match.index,\n          chapter: chapter });\n\n      }\n      this.chapters = catalog.length > 0 ? catalog : [{\n        chapter: 1,\n        start: 0,\n        title: this.title || '整章' }];\n\n      this.$emit('setCatalog', catalog);\n    } } };exports.default = _default2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/*!**********************************************************************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./yingbing-ReadPage.vue?vue&type=script&lang=js& */ 40);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_yingbing_ReadPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRpQixDQUFnQiwra0JBQUcsRUFBQyIsImZpbGUiOiIzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3lpbmdiaW5nLVJlYWRQYWdlLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4veWluZ2JpbmctUmVhZFBhZ2UudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/uni_modules/yingbing-ReadPage/components/yingbing-ReadPage/yingbing-ReadPage.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar pageTypes = ['cover', 'real', 'none'];var _default2 =\n{\n  props: {\n    //字体颜色\n    color: {\n      type: String,\n      default: '#333333' },\n\n    //字体大小（单位px）\n    fontSize: {\n      type: String | Number,\n      default: 15 },\n\n    //背景颜色\n    bgColor: {\n      type: String,\n      default: '#fcd281' },\n\n    //翻页方式\n    pageType: {\n      type: String,\n      default: 'scroll' },\n\n    //行间距（单位px）\n    lineHeight: {\n      type: Number | String,\n      default: 15 },\n\n    //页面左右边距（单位px）\n    slide: {\n      type: Number | String,\n      default: 40 },\n\n    //页面上边距（单位px）\n    topGap: {\n      type: Number | String,\n      default: 10 },\n\n    //页面下边距（单位px）\n    bottomGap: {\n      type: Number | String,\n      default: 10 },\n\n    //开启预加载\n    enablePreload: {\n      type: Boolean,\n      default: false },\n\n    //是否开启整书模式\n    noChapter: {\n      type: Boolean,\n      default: false },\n\n    //开启点击事件\n    enableClick: {\n      type: Boolean,\n      default: false },\n\n    //点击事件位置设置\n    clickOption: {\n      type: Object,\n      default: function _default() {\n        return {\n          width: uni.upx2px(200),\n          height: uni.upx2px(200),\n          left: 'auto',\n          top: 'auto' };\n\n      } } },\n\n\n  data: function data() {\n    return {\n      pageInfo: {\n        dataId: -1 },\n\n      contents: [],\n      touchstartX: 0,\n      touchstartY: 0,\n      touchmoveX: 0,\n      touchmoveY: 0,\n      touchTime: 0,\n      windowWidth: 0,\n      windowHeight: 0 };\n\n  },\n  computed: {\n    prop: function prop() {\n      return {\n        slide: this.slide > 0 ? parseInt(this.slide) : 0,\n        topGap: this.topGap > 0 ? parseInt(this.topGap) : 0,\n        bottomGap: this.bottomGap > 0 ? parseInt(this.bottomGap) : 0,\n        fontSize: this.fontSize >= 12 ? parseInt(this.fontSize) : 12, //字体大小最小只能到12px，因为谷歌浏览器最小只支持12px\n        lineHeight: this.lineHeight >= 5 ? parseInt(this.lineHeight) : 5 };\n\n    } },\n\n  mounted: function mounted() {var _this = this;\n    setTimeout(function () {\n      var query = uni.createSelectorQuery().in(_this);\n      query.select('.page').boundingClientRect(function (data) {\n        _this.windowWidth = data.width;\n        _this.windowHeight = data.height;\n      }).exec();\n    }, 20);\n  },\n  methods: {\n    touchstart: function touchstart(e) {var _this2 = this;\n      if (!this.enableClick) {\n        return;\n      }\n      if (e.touches.length == 1) {\n        this.resetTouch();\n        this.touchInter = setInterval(function () {\n          _this2.touchTime += 50;\n        }, 50);\n        var touch = e.touches[0];\n        this.touchstartX = touch.pageX;\n        this.touchstartY = touch.pageY;\n      }\n    },\n    touchmove: function touchmove(e) {\n      if (!this.enableClick) {\n        return;\n      }\n      if (e.touches.length == 1) {\n        var touch = e.touches[0];\n        this.touchmoveX = touch.pageX;\n        this.touchmoveY = touch.pageY;\n      }\n    },\n    touchend: function touchend(e) {\n      if (!this.enableClick) {\n        return;\n      }\n      clearInterval(this.touchInter);\n      if (this.touchTime > 200) {\n        return;\n      }\n      if (Math.abs(this.touchmoveX - this.touchmoveX) > 50 || Math.abs(this.touchmoveY - this.touchmoveY) > 50) {\n        return;\n      }\n      var left = 0;\n      var top = 0;\n      if (this.clickOption.left == 'auto') {\n        left = this.windowWidth / 2 - this.clickOption.width / 2;\n      } else if (typeof this.clickOption.left == 'number') {\n        left = this.clickOption.left;\n      } else {\n        return;\n      }\n      if (this.clickOption.top == 'auto') {\n        top = this.windowHeight / 2 - this.clickOption.height / 2;\n      } else if (typeof this.clickOption.top == 'number') {\n        top = this.clickOption.top;\n      } else {\n        return;\n      }\n      var right = left + this.clickOption.width;\n      var bottom = top + this.clickOption.height;\n      if (this.touchstartX >= left && this.touchstartX <= right && this.touchstartY >= top && this.touchstartY <= bottom) {\n        this.$emit('clickTo');\n      }\n    },\n    resetTouch: function resetTouch() {\n      this.touchstartX = 0;\n      this.touchstartY = 0;\n      this.touchmoveX = 0;\n      this.touchmoveY = 0;\n      this.touchTime = 0;\n    },\n    loadmore: function loadmore(chapter, callback) {var _this3 = this;\n      this.$emit('loadmore', chapter, function (status, content) {\n        if (status == 'success') {\n          var index = _this3.contents.findIndex(function (item) {return item.chapter == content.chapter;});\n          if (index > -1) {\n            _this3.contents[index] = content;\n          } else {\n            _this3.contents.push(content);\n          }\n        }\n        callback(status, _this3.contents);\n      });\n    },\n    preload: function preload(chapters, callback) {var _this4 = this;\n      this.$emit('preload', chapters, function (status, contents) {\n        if (status == 'success') {\n          contents.forEach(function (item) {\n            var index = _this4.contents.findIndex(function (content) {return content.chapter == item.\n              chapter;});\n            if (index > -1) {\n              _this4.contents[index] = item;\n            } else {\n              _this4.contents.push(item);\n            }\n          });\n        }\n        callback(status, _this4.contents);\n      });\n    },\n    currentChange: function currentChange(e) {\n      if (e.dataId != this.pageInfo.dataId) {\n        this.$emit('currentChange', e);\n      } //抛出阅读页面改变事件\n      this.pageInfo = e;\n    },\n    currentChangeNoChater: function currentChangeNoChater(e) {\n      this.$emit('currentChange', e);\n    },\n    setCatalog: function setCatalog(e) {\n      this.$emit('setCatalog', e);\n    },\n    //初始化\n    init: function init(data) {\n      if (!this.noChapter) {\n        this.contents = data.contents;\n        var dataSync = {\n          contents: this.contents,\n          start: parseInt(data.start),\n          currentChapter: parseInt(data.currentChapter),\n          title: data.title || null };\n\n        if (this.pageType == 'scroll') {\n          this.$refs.scrollPage.init(dataSync);\n        } else {\n          this.$refs.filpPage.init(dataSync);\n        }\n      } else {\n        this.$refs.pageNoChapter.init(data);\n      }\n    },\n    //重计算\n    refresh: function refresh() {\n      if (!this.noChapter) {\n        if (pageTypes.indexOf(this.pageType) > -1) {\n          this.$refs.filpPage.resetPage({\n            start: this.pageInfo.start,\n            chapter: this.pageInfo.chapter });\n\n        } else {\n          this.$refs.scrollPage.resetPage({\n            start: this.pageInfo.start,\n            chapter: this.pageInfo.chapter });\n\n        }\n      }\n    },\n    //跳转\n    change: function change(data) {var _this5 = this;\n      if (!this.noChapter) {\n        data.contents.forEach(function (item) {\n          var index = _this5.contents.findIndex(function (content) {return content.chapter == item.chapter;});\n          if (index > -1) {\n            _this5.contents[index] = item;\n          } else {\n            _this5.contents.push(item);\n          }\n          _this5.init({\n            contents: _this5.contents,\n            start: data.start,\n            currentChapter: data.currentChapter });\n\n        });\n      } else {\n        this.$refs.pageNoChapter.change(data);\n      }\n    } },\n\n  watch: {\n    pageType: function pageType(newVal, oldVal) {var _this6 = this;\n      if (!this.noChapter) {\n        setTimeout(function () {\n          if (pageTypes.indexOf(newVal) > -1 && oldVal == 'scroll') {\n            _this6.init({\n              contents: _this6.contents,\n              start: _this6.pageInfo.start,\n              currentChapter: _this6.pageInfo.chapter });\n\n          }\n          if (pageTypes.indexOf(oldVal) > -1 && newVal == 'scroll') {\n            _this6.init({\n              contents: _this6.contents,\n              start: _this6.pageInfo.start,\n              currentChapter: _this6.pageInfo.chapter });\n\n          }\n        }, 50);\n      }\n    } } };exports.default = _default2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/*!**********************************************************************************************!*\
  !*** G:/my-project/uni-polymerize/pages/book/reader.vue?vue&type=script&lang=js&mpType=page ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./reader.vue?vue&type=script&lang=js&mpType=page */ 42);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_reader_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTRpQixDQUFnQiwra0JBQUcsRUFBQyIsImZpbGUiOiI0MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3JlYWRlci52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxiYWJlbC1sb2FkZXJcXFxcbGliXFxcXGluZGV4LmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlclxcXFxpbmRleC5qcz8/cmVmLS02LTEhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx3ZWJwYWNrLXVuaS1hcHAtbG9hZGVyXFxcXHVzaW5nLWNvbXBvbmVudHMuanMhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vcmVhZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/pages/book/reader.vue?vue&type=script&lang=js&mpType=page ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 43));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _app = _interopRequireDefault(__webpack_require__(/*! @/common/mixin/app.js */ 46));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);}_next(undefined);});};}var _default =\n{\n  mixins: [_app.default],\n  data: function data() {\n    return {\n      //文本内容\n      bookContent: '',\n      barHeight: 0,\n      chapters: [],\n      currentChapter: 0,\n      currentPage: 1,\n      currentContent: [],\n      totalPage: 1,\n      pageStart: 0,\n      pageEnd: 0 };\n\n  },\n  computed: {\n    reader: function reader() {\n      return this.$store.getters['reader/getReader'];\n    },\n    fontSize: function fontSize() {\n      return this.$store.getters['reader/getFontSize'];\n    },\n    pageType: function pageType() {\n      return this.$store.getters['reader/getPageType'];\n    },\n    lineHeight: function lineHeight() {\n      return this.$store.getters['reader/getLineHeight'];\n    },\n    record: function record() {var _this = this;\n      var index = this.$store.getters['record/getRecord'].findIndex(function (record) {return record.id == _this.reader.id;});\n      return index > -1 ? this.$store.getters['record/getRecord'][index].extra.record : '';\n    },\n    progressBg: function progressBg() {\n      var bg = this.$utils.hex2rgb(this.skinColor.color_black);\n      bg = bg.match(/rgb\\((\\S*)\\)/)[1];\n      bg = \"rgba(\".concat(bg, \",0.5)\");\n      return bg;\n    } },\n\n  beforeCreate: function beforeCreate() {var _this2 = this;\n    //监听页面跳转\n    uni.$on('change-page', function (data) {\n      if (_this2.reader.source == 'local') {\n        _this2.$refs.page.change({\n          start: data.percent ? data.percent / 100 * _this2.bookContent.length : data.start });\n\n      } else {\n        uni.showLoading({\n          title: '加载中',\n          mask: true });\n\n        _this2.getOnlineContent(data.chapter).then(function (res) {\n          uni.hideLoading();\n          if (res.code == _this2.$config.ERR_OK) {\n            _this2.$refs.page.change({\n              contents: res.data.contents,\n              currentChapter: data.chapter,\n              start: data.start ? data.start : 0 });\n\n          } else {\n            uni.showToast({\n              title: '加载失败',\n              icon: 'none' });\n\n          }\n        });\n      }\n    });\n    //监听页面编辑\n    uni.$on('edit-page', function (data) {\n      if (_this2.reader.source == 'local') {\n        _this2.openEditNvue();\n      }\n    });\n    //监听页面添加书签\n    uni.$on('inc-mark', function (data) {\n      _this2.addBookmark();\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    uni.$off('change-page');\n    uni.$off('edit-page');\n    uni.$off('inc-mark');\n  },\n  onLoad: function onLoad() {\n    if (!this.reader) {\n      this.app.$Router.back();\n      return;\n    }\n    this.barHeight = uni.getSystemInfoSync().statusBarHeight + 4;\n    this.currentChapter = this.$Route.query.currentChapter;\n  },\n  onReady: function onReady() {var _this3 = this;\n    setTimeout(function () {\n      if (_this3.reader.source == 'local') {\n        _this3.getLocalContent();\n      } else {\n        var chapters = _this3.reader.chapters.filter(function (item) {return _this3.currentChapter == item.chapter || _this3.currentChapter + 1 == item.chapter || _this3.currentChapter - 1 == item.chapter;});\n        _this3.getOnlineContent(chapters).then(function (res) {\n          if (res.code == _this3.$config.ERR_OK) {\n            _this3.$refs.page.init({\n              contents: res.data.contents,\n              currentChapter: _this3.currentChapter,\n              start: _this3.record ? _this3.currentChapter == _this3.record.chapter ? parseInt(_this3.record.start) : 0 : 0 });\n\n          } else {\n            uni.showToast({\n              title: '加载失败',\n              icon: 'none' });\n\n          }\n        });\n      }\n    }, 100);\n  },\n  methods: {\n    //获取本地小说内容\n    getLocalContent: function getLocalContent() {\n      var Reader = uni.requireNativePlugin('YingBingNativePlugin-Reader');\n      this.bookContent = Reader.readAllLines(this.reader.book.src);\n      //初始化页面\n      this.$refs.page.init({\n        content: this.bookContent,\n        start: this.record.start || 0,\n        title: this.reader.book.title });\n\n      Reader = null;\n    },\n    //获取在线小说内容\n    getOnlineContent: function getOnlineContent(chapters) {var _this4 = this;return _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee() {var https;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n                https = [];\n                chapters.forEach(function (item) {\n                  if (item.payread) {\n                    https.push(\n                    Promise.resolve({\n                      code: _this4.app.$config.ERR_OK,\n                      data: {\n                        content: {\n                          chapter: item.chapter,\n                          content: item.title + '\\r\\n该章节已锁，如果想看请支持正版\\r\\n\\r\\n\\r\\n该章节已锁，如果想看请支持正版\\r\\n\\r\\n\\r\\n该章节已锁，如果想看请支持正版',\n                          title: item.title,\n                          isStart: item.isStart,\n                          isEnd: item.isEnd },\n\n                        source: item.source } }));\n\n\n\n                  } else {\n                    https.push(_this4.$api.book.getContent(item));\n                  }\n                });_context.next = 4;return (\n                  Promise.all(https).then(function (ress) {\n                    var contents = [];\n                    ress.forEach(function (res) {\n                      if (res.code == _this4.app.$config.ERR_OK) {\n                        contents.push(res.data.content);\n                      }\n                    });\n                    return {\n                      code: contents.length > 0 ? _this4.app.$config.ERR_OK : _this4.app.$config.ERR_FALSE,\n                      data: {\n                        contents: contents } };\n\n\n                  }));case 4:return _context.abrupt(\"return\", _context.sent);case 5:case \"end\":return _context.stop();}}}, _callee);}))();\n    },\n    openSettingNvue: function openSettingNvue() {\n      this.app.$Router.push({\n        path: '/pages/book/setting' });\n\n    },\n    openEditNvue: function openEditNvue() {var _this5 = this;\n      uni.navigateTo({\n        url: \"/modules/edit?content=\".concat(encodeURIComponent(this.bookContent.substring(this.pageStart, this.pageEnd)), \"&start=\").concat(this.pageStart, \"&end=\").concat(this.pageEnd),\n        complete: function complete(res) {\n          setTimeout(function () {\n            uni.$once('edit', function (data) {\n              if (data.confirm) {\n                var content = _this5.bookContent.substr(0, data.start) + data.content + _this5.bookContent.substr(parseInt(data.end));\n                _this5.bookContent = content;\n                _this5.$refs.page.init({\n                  content: _this5.bookContent,\n                  start: _this5.record.start || 0,\n                  title: _this5.reader.book.title });\n\n                _this5.saveTxt();\n              }\n              getApp().globalData.$Router.back();\n              uni.$off('edit');\n            });\n          }, 60);\n        } });\n\n    },\n    //保存文件\n    saveTxt: function saveTxt() {\n      uni.showLoading({\n        title: '保存内容中',\n        mask: true });\n\n      var file = plus.android.newObject(\"java.io.File\", this.reader.book.src);\n      if (file != null && plus.android.invoke(file, 'exists')) {\n        plus.android.invoke(file, 'createNewFile');\n        var fileOutputStream = plus.android.newObject(\"java.io.FileOutputStream\", file);\n        var outputStreamWriter = plus.android.newObject(\"java.io.OutputStreamWriter\", fileOutputStream, \"gb2312\");\n        var bufferedWriter = plus.android.newObject(\"java.io.BufferedWriter\", outputStreamWriter);\n        plus.android.invoke(bufferedWriter, 'write', this.bookContent);\n        plus.android.invoke(bufferedWriter, 'close');\n      } else {\n        uni.showToast({\n          title: '文件不存在或者不能被操作',\n          icon: 'none' });\n\n      }\n      uni.hideLoading();\n    },\n    //添加书签\n    addBookmark: function addBookmark() {var _this6 = this;\n      var index = this.$store.getters['record/getRecord'].findIndex(function (record) {return _this6.reader.id == record.id;});\n      var book = index > -1 ? this.$store.getters['record/getRecord'][index] : _objectSpread({}, this.reader.book);\n      var mark = book.extra.mark || [];\n      if (this.reader.source == 'local') {\n        if (mark.findIndex(function (item) {return item.start == _this6.pageStart;}) > -1) {\n          uni.showToast({\n            title: '该书签已成功添加',\n            icon: 'none' });\n\n        } else {\n          mark.push({\n            title: this.currentContent.slice(0, 30),\n            start: this.pageStart,\n            chapter: this.record.chapter });\n\n          book.extra.mark = mark;\n          this.$store.dispatch('record/addRecord', book);\n          uni.showToast({\n            title: '添加书签成功',\n            icon: 'none' });\n\n        }\n      } else {\n        if (mark.findIndex(function (item) {return item.start == _this6.pageStart && item.chapter == _this6.record.chapter;}) > -1) {\n          uni.showToast({\n            title: '该书签已成功添加',\n            icon: 'none' });\n\n        } else {\n          mark.push({\n            title: this.currentContent.toString().replace(/,/g, ''),\n            start: this.pageStart,\n            chapter: this.record.chapter });\n\n          book.extra.mark = mark;\n          this.$store.dispatch('record/addRecord', book);\n          uni.showToast({\n            title: '添加书签成功',\n            icon: 'none' });\n\n        }\n      }\n      book = null;\n      index = null;\n      mark = null;\n    },\n    savePageRecord: function savePageRecord(e) {var _this7 = this;\n      if (this.reader.source != 'local') {\n        this.currentPage = e.currentPage;\n        this.totalPage = e.totalPage;\n      }\n      this.pageStart = e.start;\n      this.pageEnd = e.end;\n      this.currentContent = e.text;\n      var index = this.$store.getters['record/getRecord'].findIndex(function (record) {return _this7.reader.id == record.id;});\n      var book = index > -1 ? this.$store.getters['record/getRecord'][index] : _objectSpread({}, this.reader.book);\n      var chapterIndex = this.reader.chapters.findIndex(function (item) {return item.chapter == e.chapter;});\n      book.extra.record = {\n        chapter: e.chapter,\n        start: e.start,\n        title: e.title,\n        progress: this.reader.source == 'local' ? parseFloat((e.start / this.bookContent.length * 100).toFixed(2)) : parseFloat(((chapterIndex + 1) / this.reader.chapters.length * 100).toFixed(2)) };\n\n      this.$store.dispatch('record/addRecord', book);\n      book = null;\n      index = null;\n    },\n    setCatalog: function setCatalog(e) {\n      var reader = _objectSpread({}, this.reader);\n      reader.chapters = e;\n      this.$store.dispatch('reader/init', reader);\n      reader = null;\n    },\n    preloadContent: function preloadContent(chapters, callback) {var _this8 = this;\n      var data = this.reader.chapters.filter(function (item) {return chapters.indexOf(item.chapter) > -1;});\n      this.getOnlineContent(data).then(function (res) {\n        if (res.code == _this8.$config.ERR_OK) {\n          callback('success', res.data.contents);\n        } else {\n          callback('fail');\n        }\n      }).catch(function () {\n        callback('fail');\n      });\n    },\n    loadmoreContent: function loadmoreContent(chapter, callback) {var _this9 = this;\n      var data = this.reader.chapters.filter(function (item) {return item.chapter == chapter;});\n      this.getOnlineContent(data).then(function (res) {\n        if (res.code == _this9.$config.ERR_OK) {\n          callback('success', res.data.contents[0]);\n        } else {\n          callback('fail');\n        }\n      }).catch(function () {\n        callback('fail');\n      });\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 44);

/***/ }),
/* 44 */
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 45);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 45 */
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),
/* 46 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/common/mixin/app.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _vuex = __webpack_require__(/*! vuex */ 47);\nvar _reader = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/reader.js */ 49));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\nvar appMixin = {\n  computed: _objectSpread(_objectSpread({},\n  (0, _vuex.mapGetters)({\n    getAdult: 'app/getAdult',\n    getAdultPwd: 'app/getAdultPwd',\n    skinMode: 'app/skinMode',\n    skinColor: 'app/skinColor' })), {}, {\n\n    app: function app() {\n      return getApp().globalData;\n    } }),\n\n  methods: _objectSpread(_objectSpread(_objectSpread({},\n  (0, _vuex.mapMutations)({\n    setAdult: 'app/setAdult',\n    setAdultPwd: 'app/setAdultPwd' })),\n\n  (0, _vuex.mapActions)({\n    changeSkin: 'app/changeSkinSync' })), {}, {\n\n    //播放歌曲\n    playSong: function playSong(song) {\n      if (song.payplay) {\n        this.app.$nativeUI.alert({\n          title: '友情提示',\n          content: '这首歌曲需要VIP用户或付费才能播放',\n          dark: this.skinMode == 'night' });\n\n      } else {\n        var currentId = this.$store.getters['audio/getCurrentSong'] ? this.$store.getters['audio/getCurrentSong'].id : '';\n        if (currentId != song.id) {\n          this.$store.dispatch('audio/addSong', [song]);\n          this.$store.dispatch('audio/create', song.id);\n        }\n        uni.$emit('goPlayer');\n      }\n    },\n    //播放专辑\n    playAlbum: function playAlbum(album) {\n      var songs = album.filter(function (song) {return !song.payplay;});\n      if (songs.length > 0) {\n        this.$store.dispatch('audio/clearSong');\n        this.$store.dispatch('audio/addSong', songs);\n        this.$store.dispatch('audio/create', songs[0].id);\n        uni.$emit('goPlayer');\n      } else {\n        this.app.$nativeUI.alert({\n          title: '友情提示',\n          content: '这张专辑需要VIP用户或付费才能播放',\n          dark: this.skinMode == 'night' });\n\n      }\n    },\n    //稍后播放\n    later: function later(song) {\n      if (song.payplay) {\n        this.app.$nativeUI.alert({\n          title: '友情提示',\n          content: '这首歌曲需要VIP用户或付费才能播放',\n          dark: this.skinMode == 'night' });\n\n        return false;\n      } else {\n        this.$store.dispatch('audio/addSong', [song]);\n        return true;\n      }\n    },\n    musicPanel: function musicPanel(song) {var _this = this;var search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var currentSong = this.$store.getters['audio/getCurrentSong'];\n      var isCollection = this.isCollection(song.id);\n      this.app.$nativeUI.panel({\n        title: song.title,\n        subTitle: song.singer,\n        dark: this.skinMode == 'night',\n        menus: [{\n          id: 'play',\n          title: '播放歌曲',\n          icon: \"\\uEA88\",\n          color: this.skinColor.color_orange,\n          size: '30',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' },\n        {\n          id: 'later',\n          title: '稍后播放',\n          icon: \"\\uE6C0\",\n          color: this.skinColor.color_blue,\n          size: '35',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' },\n        {\n          id: 'collection',\n          title: isCollection ? '取消收藏' : '收藏歌曲',\n          icon: \"\\uE61C\",\n          color: isCollection ? this.skinColor.color_red : this.skinColor.color_2,\n          size: '30',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' },\n        {\n          id: 'album',\n          title: '加入歌单',\n          icon: \"\\uE671\",\n          color: this.skinColor.color_red_2,\n          size: '26',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' },\n        {\n          id: 'copy',\n          title: '复制歌名',\n          icon: \"\\uE6CB\",\n          color: this.skinColor.color_yellow,\n          size: '30',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' },\n        {\n          id: 'search',\n          title: '搜索相关',\n          icon: \"\\uE644\",\n          color: this.skinColor.color_green,\n          size: '26',\n          family: 'iconfont',\n          fontSrc: '/static/iconfont.ttf' }],\n\n        success: function success(res) {\n          if (res.confirm) {\n            switch (res.data.id) {\n              case 'play':\n                if (song.id == (currentSong === null || currentSong === void 0 ? void 0 : currentSong.id)) {\n                  uni.$emit('goPlayer');\n                } else {\n                  _this.playSong(song);\n                }\n                break;\n              case 'later':\n                if (_this.later(song)) {\n                  uni.showToast({\n                    title: '已将歌曲加入播放列表',\n                    icon: 'none' });\n\n                }\n                break;\n              case 'collection':\n                _this.toCollection(song);\n                uni.showToast({\n                  title: isCollection ? '已取消收藏' : '已加入收藏',\n                  icon: 'none' });\n\n                break;\n              case 'album':\n                var list = _this.$store.getters['custom/get'].filter(function (item) {return item.type == 'album';});\n                if (list.length == 0) {\n                  _this.app.$nativeUI.alert({\n                    title: '友情提示',\n                    content: '未创建自定义歌单',\n                    dark: _this.skinMode == 'night' });\n\n                } else {\n                  _this.app.$modules.showActionSheet({\n                    title: '选择歌单',\n                    itemList: list.map(function (item) {return item.title;}),\n                    success: function success(res) {\n                      if (res.confirm) {\n                        var index = list[res.data.index].song.findIndex(function (item) {return item.id == song.id;});\n                        if (index > -1) {\n                          _this.app.$nativeUI.alert({\n                            title: '友情提示',\n                            content: '这首歌曲已经加入该歌单中',\n                            dark: _this.skinMode == 'night' });\n\n                        } else {\n                          list[res.data.index].song.push(song);\n                          _this.$store.dispatch('custom/add', list[res.data.index]);\n                          uni.showToast({\n                            title: '加入歌单成功',\n                            icon: 'none' });\n\n                        }\n                      }\n                    } });\n\n                }\n                break;\n              case 'copy':\n                uni.setClipboardData({\n                  data: song.title,\n                  success: function success() {\n                    uni.showToast({\n                      title: '已复制歌曲名称',\n                      icon: 'none' });\n\n                  },\n                  fail: function fail() {\n                    uni.showToast({\n                      title: '复制失败',\n                      icon: 'none' });\n\n                  } });\n\n                break;\n              case 'search':\n                if (search) {\n                  _this.keyword = song.title;\n                } else {\n                  _this.app.$Router.push({\n                    path: '/pages/music/search',\n                    query: {\n                      keyword: song.title } });\n\n\n                }\n                break;\n              default:\n                break;}\n\n          }\n        } });\n\n    },\n    readBook: function readBook(params) {\n      if (params.type == 'story') {\n        if (params.source == 'local') {\n          this.$store.dispatch('reader/init', new _reader.default({\n            book: params }));\n\n          this.app.$Router.push({\n            path: '/pages/book/reader' });\n\n        } else {\n          this.app.$Router.push({\n            path: '/pages/book/detail',\n            query: {\n              params: encodeURIComponent(JSON.stringify(params)) } });\n\n\n        }\n      } else {\n        if (params.source == 'local') {\n          this.$store.dispatch('reader/init', new _reader.default({\n            book: params }));\n\n          this.app.$Router.push({\n            path: '/pages/comic/reader' });\n\n        } else {\n          this.app.$Router.push({\n            path: '/pages/comic/detail',\n            query: {\n              params: encodeURIComponent(JSON.stringify(params)) } });\n\n\n        }\n      }\n    },\n    toCollection: function toCollection(params) {\n      if (!params) {\n        return;\n      }\n      if (this.isCollection(params.id)) {\n        this.$store.dispatch('collection/removeCollection', params.id);\n      } else {\n        this.$store.dispatch('collection/addCollection', params);\n      }\n    },\n    removeRecord: function removeRecord(params) {\n      this.$store.dispatch('record/removeRecord', params.id);\n    },\n    clearRecord: function clearRecord(type) {var _this2 = this;\n      this.app.$nativeUI.confirm({\n        title: '操作提示',\n        content: '确认要清空所有记录吗？',\n        success: function success(res) {\n          if (res.confirm) {\n            _this2.$store.dispatch('record/clearRecord', type);\n          }\n        } });\n\n    },\n    isCollection: function isCollection(id) {\n      return id ? this.$store.getters['collection/getCollection'].findIndex(function (collection) {return collection.id == id;}) > -1 : false;\n    },\n    isRecord: function isRecord(id) {\n      return this.$store.getters['record/getRecord'].findIndex(function (record) {return record.id == id;}) > -1;\n    },\n    isCache: function isCache(id) {\n      return id ? this.$store.getters['cache/getCache'].findIndex(function (cache) {return cache.parentId == id;}) > -1 : false;\n    },\n    filterSource: function filterSource(source) {\n      var index = this.$store.getters['source/get'].findIndex(function (item) {return item.id == source;});\n      if (index == -1) {\n        return '本地';\n      } else {\n        return this.$store.getters['source/get'][index].title;\n      }\n    },\n    download: function download(params) {\n      if (params && params.src) {\n        var tasks = this.$store.getters['downer/getTask'];\n        var index = tasks.findIndex(function (task) {return task.parentId == params.id;});\n        if (index == -1) {\n          this.$store.dispatch('downer/createTask', params);\n        } else {\n          this.app.$nativeUI.alert({\n            content: '正在下载，请等待下载完成',\n            dark: this.skinMode == 'night' });\n\n        }\n      } else {\n        this.app.$nativeUI.alert({\n          content: '创建下载任务失败',\n          dark: this.skinMode == 'night' });\n\n      }\n    },\n    showComment: function showComment(params) {\n      if (params) {\n        this.app.$Router.push({\n          path: '/modules/comment',\n          query: {\n            params: encodeURIComponent(JSON.stringify(params)) } });\n\n\n      } else {\n        this.app.$nativeUI.alert({\n          content: '查询评论失败',\n          dark: this.skinMode == 'night' });\n\n      }\n    },\n    changeSkin: function changeSkin() {\n      this.$store.dispatch('app/changeSkin', this.skinMode == 'default' ? 'night' : 'default');\n    } }) };var _default =\n\n\n\nappMixin;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: default, Store, createNamespacedHelpers, install, mapActions, mapGetters, mapMutations, mapState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Store", function() { return Store; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNamespacedHelpers", function() { return createNamespacedHelpers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "install", function() { return install; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapActions", function() { return mapActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapGetters", function() { return mapGetters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapMutations", function() { return mapMutations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mapState", function() { return mapState; });
/*!
 * vuex v3.4.0
 * (c) 2020 Evan You
 * @license MIT
 */
function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  if (!parent.getChild(key).runtime) { return }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  return parent.hasChild(key)
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype.hotUpdate = function hotUpdate (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept anthor params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

var index = {
  Store: Store,
  install: install,
  version: '3.4.0',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers
};

/* harmony default export */ __webpack_exports__["default"] = (index);


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 48)))

/***/ }),
/* 48 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 49 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/reader.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //阅读书籍\nvar\nReader =\nfunction Reader(_ref) {var book = _ref.book,chapters = _ref.chapters,extra = _ref.extra;_classCallCheck(this, Reader);\n  this.id = book.id;\n  this.book = book;\n  this.chapters = chapters || [];\n  this.extra = extra || {};\n  this.source = book.source;\n};exports.default = Reader;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL3JlYWRlci5qcyJdLCJuYW1lcyI6WyJSZWFkZXIiLCJib29rIiwiY2hhcHRlcnMiLCJleHRyYSIsImlkIiwic291cmNlIl0sIm1hcHBpbmdzIjoiNk9BQUE7O0FBRXFCQSxNO0FBQ3BCLHNCQUFxQyxLQUF4QkMsSUFBd0IsUUFBeEJBLElBQXdCLENBQWxCQyxRQUFrQixRQUFsQkEsUUFBa0IsQ0FBUkMsS0FBUSxRQUFSQSxLQUFRO0FBQ3BDLE9BQUtDLEVBQUwsR0FBVUgsSUFBSSxDQUFDRyxFQUFmO0FBQ0EsT0FBS0gsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsT0FBS0MsUUFBTCxHQUFnQkEsUUFBUSxJQUFJLEVBQTVCO0FBQ0EsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEI7QUFDQSxPQUFLRSxNQUFMLEdBQWNKLElBQUksQ0FBQ0ksTUFBbkI7QUFDQSxDIiwiZmlsZSI6IjQ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/pmIXor7vkuabnsY1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlYWRlciB7XHJcblx0Y29uc3RydWN0b3Ioe2Jvb2ssIGNoYXB0ZXJzLCBleHRyYX0pIHtcclxuXHRcdHRoaXMuaWQgPSBib29rLmlkXHJcblx0XHR0aGlzLmJvb2sgPSBib29rXHJcblx0XHR0aGlzLmNoYXB0ZXJzID0gY2hhcHRlcnMgfHwgW11cclxuXHRcdHRoaXMuZXh0cmEgPSBleHRyYSB8fCB7fVxyXG5cdFx0dGhpcy5zb3VyY2UgPSBib29rLnNvdXJjZVxyXG5cdH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/*!**********************!*\
  !*** external "Vue" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Vue;

/***/ }),
/* 51 */
/*!********************************************!*\
  !*** G:/my-project/uni-polymerize/App.vue ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ 52);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 10);\nvar render, staticRenderFns, recyclableRender, components\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUN1RDtBQUNMOzs7QUFHbEQ7QUFDcUs7QUFDckssZ0JBQWdCLCtLQUFVO0FBQzFCLEVBQUUseUVBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNlLGdGIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcQGRjbG91ZGlvXFxcXHZ1ZS1jbGktcGx1Z2luLXVuaVxcXFxwYWNrYWdlc1xcXFx2dWUtbG9hZGVyXFxcXGxpYlxcXFxydW50aW1lXFxcXGNvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJBcHAudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/*!*********************************************************************!*\
  !*** G:/my-project/uni-polymerize/App.vue?vue&type=script&lang=js& ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ 53);\n/* harmony import */ var _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_F_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_F_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQThoQixDQUFnQixpa0JBQUcsRUFBQyIsImZpbGUiOiI1Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hRjpcXFxcSEJ1aWxkZXJYXFxcXHBsdWdpbnNcXFxcdW5pYXBwLWNsaVxcXFxub2RlX21vZHVsZXNcXFxcYmFiZWwtbG9hZGVyXFxcXGxpYlxcXFxpbmRleC5qcyFGOlxcXFxIQnVpbGRlclhcXFxccGx1Z2luc1xcXFx1bmlhcHAtY2xpXFxcXG5vZGVfbW9kdWxlc1xcXFxAZGNsb3VkaW9cXFxcdnVlLWNsaS1wbHVnaW4tdW5pXFxcXHBhY2thZ2VzXFxcXHdlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXJcXFxcaW5kZXguanM/P3JlZi0tNi0xIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcd2VicGFjay11bmktYXBwLWxvYWRlclxcXFx1c2luZy1jb21wb25lbnRzLmpzIUY6XFxcXEhCdWlsZGVyWFxcXFxwbHVnaW5zXFxcXHVuaWFwcC1jbGlcXFxcbm9kZV9tb2R1bGVzXFxcXEBkY2xvdWRpb1xcXFx2dWUtY2xpLXBsdWdpbi11bmlcXFxccGFja2FnZXNcXFxcdnVlLWxvYWRlclxcXFxsaWJcXFxcaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!G:/my-project/uni-polymerize/App.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\nvar _router = __webpack_require__(/*! @/plugins/router/router.js */ 55);\n\n\nvar _router2 = _interopRequireDefault(__webpack_require__(/*! @/plugins/router */ 56));\nvar _request = _interopRequireDefault(__webpack_require__(/*! @/plugins/request */ 57));\nvar _xhr = _interopRequireDefault(__webpack_require__(/*! @/plugins/xhr */ 60));\nvar _modules = _interopRequireDefault(__webpack_require__(/*! @/plugins/modules */ 62));\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _business = _interopRequireDefault(__webpack_require__(/*! @/assets/js/business.js */ 64));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/assets/api/index.js */ 111));\nvar _index2 = _interopRequireDefault(__webpack_require__(/*! @/js_sdk/yb-native-ui/index.js */ 83));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _default =\n{\n  globalData: {\n    $Router: _router2.default,\n    $Route: new _router.Route(),\n    $http: _request.default,\n    $xhr: _xhr.default,\n    $modules: _modules.default,\n    $utils: _util.default,\n    $config: _config.default,\n    $business: _business.default,\n    $api: _index.default,\n    $nativeUI: _index2.default },\n\n  onLaunch: function onLaunch() {\n    __f__(\"log\", 'App Launch', \" at App.vue:28\");\n    // plus.screen.lockOrientation('portrait-primary');\n    //重写toast方法如果内容为 ‘再次返回退出应用’ 就隐藏应用，其他正常toast\n    var toast = plus.nativeUI.toast;\n    plus.nativeUI.toast = function (message, styles) {\n      if (message == '再按一次退出应用') {\n        _index2.default.confirm({\n          content: '真的要退出app吗？',\n          confirmText: '隐藏至后台',\n          cancelText: '直接退出',\n          success: function success(res) {\n            if (res.confirm) {\n              plus.android.runtimeMainActivity().moveTaskToBack(false);\n            }\n            if (res.cancel) {\n              plus.runtime.quit();\n            }\n          } });\n\n      } else {\n        toast(message, styles);\n      }\n    };\n  },\n  onShow: function onShow() {\n    __f__(\"log\", 'App Show', \" at App.vue:53\");\n  },\n  onHide: function onHide() {\n    __f__(\"log\", 'App Hide', \" at App.vue:56\");\n    uni.$emit('app-hide');\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 54)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vQXBwLnZ1ZSJdLCJuYW1lcyI6WyJnbG9iYWxEYXRhIiwiJFJvdXRlciIsIlJvdXRlciIsIiRSb3V0ZSIsIlJvdXRlIiwiJGh0dHAiLCJIdHRwIiwiJHhociIsIlhociIsIiRtb2R1bGVzIiwiTW9kdWxlcyIsIiR1dGlscyIsIlV0aWxzIiwiJGNvbmZpZyIsIkNvbmZpZyIsIiRidXNpbmVzcyIsIkJ1c2luZXNzIiwiJGFwaSIsIkFwaSIsIiRuYXRpdmVVSSIsIk5hdGl2ZVVJIiwib25MYXVuY2giLCJ0b2FzdCIsInBsdXMiLCJuYXRpdmVVSSIsIm1lc3NhZ2UiLCJzdHlsZXMiLCJjb25maXJtIiwiY29udGVudCIsImNvbmZpcm1UZXh0IiwiY2FuY2VsVGV4dCIsInN1Y2Nlc3MiLCJyZXMiLCJhbmRyb2lkIiwicnVudGltZU1haW5BY3Rpdml0eSIsIm1vdmVUYXNrVG9CYWNrIiwiY2FuY2VsIiwicnVudGltZSIsInF1aXQiLCJvblNob3ciLCJvbkhpZGUiLCJ1bmkiLCIkZW1pdCJdLCJtYXBwaW5ncyI6IjtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0c7QUFDZTtBQUNkQSxZQUFVLEVBQUU7QUFDWEMsV0FBTyxFQUFFQyxnQkFERTtBQUVYQyxVQUFNLEVBQUUsSUFBSUMsYUFBSixFQUZHO0FBR1hDLFNBQUssRUFBRUMsZ0JBSEk7QUFJWEMsUUFBSSxFQUFFQyxZQUpLO0FBS1hDLFlBQVEsRUFBRUMsZ0JBTEM7QUFNWEMsVUFBTSxFQUFFQyxhQU5HO0FBT1hDLFdBQU8sRUFBRUMsZUFQRTtBQVFYQyxhQUFTLEVBQUVDLGlCQVJBO0FBU1hDLFFBQUksRUFBRUMsY0FUSztBQVVYQyxhQUFTLEVBQUVDLGVBVkEsRUFERTs7QUFhZEMsVUFBUSxFQUFFLG9CQUFXO0FBQ3BCLGlCQUFZLFlBQVo7QUFDQTtBQUNBO0FBQ0EsUUFBTUMsS0FBSyxHQUFHQyxJQUFJLENBQUNDLFFBQUwsQ0FBY0YsS0FBNUI7QUFDQUMsUUFBSSxDQUFDQyxRQUFMLENBQWNGLEtBQWQsR0FBdUIsVUFBU0csT0FBVCxFQUFrQkMsTUFBbEIsRUFBMEI7QUFDaEQsVUFBSUQsT0FBTyxJQUFJLFVBQWYsRUFBMkI7QUFDMUJMLHdCQUFTTyxPQUFULENBQWlCO0FBQ2hCQyxpQkFBTyxFQUFFLFlBRE87QUFFaEJDLHFCQUFXLEVBQUUsT0FGRztBQUdoQkMsb0JBQVUsRUFBRSxNQUhJO0FBSWhCQyxpQkFBTyxFQUFFLGlCQUFDQyxHQUFELEVBQVM7QUFDakIsZ0JBQUtBLEdBQUcsQ0FBQ0wsT0FBVCxFQUFtQjtBQUNsQkosa0JBQUksQ0FBQ1UsT0FBTCxDQUFhQyxtQkFBYixHQUFtQ0MsY0FBbkMsQ0FBa0QsS0FBbEQ7QUFDQTtBQUNELGdCQUFLSCxHQUFHLENBQUNJLE1BQVQsRUFBa0I7QUFDakJiLGtCQUFJLENBQUNjLE9BQUwsQ0FBYUMsSUFBYjtBQUNBO0FBQ0QsV0FYZSxFQUFqQjs7QUFhQSxPQWRELE1BY087QUFDTmhCLGFBQUssQ0FBQ0csT0FBRCxFQUFVQyxNQUFWLENBQUw7QUFDQTtBQUNELEtBbEJEO0FBbUJBLEdBckNhO0FBc0NkYSxRQUFNLEVBQUUsa0JBQVc7QUFDbEIsaUJBQVksVUFBWjtBQUNBLEdBeENhO0FBeUNkQyxRQUFNLEVBQUUsa0JBQVc7QUFDbEIsaUJBQVksVUFBWjtBQUNBQyxPQUFHLENBQUNDLEtBQUosQ0FBVSxVQUFWO0FBQ0EsR0E1Q2EsRSIsImZpbGUiOiI1My5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHtcblx0Um91dGVcbn0gZnJvbSAnQC9wbHVnaW5zL3JvdXRlci9yb3V0ZXIuanMnO1xuaW1wb3J0IFJvdXRlciBmcm9tICdAL3BsdWdpbnMvcm91dGVyJztcbmltcG9ydCBIdHRwIGZyb20gJ0AvcGx1Z2lucy9yZXF1ZXN0J1xuaW1wb3J0IFhociBmcm9tICdAL3BsdWdpbnMveGhyJ1xuaW1wb3J0IE1vZHVsZXMgZnJvbSAnQC9wbHVnaW5zL21vZHVsZXMnXG5pbXBvcnQgVXRpbHMgZnJvbSAnQC9hc3NldHMvanMvdXRpbC5qcydcbmltcG9ydCBDb25maWcgZnJvbSAnQC9hc3NldHMvanMvY29uZmlnLmpzJ1xuaW1wb3J0IEJ1c2luZXNzIGZyb20gJ0AvYXNzZXRzL2pzL2J1c2luZXNzLmpzJ1xuaW1wb3J0IEFwaSBmcm9tICdAL2Fzc2V0cy9hcGkvaW5kZXguanMnXG5pbXBvcnQgTmF0aXZlVUkgZnJvbSAnQC9qc19zZGsveWItbmF0aXZlLXVpL2luZGV4LmpzJ1xuZXhwb3J0IGRlZmF1bHQge1xuXHRnbG9iYWxEYXRhOiB7XG5cdFx0JFJvdXRlcjogUm91dGVyLFxuXHRcdCRSb3V0ZTogbmV3IFJvdXRlKCksXG5cdFx0JGh0dHA6IEh0dHAsXG5cdFx0JHhocjogWGhyLFxuXHRcdCRtb2R1bGVzOiBNb2R1bGVzLFxuXHRcdCR1dGlsczogVXRpbHMsXG5cdFx0JGNvbmZpZzogQ29uZmlnLFxuXHRcdCRidXNpbmVzczogQnVzaW5lc3MsXG5cdFx0JGFwaTogQXBpLFxuXHRcdCRuYXRpdmVVSTogTmF0aXZlVUlcblx0fSxcblx0b25MYXVuY2g6IGZ1bmN0aW9uKCkge1xuXHRcdGNvbnNvbGUubG9nKCdBcHAgTGF1bmNoJylcblx0XHQvLyBwbHVzLnNjcmVlbi5sb2NrT3JpZW50YXRpb24oJ3BvcnRyYWl0LXByaW1hcnknKTtcblx0XHQvL+mHjeWGmXRvYXN05pa55rOV5aaC5p6c5YaF5a655Li6IOKAmOWGjeasoei/lOWbnumAgOWHuuW6lOeUqOKAmSDlsLHpmpDol4/lupTnlKjvvIzlhbbku5bmraPluLh0b2FzdFxuXHRcdGNvbnN0IHRvYXN0ID0gcGx1cy5uYXRpdmVVSS50b2FzdDtcblx0XHRwbHVzLm5hdGl2ZVVJLnRvYXN0ID0gKGZ1bmN0aW9uKG1lc3NhZ2UsIHN0eWxlcykge1xuXHRcdFx0aWYgKG1lc3NhZ2UgPT0gJ+WGjeaMieS4gOasoemAgOWHuuW6lOeUqCcpIHtcblx0XHRcdFx0TmF0aXZlVUkuY29uZmlybSh7XG5cdFx0XHRcdFx0Y29udGVudDogJ+ecn+eahOimgemAgOWHumFwcOWQl++8nycsXG5cdFx0XHRcdFx0Y29uZmlybVRleHQ6ICfpmpDol4/oh7PlkI7lj7AnLFxuXHRcdFx0XHRcdGNhbmNlbFRleHQ6ICfnm7TmjqXpgIDlh7onLFxuXHRcdFx0XHRcdHN1Y2Nlc3M6IChyZXMpID0+IHtcblx0XHRcdFx0XHRcdGlmICggcmVzLmNvbmZpcm0gKSB7XG5cdFx0XHRcdFx0XHRcdHBsdXMuYW5kcm9pZC5ydW50aW1lTWFpbkFjdGl2aXR5KCkubW92ZVRhc2tUb0JhY2soZmFsc2UpO1xuXHRcdFx0XHRcdFx0fSBcblx0XHRcdFx0XHRcdGlmICggcmVzLmNhbmNlbCApIHtcblx0XHRcdFx0XHRcdFx0cGx1cy5ydW50aW1lLnF1aXQoKVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRvYXN0KG1lc3NhZ2UsIHN0eWxlcylcblx0XHRcdH1cblx0XHR9KTtcblx0fSxcblx0b25TaG93OiBmdW5jdGlvbigpIHtcblx0XHRjb25zb2xlLmxvZygnQXBwIFNob3cnKVxuXHR9LFxuXHRvbkhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdGNvbnNvbGUubG9nKCdBcHAgSGlkZScpXG5cdFx0dW5pLiRlbWl0KCdhcHAtaGlkZScpO1xuXHR9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! exports provided: log, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLog; });
function typof (v) {
  var s = Object.prototype.toString.call(v)
  return s.substring(8, s.length - 1)
}

function isDebugMode () {
  /* eslint-disable no-undef */
  return typeof __channelId__ === 'string' && __channelId__
}

function jsonStringifyReplacer (k, p) {
  switch (typof(p)) {
    case 'Function':
      return 'function() { [native code] }'
    default :
      return p
  }
}

function log (type) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key]
  }
  console[type].apply(console, args)
}

function formatLog () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key]
  }
  var type = args.shift()
  if (isDebugMode()) {
    args.push(args.pop().replace('at ', 'uni-app:///'))
    return console[type].apply(console, args)
  }

  var msgs = args.map(function (v) {
    var type = Object.prototype.toString.call(v).toLowerCase()

    if (type === '[object object]' || type === '[object array]') {
      try {
        v = '---BEGIN:JSON---' + JSON.stringify(v, jsonStringifyReplacer) + '---END:JSON---'
      } catch (e) {
        v = type
      }
    } else {
      if (v === null) {
        v = '---NULL---'
      } else if (v === undefined) {
        v = '---UNDEFINED---'
      } else {
        var vType = typof(v).toUpperCase()

        if (vType === 'NUMBER' || vType === 'BOOLEAN') {
          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---'
        } else {
          v = String(v)
        }
      }
    }

    return v
  })
  var msg = ''

  if (msgs.length > 1) {
    var lastMsg = msgs.pop()
    msg = msgs.join('---COMMA---')

    if (lastMsg.indexOf(' at ') === 0) {
      msg += lastMsg
    } else {
      msg += '---COMMA---' + lastMsg
    }
  } else {
    msg = msgs[0]
  }

  console[type](msg)
}


/***/ }),
/* 55 */
/*!*************************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/router/router.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.Route = exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} /**\r\nurl拼接\r\nparam {String} url 路由路径\r\nparam {Object} query 路由携带的参数\r\nnfunction urlJoint(path, query) {\n  if (!query) {\n    return path;\n  }\n  var str = '';\n  var num = 0;\n  for (var i in query) {\n    str = num == 0 ? \"\".concat(i, \"=\").concat(query[i]) : str + '&' + \"\".concat(i, \"=\").concat(query[i]);\n    num += 1;\n  }\n  return \"\".concat(path, \"?\").concat(str);\n}var\n\nRouter = /*#__PURE__*/function () {\n  function Router() {_classCallCheck(this, Router);\n    this.beforeHooks = [];\n    this.afterHooks = [];\n    this.errorCbs = [];\n    this.$_hackUniRoute();\n  }\n\n  /**\r\n     * 注册 钩子\r\n     * @param {Function[]} list 钩子列表\r\n     * @param {Function} callback 回调函数\r\n     * @returns {Function} 用于注销当前注册钩子的闭包函数\r\n     */_createClass(Router, [{ key: \"$_registerHook\", value: function $_registerHook(\n    list, callback) {\n      list.push(callback);\n      return function () {\n        var index = list.indexOf(callback);\n        if (index !== -1) list.splice(index, 1);\n      };\n    }\n\n    /**\r\n       * 保存当前页面跳往新页面\r\n       * @param {String} url 路径\r\n       * @param {Object} query 参数\r\n       * @param {String} animationType 动画类型\r\n       * @param {Number} animationDuration 动画时间\r\n      */ }, { key: \"push\", value: function push(\n    rule) {\n      var url = urlJoint(rule.path, rule.query);\n      uni.navigateTo({\n        url: url,\n        animationType: rule.animationType || 'fade-in',\n        animationDuration: rule.animationDuration || 300 });\n\n    }\n\n    /**\r\n       * 关闭当前页面跳往新页面\r\n       * @param {String} url 路径\r\n       * @param {Object} query 参数\r\n      */ }, { key: \"replace\", value: function replace(\n    rule) {\n      var url = urlJoint(rule.path, rule.query);\n      uni.redirectTo({\n        url: url });\n\n    }\n\n    /**\r\n       * 关闭所有页面跳往新页面\r\n       * @param {String} url 路径\r\n      */ }, { key: \"replaceAll\", value: function replaceAll(\n    rule) {\n      var url = rule.path;\n      uni.reLaunch({\n        url: url });\n\n    }\n\n    /**\r\n       * 关闭所有非tab页面跳往tab页面\r\n       * @param {String} url 路径\r\n      */ }, { key: \"pushTab\", value: function pushTab(\n    rule) {\n      var url = rule.path;\n      uni.switchTab({\n        url: url });\n\n    }\n\n    /**\r\n       * 关闭所有非tab页面跳往tab页面\r\n       * @param {Number} num 返回级数\r\n      */ }, { key: \"back\", value: function back()\n    {var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var pages = getCurrentPages();\n      var page = pages.length > num ? pages[pages.length - 1 - num] : pages[0];\n      this.pop({\n        num: num,\n        path: '/' + page.route });\n\n    } }, { key: \"pop\", value: function pop(\n\n    rule) {\n      uni.navigateBack({\n        delta: rule.num });\n\n    }\n\n    /**\r\n       * 注册 全局前置守卫\r\n       * @param {Function} callback 回调函数\r\n       */ }, { key: \"beforeEach\", value: function beforeEach(\n    callback) {\n      return this.$_registerHook(this.beforeHooks, callback);\n    }\n\n    /**\r\n       * 注册 全局后置守卫\r\n       * @param {Function} callback 回调函数\r\n       */ }, { key: \"afterEach\", value: function afterEach(\n    callback) {\n      return this.$_registerHook(this.afterHooks, callback);\n    }\n\n    /**\r\n       * 注册 错误回调\r\n       * @param {Function} errCb 错误回调函数\r\n       */ }, { key: \"onError\", value: function onError(\n    errCb) {\n      return this.$_registerHook(this.errorCbs, errCb);\n    }\n\n    /**\r\n       * 获取当前路由栈的信息\r\n       * @return {Object}\r\n       */ }, { key: \"$_getCurStack\", value: function $_getCurStack()\n    {\n      var stackAll = getCurrentPages();\n      var stackLen = stackAll.length;\n\n      // 跳过路由栈为空的情况\n      if (stackLen === 0) {\n        return false;\n      }\n\n      var curStack = stackAll[stackLen - 1];\n      var from = { url: '/' + curStack.route };\n\n      return from;\n    }\n\n\n    /**\r\n       * hack uniapp的路由函数\r\n       */ }, { key: \"$_hackUniRoute\", value: function $_hackUniRoute()\n    {var _this = this;\n      var ROUTE_ACTIONS = [\n      'push',\n      'replace',\n      'replaceAll',\n      'pushTab',\n      'pop'];\n\n\n      var cacheFunc = {};\n\n      // 保存原函数引用\n      ROUTE_ACTIONS.forEach(function (key) {\n        cacheFunc[key] = _this[key];\n      });\n\n      ROUTE_ACTIONS.forEach(function (key) {\n        // 重写方法\n        _this[key] = function (options) {\n          _this.$_handleBeforeHook(\n          Object.assign({ action: key }, options),\n          function () {var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            var opts = Object.assign({ action: key }, options, newOptions);\n            cacheFunc[opts.action](opts);\n          });\n\n        };\n      });\n    }\n\n    /**\r\n       * 处理 全局前置钩子\r\n       * @param {Object} to\r\n       * @param {Function} runRoute\r\n       */ }, { key: \"$_handleBeforeHook\", value: function $_handleBeforeHook(\n    to, runRoute) {var _this2 = this;\n      // 跳过 h5环境中, 调用系统的tabbar功能或系统的navbar上的返回功能,会触发uni的路由方法\n      if (['tabBar', 'backbutton'].includes(to.from)) return runRoute();\n\n      var from = this.$_getCurStack();\n\n      // 跳过 app端 首次进入页面会调用uni路由方法, 导致获取当前路由栈(from)为空\n      if (from === false) return runRoute();\n\n      this.$_iteratorHook(\n      this.beforeHooks,\n      this.$_handleHookEveryRun,\n      function () {\n        runRoute();\n        _this2.$_handleAfterHook(to, from);\n      },\n      {\n        to: to,\n        from: from,\n        runRoute: runRoute });\n\n\n    }\n\n    /**\r\n       * 处理 全局后置钩子\r\n       * @param {Object} to\r\n       * @param {Object} from\r\n       */ }, { key: \"$_handleAfterHook\", value: function $_handleAfterHook(\n    to, from) {\n      this.afterHooks.forEach(function (hook) {\n        hook && hook(to, from);\n      });\n    }\n\n    /**\r\n       * 遍历并运行 钩子\r\n       * @param {Function[]} queueHook 钩子队列\r\n       * @param {Function} everyCb 每次遍历都会运行的回调函数\r\n       * @param {Function} endCb 队列运行结束后运行的回调函数\r\n       * @param {Object} hookOptions 钩子运行需要的参数\r\n       */ }, { key: \"$_iteratorHook\", value: function $_iteratorHook(\n    queueHook, everyCb, endCb, hookOptions) {var _this3 = this;\n      var step = function step() {var i = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        // 队列运行结束，运行回调函数\n        if (i >= queueHook.length) {\n          endCb.call(_this3);\n        } else {\n          // 跳过队列内容为假值的，例如：undefined\n          if (queueHook[i]) {\n            everyCb.call(_this3, queueHook[i], hookOptions, function () {\n              step(i + 1);\n            });\n          } else {\n            step(i + 1);\n          }\n        }\n      };\n      step();\n    }\n\n    /**\r\n       * 运行钩子并处理 next的返回值\r\n       * @param {Function} hook 钩子函数\r\n       * @param {Object} hookOptions 钩子运行需要的参数\r\n       * @param {Function} iteratorNext 运行下一个钩子\r\n       */ }, { key: \"$_handleHookEveryRun\", value: function $_handleHookEveryRun(\n    hook, hookOptions, iteratorNext) {var _this4 = this;\n      hook(hookOptions.to, hookOptions.from, function (nextVal) {\n        try {\n          // next(false) or next(new Error('xxx')) 中断当前的路径跳转，或中断且注册错误回调\n          if (nextVal === false || _this4.$_isError(nextVal)) {\n            _this4.$_handleAbort(nextVal);\n          } else if (\n          // next('/pages/a') or next({ url: '/pages/a' }) 添加或修改 路由\n          typeof nextVal === 'string' ||\n          typeof nextVal === 'object' && typeof nextVal.path === 'string')\n          {\n            var newNextVal = typeof nextVal === 'string' ? { path: nextVal } : nextVal;\n\n            uni.navigateTo({\n              url: newNextVal.path });\n\n            // hookOptions.runRoute(newNextVal);\n\n            // 更新引用\n            hookOptions.to = Object.assign(hookOptions.to, newNextVal);\n\n            _this4.$_handleAfterHook(hookOptions.to, hookOptions.from);\n          } else {\n            // next()\n            iteratorNext();\n          }\n        } catch (err) {\n          _this4.$_handleAbort(err);\n        }\n      });\n    }\n\n    /**\r\n       * 处理 错误信息\r\n       * @param {Object|string} err 错误信息、错误栈\r\n       */ }, { key: \"$_handleAbort\", value: function $_handleAbort(\n    err) {\n      if (this.errorCbs.length > 0) {\n        this.errorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      } else {\n        this.$_print('error', err);\n      }\n    }\n\n    /**\r\n       * 控制台打印内容\r\n       * @param {string} type 打印的类型\r\n       * @param {string} value 内容\r\n       */ }, { key: \"$_print\", value: function $_print(\n    type, value) {\n      console[type]('[route-guards] ' + value);\n    }\n\n    /**\r\n       * 判断错误对象是否是由 Error对象实例化出来的\r\n       * @param {Object} err 错误对象\r\n       */ }, { key: \"$_isError\", value: function $_isError(\n    err) {\n      return Object.prototype.toString.call(err).includes('Error');\n    } }]);return Router;}();exports.default = Router;var\n\n\nRoute = /*#__PURE__*/function () {function Route() {_classCallCheck(this, Route);}_createClass(Route, [{ key: \"getPageQuery\",\n\n\n\n\n\n\n\n\n    /**\r\n                                                                                                                               * 获取 页面 参数\r\n                                                                                                                               */value: function getPageQuery()\n    {\n      var pages = getCurrentPages();\n      var page = pages[pages.length - 1];\n\n\n\n\n      return page.options;\n\n    }\n\n    /**\r\n       * 获取 页面 配置\r\n       */ }, { key: \"getPageRoute\", value: function getPageRoute()\n    {\n      var pages = getCurrentPages();\n      var page = pages[pages.length - 1];\n      return {\n        path: page.route };\n\n    } }, { key: \"query\", get: function get() {return this.getPageQuery();} }, { key: \"meta\", get: function get() {return this.getPageRoute();} }]);return Route;}();exports.Route = Route;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/router/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 50));\nvar _router = _interopRequireDefault(__webpack_require__(/*! ./router.js */ 55));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nvar guard = new _router.default();\nvar tabbar = ['/pages/book/index', '/pages/comic/index', '/pages/music/index', '/pages/user/index'];\n/**\r\n                                                                                                      * 路由前置守卫\r\n                                                                                                     */\nguard.beforeEach(function (to, from, next) {\n  if (tabbar.indexOf(from.url) > -1 && tabbar.indexOf(to.path) == -1) {\n    uni.hideTabBar();\n  }\n  next();\n});\n\n\n/**\r\n     * 路由后置守卫\r\n    */\nguard.afterEach(function (to, from) {\n});\n\n\n/**\r\n     * 报错钩子\r\n    */\nguard.onError(function (errMsg) {\n  __f__(\"log\", 'my route-guards error: ' + errMsg, \" at plugins/router/index.js:28\");\n});var _default =\nguard;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 54)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy9yb3V0ZXIvaW5kZXguanMiXSwibmFtZXMiOlsiZ3VhcmQiLCJSb3V0ZXIiLCJ0YWJiYXIiLCJiZWZvcmVFYWNoIiwidG8iLCJmcm9tIiwibmV4dCIsImluZGV4T2YiLCJ1cmwiLCJwYXRoIiwidW5pIiwiaGlkZVRhYkJhciIsImFmdGVyRWFjaCIsIm9uRXJyb3IiLCJlcnJNc2ciXSwibWFwcGluZ3MiOiJvSUFBQTtBQUNBLGlGOztBQUVBLElBQU1BLEtBQUssR0FBRyxJQUFJQyxlQUFKLEVBQWQ7QUFDQSxJQUFNQyxNQUFNLEdBQUcsQ0FBQyxtQkFBRCxFQUFzQixvQkFBdEIsRUFBNEMsb0JBQTVDLEVBQWtFLG1CQUFsRSxDQUFmO0FBQ0E7OztBQUdBRixLQUFLLENBQUNHLFVBQU4sQ0FBaUIsVUFBQ0MsRUFBRCxFQUFLQyxJQUFMLEVBQVdDLElBQVgsRUFBb0I7QUFDcEMsTUFBS0osTUFBTSxDQUFDSyxPQUFQLENBQWVGLElBQUksQ0FBQ0csR0FBcEIsSUFBMkIsQ0FBQyxDQUE1QixJQUFpQ04sTUFBTSxDQUFDSyxPQUFQLENBQWVILEVBQUUsQ0FBQ0ssSUFBbEIsS0FBMkIsQ0FBQyxDQUFsRSxFQUFzRTtBQUNyRUMsT0FBRyxDQUFDQyxVQUFKO0FBQ0E7QUFDREwsTUFBSTtBQUNKLENBTEQ7OztBQVFBOzs7QUFHQU4sS0FBSyxDQUFDWSxTQUFOLENBQWdCLFVBQUNSLEVBQUQsRUFBS0MsSUFBTCxFQUFjO0FBQzdCLENBREQ7OztBQUlBOzs7QUFHQUwsS0FBSyxDQUFDYSxPQUFOLENBQWMsVUFBQ0MsTUFBRCxFQUFZO0FBQ3RCLGVBQVksNEJBQTRCQSxNQUF4QztBQUNILENBRkQsRTtBQUdlZCxLIiwiZmlsZSI6IjU2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFZ1ZSBmcm9tICd2dWUnO1xyXG5pbXBvcnQgUm91dGVyIGZyb20gJy4vcm91dGVyLmpzJztcclxuXHJcbmNvbnN0IGd1YXJkID0gbmV3IFJvdXRlcigpO1xyXG5jb25zdCB0YWJiYXIgPSBbJy9wYWdlcy9ib29rL2luZGV4JywgJy9wYWdlcy9jb21pYy9pbmRleCcsICcvcGFnZXMvbXVzaWMvaW5kZXgnLCAnL3BhZ2VzL3VzZXIvaW5kZXgnXVxyXG4vKipcclxuICog6Lev55Sx5YmN572u5a6I5Y2rXHJcbiovXHJcbmd1YXJkLmJlZm9yZUVhY2goKHRvLCBmcm9tLCBuZXh0KSA9PiB7XHJcblx0aWYgKCB0YWJiYXIuaW5kZXhPZihmcm9tLnVybCkgPiAtMSAmJiB0YWJiYXIuaW5kZXhPZih0by5wYXRoKSA9PSAtMSApIHtcclxuXHRcdHVuaS5oaWRlVGFiQmFyKClcclxuXHR9XHJcblx0bmV4dCgpO1xyXG59KTtcclxuXHJcblxyXG4vKipcclxuICog6Lev55Sx5ZCO572u5a6I5Y2rXHJcbiovXHJcbmd1YXJkLmFmdGVyRWFjaCgodG8sIGZyb20pID0+IHtcclxufSk7XHJcblxyXG5cclxuLyoqXHJcbiAqIOaKpemUmemSqeWtkFxyXG4qL1xyXG5ndWFyZC5vbkVycm9yKChlcnJNc2cpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdteSByb3V0ZS1ndWFyZHMgZXJyb3I6ICcgKyBlcnJNc2cpO1xyXG59KTtcclxuZXhwb3J0IGRlZmF1bHQgZ3VhcmQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/*!*************************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/request/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _request = _interopRequireDefault(__webpack_require__(/*! ./request.js */ 58));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\nvar http = new _request.default();var _default =\nhttp;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy9yZXF1ZXN0L2luZGV4LmpzIl0sIm5hbWVzIjpbImh0dHAiLCJIdHRwIl0sIm1hcHBpbmdzIjoidUZBQUEsbUY7QUFDQSxJQUFNQSxJQUFJLEdBQUcsSUFBSUMsZ0JBQUosRUFBYixDO0FBQ2VELEkiLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSHR0cCBmcm9tICcuL3JlcXVlc3QuanMnXHJcbmNvbnN0IGh0dHAgPSBuZXcgSHR0cCgpO1xyXG5leHBvcnQgZGVmYXVsdCBodHRwOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/*!***************************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/request/request.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var\nTIMEOUT = _config.default.TIMEOUT;\n\n\n//request封装\nfunction request() {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'GET';var url = arguments.length > 1 ? arguments[1] : undefined;var options = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    uni.request({\n      url: url,\n      data: options.params || {},\n      method: type || 'GET',\n      header: options.headers || {},\n      responseType: options.responseType || 'text',\n      timeout: TIMEOUT,\n      sslVerify: false,\n      success: function success(res) {\n        resolve(res);\n      },\n      fail: function fail(err) {\n        reject(err);\n      } });\n\n  });\n}var\n\nhttp = /*#__PURE__*/function () {function http() {_classCallCheck(this, http);}_createClass(http, [{ key: \"get\", value: function get(\n    url) {var _options$headers;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      url += (url.indexOf('?') < 0 ? '?' : '&') + param(options.params || {}, ((_options$headers = options.headers) === null || _options$headers === void 0 ? void 0 : _options$headers.Charset) || 'utf-8') || ''; // 请求路径\n      return request('GET', url, options);\n    } }, { key: \"postget\", value: function postget(\n    url) {var _options$headers2;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      url += (url.indexOf('?') < 0 ? '?' : '&') + param(options.params || {}, ((_options$headers2 = options.headers) === null || _options$headers2 === void 0 ? void 0 : _options$headers2.Charset) || 'utf-8') || ''; // 请求路径\n      return request('POST', url, options);\n    } }, { key: \"post\", value: function post(\n    url) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return request('POST', url, options);\n    } }]);return http;}();exports.default = http;\n\n\nfunction param(data, charset) {\n  var url = '';\n  for (var k in data) {\n    var value = data[k] !== undefined ? data[k] : '';\n    url += charset == 'utf-8' ? \"&\".concat(k, \"=\").concat(encodeURIComponent(value)) : \"&\".concat(k, \"=\").concat(value);\n  }\n  return url ? url.substring(1) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy9yZXF1ZXN0L3JlcXVlc3QuanMiXSwibmFtZXMiOlsiVElNRU9VVCIsIkNvbmZpZyIsInJlcXVlc3QiLCJ0eXBlIiwidXJsIiwib3B0aW9ucyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidW5pIiwiZGF0YSIsInBhcmFtcyIsIm1ldGhvZCIsImhlYWRlciIsImhlYWRlcnMiLCJyZXNwb25zZVR5cGUiLCJ0aW1lb3V0Iiwic3NsVmVyaWZ5Iiwic3VjY2VzcyIsInJlcyIsImZhaWwiLCJlcnIiLCJodHRwIiwiaW5kZXhPZiIsInBhcmFtIiwiQ2hhcnNldCIsImNoYXJzZXQiLCJrIiwidmFsdWUiLCJ1bmRlZmluZWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJzdWJzdHJpbmciXSwibWFwcGluZ3MiOiJ1RkFBQSwyRjtBQUNRQSxPLEdBQVlDLGUsQ0FBWkQsTzs7O0FBR1I7QUFDQSxTQUFTRSxPQUFULEdBQThDLEtBQTVCQyxJQUE0Qix1RUFBckIsS0FBcUIsS0FBZEMsR0FBYyx1REFBVEMsT0FBUztBQUM3QyxTQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFDQyxPQUFELEVBQVNDLE1BQVQsRUFBb0I7QUFDdENDLE9BQUcsQ0FBQ1AsT0FBSixDQUFZO0FBQ1hFLFNBQUcsRUFBRUEsR0FETTtBQUVYTSxVQUFJLEVBQUVMLE9BQU8sQ0FBQ00sTUFBUixJQUFrQixFQUZiO0FBR1hDLFlBQU0sRUFBRVQsSUFBSSxJQUFJLEtBSEw7QUFJWFUsWUFBTSxFQUFFUixPQUFPLENBQUNTLE9BQVIsSUFBbUIsRUFKaEI7QUFLWEMsa0JBQVksRUFBRVYsT0FBTyxDQUFDVSxZQUFSLElBQXdCLE1BTDNCO0FBTVhDLGFBQU8sRUFBRWhCLE9BTkU7QUFPWGlCLGVBQVMsRUFBRSxLQVBBO0FBUVhDLGFBQU8sRUFBRyxpQkFBQ0MsR0FBRCxFQUFTO0FBQ2xCWixlQUFPLENBQUNZLEdBQUQsQ0FBUDtBQUNBLE9BVlU7QUFXWEMsVUFBSSxFQUFFLGNBQUNDLEdBQUQsRUFBTztBQUNaYixjQUFNLENBQUNhLEdBQUQsQ0FBTjtBQUNBLE9BYlUsRUFBWjs7QUFlQSxHQWhCTSxDQUFQO0FBaUJBLEM7O0FBRW9CQyxJO0FBQ2hCbEIsTyxFQUFtQiwwQkFBZEMsT0FBYyx1RUFBSixFQUFJO0FBQ3RCRCxTQUFHLElBQUksQ0FBQ0EsR0FBRyxDQUFDbUIsT0FBSixDQUFZLEdBQVosSUFBbUIsQ0FBbkIsR0FBdUIsR0FBdkIsR0FBNkIsR0FBOUIsSUFBcUNDLEtBQUssQ0FBQ25CLE9BQU8sQ0FBQ00sTUFBUixJQUFrQixFQUFuQixFQUF1QixxQkFBQU4sT0FBTyxDQUFDUyxPQUFSLHNFQUFpQlcsT0FBakIsS0FBNEIsT0FBbkQsQ0FBMUMsSUFBeUcsRUFBaEgsQ0FEc0IsQ0FDOEY7QUFDcEgsYUFBT3ZCLE9BQU8sQ0FBQyxLQUFELEVBQVFFLEdBQVIsRUFBYUMsT0FBYixDQUFkO0FBQ0EsSztBQUNPRCxPLEVBQW1CLDJCQUFkQyxPQUFjLHVFQUFKLEVBQUk7QUFDMUJELFNBQUcsSUFBSSxDQUFDQSxHQUFHLENBQUNtQixPQUFKLENBQVksR0FBWixJQUFtQixDQUFuQixHQUF1QixHQUF2QixHQUE2QixHQUE5QixJQUFxQ0MsS0FBSyxDQUFDbkIsT0FBTyxDQUFDTSxNQUFSLElBQWtCLEVBQW5CLEVBQXVCLHNCQUFBTixPQUFPLENBQUNTLE9BQVIsd0VBQWlCVyxPQUFqQixLQUE0QixPQUFuRCxDQUExQyxJQUF5RyxFQUFoSCxDQUQwQixDQUMwRjtBQUNwSCxhQUFPdkIsT0FBTyxDQUFDLE1BQUQsRUFBU0UsR0FBVCxFQUFjQyxPQUFkLENBQWQ7QUFDQSxLO0FBQ0lELE8sRUFBbUIsS0FBZEMsT0FBYyx1RUFBSixFQUFJO0FBQ3ZCLGFBQU9ILE9BQU8sQ0FBQyxNQUFELEVBQVNFLEdBQVQsRUFBY0MsT0FBZCxDQUFkO0FBQ0EsSzs7O0FBR0YsU0FBU21CLEtBQVQsQ0FBZWQsSUFBZixFQUFxQmdCLE9BQXJCLEVBQThCO0FBQzFCLE1BQUl0QixHQUFHLEdBQUcsRUFBVjtBQUNBLE9BQUssSUFBSXVCLENBQVQsSUFBY2pCLElBQWQsRUFBb0I7QUFDaEIsUUFBSWtCLEtBQUssR0FBR2xCLElBQUksQ0FBQ2lCLENBQUQsQ0FBSixLQUFZRSxTQUFaLEdBQXdCbkIsSUFBSSxDQUFDaUIsQ0FBRCxDQUE1QixHQUFrQyxFQUE5QztBQUNBdkIsT0FBRyxJQUFJc0IsT0FBTyxJQUFJLE9BQVgsY0FBeUJDLENBQXpCLGNBQThCRyxrQkFBa0IsQ0FBQ0YsS0FBRCxDQUFoRCxlQUFnRUQsQ0FBaEUsY0FBcUVDLEtBQXJFLENBQVA7QUFDSDtBQUNELFNBQU94QixHQUFHLEdBQUdBLEdBQUcsQ0FBQzJCLFNBQUosQ0FBYyxDQUFkLENBQUgsR0FBc0IsRUFBaEM7QUFDSCIsImZpbGUiOiI1OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25maWcgZnJvbSAnQC9hc3NldHMvanMvY29uZmlnLmpzJ1xyXG5jb25zdCB7IFRJTUVPVVQgfSA9IENvbmZpZ1xyXG5cclxuXHJcbi8vcmVxdWVzdOWwgeijhVxyXG5mdW5jdGlvbiByZXF1ZXN0ICh0eXBlID0gJ0dFVCcsIHVybCwgb3B0aW9ucykge1xyXG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpID0+IHtcclxuXHRcdHVuaS5yZXF1ZXN0KHtcclxuXHRcdFx0dXJsOiB1cmwsXHJcblx0XHRcdGRhdGE6IG9wdGlvbnMucGFyYW1zIHx8IHt9LFxyXG5cdFx0XHRtZXRob2Q6IHR5cGUgfHwgJ0dFVCcsXHJcblx0XHRcdGhlYWRlcjogb3B0aW9ucy5oZWFkZXJzIHx8IHt9LFxyXG5cdFx0XHRyZXNwb25zZVR5cGU6IG9wdGlvbnMucmVzcG9uc2VUeXBlIHx8ICd0ZXh0JyxcclxuXHRcdFx0dGltZW91dDogVElNRU9VVCxcclxuXHRcdFx0c3NsVmVyaWZ5OiBmYWxzZSxcclxuXHRcdFx0c3VjY2VzczogKChyZXMpID0+IHtcclxuXHRcdFx0XHRyZXNvbHZlKHJlcylcclxuXHRcdFx0fSksXHJcblx0XHRcdGZhaWw6KChlcnIpPT57XHJcblx0XHRcdFx0cmVqZWN0KGVycik7XHJcblx0XHRcdH0pXHJcblx0XHR9KVxyXG5cdH0pXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGh0dHAge1xyXG5cdGdldCh1cmwsIG9wdGlvbnMgPSB7fSkge1xyXG5cdFx0dXJsICs9ICh1cmwuaW5kZXhPZignPycpIDwgMCA/ICc/JyA6ICcmJykgKyBwYXJhbShvcHRpb25zLnBhcmFtcyB8fCB7fSwgb3B0aW9ucy5oZWFkZXJzPy5DaGFyc2V0IHx8ICd1dGYtOCcpIHx8ICcnOyAvLyDor7fmsYLot6/lvoRcclxuXHRcdHJldHVybiByZXF1ZXN0KCdHRVQnLCB1cmwsIG9wdGlvbnMpXHJcblx0fVxyXG5cdHBvc3RnZXQodXJsLCBvcHRpb25zID0ge30pIHtcclxuXHRcdHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA8IDAgPyAnPycgOiAnJicpICsgcGFyYW0ob3B0aW9ucy5wYXJhbXMgfHwge30sIG9wdGlvbnMuaGVhZGVycz8uQ2hhcnNldCB8fCAndXRmLTgnKSB8fCAnJzsgLy8g6K+35rGC6Lev5b6EXHJcblx0XHRyZXR1cm4gcmVxdWVzdCgnUE9TVCcsIHVybCwgb3B0aW9ucylcclxuXHR9XHJcblx0cG9zdCh1cmwsIG9wdGlvbnMgPSB7fSkge1xyXG5cdFx0cmV0dXJuIHJlcXVlc3QoJ1BPU1QnLCB1cmwsIG9wdGlvbnMpXHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJhbShkYXRhLCBjaGFyc2V0KSB7XHJcbiAgICBsZXQgdXJsID0gJydcclxuICAgIGZvciAodmFyIGsgaW4gZGF0YSkge1xyXG4gICAgICAgIGxldCB2YWx1ZSA9IGRhdGFba10gIT09IHVuZGVmaW5lZCA/IGRhdGFba10gOiAnJ1xyXG4gICAgICAgIHVybCArPSBjaGFyc2V0ID09ICd1dGYtOCcgPyBgJiR7a309JHtlbmNvZGVVUklDb21wb25lbnQodmFsdWUpfWAgOiBgJiR7a309JHt2YWx1ZX1gXHJcbiAgICB9XHJcbiAgICByZXR1cm4gdXJsID8gdXJsLnN1YnN0cmluZygxKSA6ICcnXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/js/config.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n  //小说网站链接\n  BOOKURL: {\n    'baoshuu': {\n      title: '手机宝书',\n      href: 'http://m.baoshuu.com',\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: false //是否属于青壮年内容\n    },\n    'xquge': {\n      title: '笔趣阁',\n      href: 'https://www.xquge.com',\n      isAdult: false //是否属于青壮年内容\n    },\n    'linovel': {\n      title: '轻之文库',\n      href: 'https://www.linovel.net',\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: false //是否属于青壮年内容\n    },\n    'xyushu5': {\n      title: '新御书屋',\n      href: 'https://www.xyushu5.com',\n      isAdult: true } },\n\n\n\n  //漫画网站链接\n  COMICURL: {\n    'mangabz': {\n      title: 'mangaBz',\n      href: 'http://www.mangabz.com',\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: false //是否属于青壮年内容\n    },\n    'sixmh': {\n      title: '6漫画',\n      href: 'http://m.sixmh7.com',\n      search: true, //是否有搜索功能\n      hotKey: true, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: false //是否属于青壮年内容\n    },\n    'dmzj': {\n      title: '动漫之家',\n      href: 'https://www.dmzj.com',\n      search: true, //是否有搜索功能\n      hotKey: true, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: false //是否属于青壮年内容\n    },\n    'cosplayporn': {\n      title: '写真网',\n      href: 'https://cosplayporn.cc',\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: true //是否属于青壮年内容\n    },\n    'wnacg': {\n      title: '绅士漫画',\n      href: 'https://hentaicomic.org',\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      isAdult: true //是否属于青壮年内容\n    },\n    'nightpic': {\n      title: '深夜图鉴',\n      href: 'https://nightpics1.xyz',\n      search: false, //是否有搜索功能\n      recome: true, //是否有热门推荐功能\n      isAdult: true //是否属于青壮年内容\n    },\n    'rosi': {\n      title: 'ROSI写真网',\n      href: ['http://www.xnnxz.com', 'http://www.ggudd.com', 'http://www.910ys.com'],\n      search: true, //是否有搜索功能\n      hotKey: false, //是否有热门搜索关键词功能\n      recome: false, //是否有热门推荐功能\n      isAdult: true //是否属于青壮年内容\n    } },\n\n  //音乐网站链接\n  MUSICURL: {\n    '163music': {\n      title: '网易云音乐',\n      href: 'https://autumnfish.cn',\n      search: true, //是否有搜索功能\n      hotKey: true, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      newSong: true //是否有新歌首发功能\n    },\n    'qqmusic': {\n      title: 'QQ音乐',\n      href: 'https://u.y.qq.com',\n      search: true, //是否有搜索功能\n      hotKey: true, //是否有热门搜索关键词功能\n      recome: true, //是否有热门推荐功能\n      newSong: true //是否有新歌首发功能\n    } },\n\n\n  //请求成功编码\n  ERR_OK: 200,\n  //请求失败编码\n  ERR_FALSE: 300,\n  //请求超时时间\n  TIMEOUT: 50000 };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/xhr/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _xhr = _interopRequireDefault(__webpack_require__(/*! ./xhr.js */ 61));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\nvar xhr = new _xhr.default();var _default =\nxhr;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy94aHIvaW5kZXguanMiXSwibmFtZXMiOlsieGhyIiwiWGhyIl0sIm1hcHBpbmdzIjoidUZBQUEsMkU7QUFDQSxJQUFNQSxHQUFHLEdBQUcsSUFBSUMsWUFBSixFQUFaLEM7QUFDZUQsRyIsImZpbGUiOiI2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBYaHIgZnJvbSAnLi94aHIuanMnXHJcbmNvbnN0IHhociA9IG5ldyBYaHIoKTtcclxuZXhwb3J0IGRlZmF1bHQgeGhyOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/*!*******************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/xhr/xhr.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var\nTIMEOUT = _config.default.TIMEOUT;\n\n//xhr封装\nfunction xhrRequest() {var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'GET';var url = arguments.length > 1 ? arguments[1] : undefined;var options = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    var xhrHttp = new plus.net.XMLHttpRequest();\n    try {\n      xhrHttp.onreadystatechange = function () {\n        // console.log(xhrHttp.readyState);\n        if (xhrHttp.readyState == 4) {\n          if (xhrHttp.status == 200) {\n            resolve({ code: xhrHttp.status, data: xhrHttp.responseText });\n          } else {\n            // plus.nativeUI.toast(\"网络错误！\", {verticalAlign: 'bottom'});\n            reject({ code: xhrHttp.status, data: '' });\n          }\n          xhrHttp.abort();\n          xhrHttp = null;\n        }\n      };\n      xhrHttp.open(type, url);\n      if (options.mimeType) {\n        xhrHttp.overrideMimeType(options.mimeType);\n      }\n      xhrHttp.responseType = options.responseType || 'json';\n      for (var i in options.headers || {}) {\n        xhrHttp.setRequestHeader(i, options.headers[i]);\n      }\n      xhrHttp.timeout = TIMEOUT;\n      xhrHttp.send(options.params || {});\n    } catch (e) {\n      xhrHttp.abort();\n      xhrHttp = null;\n      reject({ code: xhrHttp.status, data: '' });\n    }\n  });\n}var\n\nXhr = /*#__PURE__*/function () {function Xhr() {_classCallCheck(this, Xhr);}_createClass(Xhr, [{ key: \"get\", value: function get(\n    url) {var _options$headers;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      url += (url.indexOf('?') < 0 ? '?' : '&') + param(options.params || {}, ((_options$headers = options.headers) === null || _options$headers === void 0 ? void 0 : _options$headers.Charset) || 'utf-8') || ''; // 请求路径\n      return xhrRequest('GET', url, options);\n    } }, { key: \"postget\", value: function postget(\n    url) {var _options$headers2;var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      url += (url.indexOf('?') < 0 ? '?' : '&') + param(options.params || {}, ((_options$headers2 = options.headers) === null || _options$headers2 === void 0 ? void 0 : _options$headers2.Charset) || 'utf-8') || ''; // 请求路径\n      return xhrRequest('POST', url, options);\n    } }, { key: \"post\", value: function post(\n    url) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return xhrRequest('POST', url, options);\n    } }]);return Xhr;}();exports.default = Xhr;\n\n\nfunction param(data, charset) {\n  var url = '';\n  for (var k in data) {\n    var value = data[k] !== undefined ? data[k] : '';\n    url += charset == 'utf-8' ? \"&\".concat(k, \"=\").concat(encodeURIComponent(value)) : \"&\".concat(k, \"=\").concat(value);\n  }\n  return url ? url.substring(1) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy94aHIveGhyLmpzIl0sIm5hbWVzIjpbIlRJTUVPVVQiLCJDb25maWciLCJ4aHJSZXF1ZXN0IiwidHlwZSIsInVybCIsIm9wdGlvbnMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInhockh0dHAiLCJwbHVzIiwibmV0IiwiWE1MSHR0cFJlcXVlc3QiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwiY29kZSIsImRhdGEiLCJyZXNwb25zZVRleHQiLCJhYm9ydCIsIm9wZW4iLCJtaW1lVHlwZSIsIm92ZXJyaWRlTWltZVR5cGUiLCJyZXNwb25zZVR5cGUiLCJpIiwiaGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJ0aW1lb3V0Iiwic2VuZCIsInBhcmFtcyIsImUiLCJYaHIiLCJpbmRleE9mIiwicGFyYW0iLCJDaGFyc2V0IiwiY2hhcnNldCIsImsiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImVuY29kZVVSSUNvbXBvbmVudCIsInN1YnN0cmluZyJdLCJtYXBwaW5ncyI6InVGQUFBLDJGO0FBQ1FBLE8sR0FBWUMsZSxDQUFaRCxPOztBQUVSO0FBQ0EsU0FBU0UsVUFBVCxHQUFpRCxLQUE1QkMsSUFBNEIsdUVBQXJCLEtBQXFCLEtBQWRDLEdBQWMsdURBQVRDLE9BQVM7QUFDaEQsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFTQyxNQUFULEVBQW9CO0FBQ3RDLFFBQUlDLE9BQU8sR0FBRyxJQUFJQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0MsY0FBYixFQUFkO0FBQ0EsUUFBSTtBQUNISCxhQUFPLENBQUNJLGtCQUFSLEdBQTZCLFlBQVk7QUFDeEM7QUFDQSxZQUFLSixPQUFPLENBQUNLLFVBQVIsSUFBc0IsQ0FBM0IsRUFBK0I7QUFDOUIsY0FBS0wsT0FBTyxDQUFDTSxNQUFSLElBQWtCLEdBQXZCLEVBQTZCO0FBQzVCUixtQkFBTyxDQUFDLEVBQUNTLElBQUksRUFBRVAsT0FBTyxDQUFDTSxNQUFmLEVBQXVCRSxJQUFJLEVBQUVSLE9BQU8sQ0FBQ1MsWUFBckMsRUFBRCxDQUFQO0FBQ0EsV0FGRCxNQUVPO0FBQ047QUFDQVYsa0JBQU0sQ0FBQyxFQUFDUSxJQUFJLEVBQUVQLE9BQU8sQ0FBQ00sTUFBZixFQUF1QkUsSUFBSSxFQUFFLEVBQTdCLEVBQUQsQ0FBTjtBQUNBO0FBQ0RSLGlCQUFPLENBQUNVLEtBQVI7QUFDQVYsaUJBQU8sR0FBRyxJQUFWO0FBQ0E7QUFDRCxPQVpEO0FBYUFBLGFBQU8sQ0FBQ1csSUFBUixDQUFhakIsSUFBYixFQUFtQkMsR0FBbkI7QUFDQSxVQUFLQyxPQUFPLENBQUNnQixRQUFiLEVBQXdCO0FBQ3ZCWixlQUFPLENBQUNhLGdCQUFSLENBQXlCakIsT0FBTyxDQUFDZ0IsUUFBakM7QUFDQTtBQUNEWixhQUFPLENBQUNjLFlBQVIsR0FBdUJsQixPQUFPLENBQUNrQixZQUFSLElBQXdCLE1BQS9DO0FBQ0EsV0FBTSxJQUFJQyxDQUFWLElBQWVuQixPQUFPLENBQUNvQixPQUFSLElBQW1CLEVBQWxDLEVBQXVDO0FBQ3RDaEIsZUFBTyxDQUFDaUIsZ0JBQVIsQ0FBeUJGLENBQXpCLEVBQTRCbkIsT0FBTyxDQUFDb0IsT0FBUixDQUFnQkQsQ0FBaEIsQ0FBNUI7QUFDQTtBQUNEZixhQUFPLENBQUNrQixPQUFSLEdBQWtCM0IsT0FBbEI7QUFDQVMsYUFBTyxDQUFDbUIsSUFBUixDQUFhdkIsT0FBTyxDQUFDd0IsTUFBUixJQUFrQixFQUEvQjtBQUNBLEtBeEJELENBd0JFLE9BQU9DLENBQVAsRUFBVTtBQUNYckIsYUFBTyxDQUFDVSxLQUFSO0FBQ0FWLGFBQU8sR0FBRyxJQUFWO0FBQ0FELFlBQU0sQ0FBQyxFQUFDUSxJQUFJLEVBQUVQLE9BQU8sQ0FBQ00sTUFBZixFQUF1QkUsSUFBSSxFQUFFLEVBQTdCLEVBQUQsQ0FBTjtBQUNBO0FBQ0QsR0EvQk0sQ0FBUDtBQWdDQSxDOztBQUVvQmMsRztBQUNoQjNCLE8sRUFBbUIsMEJBQWRDLE9BQWMsdUVBQUosRUFBSTtBQUN0QkQsU0FBRyxJQUFJLENBQUNBLEdBQUcsQ0FBQzRCLE9BQUosQ0FBWSxHQUFaLElBQW1CLENBQW5CLEdBQXVCLEdBQXZCLEdBQTZCLEdBQTlCLElBQXFDQyxLQUFLLENBQUM1QixPQUFPLENBQUN3QixNQUFSLElBQWtCLEVBQW5CLEVBQXVCLHFCQUFBeEIsT0FBTyxDQUFDb0IsT0FBUixzRUFBaUJTLE9BQWpCLEtBQTRCLE9BQW5ELENBQTFDLElBQXlHLEVBQWhILENBRHNCLENBQzhGO0FBQ3BILGFBQU9oQyxVQUFVLENBQUMsS0FBRCxFQUFRRSxHQUFSLEVBQWFDLE9BQWIsQ0FBakI7QUFDQSxLO0FBQ09ELE8sRUFBbUIsMkJBQWRDLE9BQWMsdUVBQUosRUFBSTtBQUMxQkQsU0FBRyxJQUFJLENBQUNBLEdBQUcsQ0FBQzRCLE9BQUosQ0FBWSxHQUFaLElBQW1CLENBQW5CLEdBQXVCLEdBQXZCLEdBQTZCLEdBQTlCLElBQXFDQyxLQUFLLENBQUM1QixPQUFPLENBQUN3QixNQUFSLElBQWtCLEVBQW5CLEVBQXVCLHNCQUFBeEIsT0FBTyxDQUFDb0IsT0FBUix3RUFBaUJTLE9BQWpCLEtBQTRCLE9BQW5ELENBQTFDLElBQXlHLEVBQWhILENBRDBCLENBQzBGO0FBQ3BILGFBQU9oQyxVQUFVLENBQUMsTUFBRCxFQUFTRSxHQUFULEVBQWNDLE9BQWQsQ0FBakI7QUFDQSxLO0FBQ0lELE8sRUFBbUIsS0FBZEMsT0FBYyx1RUFBSixFQUFJO0FBQ3ZCLGFBQU9ILFVBQVUsQ0FBQyxNQUFELEVBQVNFLEdBQVQsRUFBY0MsT0FBZCxDQUFqQjtBQUNBLEs7OztBQUdGLFNBQVM0QixLQUFULENBQWVoQixJQUFmLEVBQXFCa0IsT0FBckIsRUFBOEI7QUFDMUIsTUFBSS9CLEdBQUcsR0FBRyxFQUFWO0FBQ0EsT0FBSyxJQUFJZ0MsQ0FBVCxJQUFjbkIsSUFBZCxFQUFvQjtBQUNoQixRQUFJb0IsS0FBSyxHQUFHcEIsSUFBSSxDQUFDbUIsQ0FBRCxDQUFKLEtBQVlFLFNBQVosR0FBd0JyQixJQUFJLENBQUNtQixDQUFELENBQTVCLEdBQWtDLEVBQTlDO0FBQ0FoQyxPQUFHLElBQUkrQixPQUFPLElBQUksT0FBWCxjQUF5QkMsQ0FBekIsY0FBOEJHLGtCQUFrQixDQUFDRixLQUFELENBQWhELGVBQWdFRCxDQUFoRSxjQUFxRUMsS0FBckUsQ0FBUDtBQUNIO0FBQ0QsU0FBT2pDLEdBQUcsR0FBR0EsR0FBRyxDQUFDb0MsU0FBSixDQUFjLENBQWQsQ0FBSCxHQUFzQixFQUFoQztBQUNIIiwiZmlsZSI6IjYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbmZpZyBmcm9tICdAL2Fzc2V0cy9qcy9jb25maWcuanMnXHJcbmNvbnN0IHsgVElNRU9VVCB9ID0gQ29uZmlnXHJcblxyXG4vL3hocuWwgeijhVxyXG5mdW5jdGlvbiB4aHJSZXF1ZXN0ICh0eXBlID0gJ0dFVCcsIHVybCwgb3B0aW9ucykge1xyXG5cdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSxyZWplY3QpID0+IHtcclxuXHRcdGxldCB4aHJIdHRwID0gbmV3IHBsdXMubmV0LlhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0XHR0cnkge1xyXG5cdFx0XHR4aHJIdHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyh4aHJIdHRwLnJlYWR5U3RhdGUpO1xyXG5cdFx0XHRcdGlmICggeGhySHR0cC5yZWFkeVN0YXRlID09IDQgKSB7XHJcblx0XHRcdFx0XHRpZiAoIHhockh0dHAuc3RhdHVzID09IDIwMCApIHtcclxuXHRcdFx0XHRcdFx0cmVzb2x2ZSh7Y29kZTogeGhySHR0cC5zdGF0dXMsIGRhdGE6IHhockh0dHAucmVzcG9uc2VUZXh0fSlcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdC8vIHBsdXMubmF0aXZlVUkudG9hc3QoXCLnvZHnu5zplJnor6/vvIFcIiwge3ZlcnRpY2FsQWxpZ246ICdib3R0b20nfSk7XHJcblx0XHRcdFx0XHRcdHJlamVjdCh7Y29kZTogeGhySHR0cC5zdGF0dXMsIGRhdGE6ICcnfSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR4aHJIdHRwLmFib3J0KClcclxuXHRcdFx0XHRcdHhockh0dHAgPSBudWxsXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHhockh0dHAub3Blbih0eXBlLCB1cmwpO1xyXG5cdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgKSB7XHJcblx0XHRcdFx0eGhySHR0cC5vdmVycmlkZU1pbWVUeXBlKG9wdGlvbnMubWltZVR5cGUpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHhockh0dHAucmVzcG9uc2VUeXBlID0gb3B0aW9ucy5yZXNwb25zZVR5cGUgfHwgJ2pzb24nO1xyXG5cdFx0XHRmb3IgKCBsZXQgaSBpbiBvcHRpb25zLmhlYWRlcnMgfHwge30gKSB7XHJcblx0XHRcdFx0eGhySHR0cC5zZXRSZXF1ZXN0SGVhZGVyKGksIG9wdGlvbnMuaGVhZGVyc1tpXSk7XHJcblx0XHRcdH1cclxuXHRcdFx0eGhySHR0cC50aW1lb3V0ID0gVElNRU9VVDtcclxuXHRcdFx0eGhySHR0cC5zZW5kKG9wdGlvbnMucGFyYW1zIHx8IHt9KTtcclxuXHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0eGhySHR0cC5hYm9ydCgpXHJcblx0XHRcdHhockh0dHAgPSBudWxsXHJcblx0XHRcdHJlamVjdCh7Y29kZTogeGhySHR0cC5zdGF0dXMsIGRhdGE6ICcnfSk7XHJcblx0XHR9XHJcblx0fSlcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgWGhyIHtcclxuXHRnZXQodXJsLCBvcHRpb25zID0ge30pIHtcclxuXHRcdHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA8IDAgPyAnPycgOiAnJicpICsgcGFyYW0ob3B0aW9ucy5wYXJhbXMgfHwge30sIG9wdGlvbnMuaGVhZGVycz8uQ2hhcnNldCB8fCAndXRmLTgnKSB8fCAnJzsgLy8g6K+35rGC6Lev5b6EXHJcblx0XHRyZXR1cm4geGhyUmVxdWVzdCgnR0VUJywgdXJsLCBvcHRpb25zKVxyXG5cdH1cclxuXHRwb3N0Z2V0KHVybCwgb3B0aW9ucyA9IHt9KSB7XHJcblx0XHR1cmwgKz0gKHVybC5pbmRleE9mKCc/JykgPCAwID8gJz8nIDogJyYnKSArIHBhcmFtKG9wdGlvbnMucGFyYW1zIHx8IHt9LCBvcHRpb25zLmhlYWRlcnM/LkNoYXJzZXQgfHwgJ3V0Zi04JykgfHwgJyc7IC8vIOivt+axgui3r+W+hFxyXG5cdFx0cmV0dXJuIHhoclJlcXVlc3QoJ1BPU1QnLCB1cmwsIG9wdGlvbnMpXHJcblx0fVxyXG5cdHBvc3QodXJsLCBvcHRpb25zID0ge30pIHtcclxuXHRcdHJldHVybiB4aHJSZXF1ZXN0KCdQT1NUJywgdXJsLCBvcHRpb25zKVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gcGFyYW0oZGF0YSwgY2hhcnNldCkge1xyXG4gICAgbGV0IHVybCA9ICcnXHJcbiAgICBmb3IgKHZhciBrIGluIGRhdGEpIHtcclxuICAgICAgICBsZXQgdmFsdWUgPSBkYXRhW2tdICE9PSB1bmRlZmluZWQgPyBkYXRhW2tdIDogJydcclxuICAgICAgICB1cmwgKz0gY2hhcnNldCA9PSAndXRmLTgnID8gYCYke2t9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKX1gIDogYCYke2t9PSR7dmFsdWV9YFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHVybCA/IHVybC5zdWJzdHJpbmcoMSkgOiAnJ1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/*!*************************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/modules/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default = {\n  showActionSheet: function showActionSheet(_ref) {var _ref$title = _ref.title,title = _ref$title === void 0 ? '' : _ref$title,_ref$itemList = _ref.itemList,itemList = _ref$itemList === void 0 ? [] : _ref$itemList,success = _ref.success,fail = _ref.fail;\n    uni.navigateTo({\n      url: \"/modules/action-sheet?title=\".concat(encodeURIComponent(title), \"&itemList=\").concat(encodeURIComponent(JSON.stringify(itemList))),\n      complete: function complete(res) {\n        uni.$once('action-sheet', function (data) {\n          try {\n            uni.navigateBack({ delta: 1 });\n            success ? success(data) : null;\n          } catch (e) {\n            uni.navigateBack({ delta: 1 });\n            fail ? fail(e) : null;\n          }\n        });\n      } });\n\n  },\n  chooseFile: function chooseFile(_ref2) {var title = _ref2.title,suffix = _ref2.suffix,multiple = _ref2.multiple,success = _ref2.success,fail = _ref2.fail;\n    uni.navigateTo({\n      url: \"/modules/chooseFile?title=\".concat(title || '', \"&suffix=\").concat(suffix || '', \"&multiple=\").concat(multiple || ''),\n      complete: function complete(res) {\n        uni.$once('choose-file', function (data) {\n          try {\n            uni.navigateBack({ delta: 1 });\n            success ? success(data) : null;\n          } catch (e) {\n            uni.navigateBack({ delta: 1 });\n            fail ? fail(e) : null;\n          }\n        });\n      } });\n\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy9tb2R1bGVzL2luZGV4LmpzIl0sIm5hbWVzIjpbInNob3dBY3Rpb25TaGVldCIsInRpdGxlIiwiaXRlbUxpc3QiLCJzdWNjZXNzIiwiZmFpbCIsInVuaSIsIm5hdmlnYXRlVG8iLCJ1cmwiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiY29tcGxldGUiLCJyZXMiLCIkb25jZSIsImRhdGEiLCJuYXZpZ2F0ZUJhY2siLCJkZWx0YSIsImUiLCJjaG9vc2VGaWxlIiwic3VmZml4IiwibXVsdGlwbGUiXSwibWFwcGluZ3MiOiJzR0FBZTtBQUNkQSxpQkFEYyxpQ0FDK0MsdUJBQTNDQyxLQUEyQyxDQUEzQ0EsS0FBMkMsMkJBQW5DLEVBQW1DLG1DQUEvQkMsUUFBK0IsQ0FBL0JBLFFBQStCLDhCQUFwQixFQUFvQixpQkFBaEJDLE9BQWdCLFFBQWhCQSxPQUFnQixDQUFQQyxJQUFPLFFBQVBBLElBQU87QUFDNURDLE9BQUcsQ0FBQ0MsVUFBSixDQUFlO0FBQ2RDLFNBQUcsd0NBQWlDQyxrQkFBa0IsQ0FBQ1AsS0FBRCxDQUFuRCx1QkFBdUVPLGtCQUFrQixDQUFDQyxJQUFJLENBQUNDLFNBQUwsQ0FBZVIsUUFBZixDQUFELENBQXpGLENBRFc7QUFFZFMsY0FBUSxFQUFFLGtCQUFDQyxHQUFELEVBQVM7QUFDbEJQLFdBQUcsQ0FBQ1EsS0FBSixDQUFVLGNBQVYsRUFBMEIsVUFBQ0MsSUFBRCxFQUFVO0FBQ25DLGNBQUc7QUFDRlQsZUFBRyxDQUFDVSxZQUFKLENBQWlCLEVBQUNDLEtBQUssRUFBRSxDQUFSLEVBQWpCO0FBQ0FiLG1CQUFPLEdBQUdBLE9BQU8sQ0FBQ1csSUFBRCxDQUFWLEdBQW1CLElBQTFCO0FBQ0EsV0FIRCxDQUdDLE9BQU1HLENBQU4sRUFBUTtBQUNSWixlQUFHLENBQUNVLFlBQUosQ0FBaUIsRUFBQ0MsS0FBSyxFQUFFLENBQVIsRUFBakI7QUFDQVosZ0JBQUksR0FBR0EsSUFBSSxDQUFDYSxDQUFELENBQVAsR0FBYSxJQUFqQjtBQUNBO0FBQ0QsU0FSRDtBQVNBLE9BWmEsRUFBZjs7QUFjQSxHQWhCYTtBQWlCZEMsWUFqQmMsNkJBaUJ3QyxLQUF6Q2pCLEtBQXlDLFNBQXpDQSxLQUF5QyxDQUFsQ2tCLE1BQWtDLFNBQWxDQSxNQUFrQyxDQUExQkMsUUFBMEIsU0FBMUJBLFFBQTBCLENBQWhCakIsT0FBZ0IsU0FBaEJBLE9BQWdCLENBQVBDLElBQU8sU0FBUEEsSUFBTztBQUNyREMsT0FBRyxDQUFDQyxVQUFKLENBQWU7QUFDZEMsU0FBRyxzQ0FBK0JOLEtBQUssSUFBSSxFQUF4QyxxQkFBcURrQixNQUFNLElBQUksRUFBL0QsdUJBQThFQyxRQUFRLElBQUksRUFBMUYsQ0FEVztBQUVkVCxjQUFRLEVBQUUsa0JBQUNDLEdBQUQsRUFBUztBQUNsQlAsV0FBRyxDQUFDUSxLQUFKLENBQVUsYUFBVixFQUF5QixVQUFDQyxJQUFELEVBQVU7QUFDbEMsY0FBRztBQUNGVCxlQUFHLENBQUNVLFlBQUosQ0FBaUIsRUFBQ0MsS0FBSyxFQUFFLENBQVIsRUFBakI7QUFDQWIsbUJBQU8sR0FBR0EsT0FBTyxDQUFDVyxJQUFELENBQVYsR0FBbUIsSUFBMUI7QUFDQSxXQUhELENBR0MsT0FBTUcsQ0FBTixFQUFRO0FBQ1JaLGVBQUcsQ0FBQ1UsWUFBSixDQUFpQixFQUFDQyxLQUFLLEVBQUUsQ0FBUixFQUFqQjtBQUNBWixnQkFBSSxHQUFHQSxJQUFJLENBQUNhLENBQUQsQ0FBUCxHQUFhLElBQWpCO0FBQ0E7QUFDRCxTQVJEO0FBU0EsT0FaYSxFQUFmOztBQWNBLEdBaENhLEUiLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XHJcblx0c2hvd0FjdGlvblNoZWV0ICh7dGl0bGUgPSAnJywgaXRlbUxpc3QgPSBbXSwgc3VjY2VzcywgZmFpbH0pIHtcclxuXHRcdHVuaS5uYXZpZ2F0ZVRvKHtcclxuXHRcdFx0dXJsOiBgL21vZHVsZXMvYWN0aW9uLXNoZWV0P3RpdGxlPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHRpdGxlKX0maXRlbUxpc3Q9JHtlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoaXRlbUxpc3QpKX1gLFxyXG5cdFx0XHRjb21wbGV0ZTogKHJlcykgPT4ge1xyXG5cdFx0XHRcdHVuaS4kb25jZSgnYWN0aW9uLXNoZWV0JywgKGRhdGEpID0+IHtcclxuXHRcdFx0XHRcdHRyeXtcclxuXHRcdFx0XHRcdFx0dW5pLm5hdmlnYXRlQmFjayh7ZGVsdGE6IDF9KTtcclxuXHRcdFx0XHRcdFx0c3VjY2VzcyA/IHN1Y2Nlc3MoZGF0YSkgOiBudWxsXHJcblx0XHRcdFx0XHR9Y2F0Y2goZSl7XHJcblx0XHRcdFx0XHRcdHVuaS5uYXZpZ2F0ZUJhY2soe2RlbHRhOiAxfSk7XHJcblx0XHRcdFx0XHRcdGZhaWwgPyBmYWlsKGUpIDogbnVsbFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH0sXHJcblx0Y2hvb3NlRmlsZSAoe3RpdGxlLCBzdWZmaXgsIG11bHRpcGxlLCBzdWNjZXNzLCBmYWlsfSkge1xyXG5cdFx0dW5pLm5hdmlnYXRlVG8oe1xyXG5cdFx0XHR1cmw6IGAvbW9kdWxlcy9jaG9vc2VGaWxlP3RpdGxlPSR7dGl0bGUgfHwgJyd9JnN1ZmZpeD0ke3N1ZmZpeCB8fCAnJ30mbXVsdGlwbGU9JHttdWx0aXBsZSB8fCAnJ31gLFxyXG5cdFx0XHRjb21wbGV0ZTogKHJlcykgPT4ge1xyXG5cdFx0XHRcdHVuaS4kb25jZSgnY2hvb3NlLWZpbGUnLCAoZGF0YSkgPT4ge1xyXG5cdFx0XHRcdFx0dHJ5e1xyXG5cdFx0XHRcdFx0XHR1bmkubmF2aWdhdGVCYWNrKHtkZWx0YTogMX0pO1xyXG5cdFx0XHRcdFx0XHRzdWNjZXNzID8gc3VjY2VzcyhkYXRhKSA6IG51bGxcclxuXHRcdFx0XHRcdH1jYXRjaChlKXtcclxuXHRcdFx0XHRcdFx0dW5pLm5hdmlnYXRlQmFjayh7ZGVsdGE6IDF9KTtcclxuXHRcdFx0XHRcdFx0ZmFpbCA/IGZhaWwoZSkgOiBudWxsXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///62\n");

/***/ }),
/* 63 */
/*!******************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/js/util.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _default =\n{\n  /* *\r\n   * 补零\r\n   * @param {Number} val 数字\r\n   * */\n  zeroize: function zeroize(val) {\n    return _zeroize(val);\n  },\n  /* *\r\n      * 时间格式化\r\n      * @param {String} time 时间戳or时间\r\n      * */\n  dateFormat: function dateFormat(time) {\n    var d = new Date(time);\n    return d.getFullYear() + '-' + _zeroize(d.getMonth() + 1) + '-' + _zeroize(d.getDate()) + ' ' + _zeroize(d.getHours()) + ':' + _zeroize(d.getMinutes());\n  },\n  /* *\r\n      * 秒数转化为分秒\r\n      * @param {String} value 秒数\r\n      * */\n  minutesFormat: function minutesFormat(value) {\n    var minutes = Math.floor(value / 60 % 60) >= 10 ? Math.floor(value / 60 % 60) : '0' + Math.floor(value / 60 % 60);\n    var seconds = Math.floor(value % 60) >= 10 ? Math.floor(value % 60) : '0' + Math.floor(value % 60);\n    return minutes + ':' + seconds;\n  },\n  /* *\r\n      * 时间转化为秒数\r\n      * @param {String} time 时间（HH:mm:ss）\r\n      * */\n  time2seconds: function time2seconds(time) {\n    var seconds = parseInt(time.split(':')[0]) * 60 + parseInt(time.split(':')[1].split('.')[0]) + parseInt(time.split(':')[1].split('.')[1]) / 1000;\n    return seconds;\n  },\n  /* *\r\n      * 移除url地址域名\r\n      * @param {String} str http地址\r\n      * */\n  removeUrl: function removeUrl(url) {\n    var str = url.replace(/^http:\\/\\/[^/]+/, '');\n    return str.substr(1);\n  },\n  /* *\r\n      * 获取文件后缀\r\n      * @param {String} name 带后缀的文件名称\r\n      * */\n  suffix: function suffix(name) {\n    //获取图片后缀\n    var fileName = name.lastIndexOf(\".\");\n    var fileNameLength = name.length;\n    var fileFormat = name.substring(fileName + 1, fileNameLength);\n    return fileFormat;\n  },\n\n  /* *\r\n      * 清除文件后缀\r\n      * @param {String} name 带后缀的文件名称\r\n      * */\n  removeSuffix: function removeSuffix(name) {\n    //获取图片后缀\n    var fileName = name.lastIndexOf(\".\");\n    if (fileName > -1) {\n      var fileNameFormat = name.substring(0, fileName);\n      return fileNameFormat;\n    } else {\n      return name;\n    }\n  },\n\n  /**\r\n      * 数组查找符合条件元素并返回下标\r\n      * @param {Array} arr 传入数组\r\n      * @param {String} value 条件元素\r\n      * @param {String} query 对比key值\r\n     */\n  indexOf: function indexOf(arr, query, value) {\n    var len = arr.length;\n    for (var i = 0; i < len; i++) {\n      if (arr[i][query] == value) {\n        return parseInt(i);\n      }\n    }\n    return -1;\n  },\n\n  /**\r\n      * 正则匹配\r\n      * @param {String} type 匹配类型\r\n      * @param {String} value 匹配值\r\n     */\n  reg: function reg(type, value) {\n    var regs = {\n      //身份证证则\n      idCard: new RegExp(/^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$|^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/),\n      //手机正则\n      mobile: new RegExp(/^1[3456789]\\d{9}$/),\n      //固定电话正则\n      phone: new RegExp(/^(\\(\\d{3,4}\\)|\\d{3,4}-|\\s)?\\d{7,14}$/),\n      //金额验证\n      price: new RegExp(/^[1-9]\\d*(,\\d{3})*(\\.\\d{1,2})?$|^0.\\d{1,2}$/),\n      //邮箱验证\n      email: new RegExp(/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$/),\n      //银行卡\n      bank: new RegExp(/^([1-9]{1})(\\d{15}|\\d{18})$/) };\n\n    return regs[type].test(value);\n  },\n  /**\r\n      * 计算2个时间差的分钟数或者秒钟数\r\n      * @param {datetime} time1 开始时间\r\n      * @param {datetime} time2 结束时间\r\n     */\n  timeMinuse: function timeMinuse(time1, time2) {var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'minutes';\n    //判断开始时间是否大于结束日期\n    var date1 = new Date(time1);\n    var date2 = new Date(time2);\n    if (date1 > date2) {\n      __f__(\"log\", \"开始时间不能大于结束时间！\", \" at assets/js/util.js:118\");\n      return false;\n    }\n    var seconds = date2.getTime() / 1000 - date1.getTime() / 1000;\n    return type == 'minutes' ? seconds / 60 : seconds;\n  },\n\n  /**\r\n      * 生成随机字符串\r\n      * @param {Number} len 长度\r\n     */\n  randomString: function randomString(len) {\n    len = len || 32;\n    var $chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678'; /****默认去掉了容易混淆的字符oOLl,9gq,Vv,Uu,I1****/\n    var maxPos = $chars.length;\n    var pwd = '';\n    for (var i = 0; i < len; i++) {\n      pwd += $chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n    return pwd;\n  },\n\n  /**\r\n      * 生成随机ID\r\n     */\n  randomID: function randomID() {\n    var mydate = new Date();\n    return mydate.getMinutes() + mydate.getSeconds() + mydate.getMilliseconds() + Math.round(Math.random() * 10000);\n  },\n\n  /**\r\n      * 生成随机不重复整数\r\n      * @param {Number} len 长度\r\n     */\n  randomSoleNumber: function randomSoleNumber(len) {\n    var min = 0;\n    var max = len - 1;\n    var arr = [];\n    while (arr.length < len) {\n      var value = Math.floor(Math.random() * (max - min + 1)) + min;\n      if (arr.indexOf(value) == -1) {\n        arr.push(value);\n      }\n    }\n    return arr;\n  },\n  /**\r\n      * 去除html字符串的无关内容\r\n      * @param {Number} html html字符串\r\n     */\n  replaceHTML: function replaceHTML(html) {\n    var str = JSON.stringify(html); //将html转化为字符\n    str = str.replace(/\\\\n/g, ''); //去除\\n\n    str = str.replace(/\\\\r/g, ''); //去除\\r\n    str = str.replace(/\\\\t/g, ''); //去除\\t\n    str = str.replace(/&nbsp;/g, ''); //去除&nbsp;\n    str = str.replace(/\\\\/g, ''); //去除掉无关的斜杠\n    return str;\n  },\n\n  /**\r\n      * 16进制颜色转化为rgb\r\n      * @param {String} hex 16进制颜色\r\n     */\n  hex2rgb: function hex2rgb(hex) {\n    var str = \"rgb(\";\n    var r = parseInt(hex.slice(1, 3), 16).toString(); //ff  slice不包括end\n    var g = parseInt(hex.slice(3, 5), 16).toString(); //00\n    var b = parseInt(hex.slice(5, 7), 16).toString(); //ff\n    str += r + \",\" + g + \",\" + b + \")\";\n    return str;\n  },\n\n  /**\r\n      * byte转化为文件大小\r\n      * @param {Number} byte 位\r\n     */\n  byte2Size: function byte2Size(byte) {\n    var sizeString = '';\n    if (byte == 0) {\n      sizeString = \"0B\";\n    } else if (byte < 1024) {\n      sizeString = byte + \"B\";\n    } else if (byte < 1048576) {\n      sizeString = (byte / 1024).toFixed(2) + \"KB\";\n    } else if (byte < 1073741824) {\n      sizeString = (byte / 1048576).toFixed(2) + \"MB\";\n    } else {\n      sizeString = (byte / 1073741824).toFixed(2) + \"GB\";\n    }\n    return sizeString;\n  },\n\n  // 深度克隆\n  deepClone: function deepClone(obj) {\n    if (typeof obj !== \"object\" && typeof obj !== 'function') {\n      //原始类型直接返回\n      return obj;\n    }\n    var o = isArray(obj) ? [] : {};\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        o[i] = typeof obj[i] === \"object\" ? this.deepClone(obj[i]) : obj[i];\n      }\n    }\n    return o;\n  } };\n\n\n// 判断arr是否为一个数组，返回一个bool值\nexports.default = _default;function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n}\n\nfunction _zeroize(val) {\n  return val >= 10 ? val : '0' + val;\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 54)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///63\n");

/***/ }),
/* 64 */
/*!**********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/js/business.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/js_sdk/yb-native-ui/index.js */ 83));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var\n\ngetters = _store.default.getters;var\nsuffix = _util.default.suffix;var _default =\n{\n  setSkinColor: function setSkinColor() {\n    var skinColor = getters['app/skinColor'];\n    var skinMode = getters['app/skinMode'];\n    var tabbars = ['book', 'comic', 'music', 'user'];\n    tabbars.forEach(function (item, key) {\n      uni.setTabBarItem({\n        index: key,\n        iconPath: 'static/tabbar/' + item + '_' + skinMode + '.png',\n        selectedIconPath: 'static/tabbar/' + item + '_' + skinMode + '-actived.png',\n        success: function success() {},\n        fail: function fail(err) {\n          __f__(\"log\", err, \" at assets/js/business.js:19\");\n        } });\n\n    });\n    uni.setTabBarStyle({\n      color: skinColor.color_1,\n      selectedColor: skinColor.color_actived_1,\n      backgroundColor: skinColor.color_bg_1,\n      success: function success() {},\n      fail: function fail(err) {\n        __f__(\"log\", err, \" at assets/js/business.js:29\");\n      } });\n\n  },\n  share: function share(src) {\n    var filePath = plus.io.convertLocalFileSystemURL(src);\n    var file = plus.android.newObject(\"java.io.File\", filePath);\n    if (plus.android.invoke(file, 'exists')) {\n      var main = plus.android.runtimeMainActivity();\n      var Intent = plus.android.importClass(\"android.content.Intent\");\n      var Uri = plus.android.importClass(\"android.net.Uri\");\n      var environment = plus.android.importClass(\"android.os.Environment\");\n      var MimeTypeMap = plus.android.importClass(\"android.webkit.MimeTypeMap\");\n      var accept = MimeTypeMap.getSingleton().getMimeTypeFromExtension(suffix(plus.android.invoke(file, 'getName')));\n      var shareIntent = new Intent(Intent.ACTION_SEND);\n      shareIntent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(file));\n      shareIntent.setType(accept);\n      main.startActivity(Intent.createChooser(shareIntent, \"分享文件\"));\n    } else {\n      var skinMode = getters['app/skinMode'];\n      _index.default.alert({\n        content: '文件路径无效',\n        dark: skinMode == 'night' });\n\n    }\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 54)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2pzL2J1c2luZXNzLmpzIl0sIm5hbWVzIjpbImdldHRlcnMiLCJTdG9yZSIsInN1ZmZpeCIsIlV0aWxzIiwic2V0U2tpbkNvbG9yIiwic2tpbkNvbG9yIiwic2tpbk1vZGUiLCJ0YWJiYXJzIiwiZm9yRWFjaCIsIml0ZW0iLCJrZXkiLCJ1bmkiLCJzZXRUYWJCYXJJdGVtIiwiaW5kZXgiLCJpY29uUGF0aCIsInNlbGVjdGVkSWNvblBhdGgiLCJzdWNjZXNzIiwiZmFpbCIsImVyciIsInNldFRhYkJhclN0eWxlIiwiY29sb3IiLCJjb2xvcl8xIiwic2VsZWN0ZWRDb2xvciIsImNvbG9yX2FjdGl2ZWRfMSIsImJhY2tncm91bmRDb2xvciIsImNvbG9yX2JnXzEiLCJzaGFyZSIsInNyYyIsImZpbGVQYXRoIiwicGx1cyIsImlvIiwiY29udmVydExvY2FsRmlsZVN5c3RlbVVSTCIsImZpbGUiLCJhbmRyb2lkIiwibmV3T2JqZWN0IiwiaW52b2tlIiwibWFpbiIsInJ1bnRpbWVNYWluQWN0aXZpdHkiLCJJbnRlbnQiLCJpbXBvcnRDbGFzcyIsIlVyaSIsImVudmlyb25tZW50IiwiTWltZVR5cGVNYXAiLCJhY2NlcHQiLCJnZXRTaW5nbGV0b24iLCJnZXRNaW1lVHlwZUZyb21FeHRlbnNpb24iLCJzaGFyZUludGVudCIsIkFDVElPTl9TRU5EIiwicHV0RXh0cmEiLCJFWFRSQV9TVFJFQU0iLCJmcm9tRmlsZSIsInNldFR5cGUiLCJzdGFydEFjdGl2aXR5IiwiY3JlYXRlQ2hvb3NlciIsIk5hdGl2ZVVJIiwiYWxlcnQiLCJjb250ZW50IiwiZGFyayJdLCJtYXBwaW5ncyI6Im9JQUFBO0FBQ0E7QUFDQSxtRzs7QUFFUUEsTyxHQUFZQyxjLENBQVpELE87QUFDQUUsTSxHQUFXQyxhLENBQVhELE07QUFDTztBQUNkRSxjQURjLDBCQUNFO0FBQ2YsUUFBTUMsU0FBUyxHQUFHTCxPQUFPLENBQUMsZUFBRCxDQUF6QjtBQUNBLFFBQU1NLFFBQVEsR0FBR04sT0FBTyxDQUFDLGNBQUQsQ0FBeEI7QUFDQSxRQUFNTyxPQUFPLEdBQUcsQ0FBQyxNQUFELEVBQVMsT0FBVCxFQUFrQixPQUFsQixFQUEyQixNQUEzQixDQUFoQjtBQUNBQSxXQUFPLENBQUNDLE9BQVIsQ0FBZ0IsVUFBQ0MsSUFBRCxFQUFRQyxHQUFSLEVBQWdCO0FBQy9CQyxTQUFHLENBQUNDLGFBQUosQ0FBa0I7QUFDakJDLGFBQUssRUFBRUgsR0FEVTtBQUVqQkksZ0JBQVEsRUFBRSxtQkFBbUJMLElBQW5CLEdBQTBCLEdBQTFCLEdBQWdDSCxRQUFoQyxHQUEyQyxNQUZwQztBQUdqQlMsd0JBQWdCLEVBQUUsbUJBQW1CTixJQUFuQixHQUEwQixHQUExQixHQUFnQ0gsUUFBaEMsR0FBMkMsY0FINUM7QUFJakJVLGVBQU8sRUFBRSxtQkFBTSxDQUFFLENBSkE7QUFLakJDLFlBQUksRUFBRSxjQUFDQyxHQUFELEVBQVM7QUFDZCx1QkFBWUEsR0FBWjtBQUNBLFNBUGdCLEVBQWxCOztBQVNBLEtBVkQ7QUFXQVAsT0FBRyxDQUFDUSxjQUFKLENBQW1CO0FBQ2xCQyxXQUFLLEVBQUVmLFNBQVMsQ0FBQ2dCLE9BREM7QUFFbEJDLG1CQUFhLEVBQUVqQixTQUFTLENBQUNrQixlQUZQO0FBR2xCQyxxQkFBZSxFQUFFbkIsU0FBUyxDQUFDb0IsVUFIVDtBQUlsQlQsYUFBTyxFQUFFLG1CQUFNLENBQUUsQ0FKQztBQUtsQkMsVUFBSSxFQUFFLGNBQUNDLEdBQUQsRUFBUztBQUNkLHFCQUFZQSxHQUFaO0FBQ0EsT0FQaUIsRUFBbkI7O0FBU0EsR0F6QmE7QUEwQmRRLE9BMUJjLGlCQTBCUEMsR0ExQk8sRUEwQkY7QUFDWCxRQUFJQyxRQUFRLEdBQUdDLElBQUksQ0FBQ0MsRUFBTCxDQUFRQyx5QkFBUixDQUFrQ0osR0FBbEMsQ0FBZjtBQUNBLFFBQUlLLElBQUksR0FBR0gsSUFBSSxDQUFDSSxPQUFMLENBQWFDLFNBQWIsQ0FBdUIsY0FBdkIsRUFBdUNOLFFBQXZDLENBQVg7QUFDQSxRQUFLQyxJQUFJLENBQUNJLE9BQUwsQ0FBYUUsTUFBYixDQUFvQkgsSUFBcEIsRUFBMEIsUUFBMUIsQ0FBTCxFQUEyQztBQUMxQyxVQUFJSSxJQUFJLEdBQUdQLElBQUksQ0FBQ0ksT0FBTCxDQUFhSSxtQkFBYixFQUFYO0FBQ0EsVUFBSUMsTUFBTSxHQUFHVCxJQUFJLENBQUNJLE9BQUwsQ0FBYU0sV0FBYixDQUF5Qix3QkFBekIsQ0FBYjtBQUNBLFVBQUlDLEdBQUcsR0FBR1gsSUFBSSxDQUFDSSxPQUFMLENBQWFNLFdBQWIsQ0FBeUIsaUJBQXpCLENBQVY7QUFDQSxVQUFJRSxXQUFXLEdBQUdaLElBQUksQ0FBQ0ksT0FBTCxDQUFhTSxXQUFiLENBQXlCLHdCQUF6QixDQUFsQjtBQUNBLFVBQUlHLFdBQVcsR0FBR2IsSUFBSSxDQUFDSSxPQUFMLENBQWFNLFdBQWIsQ0FBeUIsNEJBQXpCLENBQWxCO0FBQ0EsVUFBSUksTUFBTSxHQUFHRCxXQUFXLENBQUNFLFlBQVosR0FBMkJDLHdCQUEzQixDQUFvRDNDLE1BQU0sQ0FBQzJCLElBQUksQ0FBQ0ksT0FBTCxDQUFhRSxNQUFiLENBQW9CSCxJQUFwQixFQUEwQixTQUExQixDQUFELENBQTFELENBQWI7QUFDQSxVQUFJYyxXQUFXLEdBQUcsSUFBSVIsTUFBSixDQUFXQSxNQUFNLENBQUNTLFdBQWxCLENBQWxCO0FBQ0FELGlCQUFXLENBQUNFLFFBQVosQ0FBcUJWLE1BQU0sQ0FBQ1csWUFBNUIsRUFBMENULEdBQUcsQ0FBQ1UsUUFBSixDQUFhbEIsSUFBYixDQUExQztBQUNBYyxpQkFBVyxDQUFDSyxPQUFaLENBQW9CUixNQUFwQjtBQUNBUCxVQUFJLENBQUNnQixhQUFMLENBQW1CZCxNQUFNLENBQUNlLGFBQVAsQ0FBcUJQLFdBQXJCLEVBQWlDLE1BQWpDLENBQW5CO0FBQ0EsS0FYRCxNQVdPO0FBQ04sVUFBTXhDLFFBQVEsR0FBR04sT0FBTyxDQUFDLGNBQUQsQ0FBeEI7QUFDQXNELHFCQUFTQyxLQUFULENBQWU7QUFDZEMsZUFBTyxFQUFFLFFBREs7QUFFZEMsWUFBSSxFQUFFbkQsUUFBUSxJQUFJLE9BRkosRUFBZjs7QUFJQTtBQUNELEdBL0NhLEUiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3RvcmUgZnJvbSAnQC9zdG9yZSdcclxuaW1wb3J0IFV0aWxzIGZyb20gJ0AvYXNzZXRzL2pzL3V0aWwuanMnXHJcbmltcG9ydCBOYXRpdmVVSSBmcm9tICdAL2pzX3Nkay95Yi1uYXRpdmUtdWkvaW5kZXguanMnXHJcblxyXG5jb25zdCB7IGdldHRlcnMgfSA9IFN0b3JlXHJcbmNvbnN0IHsgc3VmZml4IH0gPSBVdGlsc1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0c2V0U2tpbkNvbG9yICgpIHtcclxuXHRcdGNvbnN0IHNraW5Db2xvciA9IGdldHRlcnNbJ2FwcC9za2luQ29sb3InXVxyXG5cdFx0Y29uc3Qgc2tpbk1vZGUgPSBnZXR0ZXJzWydhcHAvc2tpbk1vZGUnXVxyXG5cdFx0Y29uc3QgdGFiYmFycyA9IFsnYm9vaycsICdjb21pYycsICdtdXNpYycsICd1c2VyJ11cclxuXHRcdHRhYmJhcnMuZm9yRWFjaCgoaXRlbSAsIGtleSkgPT4ge1xyXG5cdFx0XHR1bmkuc2V0VGFiQmFySXRlbSh7XHJcblx0XHRcdFx0aW5kZXg6IGtleSxcclxuXHRcdFx0XHRpY29uUGF0aDogJ3N0YXRpYy90YWJiYXIvJyArIGl0ZW0gKyAnXycgKyBza2luTW9kZSArICcucG5nJyxcclxuXHRcdFx0XHRzZWxlY3RlZEljb25QYXRoOiAnc3RhdGljL3RhYmJhci8nICsgaXRlbSArICdfJyArIHNraW5Nb2RlICsgJy1hY3RpdmVkLnBuZycsXHJcblx0XHRcdFx0c3VjY2VzczogKCkgPT4ge30sXHJcblx0XHRcdFx0ZmFpbDogKGVycikgPT4ge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHR9KVxyXG5cdFx0dW5pLnNldFRhYkJhclN0eWxlKHtcclxuXHRcdFx0Y29sb3I6IHNraW5Db2xvci5jb2xvcl8xLFxyXG5cdFx0XHRzZWxlY3RlZENvbG9yOiBza2luQ29sb3IuY29sb3JfYWN0aXZlZF8xLFxyXG5cdFx0XHRiYWNrZ3JvdW5kQ29sb3I6IHNraW5Db2xvci5jb2xvcl9iZ18xLFxyXG5cdFx0XHRzdWNjZXNzOiAoKSA9PiB7fSxcclxuXHRcdFx0ZmFpbDogKGVycikgPT4ge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGVycik7XHJcblx0XHRcdH1cclxuXHRcdH0pXHJcblx0fSxcclxuXHRzaGFyZSAoc3JjKSB7XHJcblx0XHRsZXQgZmlsZVBhdGggPSBwbHVzLmlvLmNvbnZlcnRMb2NhbEZpbGVTeXN0ZW1VUkwoc3JjKTtcclxuXHRcdGxldCBmaWxlID0gcGx1cy5hbmRyb2lkLm5ld09iamVjdChcImphdmEuaW8uRmlsZVwiLCBmaWxlUGF0aCk7XHJcblx0XHRpZiAoIHBsdXMuYW5kcm9pZC5pbnZva2UoZmlsZSwgJ2V4aXN0cycpICkge1xyXG5cdFx0XHRsZXQgbWFpbiA9IHBsdXMuYW5kcm9pZC5ydW50aW1lTWFpbkFjdGl2aXR5KCk7XHJcblx0XHRcdGxldCBJbnRlbnQgPSBwbHVzLmFuZHJvaWQuaW1wb3J0Q2xhc3MoXCJhbmRyb2lkLmNvbnRlbnQuSW50ZW50XCIpO1xyXG5cdFx0XHRsZXQgVXJpID0gcGx1cy5hbmRyb2lkLmltcG9ydENsYXNzKFwiYW5kcm9pZC5uZXQuVXJpXCIpO1xyXG5cdFx0XHRsZXQgZW52aXJvbm1lbnQgPSBwbHVzLmFuZHJvaWQuaW1wb3J0Q2xhc3MoXCJhbmRyb2lkLm9zLkVudmlyb25tZW50XCIpO1xyXG5cdFx0XHRsZXQgTWltZVR5cGVNYXAgPSBwbHVzLmFuZHJvaWQuaW1wb3J0Q2xhc3MoXCJhbmRyb2lkLndlYmtpdC5NaW1lVHlwZU1hcFwiKTtcclxuXHRcdFx0bGV0IGFjY2VwdCA9IE1pbWVUeXBlTWFwLmdldFNpbmdsZXRvbigpLmdldE1pbWVUeXBlRnJvbUV4dGVuc2lvbihzdWZmaXgocGx1cy5hbmRyb2lkLmludm9rZShmaWxlLCAnZ2V0TmFtZScpKSk7XHJcblx0XHRcdGxldCBzaGFyZUludGVudCA9IG5ldyBJbnRlbnQoSW50ZW50LkFDVElPTl9TRU5EKTtcclxuXHRcdFx0c2hhcmVJbnRlbnQucHV0RXh0cmEoSW50ZW50LkVYVFJBX1NUUkVBTSwgVXJpLmZyb21GaWxlKGZpbGUpKTtcclxuXHRcdFx0c2hhcmVJbnRlbnQuc2V0VHlwZShhY2NlcHQpO1xyXG5cdFx0XHRtYWluLnN0YXJ0QWN0aXZpdHkoSW50ZW50LmNyZWF0ZUNob29zZXIoc2hhcmVJbnRlbnQsXCLliIbkuqvmlofku7ZcIikpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0Y29uc3Qgc2tpbk1vZGUgPSBnZXR0ZXJzWydhcHAvc2tpbk1vZGUnXVxyXG5cdFx0XHROYXRpdmVVSS5hbGVydCh7XHJcblx0XHRcdFx0Y29udGVudDogJ+aWh+S7tui3r+W+hOaXoOaViCcsXHJcblx0XHRcdFx0ZGFyazogc2tpbk1vZGUgPT0gJ25pZ2h0J1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///64\n");

/***/ }),
/* 65 */
/*!***************************************************!*\
  !*** G:/my-project/uni-polymerize/store/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 50));\nvar _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 47));\nvar _app = _interopRequireDefault(__webpack_require__(/*! ./modules/app.js */ 66));\nvar _user = _interopRequireDefault(__webpack_require__(/*! ./modules/user.js */ 71));\nvar _dict = _interopRequireDefault(__webpack_require__(/*! ./modules/dict.js */ 72));\nvar _search = _interopRequireDefault(__webpack_require__(/*! ./modules/search.js */ 73));\nvar _cache = _interopRequireDefault(__webpack_require__(/*! ./modules/cache.js */ 74));\nvar _record = _interopRequireDefault(__webpack_require__(/*! ./modules/record.js */ 76));\nvar _source = _interopRequireDefault(__webpack_require__(/*! ./modules/source.js */ 77));\nvar _collection = _interopRequireDefault(__webpack_require__(/*! ./modules/collection.js */ 78));\nvar _custom = _interopRequireDefault(__webpack_require__(/*! ./modules/custom.js */ 79));\nvar _path = _interopRequireDefault(__webpack_require__(/*! ./modules/path.js */ 80));\nvar _downer = _interopRequireDefault(__webpack_require__(/*! ./modules/downer.js */ 81));\nvar _audio = _interopRequireDefault(__webpack_require__(/*! ./modules/audio.js */ 91));\nvar _reader = _interopRequireDefault(__webpack_require__(/*! ./modules/reader.js */ 110));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n_vue.default.use(_vuex.default);\nvar store = new _vuex.default.Store({\n  modules: {\n    app: _app.default,\n    user: _user.default,\n    dict: _dict.default,\n    search: _search.default,\n    cache: _cache.default,\n    record: _record.default,\n    source: _source.default,\n    collection: _collection.default,\n    custom: _custom.default,\n    path: _path.default,\n    downer: _downer.default,\n    audio: _audio.default,\n    reader: _reader.default } });var _default =\n\n\nstore;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvaW5kZXguanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiVnVleCIsInN0b3JlIiwiU3RvcmUiLCJtb2R1bGVzIiwiYXBwIiwidXNlciIsImRpY3QiLCJzZWFyY2giLCJjYWNoZSIsInJlY29yZCIsInNvdXJjZSIsImNvbGxlY3Rpb24iLCJjdXN0b20iLCJwYXRoIiwiZG93bmVyIiwiYXVkaW8iLCJyZWFkZXIiXSwibWFwcGluZ3MiOiJ1RkFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEY7QUFDQUEsYUFBSUMsR0FBSixDQUFRQyxhQUFSO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLElBQUlELGNBQUtFLEtBQVQsQ0FBZTtBQUM1QkMsU0FBTyxFQUFFO0FBQ1JDLE9BQUcsRUFBSEEsWUFEUTtBQUVSQyxRQUFJLEVBQUpBLGFBRlE7QUFHUkMsUUFBSSxFQUFKQSxhQUhRO0FBSVJDLFVBQU0sRUFBTkEsZUFKUTtBQUtSQyxTQUFLLEVBQUxBLGNBTFE7QUFNUkMsVUFBTSxFQUFOQSxlQU5RO0FBT1JDLFVBQU0sRUFBTkEsZUFQUTtBQVFSQyxjQUFVLEVBQVZBLG1CQVJRO0FBU1JDLFVBQU0sRUFBTkEsZUFUUTtBQVVSQyxRQUFJLEVBQUpBLGFBVlE7QUFXUkMsVUFBTSxFQUFOQSxlQVhRO0FBWVJDLFNBQUssRUFBTEEsY0FaUTtBQWFSQyxVQUFNLEVBQU5BLGVBYlEsRUFEbUIsRUFBZixDQUFkLEM7OztBQWlCZWYsSyIsImZpbGUiOiI2NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSAndnVlJ1xyXG5pbXBvcnQgVnVleCBmcm9tICd2dWV4J1xyXG5pbXBvcnQgYXBwIGZyb20gJy4vbW9kdWxlcy9hcHAuanMnXHJcbmltcG9ydCB1c2VyIGZyb20gJy4vbW9kdWxlcy91c2VyLmpzJ1xyXG5pbXBvcnQgZGljdCBmcm9tICcuL21vZHVsZXMvZGljdC5qcydcclxuaW1wb3J0IHNlYXJjaCBmcm9tICcuL21vZHVsZXMvc2VhcmNoLmpzJ1xyXG5pbXBvcnQgY2FjaGUgZnJvbSAnLi9tb2R1bGVzL2NhY2hlLmpzJ1xyXG5pbXBvcnQgcmVjb3JkIGZyb20gJy4vbW9kdWxlcy9yZWNvcmQuanMnXHJcbmltcG9ydCBzb3VyY2UgZnJvbSAnLi9tb2R1bGVzL3NvdXJjZS5qcydcclxuaW1wb3J0IGNvbGxlY3Rpb24gZnJvbSAnLi9tb2R1bGVzL2NvbGxlY3Rpb24uanMnXHJcbmltcG9ydCBjdXN0b20gZnJvbSAnLi9tb2R1bGVzL2N1c3RvbS5qcydcclxuaW1wb3J0IHBhdGggZnJvbSAnLi9tb2R1bGVzL3BhdGguanMnXHJcbmltcG9ydCBkb3duZXIgZnJvbSAnLi9tb2R1bGVzL2Rvd25lci5qcydcclxuaW1wb3J0IGF1ZGlvIGZyb20gJy4vbW9kdWxlcy9hdWRpby5qcydcclxuaW1wb3J0IHJlYWRlciBmcm9tICcuL21vZHVsZXMvcmVhZGVyLmpzJ1xyXG5WdWUudXNlKFZ1ZXgpXHJcbmNvbnN0IHN0b3JlID0gbmV3IFZ1ZXguU3RvcmUoe1xyXG5cdG1vZHVsZXM6IHtcclxuXHRcdGFwcCxcclxuXHRcdHVzZXIsXHJcblx0XHRkaWN0LFxyXG5cdFx0c2VhcmNoLFxyXG5cdFx0Y2FjaGUsXHJcblx0XHRyZWNvcmQsXHJcblx0XHRzb3VyY2UsXHJcblx0XHRjb2xsZWN0aW9uLFxyXG5cdFx0Y3VzdG9tLFxyXG5cdFx0cGF0aCxcclxuXHRcdGRvd25lcixcclxuXHRcdGF1ZGlvLFxyXG5cdFx0cmVhZGVyXHJcblx0fVxyXG59KVxyXG5leHBvcnQgZGVmYXVsdCBzdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///65\n");

/***/ }),
/* 66 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/app.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/assets/skin/index.js */ 68));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nvar state = {\n  adult: uni.getStorageSync(_config.ADULT) || false, //青壮年模式\n  adultPwd: uni.getStorageSync(_config.ADULTPWD) || '', //青壮年模式密码\n  skin: uni.getStorageSync(_config.SKIN) || 'default' //皮肤\n};\n\nvar getters = {\n  getAdult: function getAdult(state) {\n    return state.adult;\n  },\n  getAdultPwd: function getAdultPwd(state) {\n    return state.adultPwd;\n  },\n  skinMode: function skinMode(state) {\n    return state.skin;\n  },\n  skinColor: function skinColor(state) {\n    return _index.default[state.skin];\n  } };\n\n\nvar mutations = {\n  setAdult: function setAdult(state, bol) {\n    state.adult = bol;\n    uni.setStorageSync(_config.ADULT, bol);\n  },\n  setAdultPwd: function setAdultPwd(state, pwd) {\n    state.adultPwd = pwd;\n    uni.setStorageSync(_config.ADULTPWD, pwd);\n  },\n  //改变皮肤模式\n  setSkin: function setSkin(state, skin) {\n    state.skin = skin;\n    uni.setStorageSync(_config.SKIN, skin);\n  } };\n\n\nvar actions = {\n  //改变皮肤模式\n  changeSkin: function changeSkin(_ref, skin) {var commit = _ref.commit;\n    commit('setSkin', skin);\n    getApp().globalData.$business.setSkinColor();\n  },\n  changeAdultPwd: function changeAdultPwd(_ref2, pwd) {var commit = _ref2.commit;\n    commit('setAdultPwd', pwd);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9hcHAuanMiXSwibmFtZXMiOlsic3RhdGUiLCJhZHVsdCIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiQURVTFQiLCJhZHVsdFB3ZCIsIkFEVUxUUFdEIiwic2tpbiIsIlNLSU4iLCJnZXR0ZXJzIiwiZ2V0QWR1bHQiLCJnZXRBZHVsdFB3ZCIsInNraW5Nb2RlIiwic2tpbkNvbG9yIiwiU2tpbkNvbG9yIiwibXV0YXRpb25zIiwic2V0QWR1bHQiLCJib2wiLCJzZXRTdG9yYWdlU3luYyIsInNldEFkdWx0UHdkIiwicHdkIiwic2V0U2tpbiIsImFjdGlvbnMiLCJjaGFuZ2VTa2luIiwiY29tbWl0IiwiZ2V0QXBwIiwiZ2xvYmFsRGF0YSIsIiRidXNpbmVzcyIsInNldFNraW5Db2xvciIsImNoYW5nZUFkdWx0UHdkIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBO0FBQ0EsMkY7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLE9BQUssRUFBRUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxhQUFuQixLQUE2QixLQUR2QixFQUM4QjtBQUMzQ0MsVUFBUSxFQUFFSCxHQUFHLENBQUNDLGNBQUosQ0FBbUJHLGdCQUFuQixLQUFnQyxFQUY3QixFQUVpQztBQUM5Q0MsTUFBSSxFQUFFTCxHQUFHLENBQUNDLGNBQUosQ0FBbUJLLFlBQW5CLEtBQTRCLFNBSHJCLENBRytCO0FBSC9CLENBQWQ7O0FBTUEsSUFBTUMsT0FBTyxHQUFHO0FBQ2ZDLFVBRGUsb0JBQ0xWLEtBREssRUFDRTtBQUNoQixXQUFPQSxLQUFLLENBQUNDLEtBQWI7QUFDQSxHQUhjO0FBSWZVLGFBSmUsdUJBSUZYLEtBSkUsRUFJSztBQUNuQixXQUFPQSxLQUFLLENBQUNLLFFBQWI7QUFDQSxHQU5jO0FBT2ZPLFVBUGUsb0JBT0xaLEtBUEssRUFPRTtBQUNoQixXQUFPQSxLQUFLLENBQUNPLElBQWI7QUFDQSxHQVRjO0FBVWZNLFdBVmUscUJBVUpiLEtBVkksRUFVRztBQUNqQixXQUFPYyxlQUFVZCxLQUFLLENBQUNPLElBQWhCLENBQVA7QUFDQSxHQVpjLEVBQWhCOzs7QUFlQSxJQUFNUSxTQUFTLEdBQUc7QUFDakJDLFVBRGlCLG9CQUNQaEIsS0FETyxFQUNBaUIsR0FEQSxFQUNLO0FBQ3JCakIsU0FBSyxDQUFDQyxLQUFOLEdBQWNnQixHQUFkO0FBQ0FmLE9BQUcsQ0FBQ2dCLGNBQUosQ0FBbUJkLGFBQW5CLEVBQTBCYSxHQUExQjtBQUNBLEdBSmdCO0FBS2pCRSxhQUxpQix1QkFLSm5CLEtBTEksRUFLR29CLEdBTEgsRUFLUTtBQUN4QnBCLFNBQUssQ0FBQ0ssUUFBTixHQUFpQmUsR0FBakI7QUFDQWxCLE9BQUcsQ0FBQ2dCLGNBQUosQ0FBbUJaLGdCQUFuQixFQUE2QmMsR0FBN0I7QUFDQSxHQVJnQjtBQVNqQjtBQUNBQyxTQVZpQixtQkFVUnJCLEtBVlEsRUFVRE8sSUFWQyxFQVVLO0FBQ3JCUCxTQUFLLENBQUNPLElBQU4sR0FBYUEsSUFBYjtBQUNBTCxPQUFHLENBQUNnQixjQUFKLENBQW1CVixZQUFuQixFQUF5QkQsSUFBekI7QUFDQSxHQWJnQixFQUFsQjs7O0FBZ0JBLElBQU1lLE9BQU8sR0FBRztBQUNmO0FBQ0FDLFlBRmUsNEJBRU9oQixJQUZQLEVBRWEsS0FBZmlCLE1BQWUsUUFBZkEsTUFBZTtBQUMzQkEsVUFBTSxDQUFDLFNBQUQsRUFBWWpCLElBQVosQ0FBTjtBQUNBa0IsVUFBTSxHQUFHQyxVQUFULENBQW9CQyxTQUFwQixDQUE4QkMsWUFBOUI7QUFDQSxHQUxjO0FBTWZDLGdCQU5lLGlDQU1XVCxHQU5YLEVBTWdCLEtBQWRJLE1BQWMsU0FBZEEsTUFBYztBQUM5QkEsVUFBTSxDQUFDLGFBQUQsRUFBZ0JKLEdBQWhCLENBQU47QUFDQSxHQVJjLEVBQWhCLEM7OztBQVdlO0FBQ1hVLFlBQVUsRUFBRSxJQUREO0FBRVg5QixPQUFLLEVBQUxBLEtBRlc7QUFHWFMsU0FBTyxFQUFQQSxPQUhXO0FBSVhNLFdBQVMsRUFBVEEsU0FKVztBQUtkTyxTQUFPLEVBQVBBLE9BTGMsRSIsImZpbGUiOiI2Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFEVUxULCBBRFVMVFBXRCwgU0tJTiB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuaW1wb3J0IFNraW5Db2xvciBmcm9tICdAL2Fzc2V0cy9za2luL2luZGV4LmpzJ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0YWR1bHQ6IHVuaS5nZXRTdG9yYWdlU3luYyhBRFVMVCkgfHwgZmFsc2UsIC8v6Z2S5aOu5bm05qih5byPXHJcblx0YWR1bHRQd2Q6IHVuaS5nZXRTdG9yYWdlU3luYyhBRFVMVFBXRCkgfHwgJycsIC8v6Z2S5aOu5bm05qih5byP5a+G56CBXHJcblx0c2tpbjogdW5pLmdldFN0b3JhZ2VTeW5jKFNLSU4pIHx8ICdkZWZhdWx0JyAvL+earuiCpFxyXG59XHJcblxyXG5jb25zdCBnZXR0ZXJzID0ge1xyXG5cdGdldEFkdWx0IChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLmFkdWx0XHJcblx0fSxcclxuXHRnZXRBZHVsdFB3ZCAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5hZHVsdFB3ZFxyXG5cdH0sXHJcblx0c2tpbk1vZGUgKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuc2tpblxyXG5cdH0sXHJcblx0c2tpbkNvbG9yIChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIFNraW5Db2xvcltzdGF0ZS5za2luXVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgbXV0YXRpb25zID0ge1xyXG5cdHNldEFkdWx0IChzdGF0ZSwgYm9sKSB7XHJcblx0XHRzdGF0ZS5hZHVsdCA9IGJvbDtcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhBRFVMVCwgYm9sKVxyXG5cdH0sXHJcblx0c2V0QWR1bHRQd2QgKHN0YXRlLCBwd2QpIHtcclxuXHRcdHN0YXRlLmFkdWx0UHdkID0gcHdkO1xyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKEFEVUxUUFdELCBwd2QpXHJcblx0fSxcclxuXHQvL+aUueWPmOearuiCpOaooeW8j1xyXG5cdHNldFNraW4gKHN0YXRlLCBza2luKSB7XHJcblx0XHRzdGF0ZS5za2luID0gc2tpbjtcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhTS0lOLCBza2luKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgYWN0aW9ucyA9IHtcclxuXHQvL+aUueWPmOearuiCpOaooeW8j1xyXG5cdGNoYW5nZVNraW4gKHtjb21taXR9LCBza2luKSB7XHJcblx0XHRjb21taXQoJ3NldFNraW4nLCBza2luKVxyXG5cdFx0Z2V0QXBwKCkuZ2xvYmFsRGF0YS4kYnVzaW5lc3Muc2V0U2tpbkNvbG9yKClcclxuXHR9LFxyXG5cdGNoYW5nZUFkdWx0UHdkICh7Y29tbWl0fSwgcHdkKSB7XHJcblx0XHRjb21taXQoJ3NldEFkdWx0UHdkJywgcHdkKVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbmFtZXNwYWNlZDogdHJ1ZSxcclxuICAgIHN0YXRlLFxyXG4gICAgZ2V0dGVycyxcclxuICAgIG11dGF0aW9ucyxcclxuXHRhY3Rpb25zXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///66\n");

/***/ }),
/* 67 */
/*!****************************************************!*\
  !*** G:/my-project/uni-polymerize/store/config.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.READDIRECTION = exports.READLINEHEIGHT = exports.READPAGETYPE = exports.READFONTSIZE = exports.LYRICSHOW = exports.PLAYMODE = exports.SOURCE = exports.RECORD = exports.CUSTOM = exports.PATH = exports.COLLECTION = exports.SEARCHHISTORY = exports.FILECACHE = exports.ADULTPWD = exports.ADULT = exports.DICT = exports.SKIN = exports.USER = void 0;var USER = 'UNI_READER_USER'; //用户\nexports.USER = USER;var SKIN = 'UNI_READER_SKIN'; //皮肤\nexports.SKIN = SKIN;var DICT = 'UNI_READER_DICT'; //字典\nexports.DICT = DICT;var ADULT = 'UNI_READER_ADULT'; //青壮年\nexports.ADULT = ADULT;var ADULTPWD = 'UNI_READER_ADULT_PWD'; //青壮年密码\nexports.ADULTPWD = ADULTPWD;var FILECACHE = 'UNI_READER_FILE_CACHE'; //文件缓存\nexports.FILECACHE = FILECACHE;var SEARCHHISTORY = 'UNI_READER_SEARCH_HISTORY'; //搜索历史\nexports.SEARCHHISTORY = SEARCHHISTORY;var COLLECTION = 'UNI_READER_COLLECTION'; //收藏列表\nexports.COLLECTION = COLLECTION;var PATH = 'UNI_READER_PATH'; //本地资源路径\nexports.PATH = PATH;var CUSTOM = 'UNI_READER_CUSTOM'; //自定义分组\nexports.CUSTOM = CUSTOM;var RECORD = 'UNI_READER_RECORD'; //记录列表\nexports.RECORD = RECORD;var SOURCE = 'UNI_READER_SOURCE'; //来源控制\nexports.SOURCE = SOURCE;var PLAYMODE = 'UNI_READER_PLAY_MODE'; //音乐播放模式 <round | 顺序播放> <loop | 单曲循环> <random | 随机播放>\nexports.PLAYMODE = PLAYMODE;var LYRICSHOW = 'UNI_READER_LYRIC_SHOW'; //是否显示全局歌词\nexports.LYRICSHOW = LYRICSHOW;var READFONTSIZE = 'UNI_READER_READ_FONT_SIZE'; //小说阅读字体大小\nexports.READFONTSIZE = READFONTSIZE;var READPAGETYPE = 'UNI_READER_READ_PAGE_TYPE'; //小说阅读翻页类型\nexports.READPAGETYPE = READPAGETYPE;var READLINEHEIGHT = 'UNI_READER_READ_LINE_HEIGHT'; //小说阅读行间距\nexports.READLINEHEIGHT = READLINEHEIGHT;var READDIRECTION = 'UNI_READER_READ_DIRECTION'; //阅读方向\nexports.READDIRECTION = READDIRECTION;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvY29uZmlnLmpzIl0sIm5hbWVzIjpbIlVTRVIiLCJTS0lOIiwiRElDVCIsIkFEVUxUIiwiQURVTFRQV0QiLCJGSUxFQ0FDSEUiLCJTRUFSQ0hISVNUT1JZIiwiQ09MTEVDVElPTiIsIlBBVEgiLCJDVVNUT00iLCJSRUNPUkQiLCJTT1VSQ0UiLCJQTEFZTU9ERSIsIkxZUklDU0hPVyIsIlJFQURGT05UU0laRSIsIlJFQURQQUdFVFlQRSIsIlJFQURMSU5FSEVJR0hUIiwiUkVBRERJUkVDVElPTiJdLCJtYXBwaW5ncyI6IjhaQUFPLElBQU1BLElBQUksR0FBRyxpQkFBYixDLENBQThCO29CQUM5QixJQUFNQyxJQUFJLEdBQUcsaUJBQWIsQyxDQUE4QjtvQkFDOUIsSUFBTUMsSUFBSSxHQUFHLGlCQUFiLEMsQ0FBOEI7b0JBQzlCLElBQU1DLEtBQUssR0FBRyxrQkFBZCxDLENBQWdDO3NCQUNoQyxJQUFNQyxRQUFRLEdBQUcsc0JBQWpCLEMsQ0FBdUM7NEJBQ3ZDLElBQU1DLFNBQVMsR0FBRyx1QkFBbEIsQyxDQUF5Qzs4QkFDekMsSUFBTUMsYUFBYSxHQUFHLDJCQUF0QixDLENBQWlEO3NDQUNqRCxJQUFNQyxVQUFVLEdBQUcsdUJBQW5CLEMsQ0FBMEM7Z0NBQzFDLElBQU1DLElBQUksR0FBRyxpQkFBYixDLENBQThCO29CQUM5QixJQUFNQyxNQUFNLEdBQUcsbUJBQWYsQyxDQUFrQzt3QkFDbEMsSUFBTUMsTUFBTSxHQUFHLG1CQUFmLEMsQ0FBa0M7d0JBQ2xDLElBQU1DLE1BQU0sR0FBRyxtQkFBZixDLENBQWtDO3dCQUNsQyxJQUFNQyxRQUFRLEdBQUcsc0JBQWpCLEMsQ0FBdUM7NEJBQ3ZDLElBQU1DLFNBQVMsR0FBRyx1QkFBbEIsQyxDQUF5Qzs4QkFDekMsSUFBTUMsWUFBWSxHQUFHLDJCQUFyQixDLENBQWdEO29DQUNoRCxJQUFNQyxZQUFZLEdBQUcsMkJBQXJCLEMsQ0FBZ0Q7b0NBQ2hELElBQU1DLGNBQWMsR0FBRyw2QkFBdkIsQyxDQUFvRDt3Q0FDcEQsSUFBTUMsYUFBYSxHQUFHLDJCQUF0QixDLENBQWlEIiwiZmlsZSI6IjY3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFVTRVIgPSAnVU5JX1JFQURFUl9VU0VSJy8v55So5oi3XHJcbmV4cG9ydCBjb25zdCBTS0lOID0gJ1VOSV9SRUFERVJfU0tJTicvL+earuiCpFxyXG5leHBvcnQgY29uc3QgRElDVCA9ICdVTklfUkVBREVSX0RJQ1QnLy/lrZflhbhcclxuZXhwb3J0IGNvbnN0IEFEVUxUID0gJ1VOSV9SRUFERVJfQURVTFQnLy/pnZLlo67lubRcclxuZXhwb3J0IGNvbnN0IEFEVUxUUFdEID0gJ1VOSV9SRUFERVJfQURVTFRfUFdEJy8v6Z2S5aOu5bm05a+G56CBXHJcbmV4cG9ydCBjb25zdCBGSUxFQ0FDSEUgPSAnVU5JX1JFQURFUl9GSUxFX0NBQ0hFJy8v5paH5Lu257yT5a2YXHJcbmV4cG9ydCBjb25zdCBTRUFSQ0hISVNUT1JZID0gJ1VOSV9SRUFERVJfU0VBUkNIX0hJU1RPUlknLy/mkJzntKLljoblj7JcclxuZXhwb3J0IGNvbnN0IENPTExFQ1RJT04gPSAnVU5JX1JFQURFUl9DT0xMRUNUSU9OJy8v5pS26JeP5YiX6KGoXHJcbmV4cG9ydCBjb25zdCBQQVRIID0gJ1VOSV9SRUFERVJfUEFUSCcvL+acrOWcsOi1hOa6kOi3r+W+hFxyXG5leHBvcnQgY29uc3QgQ1VTVE9NID0gJ1VOSV9SRUFERVJfQ1VTVE9NJy8v6Ieq5a6a5LmJ5YiG57uEXHJcbmV4cG9ydCBjb25zdCBSRUNPUkQgPSAnVU5JX1JFQURFUl9SRUNPUkQnLy/orrDlvZXliJfooahcclxuZXhwb3J0IGNvbnN0IFNPVVJDRSA9ICdVTklfUkVBREVSX1NPVVJDRScvL+adpea6kOaOp+WItlxyXG5leHBvcnQgY29uc3QgUExBWU1PREUgPSAnVU5JX1JFQURFUl9QTEFZX01PREUnLy/pn7PkuZDmkq3mlL7mqKHlvI8gPHJvdW5kIHwg6aG65bqP5pKt5pS+PiA8bG9vcCB8IOWNleabsuW+queOrz4gPHJhbmRvbSB8IOmaj+acuuaSreaUvj5cclxuZXhwb3J0IGNvbnN0IExZUklDU0hPVyA9ICdVTklfUkVBREVSX0xZUklDX1NIT1cnLy/mmK/lkKbmmL7npLrlhajlsYDmrYzor41cclxuZXhwb3J0IGNvbnN0IFJFQURGT05UU0laRSA9ICdVTklfUkVBREVSX1JFQURfRk9OVF9TSVpFJy8v5bCP6K+06ZiF6K+75a2X5L2T5aSn5bCPXHJcbmV4cG9ydCBjb25zdCBSRUFEUEFHRVRZUEUgPSAnVU5JX1JFQURFUl9SRUFEX1BBR0VfVFlQRScvL+Wwj+ivtOmYheivu+e/u+mhteexu+Wei1xyXG5leHBvcnQgY29uc3QgUkVBRExJTkVIRUlHSFQgPSAnVU5JX1JFQURFUl9SRUFEX0xJTkVfSEVJR0hUJy8v5bCP6K+06ZiF6K+76KGM6Ze06LedXHJcbmV4cG9ydCBjb25zdCBSRUFERElSRUNUSU9OID0gJ1VOSV9SRUFERVJfUkVBRF9ESVJFQ1RJT04nLy/pmIXor7vmlrnlkJFcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///67\n");

/***/ }),
/* 68 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/skin/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _skin = _interopRequireDefault(__webpack_require__(/*! ./default/skin.js */ 69));\nvar _skin2 = _interopRequireDefault(__webpack_require__(/*! ./night/skin.js */ 70));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n//常用颜色\nvar colors = {\n  color_green: '#21C088',\n  color_red: '#FF3B30',\n  color_red_2: '#d43c33',\n  color_blue: '#2ca2f9',\n  color_white: '#FAFAFA',\n  color_black: '#191919',\n  color_orange: '#ff962f',\n  color_yellow: '#FFCA28',\n  color_cyan: '#16c2c2' };\n\n\nObject.keys(colors).forEach(function (key) {\n  _skin.default[key] = colors[key],\n  _skin2.default[key] = colors[key];\n});var _default =\n\n{\n  'default': _skin.default,\n  'night': _skin2.default };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL3NraW4vaW5kZXguanMiXSwibmFtZXMiOlsiY29sb3JzIiwiY29sb3JfZ3JlZW4iLCJjb2xvcl9yZWQiLCJjb2xvcl9yZWRfMiIsImNvbG9yX2JsdWUiLCJjb2xvcl93aGl0ZSIsImNvbG9yX2JsYWNrIiwiY29sb3Jfb3JhbmdlIiwiY29sb3JfeWVsbG93IiwiY29sb3JfY3lhbiIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwiU2tpbkRlZmF1bHQiLCJTa2luTmlnaHQiXSwibWFwcGluZ3MiOiJ1RkFBQTtBQUNBLG9GOztBQUVBO0FBQ0EsSUFBTUEsTUFBTSxHQUFHO0FBQ2RDLGFBQVcsRUFBRSxTQURDO0FBRWRDLFdBQVMsRUFBRSxTQUZHO0FBR2RDLGFBQVcsRUFBRSxTQUhDO0FBSWRDLFlBQVUsRUFBRSxTQUpFO0FBS2RDLGFBQVcsRUFBRSxTQUxDO0FBTWRDLGFBQVcsRUFBRSxTQU5DO0FBT2RDLGNBQVksRUFBRSxTQVBBO0FBUWRDLGNBQVksRUFBRSxTQVJBO0FBU2RDLFlBQVUsRUFBRSxTQVRFLEVBQWY7OztBQVlBQyxNQUFNLENBQUNDLElBQVAsQ0FBWVgsTUFBWixFQUFvQlksT0FBcEIsQ0FBNEIsVUFBQUMsR0FBRyxFQUFJO0FBQ2xDQyxnQkFBWUQsR0FBWixJQUFtQmIsTUFBTSxDQUFDYSxHQUFELENBQXpCO0FBQ0FFLGlCQUFVRixHQUFWLElBQWlCYixNQUFNLENBQUNhLEdBQUQsQ0FEdkI7QUFFQSxDQUhELEU7O0FBS2U7QUFDZCxhQUFXQyxhQURHO0FBRWQsV0FBU0MsY0FGSyxFIiwiZmlsZSI6IjY4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNraW5EZWZhdWx0IGZyb20gXCIuL2RlZmF1bHQvc2tpbi5qc1wiXHJcbmltcG9ydCBTa2luTmlnaHQgZnJvbSBcIi4vbmlnaHQvc2tpbi5qc1wiXHJcblxyXG4vL+W4uOeUqOminOiJslxyXG5jb25zdCBjb2xvcnMgPSB7XHJcblx0Y29sb3JfZ3JlZW46ICcjMjFDMDg4JyxcclxuXHRjb2xvcl9yZWQ6ICcjRkYzQjMwJyxcclxuXHRjb2xvcl9yZWRfMjogJyNkNDNjMzMnLFxyXG5cdGNvbG9yX2JsdWU6ICcjMmNhMmY5JyxcclxuXHRjb2xvcl93aGl0ZTogJyNGQUZBRkEnLFxyXG5cdGNvbG9yX2JsYWNrOiAnIzE5MTkxOScsXHJcblx0Y29sb3Jfb3JhbmdlOiAnI2ZmOTYyZicsXHJcblx0Y29sb3JfeWVsbG93OiAnI0ZGQ0EyOCcsXHJcblx0Y29sb3JfY3lhbjogJyMxNmMyYzInXHJcbn1cclxuXHJcbk9iamVjdC5rZXlzKGNvbG9ycykuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFNraW5EZWZhdWx0W2tleV0gPSBjb2xvcnNba2V5XSxcclxuXHRTa2luTmlnaHRba2V5XSA9IGNvbG9yc1trZXldXHJcbn0pXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0J2RlZmF1bHQnOiBTa2luRGVmYXVsdCxcclxuXHQnbmlnaHQnOiBTa2luTmlnaHRcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68\n");

/***/ }),
/* 69 */
/*!****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/skin/default/skin.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* 默认皮肤 */var _default =\n\n{\n  color_theme_1: '#2ca2f9',\n  color_theme_2: '#f2fbff',\n  color_bg_1: '#FFFFFF',\n  color_bg_2: '#fbfbfb',\n  color_actived_1: '#2ca2f9',\n  color_1: '#333',\n  color_2: '#666',\n  color_3: '#999',\n  color_4: '#fff',\n  color_5: '#737373',\n  color_gap_1: '#E0E0E0',\n  color_gap_2: '#f6f7f9',\n  color_read_text: '#2E2B23',\n  color_read_bg: '#BFAD8A' };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL3NraW4vZGVmYXVsdC9za2luLmpzIl0sIm5hbWVzIjpbImNvbG9yX3RoZW1lXzEiLCJjb2xvcl90aGVtZV8yIiwiY29sb3JfYmdfMSIsImNvbG9yX2JnXzIiLCJjb2xvcl9hY3RpdmVkXzEiLCJjb2xvcl8xIiwiY29sb3JfMiIsImNvbG9yXzMiLCJjb2xvcl80IiwiY29sb3JfNSIsImNvbG9yX2dhcF8xIiwiY29sb3JfZ2FwXzIiLCJjb2xvcl9yZWFkX3RleHQiLCJjb2xvcl9yZWFkX2JnIl0sIm1hcHBpbmdzIjoid0ZBQUEsVTs7QUFFZTtBQUNkQSxlQUFhLEVBQUUsU0FERDtBQUVkQyxlQUFhLEVBQUUsU0FGRDtBQUdkQyxZQUFVLEVBQUUsU0FIRTtBQUlkQyxZQUFVLEVBQUUsU0FKRTtBQUtkQyxpQkFBZSxFQUFFLFNBTEg7QUFNZEMsU0FBTyxFQUFFLE1BTks7QUFPZEMsU0FBTyxFQUFFLE1BUEs7QUFRZEMsU0FBTyxFQUFFLE1BUks7QUFTZEMsU0FBTyxFQUFFLE1BVEs7QUFVZEMsU0FBTyxFQUFFLFNBVks7QUFXZEMsYUFBVyxFQUFFLFNBWEM7QUFZZEMsYUFBVyxFQUFFLFNBWkM7QUFhZEMsaUJBQWUsRUFBRSxTQWJIO0FBY2RDLGVBQWEsRUFBRSxTQWRELEUiLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiDpu5jorqTnmq7ogqQgKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuXHRjb2xvcl90aGVtZV8xOiAnIzJjYTJmOScsXHJcblx0Y29sb3JfdGhlbWVfMjogJyNmMmZiZmYnLFxyXG5cdGNvbG9yX2JnXzE6ICcjRkZGRkZGJyxcclxuXHRjb2xvcl9iZ18yOiAnI2ZiZmJmYicsXHJcblx0Y29sb3JfYWN0aXZlZF8xOiAnIzJjYTJmOScsXHJcblx0Y29sb3JfMTogJyMzMzMnLFxyXG5cdGNvbG9yXzI6ICcjNjY2JyxcclxuXHRjb2xvcl8zOiAnIzk5OScsXHJcblx0Y29sb3JfNDogJyNmZmYnLFxyXG5cdGNvbG9yXzU6ICcjNzM3MzczJyxcclxuXHRjb2xvcl9nYXBfMTogJyNFMEUwRTAnLFxyXG5cdGNvbG9yX2dhcF8yOiAnI2Y2ZjdmOScsXHJcblx0Y29sb3JfcmVhZF90ZXh0OiAnIzJFMkIyMycsXHJcblx0Y29sb3JfcmVhZF9iZzogJyNCRkFEOEEnXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///69\n");

/***/ }),
/* 70 */
/*!**************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/skin/night/skin.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; /* 夜间皮肤 */var _default =\n\n{\n  color_theme_1: '#3C3C3C',\n  color_theme_2: '#2C2C2C',\n  color_bg_1: '#131313',\n  color_bg_2: '#272822',\n  color_actived_1: '#FAFAFA',\n  color_1: '#f4f7f5',\n  color_2: '#8a8a8a',\n  color_3: '#888888',\n  color_4: '#777777',\n  color_5: '#737373',\n  color_gap_1: '#3F3F3F',\n  color_gap_2: '#4f4f4f',\n  color_read_text: '#95A3A6',\n  color_read_bg: '#393E41' };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL3NraW4vbmlnaHQvc2tpbi5qcyJdLCJuYW1lcyI6WyJjb2xvcl90aGVtZV8xIiwiY29sb3JfdGhlbWVfMiIsImNvbG9yX2JnXzEiLCJjb2xvcl9iZ18yIiwiY29sb3JfYWN0aXZlZF8xIiwiY29sb3JfMSIsImNvbG9yXzIiLCJjb2xvcl8zIiwiY29sb3JfNCIsImNvbG9yXzUiLCJjb2xvcl9nYXBfMSIsImNvbG9yX2dhcF8yIiwiY29sb3JfcmVhZF90ZXh0IiwiY29sb3JfcmVhZF9iZyJdLCJtYXBwaW5ncyI6IndGQUFBLFU7O0FBRWU7QUFDZEEsZUFBYSxFQUFFLFNBREQ7QUFFZEMsZUFBYSxFQUFFLFNBRkQ7QUFHZEMsWUFBVSxFQUFFLFNBSEU7QUFJZEMsWUFBVSxFQUFFLFNBSkU7QUFLZEMsaUJBQWUsRUFBRSxTQUxIO0FBTWRDLFNBQU8sRUFBRSxTQU5LO0FBT2RDLFNBQU8sRUFBRSxTQVBLO0FBUWRDLFNBQU8sRUFBRSxTQVJLO0FBU2RDLFNBQU8sRUFBRSxTQVRLO0FBVWRDLFNBQU8sRUFBRSxTQVZLO0FBV2RDLGFBQVcsRUFBRSxTQVhDO0FBWWRDLGFBQVcsRUFBRSxTQVpDO0FBYWRDLGlCQUFlLEVBQUUsU0FiSDtBQWNkQyxlQUFhLEVBQUUsU0FkRCxFIiwiZmlsZSI6IjcwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyog5aSc6Ze055qu6IKkICovXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0Y29sb3JfdGhlbWVfMTogJyMzQzNDM0MnLFxyXG5cdGNvbG9yX3RoZW1lXzI6ICcjMkMyQzJDJyxcclxuXHRjb2xvcl9iZ18xOiAnIzEzMTMxMycsXHJcblx0Y29sb3JfYmdfMjogJyMyNzI4MjInLFxyXG5cdGNvbG9yX2FjdGl2ZWRfMTogJyNGQUZBRkEnLFxyXG5cdGNvbG9yXzE6ICcjZjRmN2Y1JyxcclxuXHRjb2xvcl8yOiAnIzhhOGE4YScsXHJcblx0Y29sb3JfMzogJyM4ODg4ODgnLFxyXG5cdGNvbG9yXzQ6ICcjNzc3Nzc3JyxcclxuXHRjb2xvcl81OiAnIzczNzM3MycsXHJcblx0Y29sb3JfZ2FwXzE6ICcjM0YzRjNGJyxcclxuXHRjb2xvcl9nYXBfMjogJyM0ZjRmNGYnLFxyXG5cdGNvbG9yX3JlYWRfdGV4dDogJyM5NUEzQTYnLFxyXG5cdGNvbG9yX3JlYWRfYmc6ICcjMzkzRTQxJ1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///70\n");

/***/ }),
/* 71 */
/*!**********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/user.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);var _uni$getStorageSync, _uni$getStorageSync2;\n\nvar state = {\n  name: ((_uni$getStorageSync = uni.getStorageSync(_config.USER)) === null || _uni$getStorageSync === void 0 ? void 0 : _uni$getStorageSync.name) || '史蒂芬·李', //用户姓名\n  avatar: ((_uni$getStorageSync2 = uni.getStorageSync(_config.USER)) === null || _uni$getStorageSync2 === void 0 ? void 0 : _uni$getStorageSync2.avatar) || '' //用户头像\n};\n\nvar getters = {\n  getName: function getName(state) {\n    return state.name;\n  },\n  getAvatar: function getAvatar(state) {\n    return state.avatar;\n  } };\n\n\nvar mutations = {\n  setName: function setName(state, name) {\n    state.name = name;\n    var user = uni.getStorageSync(_config.USER) || {\n      name: '',\n      avatar: '' };\n\n    user.name = name;\n    uni.setStorageSync(_config.USER, user);\n  },\n  setAvatar: function setAvatar(state, avatar) {\n    state.avatar = avatar;\n    var user = uni.getStorageSync(_config.USER) || {\n      name: '',\n      avatar: '' };\n\n    user.avatar = avatar;\n    uni.setStorageSync(_config.USER, user);\n  } };\n\n\n\nvar actions = {\n  updateName: function updateName(_ref, name) {var commit = _ref.commit;\n    commit('setName', name);\n  },\n  updateAvatar: function updateAvatar(_ref2, avatar) {var commit = _ref2.commit;\n    commit('setAvatar', avatar);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy91c2VyLmpzIl0sIm5hbWVzIjpbInN0YXRlIiwibmFtZSIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiVVNFUiIsImF2YXRhciIsImdldHRlcnMiLCJnZXROYW1lIiwiZ2V0QXZhdGFyIiwibXV0YXRpb25zIiwic2V0TmFtZSIsInVzZXIiLCJzZXRTdG9yYWdlU3luYyIsInNldEF2YXRhciIsImFjdGlvbnMiLCJ1cGRhdGVOYW1lIiwiY29tbWl0IiwidXBkYXRlQXZhdGFyIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBLDBEOztBQUVBLElBQU1BLEtBQUssR0FBRztBQUNiQyxNQUFJLEVBQUUsd0JBQUFDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQkMsWUFBbkIsNkVBQTBCSCxJQUExQixLQUFrQyxPQUQzQixFQUNtQztBQUNoREksUUFBTSxFQUFFLHlCQUFBSCxHQUFHLENBQUNDLGNBQUosQ0FBbUJDLFlBQW5CLCtFQUEwQkMsTUFBMUIsS0FBb0MsRUFGL0IsQ0FFaUM7QUFGakMsQ0FBZDs7QUFLQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsU0FEZSxtQkFDTlAsS0FETSxFQUNDO0FBQ2YsV0FBT0EsS0FBSyxDQUFDQyxJQUFiO0FBQ0EsR0FIYztBQUlmTyxXQUplLHFCQUlKUixLQUpJLEVBSUc7QUFDakIsV0FBT0EsS0FBSyxDQUFDSyxNQUFiO0FBQ0EsR0FOYyxFQUFoQjs7O0FBU0EsSUFBTUksU0FBUyxHQUFHO0FBQ2pCQyxTQURpQixtQkFDUlYsS0FEUSxFQUNEQyxJQURDLEVBQ0s7QUFDckJELFNBQUssQ0FBQ0MsSUFBTixHQUFhQSxJQUFiO0FBQ0EsUUFBSVUsSUFBSSxHQUFHVCxHQUFHLENBQUNDLGNBQUosQ0FBbUJDLFlBQW5CLEtBQTRCO0FBQ3RDSCxVQUFJLEVBQUUsRUFEZ0M7QUFFdENJLFlBQU0sRUFBRSxFQUY4QixFQUF2Qzs7QUFJQU0sUUFBSSxDQUFDVixJQUFMLEdBQVlBLElBQVo7QUFDQUMsT0FBRyxDQUFDVSxjQUFKLENBQW1CUixZQUFuQixFQUF5Qk8sSUFBekI7QUFDQSxHQVRnQjtBQVVqQkUsV0FWaUIscUJBVU5iLEtBVk0sRUFVQ0ssTUFWRCxFQVVTO0FBQ3pCTCxTQUFLLENBQUNLLE1BQU4sR0FBZUEsTUFBZjtBQUNBLFFBQUlNLElBQUksR0FBR1QsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxZQUFuQixLQUE0QjtBQUN0Q0gsVUFBSSxFQUFFLEVBRGdDO0FBRXRDSSxZQUFNLEVBQUUsRUFGOEIsRUFBdkM7O0FBSUFNLFFBQUksQ0FBQ04sTUFBTCxHQUFjQSxNQUFkO0FBQ0FILE9BQUcsQ0FBQ1UsY0FBSixDQUFtQlIsWUFBbkIsRUFBeUJPLElBQXpCO0FBQ0EsR0FsQmdCLEVBQWxCOzs7O0FBc0JBLElBQU1HLE9BQU8sR0FBRztBQUNmQyxZQURlLDRCQUNPZCxJQURQLEVBQ2EsS0FBZmUsTUFBZSxRQUFmQSxNQUFlO0FBQzNCQSxVQUFNLENBQUMsU0FBRCxFQUFZZixJQUFaLENBQU47QUFDQSxHQUhjO0FBSWZnQixjQUplLCtCQUlTWixNQUpULEVBSWlCLEtBQWpCVyxNQUFpQixTQUFqQkEsTUFBaUI7QUFDL0JBLFVBQU0sQ0FBQyxXQUFELEVBQWNYLE1BQWQsQ0FBTjtBQUNBLEdBTmMsRUFBaEIsQzs7O0FBU2U7QUFDWGEsWUFBVSxFQUFFLElBREQ7QUFFWGxCLE9BQUssRUFBTEEsS0FGVztBQUdYTSxTQUFPLEVBQVBBLE9BSFc7QUFJZEcsV0FBUyxFQUFUQSxTQUpjO0FBS2RLLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6IjcxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVVNFUiB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuXHJcbmNvbnN0IHN0YXRlID0ge1xyXG5cdG5hbWU6IHVuaS5nZXRTdG9yYWdlU3luYyhVU0VSKT8ubmFtZSB8fCAn5Y+y6JKC6IqswrfmnY4nLC8v55So5oi35aeT5ZCNXHJcblx0YXZhdGFyOiB1bmkuZ2V0U3RvcmFnZVN5bmMoVVNFUik/LmF2YXRhciB8fCAnJy8v55So5oi35aS05YOPXHJcbn1cclxuXHJcbmNvbnN0IGdldHRlcnMgPSB7XHJcblx0Z2V0TmFtZSAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5uYW1lXHJcblx0fSxcclxuXHRnZXRBdmF0YXIgKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuYXZhdGFyXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBtdXRhdGlvbnMgPSB7XHJcblx0c2V0TmFtZSAoc3RhdGUsIG5hbWUpIHtcclxuXHRcdHN0YXRlLm5hbWUgPSBuYW1lXHJcblx0XHRsZXQgdXNlciA9IHVuaS5nZXRTdG9yYWdlU3luYyhVU0VSKSB8fCB7XHJcblx0XHRcdG5hbWU6ICcnLFxyXG5cdFx0XHRhdmF0YXI6ICcnXHJcblx0XHR9XHJcblx0XHR1c2VyLm5hbWUgPSBuYW1lXHJcblx0XHR1bmkuc2V0U3RvcmFnZVN5bmMoVVNFUiwgdXNlcilcclxuXHR9LFxyXG5cdHNldEF2YXRhciAoc3RhdGUsIGF2YXRhcikge1xyXG5cdFx0c3RhdGUuYXZhdGFyID0gYXZhdGFyXHJcblx0XHRsZXQgdXNlciA9IHVuaS5nZXRTdG9yYWdlU3luYyhVU0VSKSB8fCB7XHJcblx0XHRcdG5hbWU6ICcnLFxyXG5cdFx0XHRhdmF0YXI6ICcnXHJcblx0XHR9XHJcblx0XHR1c2VyLmF2YXRhciA9IGF2YXRhclxyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKFVTRVIsIHVzZXIpXHJcblx0fVxyXG59XHJcblxyXG5cclxuY29uc3QgYWN0aW9ucyA9IHtcclxuXHR1cGRhdGVOYW1lICh7Y29tbWl0fSwgbmFtZSkge1xyXG5cdFx0Y29tbWl0KCdzZXROYW1lJywgbmFtZSlcclxuXHR9LFxyXG5cdHVwZGF0ZUF2YXRhciAoe2NvbW1pdH0sIGF2YXRhcikge1xyXG5cdFx0Y29tbWl0KCdzZXRBdmF0YXInLCBhdmF0YXIpXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBuYW1lc3BhY2VkOiB0cnVlLFxyXG4gICAgc3RhdGUsXHJcbiAgICBnZXR0ZXJzLFxyXG5cdG11dGF0aW9ucyxcclxuXHRhY3Rpb25zXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///71\n");

/***/ }),
/* 72 */
/*!**********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/dict.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  dict: uni.getStorageSync(_config.DICT) || [] //字典列表\n};\n\nvar getters = {\n  get: function get(state) {\n    return state.dict;\n  } };\n\n\nvar mutations = {\n  set: function set(state, dict) {\n    state.dict = dict;\n    uni.setStorageSync(_config.DICT, state.dict);\n  } };\n\n\nvar actions = {\n  add: function add(_ref, dict) {var state = _ref.state,commit = _ref.commit;\n    var list = _toConsumableArray(state.dict);\n    var index = list.findIndex(function (item) {return item.id == dict.id;});\n    index > -1 ? list[index] = dict : list.push(dict);\n    commit('set', list);\n  },\n  remove: function remove(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var list = _toConsumableArray(state.dict);\n    var index = list.findIndex(function (item) {return item.id == id;});\n    if (index > -1) list.splice(index, 1);\n    commit('set', list);\n  },\n  clear: function clear(_ref3, type) {var state = _ref3.state,commit = _ref3.commit;\n    var list = state.dict.filter(function (item) {return item.type != type;});\n    commit('set', list);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9kaWN0LmpzIl0sIm5hbWVzIjpbInN0YXRlIiwiZGljdCIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiRElDVCIsImdldHRlcnMiLCJnZXQiLCJtdXRhdGlvbnMiLCJzZXQiLCJzZXRTdG9yYWdlU3luYyIsImFjdGlvbnMiLCJhZGQiLCJjb21taXQiLCJsaXN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwiaWQiLCJwdXNoIiwicmVtb3ZlIiwic3BsaWNlIiwiY2xlYXIiLCJ0eXBlIiwiZmlsdGVyIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBLDBEOztBQUVBLElBQU1BLEtBQUssR0FBRztBQUNiQyxNQUFJLEVBQUVDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQkMsWUFBbkIsS0FBNEIsRUFEckIsQ0FDd0I7QUFEeEIsQ0FBZDs7QUFJQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsS0FEZSxlQUNWTixLQURVLEVBQ0g7QUFDWCxXQUFPQSxLQUFLLENBQUNDLElBQWI7QUFDQSxHQUhjLEVBQWhCOzs7QUFNQSxJQUFNTSxTQUFTLEdBQUc7QUFDakJDLEtBRGlCLGVBQ1pSLEtBRFksRUFDTEMsSUFESyxFQUNDO0FBQ2pCRCxTQUFLLENBQUNDLElBQU4sR0FBYUEsSUFBYjtBQUNBQyxPQUFHLENBQUNPLGNBQUosQ0FBbUJMLFlBQW5CLEVBQXlCSixLQUFLLENBQUNDLElBQS9CO0FBQ0EsR0FKZ0IsRUFBbEI7OztBQU9BLElBQU1TLE9BQU8sR0FBRztBQUNmQyxLQURlLHFCQUNPVixJQURQLEVBQ2EsS0FBdEJELEtBQXNCLFFBQXRCQSxLQUFzQixDQUFmWSxNQUFlLFFBQWZBLE1BQWU7QUFDM0IsUUFBTUMsSUFBSSxzQkFBT2IsS0FBSyxDQUFDQyxJQUFiLENBQVY7QUFDQSxRQUFNYSxLQUFLLEdBQUdELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxFQUFMLElBQVdoQixJQUFJLENBQUNnQixFQUFwQixFQUFuQixDQUFkO0FBQ0FILFNBQUssR0FBRyxDQUFDLENBQVQsR0FBYUQsSUFBSSxDQUFDQyxLQUFELENBQUosR0FBY2IsSUFBM0IsR0FBa0NZLElBQUksQ0FBQ0ssSUFBTCxDQUFVakIsSUFBVixDQUFsQztBQUNBVyxVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQU5jO0FBT2ZNLFFBUGUseUJBT1VGLEVBUFYsRUFPYyxLQUFwQmpCLEtBQW9CLFNBQXBCQSxLQUFvQixDQUFiWSxNQUFhLFNBQWJBLE1BQWE7QUFDNUIsUUFBTUMsSUFBSSxzQkFBT2IsS0FBSyxDQUFDQyxJQUFiLENBQVY7QUFDQSxRQUFNYSxLQUFLLEdBQUdELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxFQUFMLElBQVdBLEVBQWYsRUFBbkIsQ0FBZDtBQUNBLFFBQUtILEtBQUssR0FBRyxDQUFDLENBQWQsRUFBa0JELElBQUksQ0FBQ08sTUFBTCxDQUFZTixLQUFaLEVBQW1CLENBQW5CO0FBQ2xCRixVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQVpjO0FBYWZRLE9BYmUsd0JBYVNDLElBYlQsRUFhZSxLQUF0QnRCLEtBQXNCLFNBQXRCQSxLQUFzQixDQUFmWSxNQUFlLFNBQWZBLE1BQWU7QUFDN0IsUUFBTUMsSUFBSSxHQUFHYixLQUFLLENBQUNDLElBQU4sQ0FBV3NCLE1BQVgsQ0FBa0IsVUFBQVAsSUFBSSxVQUFJQSxJQUFJLENBQUNNLElBQUwsSUFBYUEsSUFBakIsRUFBdEIsQ0FBYjtBQUNBVixVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQWhCYyxFQUFoQixDOzs7QUFtQmU7QUFDWFcsWUFBVSxFQUFFLElBREQ7QUFFWHhCLE9BQUssRUFBTEEsS0FGVztBQUdYSyxTQUFPLEVBQVBBLE9BSFc7QUFJWEUsV0FBUyxFQUFUQSxTQUpXO0FBS2RHLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6IjcyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRElDVCB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuXHJcbmNvbnN0IHN0YXRlID0ge1xyXG5cdGRpY3Q6IHVuaS5nZXRTdG9yYWdlU3luYyhESUNUKSB8fCBbXSAvL+Wtl+WFuOWIl+ihqFxyXG59XHJcblxyXG5jb25zdCBnZXR0ZXJzID0ge1xyXG5cdGdldCAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5kaWN0XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBtdXRhdGlvbnMgPSB7XHJcblx0c2V0IChzdGF0ZSwgZGljdCkge1xyXG5cdFx0c3RhdGUuZGljdCA9IGRpY3RcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhESUNULCBzdGF0ZS5kaWN0KVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgYWN0aW9ucyA9IHtcclxuXHRhZGQgKHtzdGF0ZSwgY29tbWl0fSwgZGljdCkge1xyXG5cdFx0Y29uc3QgbGlzdCA9IFsuLi5zdGF0ZS5kaWN0XVxyXG5cdFx0Y29uc3QgaW5kZXggPSBsaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT0gZGljdC5pZClcclxuXHRcdGluZGV4ID4gLTEgPyBsaXN0W2luZGV4XSA9IGRpY3QgOiBsaXN0LnB1c2goZGljdClcclxuXHRcdGNvbW1pdCgnc2V0JywgbGlzdClcclxuXHR9LFxyXG5cdHJlbW92ZSAoe3N0YXRlLCBjb21taXR9LCBpZCkge1xyXG5cdFx0Y29uc3QgbGlzdCA9IFsuLi5zdGF0ZS5kaWN0XVxyXG5cdFx0Y29uc3QgaW5kZXggPSBsaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT0gaWQpXHJcblx0XHRpZiAoIGluZGV4ID4gLTEgKSBsaXN0LnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRjb21taXQoJ3NldCcsIGxpc3QpXHJcblx0fSxcclxuXHRjbGVhciAoe3N0YXRlLCBjb21taXR9LCB0eXBlKSB7XHJcblx0XHRjb25zdCBsaXN0ID0gc3RhdGUuZGljdC5maWx0ZXIoaXRlbSA9PiBpdGVtLnR5cGUgIT0gdHlwZSlcclxuXHRcdGNvbW1pdCgnc2V0JywgbGlzdClcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n");

/***/ }),
/* 73 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/search.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\nvar _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\n\nvar state = {\n  history: uni.getStorageSync(_config.SEARCHHISTORY) || [] //搜索历史\n};\n\nvar getters = {\n  getHistory: function getHistory(state) {\n    return state.history;\n  } };\n\n\nvar mutations = {\n  //设置搜索历史\n  setHistory: function setHistory(state, history) {\n    state.history = history;\n    uni.setStorageSync(_config.SEARCHHISTORY, state.history);\n  } };\n\n\n\nvar actions = {\n  //添加搜索历史\n  addHistory: function addHistory(_ref, history) {var state = _ref.state,commit = _ref.commit;\n    var histories = _toConsumableArray(state.history);\n    var index = histories.findIndex(function (his) {return his.title == history.title && history.type == his.type;});\n    if (index > -1) {\n      histories.splice(index, 1);\n      histories.push(history);\n    } else {\n      histories.push(history);\n    }\n    commit('setHistory', histories);\n  },\n  //移除指定搜索历史\n  removeHistory: function removeHistory(_ref2, history) {var state = _ref2.state,commit = _ref2.commit;\n    var histories = _toConsumableArray(state.history);\n    var index = histories.findIndex(function (his) {return his.title == history.title && history.type == his.type;});\n    index > -1 ? histories.splice(index, 1) : null;\n    commit('setHistory', histories);\n  },\n  //移除指定类型搜索历史\n  clearHistory: function clearHistory(_ref3, type) {var state = _ref3.state,commit = _ref3.commit;\n    var newHistory = state.history.filter(function (his) {return his.type != type;});\n    commit('setHistory', newHistory);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9zZWFyY2guanMiXSwibmFtZXMiOlsic3RhdGUiLCJoaXN0b3J5IiwidW5pIiwiZ2V0U3RvcmFnZVN5bmMiLCJTRUFSQ0hISVNUT1JZIiwiZ2V0dGVycyIsImdldEhpc3RvcnkiLCJtdXRhdGlvbnMiLCJzZXRIaXN0b3J5Iiwic2V0U3RvcmFnZVN5bmMiLCJhY3Rpb25zIiwiYWRkSGlzdG9yeSIsImNvbW1pdCIsImhpc3RvcmllcyIsImluZGV4IiwiZmluZEluZGV4IiwiaGlzIiwidGl0bGUiLCJ0eXBlIiwic3BsaWNlIiwicHVzaCIsInJlbW92ZUhpc3RvcnkiLCJjbGVhckhpc3RvcnkiLCJuZXdIaXN0b3J5IiwiZmlsdGVyIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6Ijs7QUFFQSwwRDs7O0FBR0EsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLFNBQU8sRUFBRUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxxQkFBbkIsS0FBcUMsRUFEakMsQ0FDbUM7QUFEbkMsQ0FBZDs7QUFJQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsWUFEZSxzQkFDSE4sS0FERyxFQUNJO0FBQ2xCLFdBQU9BLEtBQUssQ0FBQ0MsT0FBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1NLFNBQVMsR0FBRztBQUNqQjtBQUNBQyxZQUZpQixzQkFFTFIsS0FGSyxFQUVFQyxPQUZGLEVBRVc7QUFDM0JELFNBQUssQ0FBQ0MsT0FBTixHQUFnQkEsT0FBaEI7QUFDQUMsT0FBRyxDQUFDTyxjQUFKLENBQW1CTCxxQkFBbkIsRUFBa0NKLEtBQUssQ0FBQ0MsT0FBeEM7QUFDQSxHQUxnQixFQUFsQjs7OztBQVNBLElBQU1TLE9BQU8sR0FBRztBQUNmO0FBQ0FDLFlBRmUsNEJBRWNWLE9BRmQsRUFFdUIsS0FBekJELEtBQXlCLFFBQXpCQSxLQUF5QixDQUFsQlksTUFBa0IsUUFBbEJBLE1BQWtCO0FBQ3JDLFFBQU1DLFNBQVMsc0JBQU9iLEtBQUssQ0FBQ0MsT0FBYixDQUFmO0FBQ0EsUUFBTWEsS0FBSyxHQUFHRCxTQUFTLENBQUNFLFNBQVYsQ0FBb0IsVUFBQUMsR0FBRyxVQUFJQSxHQUFHLENBQUNDLEtBQUosSUFBYWhCLE9BQU8sQ0FBQ2dCLEtBQXJCLElBQThCaEIsT0FBTyxDQUFDaUIsSUFBUixJQUFnQkYsR0FBRyxDQUFDRSxJQUF0RCxFQUF2QixDQUFkO0FBQ0EsUUFBS0osS0FBSyxHQUFHLENBQUMsQ0FBZCxFQUFrQjtBQUNqQkQsZUFBUyxDQUFDTSxNQUFWLENBQWlCTCxLQUFqQixFQUF3QixDQUF4QjtBQUNBRCxlQUFTLENBQUNPLElBQVYsQ0FBZW5CLE9BQWY7QUFDQSxLQUhELE1BR087QUFDTlksZUFBUyxDQUFDTyxJQUFWLENBQWVuQixPQUFmO0FBQ0E7QUFDRFcsVUFBTSxDQUFDLFlBQUQsRUFBZUMsU0FBZixDQUFOO0FBQ0EsR0FaYztBQWFmO0FBQ0FRLGVBZGUsZ0NBY2lCcEIsT0FkakIsRUFjMEIsS0FBekJELEtBQXlCLFNBQXpCQSxLQUF5QixDQUFsQlksTUFBa0IsU0FBbEJBLE1BQWtCO0FBQ3hDLFFBQU1DLFNBQVMsc0JBQU9iLEtBQUssQ0FBQ0MsT0FBYixDQUFmO0FBQ0EsUUFBTWEsS0FBSyxHQUFHRCxTQUFTLENBQUNFLFNBQVYsQ0FBb0IsVUFBQUMsR0FBRyxVQUFJQSxHQUFHLENBQUNDLEtBQUosSUFBYWhCLE9BQU8sQ0FBQ2dCLEtBQXJCLElBQThCaEIsT0FBTyxDQUFDaUIsSUFBUixJQUFnQkYsR0FBRyxDQUFDRSxJQUF0RCxFQUF2QixDQUFkO0FBQ0FKLFNBQUssR0FBRyxDQUFDLENBQVQsR0FBYUQsU0FBUyxDQUFDTSxNQUFWLENBQWlCTCxLQUFqQixFQUF3QixDQUF4QixDQUFiLEdBQTBDLElBQTFDO0FBQ0FGLFVBQU0sQ0FBQyxZQUFELEVBQWVDLFNBQWYsQ0FBTjtBQUNBLEdBbkJjO0FBb0JmO0FBQ0FTLGNBckJlLCtCQXFCZ0JKLElBckJoQixFQXFCc0IsS0FBdEJsQixLQUFzQixTQUF0QkEsS0FBc0IsQ0FBZlksTUFBZSxTQUFmQSxNQUFlO0FBQ3BDLFFBQU1XLFVBQVUsR0FBR3ZCLEtBQUssQ0FBQ0MsT0FBTixDQUFjdUIsTUFBZCxDQUFxQixVQUFBUixHQUFHLFVBQUlBLEdBQUcsQ0FBQ0UsSUFBSixJQUFZQSxJQUFoQixFQUF4QixDQUFuQjtBQUNBTixVQUFNLENBQUMsWUFBRCxFQUFlVyxVQUFmLENBQU47QUFDQSxHQXhCYyxFQUFoQixDOzs7QUEyQmU7QUFDWEUsWUFBVSxFQUFFLElBREQ7QUFFWHpCLE9BQUssRUFBTEEsS0FGVztBQUdYSyxTQUFPLEVBQVBBLE9BSFc7QUFJWEUsV0FBUyxFQUFUQSxTQUpXO0FBS2RHLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6IjczLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8g5pCc57Si5Y6G5Y+yXHJcblxyXG5pbXBvcnQge1xyXG5TRUFSQ0hISVNUT1JZIH0gZnJvbSAnLi4vY29uZmlnLmpzJ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0aGlzdG9yeTogdW5pLmdldFN0b3JhZ2VTeW5jKFNFQVJDSEhJU1RPUlkpIHx8IFtdLy/mkJzntKLljoblj7JcclxufVxyXG5cclxuY29uc3QgZ2V0dGVycyA9IHtcclxuXHRnZXRIaXN0b3J5IChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLmhpc3Rvcnk7XHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBtdXRhdGlvbnMgPSB7XHJcblx0Ly/orr7nva7mkJzntKLljoblj7JcclxuXHRzZXRIaXN0b3J5IChzdGF0ZSwgaGlzdG9yeSkge1xyXG5cdFx0c3RhdGUuaGlzdG9yeSA9IGhpc3RvcnlcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhTRUFSQ0hISVNUT1JZLCBzdGF0ZS5oaXN0b3J5KTtcclxuXHR9XHJcblx0XHJcbn1cclxuXHJcbmNvbnN0IGFjdGlvbnMgPSB7XHJcblx0Ly/mt7vliqDmkJzntKLljoblj7JcclxuXHRhZGRIaXN0b3J5ICh7c3RhdGUsIGNvbW1pdH0sIGhpc3RvcnkpIHtcclxuXHRcdGNvbnN0IGhpc3RvcmllcyA9IFsuLi5zdGF0ZS5oaXN0b3J5XVxyXG5cdFx0Y29uc3QgaW5kZXggPSBoaXN0b3JpZXMuZmluZEluZGV4KGhpcyA9PiBoaXMudGl0bGUgPT0gaGlzdG9yeS50aXRsZSAmJiBoaXN0b3J5LnR5cGUgPT0gaGlzLnR5cGUpXHJcblx0XHRpZiAoIGluZGV4ID4gLTEgKSB7XHJcblx0XHRcdGhpc3Rvcmllcy5zcGxpY2UoaW5kZXgsIDEpXHJcblx0XHRcdGhpc3Rvcmllcy5wdXNoKGhpc3RvcnkpXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRoaXN0b3JpZXMucHVzaChoaXN0b3J5KVxyXG5cdFx0fVxyXG5cdFx0Y29tbWl0KCdzZXRIaXN0b3J5JywgaGlzdG9yaWVzKVxyXG5cdH0sXHJcblx0Ly/np7vpmaTmjIflrprmkJzntKLljoblj7JcclxuXHRyZW1vdmVIaXN0b3J5ICh7c3RhdGUsIGNvbW1pdH0sIGhpc3RvcnkpIHtcclxuXHRcdGNvbnN0IGhpc3RvcmllcyA9IFsuLi5zdGF0ZS5oaXN0b3J5XVxyXG5cdFx0Y29uc3QgaW5kZXggPSBoaXN0b3JpZXMuZmluZEluZGV4KGhpcyA9PiBoaXMudGl0bGUgPT0gaGlzdG9yeS50aXRsZSAmJiBoaXN0b3J5LnR5cGUgPT0gaGlzLnR5cGUpXHJcblx0XHRpbmRleCA+IC0xID8gaGlzdG9yaWVzLnNwbGljZShpbmRleCwgMSkgOiBudWxsXHJcblx0XHRjb21taXQoJ3NldEhpc3RvcnknLCBoaXN0b3JpZXMpXHJcblx0fSxcclxuXHQvL+enu+mZpOaMh+Wumuexu+Wei+aQnOe0ouWOhuWPslxyXG5cdGNsZWFySGlzdG9yeSAoe3N0YXRlLCBjb21taXR9LCB0eXBlKSB7XHJcblx0XHRjb25zdCBuZXdIaXN0b3J5ID0gc3RhdGUuaGlzdG9yeS5maWx0ZXIoaGlzID0+IGhpcy50eXBlICE9IHR5cGUpXHJcblx0XHRjb21taXQoJ3NldEhpc3RvcnknLCBuZXdIaXN0b3J5KVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbmFtZXNwYWNlZDogdHJ1ZSxcclxuICAgIHN0YXRlLFxyXG4gICAgZ2V0dGVycyxcclxuICAgIG11dGF0aW9ucyxcclxuXHRhY3Rpb25zXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///73\n");

/***/ }),
/* 74 */
/*!***********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/cache.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);\nvar _cache = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/cache.js */ 75));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  cache: uni.getStorageSync(_config.FILECACHE) || [] //缓存列表\n};\n\nvar getters = {\n  getCache: function getCache(state) {\n    return state.cache;\n  } };\n\n\nvar mutations = {\n  setCache: function setCache(state, cache) {\n    state.cache = cache;\n    uni.setStorageSync(_config.FILECACHE, state.cache);\n  } };\n\n\nvar actions = {\n  addCache: function addCache(_ref, obj) {var state = _ref.state,commit = _ref.commit;\n    var caches = _toConsumableArray(state.cache);\n    var newCache = new _cache.default(obj);\n    var index = caches.findIndex(function (cache) {return cache.id == newCache.id;});\n    index > -1 ? caches[index] = newCache : caches.push(newCache);\n    commit('setCache', caches);\n  },\n  removeCache: function removeCache(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var caches = _toConsumableArray(state.cache);\n    var index = caches.findIndex(function (cache) {return cache.id == id;});\n    if (index > -1) {\n      var src = plus.io.convertLocalFileSystemURL(caches[index].src);\n      var file = plus.android.newObject('java.io.File', src);\n      if (plus.android.invoke(file, 'exists')) {\n        plus.android.invoke(file, 'delete');\n      }\n      caches.splice(index, 1);\n    }\n    commit('setCache', caches);\n  },\n  clearCache: function clearCache(_ref3, type) {var commit = _ref3.commit;\n    var caches = _toConsumableArray(state.cache);\n    commit('setCache', caches.filter(function (cache) {return cache.type != type;}));\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9jYWNoZS5qcyJdLCJuYW1lcyI6WyJzdGF0ZSIsImNhY2hlIiwidW5pIiwiZ2V0U3RvcmFnZVN5bmMiLCJGSUxFQ0FDSEUiLCJnZXR0ZXJzIiwiZ2V0Q2FjaGUiLCJtdXRhdGlvbnMiLCJzZXRDYWNoZSIsInNldFN0b3JhZ2VTeW5jIiwiYWN0aW9ucyIsImFkZENhY2hlIiwib2JqIiwiY29tbWl0IiwiY2FjaGVzIiwibmV3Q2FjaGUiLCJDYWNoZSIsImluZGV4IiwiZmluZEluZGV4IiwiaWQiLCJwdXNoIiwicmVtb3ZlQ2FjaGUiLCJzcmMiLCJwbHVzIiwiaW8iLCJjb252ZXJ0TG9jYWxGaWxlU3lzdGVtVVJMIiwiZmlsZSIsImFuZHJvaWQiLCJuZXdPYmplY3QiLCJpbnZva2UiLCJzcGxpY2UiLCJjbGVhckNhY2hlIiwidHlwZSIsImZpbHRlciIsIm5hbWVzcGFjZWQiXSwibWFwcGluZ3MiOiJ1RkFBQTtBQUNBLGtHOztBQUVBLElBQU1BLEtBQUssR0FBRztBQUNiQyxPQUFLLEVBQUVDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQkMsaUJBQW5CLEtBQWlDLEVBRDNCLENBQzhCO0FBRDlCLENBQWQ7O0FBSUEsSUFBTUMsT0FBTyxHQUFHO0FBQ2ZDLFVBRGUsb0JBQ0xOLEtBREssRUFDRTtBQUNoQixXQUFPQSxLQUFLLENBQUNDLEtBQWI7QUFDQSxHQUhjLEVBQWhCOzs7QUFNQSxJQUFNTSxTQUFTLEdBQUc7QUFDakJDLFVBRGlCLG9CQUNQUixLQURPLEVBQ0FDLEtBREEsRUFDTztBQUN2QkQsU0FBSyxDQUFDQyxLQUFOLEdBQWNBLEtBQWQ7QUFDQUMsT0FBRyxDQUFDTyxjQUFKLENBQW1CTCxpQkFBbkIsRUFBOEJKLEtBQUssQ0FBQ0MsS0FBcEM7QUFDQSxHQUpnQixFQUFsQjs7O0FBT0EsSUFBTVMsT0FBTyxHQUFHO0FBQ2ZDLFVBRGUsMEJBQ1lDLEdBRFosRUFDaUIsS0FBckJaLEtBQXFCLFFBQXJCQSxLQUFxQixDQUFkYSxNQUFjLFFBQWRBLE1BQWM7QUFDL0IsUUFBTUMsTUFBTSxzQkFBT2QsS0FBSyxDQUFDQyxLQUFiLENBQVo7QUFDQSxRQUFNYyxRQUFRLEdBQUcsSUFBSUMsY0FBSixDQUFVSixHQUFWLENBQWpCO0FBQ0EsUUFBTUssS0FBSyxHQUFHSCxNQUFNLENBQUNJLFNBQVAsQ0FBaUIsVUFBQWpCLEtBQUssVUFBSUEsS0FBSyxDQUFDa0IsRUFBTixJQUFZSixRQUFRLENBQUNJLEVBQXpCLEVBQXRCLENBQWQ7QUFDQUYsU0FBSyxHQUFHLENBQUMsQ0FBVCxHQUFhSCxNQUFNLENBQUNHLEtBQUQsQ0FBTixHQUFnQkYsUUFBN0IsR0FBd0NELE1BQU0sQ0FBQ00sSUFBUCxDQUFZTCxRQUFaLENBQXhDO0FBQ0FGLFVBQU0sQ0FBQyxVQUFELEVBQWFDLE1BQWIsQ0FBTjtBQUNBLEdBUGM7QUFRZk8sYUFSZSw4QkFRZUYsRUFSZixFQVFtQixLQUFwQm5CLEtBQW9CLFNBQXBCQSxLQUFvQixDQUFiYSxNQUFhLFNBQWJBLE1BQWE7QUFDakMsUUFBTUMsTUFBTSxzQkFBT2QsS0FBSyxDQUFDQyxLQUFiLENBQVo7QUFDQSxRQUFNZ0IsS0FBSyxHQUFHSCxNQUFNLENBQUNJLFNBQVAsQ0FBaUIsVUFBQWpCLEtBQUssVUFBSUEsS0FBSyxDQUFDa0IsRUFBTixJQUFZQSxFQUFoQixFQUF0QixDQUFkO0FBQ0EsUUFBS0YsS0FBSyxHQUFHLENBQUMsQ0FBZCxFQUFrQjtBQUNqQixVQUFNSyxHQUFHLEdBQUdDLElBQUksQ0FBQ0MsRUFBTCxDQUFRQyx5QkFBUixDQUFrQ1gsTUFBTSxDQUFDRyxLQUFELENBQU4sQ0FBY0ssR0FBaEQsQ0FBWjtBQUNBLFVBQU1JLElBQUksR0FBR0gsSUFBSSxDQUFDSSxPQUFMLENBQWFDLFNBQWIsQ0FBdUIsY0FBdkIsRUFBdUNOLEdBQXZDLENBQWI7QUFDQSxVQUFLQyxJQUFJLENBQUNJLE9BQUwsQ0FBYUUsTUFBYixDQUFvQkgsSUFBcEIsRUFBMEIsUUFBMUIsQ0FBTCxFQUEyQztBQUMxQ0gsWUFBSSxDQUFDSSxPQUFMLENBQWFFLE1BQWIsQ0FBb0JILElBQXBCLEVBQTBCLFFBQTFCO0FBQ0E7QUFDRFosWUFBTSxDQUFDZ0IsTUFBUCxDQUFjYixLQUFkLEVBQXFCLENBQXJCO0FBQ0E7QUFDREosVUFBTSxDQUFDLFVBQUQsRUFBYUMsTUFBYixDQUFOO0FBQ0EsR0FwQmM7QUFxQmZpQixZQXJCZSw2QkFxQk9DLElBckJQLEVBcUJhLEtBQWZuQixNQUFlLFNBQWZBLE1BQWU7QUFDM0IsUUFBTUMsTUFBTSxzQkFBT2QsS0FBSyxDQUFDQyxLQUFiLENBQVo7QUFDQVksVUFBTSxDQUFDLFVBQUQsRUFBYUMsTUFBTSxDQUFDbUIsTUFBUCxDQUFjLFVBQUFoQyxLQUFLLFVBQUlBLEtBQUssQ0FBQytCLElBQU4sSUFBY0EsSUFBbEIsRUFBbkIsQ0FBYixDQUFOO0FBQ0EsR0F4QmMsRUFBaEIsQzs7O0FBMkJlO0FBQ1hFLFlBQVUsRUFBRSxJQUREO0FBRVhsQyxPQUFLLEVBQUxBLEtBRlc7QUFHWEssU0FBTyxFQUFQQSxPQUhXO0FBSVhFLFdBQVMsRUFBVEEsU0FKVztBQUtkRyxTQUFPLEVBQVBBLE9BTGMsRSIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZJTEVDQUNIRSB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuaW1wb3J0IENhY2hlIGZyb20gJ0AvYXNzZXRzL2NvbnN0cnVjdG9yL2NhY2hlLmpzJ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0Y2FjaGU6IHVuaS5nZXRTdG9yYWdlU3luYyhGSUxFQ0FDSEUpIHx8IFtdIC8v57yT5a2Y5YiX6KGoXHJcbn1cclxuXHJcbmNvbnN0IGdldHRlcnMgPSB7XHJcblx0Z2V0Q2FjaGUgKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuY2FjaGVcclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IG11dGF0aW9ucyA9IHtcclxuXHRzZXRDYWNoZSAoc3RhdGUsIGNhY2hlKSB7XHJcblx0XHRzdGF0ZS5jYWNoZSA9IGNhY2hlXHJcblx0XHR1bmkuc2V0U3RvcmFnZVN5bmMoRklMRUNBQ0hFLCBzdGF0ZS5jYWNoZSlcclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IGFjdGlvbnMgPSB7XHJcblx0YWRkQ2FjaGUgKHtzdGF0ZSwgY29tbWl0fSwgb2JqKSB7XHJcblx0XHRjb25zdCBjYWNoZXMgPSBbLi4uc3RhdGUuY2FjaGVdXHJcblx0XHRjb25zdCBuZXdDYWNoZSA9IG5ldyBDYWNoZShvYmopXHJcblx0XHRjb25zdCBpbmRleCA9IGNhY2hlcy5maW5kSW5kZXgoY2FjaGUgPT4gY2FjaGUuaWQgPT0gbmV3Q2FjaGUuaWQpXHJcblx0XHRpbmRleCA+IC0xID8gY2FjaGVzW2luZGV4XSA9IG5ld0NhY2hlIDogY2FjaGVzLnB1c2gobmV3Q2FjaGUpXHJcblx0XHRjb21taXQoJ3NldENhY2hlJywgY2FjaGVzKVxyXG5cdH0sXHJcblx0cmVtb3ZlQ2FjaGUgKHtzdGF0ZSwgY29tbWl0fSwgaWQpIHtcclxuXHRcdGNvbnN0IGNhY2hlcyA9IFsuLi5zdGF0ZS5jYWNoZV1cclxuXHRcdGNvbnN0IGluZGV4ID0gY2FjaGVzLmZpbmRJbmRleChjYWNoZSA9PiBjYWNoZS5pZCA9PSBpZClcclxuXHRcdGlmICggaW5kZXggPiAtMSApIHtcclxuXHRcdFx0Y29uc3Qgc3JjID0gcGx1cy5pby5jb252ZXJ0TG9jYWxGaWxlU3lzdGVtVVJMKGNhY2hlc1tpbmRleF0uc3JjKTtcclxuXHRcdFx0Y29uc3QgZmlsZSA9IHBsdXMuYW5kcm9pZC5uZXdPYmplY3QoJ2phdmEuaW8uRmlsZScsIHNyYyk7XHJcblx0XHRcdGlmICggcGx1cy5hbmRyb2lkLmludm9rZShmaWxlLCAnZXhpc3RzJykgKSB7XHJcblx0XHRcdFx0cGx1cy5hbmRyb2lkLmludm9rZShmaWxlLCAnZGVsZXRlJylcclxuXHRcdFx0fVxyXG5cdFx0XHRjYWNoZXMuc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdH1cclxuXHRcdGNvbW1pdCgnc2V0Q2FjaGUnLCBjYWNoZXMpXHJcblx0fSxcclxuXHRjbGVhckNhY2hlICh7Y29tbWl0fSwgdHlwZSkge1xyXG5cdFx0Y29uc3QgY2FjaGVzID0gWy4uLnN0YXRlLmNhY2hlXVxyXG5cdFx0Y29tbWl0KCdzZXRDYWNoZScsIGNhY2hlcy5maWx0ZXIoY2FjaGUgPT4gY2FjaGUudHlwZSAhPSB0eXBlKSlcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n");

/***/ }),
/* 75 */
/*!****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/cache.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //文件缓存\nvar\nCache =\nfunction Cache(_ref) {var id = _ref.id,title = _ref.title,cover = _ref.cover,src = _ref.src,bytes = _ref.bytes,type = _ref.type,extra = _ref.extra,source = _ref.source;_classCallCheck(this, Cache);\n  this.id = id + '_cache';\n  this.parentId = id; //父id\n  this.title = title || ''; //文件名称\n  this.cover = cover || ''; //封面\n  this.src = src; //文件路径\n  this.bytes = bytes; //文件总量\n  this.type = type || ''; //文件类型\n  this.extra = extra || {}; //附加字段\n  this.source = source || ''; //来源\n};exports.default = Cache;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2NhY2hlLmpzIl0sIm5hbWVzIjpbIkNhY2hlIiwiaWQiLCJ0aXRsZSIsImNvdmVyIiwic3JjIiwiYnl0ZXMiLCJ0eXBlIiwiZXh0cmEiLCJzb3VyY2UiLCJwYXJlbnRJZCJdLCJtYXBwaW5ncyI6IjZPQUFBOztBQUVxQkEsSztBQUNwQixxQkFBaUUsS0FBcERDLEVBQW9ELFFBQXBEQSxFQUFvRCxDQUFoREMsS0FBZ0QsUUFBaERBLEtBQWdELENBQXpDQyxLQUF5QyxRQUF6Q0EsS0FBeUMsQ0FBbENDLEdBQWtDLFFBQWxDQSxHQUFrQyxDQUE3QkMsS0FBNkIsUUFBN0JBLEtBQTZCLENBQXRCQyxJQUFzQixRQUF0QkEsSUFBc0IsQ0FBaEJDLEtBQWdCLFFBQWhCQSxLQUFnQixDQUFUQyxNQUFTLFFBQVRBLE1BQVM7QUFDL0QsT0FBS1AsRUFBTCxHQUFVQSxFQUFFLEdBQUcsUUFBZjtBQUNBLE9BQUtRLFFBQUwsR0FBZ0JSLEVBQWhCLENBRitELENBRTdDO0FBQ2xCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBSCtELENBR3ZDO0FBQ3hCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBSitELENBSXZDO0FBQ3hCLE9BQUtDLEdBQUwsR0FBV0EsR0FBWCxDQUwrRCxDQUtqRDtBQUNkLE9BQUtDLEtBQUwsR0FBYUEsS0FBYixDQU4rRCxDQU03QztBQUNsQixPQUFLQyxJQUFMLEdBQVlBLElBQUksSUFBSSxFQUFwQixDQVArRCxDQU96QztBQUN0QixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSxFQUF0QixDQVIrRCxDQVF2QztBQUN4QixPQUFLQyxNQUFMLEdBQWNBLE1BQU0sSUFBSSxFQUF4QixDQVQrRCxDQVNyQztBQUMzQixDIiwiZmlsZSI6Ijc1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/mlofku7bnvJPlrZhcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhY2hlIHtcclxuXHRjb25zdHJ1Y3Rvcih7aWQsIHRpdGxlLCBjb3Zlciwgc3JjLCBieXRlcywgdHlwZSwgZXh0cmEsIHNvdXJjZX0pIHtcclxuXHQgIHRoaXMuaWQgPSBpZCArICdfY2FjaGUnXHJcblx0ICB0aGlzLnBhcmVudElkID0gaWQvL+eItmlkXHJcblx0ICB0aGlzLnRpdGxlID0gdGl0bGUgfHwgJycvL+aWh+S7tuWQjeensFxyXG5cdCAgdGhpcy5jb3ZlciA9IGNvdmVyIHx8ICcnLy/lsIHpnaJcclxuXHQgIHRoaXMuc3JjID0gc3JjLy/mlofku7bot6/lvoRcclxuXHQgIHRoaXMuYnl0ZXMgPSBieXRlcy8v5paH5Lu25oC76YePXHJcblx0ICB0aGlzLnR5cGUgPSB0eXBlIHx8ICcnLy/mlofku7bnsbvlnotcclxuXHQgIHRoaXMuZXh0cmEgPSBleHRyYSB8fCB7fS8v6ZmE5Yqg5a2X5q61XHJcblx0ICB0aGlzLnNvdXJjZSA9IHNvdXJjZSB8fCAnJy8v5p2l5rqQXHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///75\n");

/***/ }),
/* 76 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/record.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  record: uni.getStorageSync(_config.RECORD) || [] //记录列表\n};\n\nvar getters = {\n  getRecord: function getRecord(state) {\n    return state.record;\n  } };\n\n\nvar mutations = {\n  setRecord: function setRecord(state, record) {\n    state.record = record;\n    uni.setStorageSync(_config.RECORD, state.record);\n  } };\n\n\nvar actions = {\n  addRecord: function addRecord(_ref, obj) {var state = _ref.state,commit = _ref.commit;\n    var list = _toConsumableArray(state.record);\n    var index = list.findIndex(function (item) {return item.id == obj.id;});\n    index == -1 ? list.push(obj) : list.splice(index, 1) && list.push(obj);\n    commit('setRecord', list);\n  },\n  removeRecord: function removeRecord(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var list = _toConsumableArray(state.record);\n    var index = list.findIndex(function (item) {return item.id == id;});\n    if (index > -1) list.splice(index, 1);\n    commit('setRecord', list);\n  },\n  clearRecord: function clearRecord(_ref3, type) {var state = _ref3.state,commit = _ref3.commit;\n    var list = state.record.filter(function (item) {return item.type != type;});\n    commit('setRecord', list);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9yZWNvcmQuanMiXSwibmFtZXMiOlsic3RhdGUiLCJyZWNvcmQiLCJ1bmkiLCJnZXRTdG9yYWdlU3luYyIsIlJFQ09SRCIsImdldHRlcnMiLCJnZXRSZWNvcmQiLCJtdXRhdGlvbnMiLCJzZXRSZWNvcmQiLCJzZXRTdG9yYWdlU3luYyIsImFjdGlvbnMiLCJhZGRSZWNvcmQiLCJvYmoiLCJjb21taXQiLCJsaXN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwiaWQiLCJwdXNoIiwic3BsaWNlIiwicmVtb3ZlUmVjb3JkIiwiY2xlYXJSZWNvcmQiLCJ0eXBlIiwiZmlsdGVyIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBLDBEOztBQUVBLElBQU1BLEtBQUssR0FBRztBQUNiQyxRQUFNLEVBQUVDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQkMsY0FBbkIsS0FBOEIsRUFEekIsQ0FDNEI7QUFENUIsQ0FBZDs7QUFJQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsV0FEZSxxQkFDSk4sS0FESSxFQUNHO0FBQ2pCLFdBQU9BLEtBQUssQ0FBQ0MsTUFBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1NLFNBQVMsR0FBRztBQUNqQkMsV0FEaUIscUJBQ05SLEtBRE0sRUFDQ0MsTUFERCxFQUNTO0FBQ3pCRCxTQUFLLENBQUNDLE1BQU4sR0FBZUEsTUFBZjtBQUNBQyxPQUFHLENBQUNPLGNBQUosQ0FBbUJMLGNBQW5CLEVBQTJCSixLQUFLLENBQUNDLE1BQWpDO0FBQ0EsR0FKZ0IsRUFBbEI7OztBQU9BLElBQU1TLE9BQU8sR0FBRztBQUNmQyxXQURlLDJCQUNhQyxHQURiLEVBQ2tCLEtBQXJCWixLQUFxQixRQUFyQkEsS0FBcUIsQ0FBZGEsTUFBYyxRQUFkQSxNQUFjO0FBQ2hDLFFBQU1DLElBQUksc0JBQU9kLEtBQUssQ0FBQ0MsTUFBYixDQUFWO0FBQ0EsUUFBTWMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLFNBQUwsQ0FBZSxVQUFBQyxJQUFJLFVBQUlBLElBQUksQ0FBQ0MsRUFBTCxJQUFXTixHQUFHLENBQUNNLEVBQW5CLEVBQW5CLENBQWQ7QUFDQUgsU0FBSyxJQUFJLENBQUMsQ0FBVixHQUFjRCxJQUFJLENBQUNLLElBQUwsQ0FBVVAsR0FBVixDQUFkLEdBQStCRSxJQUFJLENBQUNNLE1BQUwsQ0FBWUwsS0FBWixFQUFtQixDQUFuQixLQUF5QkQsSUFBSSxDQUFDSyxJQUFMLENBQVVQLEdBQVYsQ0FBeEQ7QUFDQUMsVUFBTSxDQUFDLFdBQUQsRUFBY0MsSUFBZCxDQUFOO0FBQ0EsR0FOYztBQU9mTyxjQVBlLCtCQU9nQkgsRUFQaEIsRUFPb0IsS0FBcEJsQixLQUFvQixTQUFwQkEsS0FBb0IsQ0FBYmEsTUFBYSxTQUFiQSxNQUFhO0FBQ2xDLFFBQU1DLElBQUksc0JBQU9kLEtBQUssQ0FBQ0MsTUFBYixDQUFWO0FBQ0EsUUFBTWMsS0FBSyxHQUFHRCxJQUFJLENBQUNFLFNBQUwsQ0FBZSxVQUFBQyxJQUFJLFVBQUlBLElBQUksQ0FBQ0MsRUFBTCxJQUFXQSxFQUFmLEVBQW5CLENBQWQ7QUFDQSxRQUFLSCxLQUFLLEdBQUcsQ0FBQyxDQUFkLEVBQWtCRCxJQUFJLENBQUNNLE1BQUwsQ0FBWUwsS0FBWixFQUFtQixDQUFuQjtBQUNsQkYsVUFBTSxDQUFDLFdBQUQsRUFBY0MsSUFBZCxDQUFOO0FBQ0EsR0FaYztBQWFmUSxhQWJlLDhCQWFlQyxJQWJmLEVBYXFCLEtBQXRCdkIsS0FBc0IsU0FBdEJBLEtBQXNCLENBQWZhLE1BQWUsU0FBZkEsTUFBZTtBQUNuQyxRQUFNQyxJQUFJLEdBQUdkLEtBQUssQ0FBQ0MsTUFBTixDQUFhdUIsTUFBYixDQUFvQixVQUFBUCxJQUFJLFVBQUlBLElBQUksQ0FBQ00sSUFBTCxJQUFhQSxJQUFqQixFQUF4QixDQUFiO0FBQ0FWLFVBQU0sQ0FBQyxXQUFELEVBQWNDLElBQWQsQ0FBTjtBQUNBLEdBaEJjLEVBQWhCLEM7OztBQW1CZTtBQUNYVyxZQUFVLEVBQUUsSUFERDtBQUVYekIsT0FBSyxFQUFMQSxLQUZXO0FBR1hLLFNBQU8sRUFBUEEsT0FIVztBQUlYRSxXQUFTLEVBQVRBLFNBSlc7QUFLZEcsU0FBTyxFQUFQQSxPQUxjLEUiLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSRUNPUkQgfSBmcm9tICcuLi9jb25maWcuanMnXHJcblxyXG5jb25zdCBzdGF0ZSA9IHtcclxuXHRyZWNvcmQ6IHVuaS5nZXRTdG9yYWdlU3luYyhSRUNPUkQpIHx8IFtdIC8v6K6w5b2V5YiX6KGoXHJcbn1cclxuXHJcbmNvbnN0IGdldHRlcnMgPSB7XHJcblx0Z2V0UmVjb3JkIChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLnJlY29yZFxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgbXV0YXRpb25zID0ge1xyXG5cdHNldFJlY29yZCAoc3RhdGUsIHJlY29yZCkge1xyXG5cdFx0c3RhdGUucmVjb3JkID0gcmVjb3JkXHJcblx0XHR1bmkuc2V0U3RvcmFnZVN5bmMoUkVDT1JELCBzdGF0ZS5yZWNvcmQpXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBhY3Rpb25zID0ge1xyXG5cdGFkZFJlY29yZCAoe3N0YXRlLCBjb21taXR9LCBvYmopIHtcclxuXHRcdGNvbnN0IGxpc3QgPSBbLi4uc3RhdGUucmVjb3JkXVxyXG5cdFx0Y29uc3QgaW5kZXggPSBsaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT0gb2JqLmlkKVxyXG5cdFx0aW5kZXggPT0gLTEgPyBsaXN0LnB1c2gob2JqKSA6IGxpc3Quc3BsaWNlKGluZGV4LCAxKSAmJiBsaXN0LnB1c2gob2JqKVxyXG5cdFx0Y29tbWl0KCdzZXRSZWNvcmQnLCBsaXN0KVxyXG5cdH0sXHJcblx0cmVtb3ZlUmVjb3JkICh7c3RhdGUsIGNvbW1pdH0sIGlkKSB7XHJcblx0XHRjb25zdCBsaXN0ID0gWy4uLnN0YXRlLnJlY29yZF1cclxuXHRcdGNvbnN0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09IGlkKVxyXG5cdFx0aWYgKCBpbmRleCA+IC0xICkgbGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0Y29tbWl0KCdzZXRSZWNvcmQnLCBsaXN0KVxyXG5cdH0sXHJcblx0Y2xlYXJSZWNvcmQgKHtzdGF0ZSwgY29tbWl0fSwgdHlwZSkge1xyXG5cdFx0Y29uc3QgbGlzdCA9IHN0YXRlLnJlY29yZC5maWx0ZXIoaXRlbSA9PiBpdGVtLnR5cGUgIT0gdHlwZSlcclxuXHRcdGNvbW1pdCgnc2V0UmVjb3JkJywgbGlzdClcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76\n");

/***/ }),
/* 77 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/source.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  source: uni.getStorageSync(_config.SOURCE) || [] //接口来源\n};\n\nvar getters = {\n  get: function get(state) {\n    return state.source;\n  } };\n\n\nvar mutations = {\n  set: function set(state, source) {\n    state.source = source;\n    uni.setStorageSync(_config.SOURCE, state.source);\n  } };\n\n\nvar actions = {\n  add: function add(_ref, source) {var state = _ref.state,commit = _ref.commit;\n    var sources = _toConsumableArray(state.source);\n    var index = sources.findIndex(function (item) {return item.id == source.id;});\n    index > -1 ? sources[index] = source : sources.push(source);\n    commit('set', sources);\n  },\n  remove: function remove(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var sources = _toConsumableArray(state.source);\n    var index = sources.findIndex(function (item) {return item.id == id;});\n    if (index > -1) sources.splice(index, 1);\n    commit('set', sources);\n  },\n  clear: function clear(_ref3) {var commit = _ref3.commit;\n    commit('set', []);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9zb3VyY2UuanMiXSwibmFtZXMiOlsic3RhdGUiLCJzb3VyY2UiLCJ1bmkiLCJnZXRTdG9yYWdlU3luYyIsIlNPVVJDRSIsImdldHRlcnMiLCJnZXQiLCJtdXRhdGlvbnMiLCJzZXQiLCJzZXRTdG9yYWdlU3luYyIsImFjdGlvbnMiLCJhZGQiLCJjb21taXQiLCJzb3VyY2VzIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwiaWQiLCJwdXNoIiwicmVtb3ZlIiwic3BsaWNlIiwiY2xlYXIiLCJuYW1lc3BhY2VkIl0sIm1hcHBpbmdzIjoidUZBQUEsMEQ7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLFFBQU0sRUFBRUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxjQUFuQixLQUE4QixFQUR6QixDQUM0QjtBQUQ1QixDQUFkOztBQUlBLElBQU1DLE9BQU8sR0FBRztBQUNmQyxLQURlLGVBQ1ZOLEtBRFUsRUFDSDtBQUNYLFdBQU9BLEtBQUssQ0FBQ0MsTUFBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1NLFNBQVMsR0FBRztBQUNqQkMsS0FEaUIsZUFDWlIsS0FEWSxFQUNMQyxNQURLLEVBQ0c7QUFDbkJELFNBQUssQ0FBQ0MsTUFBTixHQUFlQSxNQUFmO0FBQ0FDLE9BQUcsQ0FBQ08sY0FBSixDQUFtQkwsY0FBbkIsRUFBMkJKLEtBQUssQ0FBQ0MsTUFBakM7QUFDQSxHQUpnQixFQUFsQjs7O0FBT0EsSUFBTVMsT0FBTyxHQUFHO0FBQ2ZDLEtBRGUscUJBQ09WLE1BRFAsRUFDZSxLQUF4QkQsS0FBd0IsUUFBeEJBLEtBQXdCLENBQWpCWSxNQUFpQixRQUFqQkEsTUFBaUI7QUFDN0IsUUFBTUMsT0FBTyxzQkFBT2IsS0FBSyxDQUFDQyxNQUFiLENBQWI7QUFDQSxRQUFNYSxLQUFLLEdBQUdELE9BQU8sQ0FBQ0UsU0FBUixDQUFrQixVQUFBQyxJQUFJLFVBQUlBLElBQUksQ0FBQ0MsRUFBTCxJQUFXaEIsTUFBTSxDQUFDZ0IsRUFBdEIsRUFBdEIsQ0FBZDtBQUNBSCxTQUFLLEdBQUcsQ0FBQyxDQUFULEdBQWFELE9BQU8sQ0FBQ0MsS0FBRCxDQUFQLEdBQWlCYixNQUE5QixHQUF1Q1ksT0FBTyxDQUFDSyxJQUFSLENBQWFqQixNQUFiLENBQXZDO0FBQ0FXLFVBQU0sQ0FBQyxLQUFELEVBQVFDLE9BQVIsQ0FBTjtBQUNBLEdBTmM7QUFPZk0sUUFQZSx5QkFPVUYsRUFQVixFQU9jLEtBQXBCakIsS0FBb0IsU0FBcEJBLEtBQW9CLENBQWJZLE1BQWEsU0FBYkEsTUFBYTtBQUM1QixRQUFNQyxPQUFPLHNCQUFPYixLQUFLLENBQUNDLE1BQWIsQ0FBYjtBQUNBLFFBQU1hLEtBQUssR0FBR0QsT0FBTyxDQUFDRSxTQUFSLENBQWtCLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxFQUFMLElBQVdBLEVBQWYsRUFBdEIsQ0FBZDtBQUNBLFFBQUtILEtBQUssR0FBRyxDQUFDLENBQWQsRUFBa0JELE9BQU8sQ0FBQ08sTUFBUixDQUFlTixLQUFmLEVBQXNCLENBQXRCO0FBQ2xCRixVQUFNLENBQUMsS0FBRCxFQUFRQyxPQUFSLENBQU47QUFDQSxHQVpjO0FBYWZRLE9BYmUsd0JBYUUsS0FBVFQsTUFBUyxTQUFUQSxNQUFTO0FBQ2hCQSxVQUFNLENBQUMsS0FBRCxFQUFRLEVBQVIsQ0FBTjtBQUNBLEdBZmMsRUFBaEIsQzs7O0FBa0JlO0FBQ1hVLFlBQVUsRUFBRSxJQUREO0FBRVh0QixPQUFLLEVBQUxBLEtBRlc7QUFHWEssU0FBTyxFQUFQQSxPQUhXO0FBSVhFLFdBQVMsRUFBVEEsU0FKVztBQUtkRyxTQUFPLEVBQVBBLE9BTGMsRSIsImZpbGUiOiI3Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNPVVJDRSB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuXHJcbmNvbnN0IHN0YXRlID0ge1xyXG5cdHNvdXJjZTogdW5pLmdldFN0b3JhZ2VTeW5jKFNPVVJDRSkgfHwgW10gLy/mjqXlj6PmnaXmupBcclxufVxyXG5cclxuY29uc3QgZ2V0dGVycyA9IHtcclxuXHRnZXQgKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuc291cmNlXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBtdXRhdGlvbnMgPSB7XHJcblx0c2V0IChzdGF0ZSwgc291cmNlKSB7XHJcblx0XHRzdGF0ZS5zb3VyY2UgPSBzb3VyY2VcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhTT1VSQ0UsIHN0YXRlLnNvdXJjZSlcclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IGFjdGlvbnMgPSB7XHJcblx0YWRkICh7c3RhdGUsIGNvbW1pdH0sIHNvdXJjZSkge1xyXG5cdFx0Y29uc3Qgc291cmNlcyA9IFsuLi5zdGF0ZS5zb3VyY2VdXHJcblx0XHRjb25zdCBpbmRleCA9IHNvdXJjZXMuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PSBzb3VyY2UuaWQpXHJcblx0XHRpbmRleCA+IC0xID8gc291cmNlc1tpbmRleF0gPSBzb3VyY2UgOiBzb3VyY2VzLnB1c2goc291cmNlKVxyXG5cdFx0Y29tbWl0KCdzZXQnLCBzb3VyY2VzKVxyXG5cdH0sXHJcblx0cmVtb3ZlICh7c3RhdGUsIGNvbW1pdH0sIGlkKSB7XHJcblx0XHRjb25zdCBzb3VyY2VzID0gWy4uLnN0YXRlLnNvdXJjZV1cclxuXHRcdGNvbnN0IGluZGV4ID0gc291cmNlcy5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09IGlkKVxyXG5cdFx0aWYgKCBpbmRleCA+IC0xICkgc291cmNlcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0Y29tbWl0KCdzZXQnLCBzb3VyY2VzKVxyXG5cdH0sXHJcblx0Y2xlYXIgKHtjb21taXR9KSB7XHJcblx0XHRjb21taXQoJ3NldCcsIFtdKVxyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbmFtZXNwYWNlZDogdHJ1ZSxcclxuICAgIHN0YXRlLFxyXG4gICAgZ2V0dGVycyxcclxuICAgIG11dGF0aW9ucyxcclxuXHRhY3Rpb25zXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///77\n");

/***/ }),
/* 78 */
/*!****************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/collection.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  collection: uni.getStorageSync(_config.COLLECTION) || [] //收藏列表\n};\n\nvar getters = {\n  getCollection: function getCollection(state) {\n    return state.collection;\n  } };\n\n\nvar mutations = {\n  setCollection: function setCollection(state, collection) {\n    state.collection = collection;\n    uni.setStorageSync(_config.COLLECTION, state.collection);\n  } };\n\n\nvar actions = {\n  addCollection: function addCollection(_ref, params) {var state = _ref.state,commit = _ref.commit;\n    var list = _toConsumableArray(state.collection);\n    var index = list.findIndex(function (item) {return item.id == params.id;});\n    index > -1 ? list[index] = params : list.push(params);\n    commit('setCollection', list);\n  },\n  removeCollection: function removeCollection(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var list = _toConsumableArray(state.collection);\n    var index = list.findIndex(function (item) {return item.id == id;});\n    if (index > -1) list.splice(index, 1);\n    commit('setCollection', list);\n  },\n  clearCollection: function clearCollection(_ref3, type) {var state = _ref3.state,commit = _ref3.commit;\n    var list = state.collection.filter(function (item) {return item.type != type;});\n    commit('setCollection', list);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9jb2xsZWN0aW9uLmpzIl0sIm5hbWVzIjpbInN0YXRlIiwiY29sbGVjdGlvbiIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiQ09MTEVDVElPTiIsImdldHRlcnMiLCJnZXRDb2xsZWN0aW9uIiwibXV0YXRpb25zIiwic2V0Q29sbGVjdGlvbiIsInNldFN0b3JhZ2VTeW5jIiwiYWN0aW9ucyIsImFkZENvbGxlY3Rpb24iLCJwYXJhbXMiLCJjb21taXQiLCJsaXN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwiaWQiLCJwdXNoIiwicmVtb3ZlQ29sbGVjdGlvbiIsInNwbGljZSIsImNsZWFyQ29sbGVjdGlvbiIsInR5cGUiLCJmaWx0ZXIiLCJuYW1lc3BhY2VkIl0sIm1hcHBpbmdzIjoidUZBQUEsMEQ7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLFlBQVUsRUFBRUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxrQkFBbkIsS0FBa0MsRUFEakMsQ0FDb0M7QUFEcEMsQ0FBZDs7QUFJQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsZUFEZSx5QkFDQU4sS0FEQSxFQUNPO0FBQ3JCLFdBQU9BLEtBQUssQ0FBQ0MsVUFBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1NLFNBQVMsR0FBRztBQUNqQkMsZUFEaUIseUJBQ0ZSLEtBREUsRUFDS0MsVUFETCxFQUNpQjtBQUNqQ0QsU0FBSyxDQUFDQyxVQUFOLEdBQW1CQSxVQUFuQjtBQUNBQyxPQUFHLENBQUNPLGNBQUosQ0FBbUJMLGtCQUFuQixFQUErQkosS0FBSyxDQUFDQyxVQUFyQztBQUNBLEdBSmdCLEVBQWxCOzs7QUFPQSxJQUFNUyxPQUFPLEdBQUc7QUFDZkMsZUFEZSwrQkFDaUJDLE1BRGpCLEVBQ3lCLEtBQXhCWixLQUF3QixRQUF4QkEsS0FBd0IsQ0FBakJhLE1BQWlCLFFBQWpCQSxNQUFpQjtBQUN2QyxRQUFNQyxJQUFJLHNCQUFPZCxLQUFLLENBQUNDLFVBQWIsQ0FBVjtBQUNBLFFBQU1jLEtBQUssR0FBR0QsSUFBSSxDQUFDRSxTQUFMLENBQWUsVUFBQUMsSUFBSSxVQUFJQSxJQUFJLENBQUNDLEVBQUwsSUFBV04sTUFBTSxDQUFDTSxFQUF0QixFQUFuQixDQUFkO0FBQ0FILFNBQUssR0FBRyxDQUFDLENBQVQsR0FBYUQsSUFBSSxDQUFDQyxLQUFELENBQUosR0FBY0gsTUFBM0IsR0FBb0NFLElBQUksQ0FBQ0ssSUFBTCxDQUFVUCxNQUFWLENBQXBDO0FBQ0FDLFVBQU0sQ0FBQyxlQUFELEVBQWtCQyxJQUFsQixDQUFOO0FBQ0EsR0FOYztBQU9mTSxrQkFQZSxtQ0FPb0JGLEVBUHBCLEVBT3dCLEtBQXBCbEIsS0FBb0IsU0FBcEJBLEtBQW9CLENBQWJhLE1BQWEsU0FBYkEsTUFBYTtBQUN0QyxRQUFNQyxJQUFJLHNCQUFPZCxLQUFLLENBQUNDLFVBQWIsQ0FBVjtBQUNBLFFBQU1jLEtBQUssR0FBR0QsSUFBSSxDQUFDRSxTQUFMLENBQWUsVUFBQUMsSUFBSSxVQUFJQSxJQUFJLENBQUNDLEVBQUwsSUFBV0EsRUFBZixFQUFuQixDQUFkO0FBQ0EsUUFBS0gsS0FBSyxHQUFHLENBQUMsQ0FBZCxFQUFrQkQsSUFBSSxDQUFDTyxNQUFMLENBQVlOLEtBQVosRUFBbUIsQ0FBbkI7QUFDbEJGLFVBQU0sQ0FBQyxlQUFELEVBQWtCQyxJQUFsQixDQUFOO0FBQ0EsR0FaYztBQWFmUSxpQkFiZSxrQ0FhbUJDLElBYm5CLEVBYXlCLEtBQXRCdkIsS0FBc0IsU0FBdEJBLEtBQXNCLENBQWZhLE1BQWUsU0FBZkEsTUFBZTtBQUN2QyxRQUFNQyxJQUFJLEdBQUdkLEtBQUssQ0FBQ0MsVUFBTixDQUFpQnVCLE1BQWpCLENBQXdCLFVBQUFQLElBQUksVUFBSUEsSUFBSSxDQUFDTSxJQUFMLElBQWFBLElBQWpCLEVBQTVCLENBQWI7QUFDQVYsVUFBTSxDQUFDLGVBQUQsRUFBa0JDLElBQWxCLENBQU47QUFDQSxHQWhCYyxFQUFoQixDOzs7QUFtQmU7QUFDWFcsWUFBVSxFQUFFLElBREQ7QUFFWHpCLE9BQUssRUFBTEEsS0FGVztBQUdYSyxTQUFPLEVBQVBBLE9BSFc7QUFJWEUsV0FBUyxFQUFUQSxTQUpXO0FBS2RHLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6Ijc4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09MTEVDVElPTiB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuXHJcbmNvbnN0IHN0YXRlID0ge1xyXG5cdGNvbGxlY3Rpb246IHVuaS5nZXRTdG9yYWdlU3luYyhDT0xMRUNUSU9OKSB8fCBbXSAvL+aUtuiXj+WIl+ihqFxyXG59XHJcblxyXG5jb25zdCBnZXR0ZXJzID0ge1xyXG5cdGdldENvbGxlY3Rpb24gKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuY29sbGVjdGlvblxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgbXV0YXRpb25zID0ge1xyXG5cdHNldENvbGxlY3Rpb24gKHN0YXRlLCBjb2xsZWN0aW9uKSB7XHJcblx0XHRzdGF0ZS5jb2xsZWN0aW9uID0gY29sbGVjdGlvblxyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKENPTExFQ1RJT04sIHN0YXRlLmNvbGxlY3Rpb24pXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBhY3Rpb25zID0ge1xyXG5cdGFkZENvbGxlY3Rpb24gKHtzdGF0ZSwgY29tbWl0fSwgcGFyYW1zKSB7XHJcblx0XHRjb25zdCBsaXN0ID0gWy4uLnN0YXRlLmNvbGxlY3Rpb25dXHJcblx0XHRjb25zdCBpbmRleCA9IGxpc3QuZmluZEluZGV4KGl0ZW0gPT4gaXRlbS5pZCA9PSBwYXJhbXMuaWQpXHJcblx0XHRpbmRleCA+IC0xID8gbGlzdFtpbmRleF0gPSBwYXJhbXMgOiBsaXN0LnB1c2gocGFyYW1zKVxyXG5cdFx0Y29tbWl0KCdzZXRDb2xsZWN0aW9uJywgbGlzdClcclxuXHR9LFxyXG5cdHJlbW92ZUNvbGxlY3Rpb24gKHtzdGF0ZSwgY29tbWl0fSwgaWQpIHtcclxuXHRcdGNvbnN0IGxpc3QgPSBbLi4uc3RhdGUuY29sbGVjdGlvbl1cclxuXHRcdGNvbnN0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09IGlkKVxyXG5cdFx0aWYgKCBpbmRleCA+IC0xICkgbGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xyXG5cdFx0Y29tbWl0KCdzZXRDb2xsZWN0aW9uJywgbGlzdClcclxuXHR9LFxyXG5cdGNsZWFyQ29sbGVjdGlvbiAoe3N0YXRlLCBjb21taXR9LCB0eXBlKSB7XHJcblx0XHRjb25zdCBsaXN0ID0gc3RhdGUuY29sbGVjdGlvbi5maWx0ZXIoaXRlbSA9PiBpdGVtLnR5cGUgIT0gdHlwZSlcclxuXHRcdGNvbW1pdCgnc2V0Q29sbGVjdGlvbicsIGxpc3QpXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBuYW1lc3BhY2VkOiB0cnVlLFxyXG4gICAgc3RhdGUsXHJcbiAgICBnZXR0ZXJzLFxyXG4gICAgbXV0YXRpb25zLFxyXG5cdGFjdGlvbnNcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///78\n");

/***/ }),
/* 79 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/custom.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  custom: uni.getStorageSync(_config.CUSTOM) || [] //自定义分组列表\n};\n\nvar getters = {\n  get: function get(state) {\n    return state.custom;\n  } };\n\n\nvar mutations = {\n  set: function set(state, custom) {\n    state.custom = custom;\n    uni.setStorageSync(_config.CUSTOM, state.custom);\n  } };\n\n\nvar actions = {\n  add: function add(_ref, obj) {var state = _ref.state,commit = _ref.commit;\n    var list = _toConsumableArray(state.custom);\n    var index = list.findIndex(function (item) {return item.id == obj.id;});\n    index > -1 ? list[index] = obj : list.push(obj);\n    commit('set', list);\n  },\n  remove: function remove(_ref2, id) {var state = _ref2.state,commit = _ref2.commit;\n    var list = _toConsumableArray(state.custom);\n    var index = list.findIndex(function (item) {return item.id == id;});\n    if (index > -1) list.splice(index, 1);\n    commit('set', list);\n  },\n  clear: function clear(_ref3, type) {var state = _ref3.state,commit = _ref3.commit;\n    var list = state.custom.filter(function (item) {return item.type != type;});\n    commit('set', list);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9jdXN0b20uanMiXSwibmFtZXMiOlsic3RhdGUiLCJjdXN0b20iLCJ1bmkiLCJnZXRTdG9yYWdlU3luYyIsIkNVU1RPTSIsImdldHRlcnMiLCJnZXQiLCJtdXRhdGlvbnMiLCJzZXQiLCJzZXRTdG9yYWdlU3luYyIsImFjdGlvbnMiLCJhZGQiLCJvYmoiLCJjb21taXQiLCJsaXN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwiaWQiLCJwdXNoIiwicmVtb3ZlIiwic3BsaWNlIiwiY2xlYXIiLCJ0eXBlIiwiZmlsdGVyIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBLDBEOztBQUVBLElBQU1BLEtBQUssR0FBRztBQUNiQyxRQUFNLEVBQUVDLEdBQUcsQ0FBQ0MsY0FBSixDQUFtQkMsY0FBbkIsS0FBOEIsRUFEekIsQ0FDNEI7QUFENUIsQ0FBZDs7QUFJQSxJQUFNQyxPQUFPLEdBQUc7QUFDZkMsS0FEZSxlQUNWTixLQURVLEVBQ0g7QUFDWCxXQUFPQSxLQUFLLENBQUNDLE1BQWI7QUFDQSxHQUhjLEVBQWhCOzs7QUFNQSxJQUFNTSxTQUFTLEdBQUc7QUFDakJDLEtBRGlCLGVBQ1pSLEtBRFksRUFDTEMsTUFESyxFQUNHO0FBQ25CRCxTQUFLLENBQUNDLE1BQU4sR0FBZUEsTUFBZjtBQUNBQyxPQUFHLENBQUNPLGNBQUosQ0FBbUJMLGNBQW5CLEVBQTJCSixLQUFLLENBQUNDLE1BQWpDO0FBQ0EsR0FKZ0IsRUFBbEI7OztBQU9BLElBQU1TLE9BQU8sR0FBRztBQUNmQyxLQURlLHFCQUNPQyxHQURQLEVBQ1ksS0FBckJaLEtBQXFCLFFBQXJCQSxLQUFxQixDQUFkYSxNQUFjLFFBQWRBLE1BQWM7QUFDMUIsUUFBTUMsSUFBSSxzQkFBT2QsS0FBSyxDQUFDQyxNQUFiLENBQVY7QUFDQSxRQUFNYyxLQUFLLEdBQUdELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxFQUFMLElBQVdOLEdBQUcsQ0FBQ00sRUFBbkIsRUFBbkIsQ0FBZDtBQUNBSCxTQUFLLEdBQUcsQ0FBQyxDQUFULEdBQWFELElBQUksQ0FBQ0MsS0FBRCxDQUFKLEdBQWNILEdBQTNCLEdBQWlDRSxJQUFJLENBQUNLLElBQUwsQ0FBVVAsR0FBVixDQUFqQztBQUNBQyxVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQU5jO0FBT2ZNLFFBUGUseUJBT1VGLEVBUFYsRUFPYyxLQUFwQmxCLEtBQW9CLFNBQXBCQSxLQUFvQixDQUFiYSxNQUFhLFNBQWJBLE1BQWE7QUFDNUIsUUFBTUMsSUFBSSxzQkFBT2QsS0FBSyxDQUFDQyxNQUFiLENBQVY7QUFDQSxRQUFNYyxLQUFLLEdBQUdELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxFQUFMLElBQVdBLEVBQWYsRUFBbkIsQ0FBZDtBQUNBLFFBQUtILEtBQUssR0FBRyxDQUFDLENBQWQsRUFBa0JELElBQUksQ0FBQ08sTUFBTCxDQUFZTixLQUFaLEVBQW1CLENBQW5CO0FBQ2xCRixVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQVpjO0FBYWZRLE9BYmUsd0JBYVNDLElBYlQsRUFhZSxLQUF0QnZCLEtBQXNCLFNBQXRCQSxLQUFzQixDQUFmYSxNQUFlLFNBQWZBLE1BQWU7QUFDN0IsUUFBSUMsSUFBSSxHQUFHZCxLQUFLLENBQUNDLE1BQU4sQ0FBYXVCLE1BQWIsQ0FBb0IsVUFBQVAsSUFBSSxVQUFJQSxJQUFJLENBQUNNLElBQUwsSUFBYUEsSUFBakIsRUFBeEIsQ0FBWDtBQUNBVixVQUFNLENBQUMsS0FBRCxFQUFRQyxJQUFSLENBQU47QUFDQSxHQWhCYyxFQUFoQixDOzs7QUFtQmU7QUFDWFcsWUFBVSxFQUFFLElBREQ7QUFFWHpCLE9BQUssRUFBTEEsS0FGVztBQUdYSyxTQUFPLEVBQVBBLE9BSFc7QUFJWEUsV0FBUyxFQUFUQSxTQUpXO0FBS2RHLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6Ijc5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ1VTVE9NIH0gZnJvbSAnLi4vY29uZmlnLmpzJ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0Y3VzdG9tOiB1bmkuZ2V0U3RvcmFnZVN5bmMoQ1VTVE9NKSB8fCBbXSAvL+iHquWumuS5ieWIhue7hOWIl+ihqFxyXG59XHJcblxyXG5jb25zdCBnZXR0ZXJzID0ge1xyXG5cdGdldCAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5jdXN0b21cclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IG11dGF0aW9ucyA9IHtcclxuXHRzZXQgKHN0YXRlLCBjdXN0b20pIHtcclxuXHRcdHN0YXRlLmN1c3RvbSA9IGN1c3RvbVxyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKENVU1RPTSwgc3RhdGUuY3VzdG9tKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgYWN0aW9ucyA9IHtcclxuXHRhZGQgKHtzdGF0ZSwgY29tbWl0fSwgb2JqKSB7XHJcblx0XHRjb25zdCBsaXN0ID0gWy4uLnN0YXRlLmN1c3RvbV1cclxuXHRcdGNvbnN0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLmlkID09IG9iai5pZClcclxuXHRcdGluZGV4ID4gLTEgPyBsaXN0W2luZGV4XSA9IG9iaiA6IGxpc3QucHVzaChvYmopXHJcblx0XHRjb21taXQoJ3NldCcsIGxpc3QpXHJcblx0fSxcclxuXHRyZW1vdmUgKHtzdGF0ZSwgY29tbWl0fSwgaWQpIHtcclxuXHRcdGNvbnN0IGxpc3QgPSBbLi4uc3RhdGUuY3VzdG9tXVxyXG5cdFx0Y29uc3QgaW5kZXggPSBsaXN0LmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT0gaWQpXHJcblx0XHRpZiAoIGluZGV4ID4gLTEgKSBsaXN0LnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRjb21taXQoJ3NldCcsIGxpc3QpXHJcblx0fSxcclxuXHRjbGVhciAoe3N0YXRlLCBjb21taXR9LCB0eXBlKSB7XHJcblx0XHRsZXQgbGlzdCA9IHN0YXRlLmN1c3RvbS5maWx0ZXIoaXRlbSA9PiBpdGVtLnR5cGUgIT0gdHlwZSlcclxuXHRcdGNvbW1pdCgnc2V0JywgbGlzdClcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///79\n");

/***/ }),
/* 80 */
/*!**********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/path.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}\n\nvar state = {\n  path: uni.getStorageSync(_config.PATH) || [] //本地资源路径保存\n};\n\nvar getters = {\n  get: function get(state) {\n    return state.path;\n  } };\n\n\nvar mutations = {\n  set: function set(state, path) {\n    state.path = path;\n    uni.setStorageSync(_config.PATH, state.path);\n  } };\n\n\nvar actions = {\n  add: function add(_ref, obj) {var state = _ref.state,commit = _ref.commit;\n    var list = _toConsumableArray(state.path);\n    var index = list.findIndex(function (item) {return item.type == obj.type;});\n    index > -1 ? list[index] = obj : list.push(obj);\n    commit('set', list);\n  },\n  remove: function remove(_ref2, type) {var state = _ref2.state,commit = _ref2.commit;\n    var list = _toConsumableArray(state.path);\n    var index = list.findIndex(function (item) {return item.type == type;});\n    if (index > -1) list.splice(index, 1);\n    commit('set', list);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9wYXRoLmpzIl0sIm5hbWVzIjpbInN0YXRlIiwicGF0aCIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiUEFUSCIsImdldHRlcnMiLCJnZXQiLCJtdXRhdGlvbnMiLCJzZXQiLCJzZXRTdG9yYWdlU3luYyIsImFjdGlvbnMiLCJhZGQiLCJvYmoiLCJjb21taXQiLCJsaXN0IiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJpdGVtIiwidHlwZSIsInB1c2giLCJyZW1vdmUiLCJzcGxpY2UiLCJuYW1lc3BhY2VkIl0sIm1hcHBpbmdzIjoidUZBQUEsMEQ7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLE1BQUksRUFBRUMsR0FBRyxDQUFDQyxjQUFKLENBQW1CQyxZQUFuQixLQUE0QixFQURyQixDQUN3QjtBQUR4QixDQUFkOztBQUlBLElBQU1DLE9BQU8sR0FBRztBQUNmQyxLQURlLGVBQ1ZOLEtBRFUsRUFDSDtBQUNYLFdBQU9BLEtBQUssQ0FBQ0MsSUFBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1NLFNBQVMsR0FBRztBQUNqQkMsS0FEaUIsZUFDWlIsS0FEWSxFQUNMQyxJQURLLEVBQ0M7QUFDakJELFNBQUssQ0FBQ0MsSUFBTixHQUFhQSxJQUFiO0FBQ0FDLE9BQUcsQ0FBQ08sY0FBSixDQUFtQkwsWUFBbkIsRUFBeUJKLEtBQUssQ0FBQ0MsSUFBL0I7QUFDQSxHQUpnQixFQUFsQjs7O0FBT0EsSUFBTVMsT0FBTyxHQUFHO0FBQ2ZDLEtBRGUscUJBQ09DLEdBRFAsRUFDWSxLQUFyQlosS0FBcUIsUUFBckJBLEtBQXFCLENBQWRhLE1BQWMsUUFBZEEsTUFBYztBQUMxQixRQUFNQyxJQUFJLHNCQUFPZCxLQUFLLENBQUNDLElBQWIsQ0FBVjtBQUNBLFFBQU1jLEtBQUssR0FBR0QsSUFBSSxDQUFDRSxTQUFMLENBQWUsVUFBQUMsSUFBSSxVQUFJQSxJQUFJLENBQUNDLElBQUwsSUFBYU4sR0FBRyxDQUFDTSxJQUFyQixFQUFuQixDQUFkO0FBQ0FILFNBQUssR0FBRyxDQUFDLENBQVQsR0FBYUQsSUFBSSxDQUFDQyxLQUFELENBQUosR0FBY0gsR0FBM0IsR0FBaUNFLElBQUksQ0FBQ0ssSUFBTCxDQUFVUCxHQUFWLENBQWpDO0FBQ0FDLFVBQU0sQ0FBQyxLQUFELEVBQVFDLElBQVIsQ0FBTjtBQUNBLEdBTmM7QUFPZk0sUUFQZSx5QkFPVUYsSUFQVixFQU9nQixLQUF0QmxCLEtBQXNCLFNBQXRCQSxLQUFzQixDQUFmYSxNQUFlLFNBQWZBLE1BQWU7QUFDOUIsUUFBTUMsSUFBSSxzQkFBT2QsS0FBSyxDQUFDQyxJQUFiLENBQVY7QUFDQSxRQUFNYyxLQUFLLEdBQUdELElBQUksQ0FBQ0UsU0FBTCxDQUFlLFVBQUFDLElBQUksVUFBSUEsSUFBSSxDQUFDQyxJQUFMLElBQWFBLElBQWpCLEVBQW5CLENBQWQ7QUFDQSxRQUFLSCxLQUFLLEdBQUcsQ0FBQyxDQUFkLEVBQWtCRCxJQUFJLENBQUNPLE1BQUwsQ0FBWU4sS0FBWixFQUFtQixDQUFuQjtBQUNsQkYsVUFBTSxDQUFDLEtBQUQsRUFBUUMsSUFBUixDQUFOO0FBQ0EsR0FaYyxFQUFoQixDOzs7QUFlZTtBQUNYUSxZQUFVLEVBQUUsSUFERDtBQUVYdEIsT0FBSyxFQUFMQSxLQUZXO0FBR1hLLFNBQU8sRUFBUEEsT0FIVztBQUlYRSxXQUFTLEVBQVRBLFNBSlc7QUFLZEcsU0FBTyxFQUFQQSxPQUxjLEUiLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQQVRIIH0gZnJvbSAnLi4vY29uZmlnLmpzJ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0cGF0aDogdW5pLmdldFN0b3JhZ2VTeW5jKFBBVEgpIHx8IFtdIC8v5pys5Zyw6LWE5rqQ6Lev5b6E5L+d5a2YXHJcbn1cclxuXHJcbmNvbnN0IGdldHRlcnMgPSB7XHJcblx0Z2V0IChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLnBhdGhcclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IG11dGF0aW9ucyA9IHtcclxuXHRzZXQgKHN0YXRlLCBwYXRoKSB7XHJcblx0XHRzdGF0ZS5wYXRoID0gcGF0aFxyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKFBBVEgsIHN0YXRlLnBhdGgpXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBhY3Rpb25zID0ge1xyXG5cdGFkZCAoe3N0YXRlLCBjb21taXR9LCBvYmopIHtcclxuXHRcdGNvbnN0IGxpc3QgPSBbLi4uc3RhdGUucGF0aF1cclxuXHRcdGNvbnN0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLnR5cGUgPT0gb2JqLnR5cGUpXHJcblx0XHRpbmRleCA+IC0xID8gbGlzdFtpbmRleF0gPSBvYmogOiBsaXN0LnB1c2gob2JqKVxyXG5cdFx0Y29tbWl0KCdzZXQnLCBsaXN0KVxyXG5cdH0sXHJcblx0cmVtb3ZlICh7c3RhdGUsIGNvbW1pdH0sIHR5cGUpIHtcclxuXHRcdGNvbnN0IGxpc3QgPSBbLi4uc3RhdGUucGF0aF1cclxuXHRcdGNvbnN0IGluZGV4ID0gbGlzdC5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLnR5cGUgPT0gdHlwZSlcclxuXHRcdGlmICggaW5kZXggPiAtMSApIGxpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuXHRcdGNvbW1pdCgnc2V0JywgbGlzdClcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///80\n");

/***/ }),
/* 81 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/downer.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var\n\nTIMEOUT = _config.default.TIMEOUT;\n\nvar state = {\n  task: [] //下载任务列表\n};\n\nvar getters = {\n  getTask: function getTask(state) {\n    return state.task;\n  } };\n\n\nvar actions = {\n  createTask: function createTask(_ref, params) {var state = _ref.state,dispatch = _ref.dispatch;\n    var Downer = __webpack_require__(/*! @/assets/constructor/downer.js */ 82).default;\n    state.task.push(new Downer(params));\n    var index = state.task.findIndex(function (task) {return task.parentId == params.id;});\n    state.task[index].init();\n  },\n  removeTask: function removeTask(_ref2, id) {var state = _ref2.state;\n    var index = state.task.findIndex(function (task) {return task.id == id;});\n    if (index > -1) {\n      state.task[index].destroy();\n      state.task.splice(index, 1);\n    }\n  },\n  clearTask: function clearTask() {\n    Object.keys(state.task).forEach(function (key) {\n      state.task[key].destroy();\n    });\n    state.task = [];\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9kb3duZXIuanMiXSwibmFtZXMiOlsiVElNRU9VVCIsIkNvbmZpZyIsInN0YXRlIiwidGFzayIsImdldHRlcnMiLCJnZXRUYXNrIiwiYWN0aW9ucyIsImNyZWF0ZVRhc2siLCJwYXJhbXMiLCJkaXNwYXRjaCIsIkRvd25lciIsInJlcXVpcmUiLCJkZWZhdWx0IiwicHVzaCIsImluZGV4IiwiZmluZEluZGV4IiwicGFyZW50SWQiLCJpZCIsImluaXQiLCJyZW1vdmVUYXNrIiwiZGVzdHJveSIsInNwbGljZSIsImNsZWFyVGFzayIsIk9iamVjdCIsImtleXMiLCJmb3JFYWNoIiwia2V5IiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6InVGQUFBLDJGOztBQUVRQSxPLEdBQVlDLGUsQ0FBWkQsTzs7QUFFUixJQUFNRSxLQUFLLEdBQUc7QUFDYkMsTUFBSSxFQUFFLEVBRE8sQ0FDSjtBQURJLENBQWQ7O0FBSUEsSUFBTUMsT0FBTyxHQUFHO0FBQ2ZDLFNBRGUsbUJBQ05ILEtBRE0sRUFDQztBQUNmLFdBQU9BLEtBQUssQ0FBQ0MsSUFBYjtBQUNBLEdBSGMsRUFBaEI7OztBQU1BLElBQU1HLE9BQU8sR0FBRztBQUNmQyxZQURlLDRCQUNnQkMsTUFEaEIsRUFDd0IsS0FBMUJOLEtBQTBCLFFBQTFCQSxLQUEwQixDQUFuQk8sUUFBbUIsUUFBbkJBLFFBQW1CO0FBQ3RDLFFBQU1DLE1BQU0sR0FBR0MsbUJBQU8sQ0FBQyx3Q0FBRCxDQUFQLENBQTBDQyxPQUF6RDtBQUNBVixTQUFLLENBQUNDLElBQU4sQ0FBV1UsSUFBWCxDQUFnQixJQUFJSCxNQUFKLENBQVdGLE1BQVgsQ0FBaEI7QUFDQSxRQUFNTSxLQUFLLEdBQUdaLEtBQUssQ0FBQ0MsSUFBTixDQUFXWSxTQUFYLENBQXFCLFVBQUFaLElBQUksVUFBSUEsSUFBSSxDQUFDYSxRQUFMLElBQWlCUixNQUFNLENBQUNTLEVBQTVCLEVBQXpCLENBQWQ7QUFDQWYsU0FBSyxDQUFDQyxJQUFOLENBQVdXLEtBQVgsRUFBa0JJLElBQWxCO0FBQ0EsR0FOYztBQU9mQyxZQVBlLDZCQU9NRixFQVBOLEVBT1UsS0FBWmYsS0FBWSxTQUFaQSxLQUFZO0FBQ3hCLFFBQU1ZLEtBQUssR0FBR1osS0FBSyxDQUFDQyxJQUFOLENBQVdZLFNBQVgsQ0FBcUIsVUFBQVosSUFBSSxVQUFJQSxJQUFJLENBQUNjLEVBQUwsSUFBV0EsRUFBZixFQUF6QixDQUFkO0FBQ0EsUUFBS0gsS0FBSyxHQUFHLENBQUMsQ0FBZCxFQUFrQjtBQUNqQlosV0FBSyxDQUFDQyxJQUFOLENBQVdXLEtBQVgsRUFBa0JNLE9BQWxCO0FBQ0FsQixXQUFLLENBQUNDLElBQU4sQ0FBV2tCLE1BQVgsQ0FBa0JQLEtBQWxCLEVBQXlCLENBQXpCO0FBQ0E7QUFDRCxHQWJjO0FBY2ZRLFdBZGUsdUJBY0Y7QUFDWkMsVUFBTSxDQUFDQyxJQUFQLENBQVl0QixLQUFLLENBQUNDLElBQWxCLEVBQXdCc0IsT0FBeEIsQ0FBZ0MsVUFBQUMsR0FBRyxFQUFJO0FBQ3RDeEIsV0FBSyxDQUFDQyxJQUFOLENBQVd1QixHQUFYLEVBQWdCTixPQUFoQjtBQUNBLEtBRkQ7QUFHQWxCLFNBQUssQ0FBQ0MsSUFBTixHQUFhLEVBQWI7QUFDQSxHQW5CYyxFQUFoQixDOzs7QUFzQmU7QUFDWHdCLFlBQVUsRUFBRSxJQUREO0FBRVh6QixPQUFLLEVBQUxBLEtBRlc7QUFHWEUsU0FBTyxFQUFQQSxPQUhXO0FBSWRFLFNBQU8sRUFBUEEsT0FKYyxFIiwiZmlsZSI6IjgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbmZpZyBmcm9tICdAL2Fzc2V0cy9qcy9jb25maWcuanMnXHJcblxyXG5jb25zdCB7IFRJTUVPVVQgfSA9IENvbmZpZ1xyXG5cclxuY29uc3Qgc3RhdGUgPSB7XHJcblx0dGFzazogW10gLy/kuIvovb3ku7vliqHliJfooahcclxufVxyXG5cclxuY29uc3QgZ2V0dGVycyA9IHtcclxuXHRnZXRUYXNrIChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLnRhc2tcclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IGFjdGlvbnMgPSB7XHJcblx0Y3JlYXRlVGFzayAoe3N0YXRlLCBkaXNwYXRjaH0sIHBhcmFtcykge1xyXG5cdFx0Y29uc3QgRG93bmVyID0gcmVxdWlyZSgnQC9hc3NldHMvY29uc3RydWN0b3IvZG93bmVyLmpzJykuZGVmYXVsdFxyXG5cdFx0c3RhdGUudGFzay5wdXNoKG5ldyBEb3duZXIocGFyYW1zKSlcclxuXHRcdGNvbnN0IGluZGV4ID0gc3RhdGUudGFzay5maW5kSW5kZXgodGFzayA9PiB0YXNrLnBhcmVudElkID09IHBhcmFtcy5pZClcclxuXHRcdHN0YXRlLnRhc2tbaW5kZXhdLmluaXQoKVxyXG5cdH0sXHJcblx0cmVtb3ZlVGFzayAoe3N0YXRlfSwgaWQpIHtcclxuXHRcdGNvbnN0IGluZGV4ID0gc3RhdGUudGFzay5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09IGlkKVxyXG5cdFx0aWYgKCBpbmRleCA+IC0xICkge1xyXG5cdFx0XHRzdGF0ZS50YXNrW2luZGV4XS5kZXN0cm95KClcclxuXHRcdFx0c3RhdGUudGFzay5zcGxpY2UoaW5kZXgsIDEpXHJcblx0XHR9XHJcblx0fSxcclxuXHRjbGVhclRhc2sgKCkge1xyXG5cdFx0T2JqZWN0LmtleXMoc3RhdGUudGFzaykuZm9yRWFjaChrZXkgPT4ge1xyXG5cdFx0XHRzdGF0ZS50YXNrW2tleV0uZGVzdHJveSgpXHJcblx0XHR9KVxyXG5cdFx0c3RhdGUudGFzayA9IFtdXHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICBuYW1lc3BhY2VkOiB0cnVlLFxyXG4gICAgc3RhdGUsXHJcbiAgICBnZXR0ZXJzLFxyXG5cdGFjdGlvbnNcclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81\n");

/***/ }),
/* 82 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/downer.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/js_sdk/yb-native-ui/index.js */ 83));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var\n\ngetters = _store.default.getters,dispatch = _store.default.dispatch;var\nTIMEOUT = _config.default.TIMEOUT;var\nnotification = _index.default.notification;var\n\nDowner = /*#__PURE__*/function () {\n  function Downer(_ref) {var id = _ref.id,title = _ref.title,cover = _ref.cover,src = _ref.src,instance = _ref.instance,type = _ref.type,extra = _ref.extra,source = _ref.source;_classCallCheck(this, Downer);\n    this.id = id + '_downer';\n    this.parentId = id;\n    this.title = title || ''; //文件名称\n    this.cover = cover || ''; //封面\n    this.src = src; //下载路径\n    this.savePath = ''; //文件下载成功后的保存路径\n    this.progress = ''; //下载进度\n    this.totalBytes = 0; //当前下载量\n    this.allBytes = 0; //下载总量\n    this.instance = null; //下载实例\n    this.status = 0; //下载状态 <0 未开始> <1 正在下载> <2 下载成功> <3 下载失败>\n    this.type = type || '';\n    this.extra = extra || {}; //附加字段\n    this.source = source || ''; //下载来源\n  }_createClass(Downer, [{ key: \"init\", value: function init()\n    {var _this = this;\n      var skinMode = getters['app/skinMode'];\n      notification({\n        icon: '/static/logo.png',\n        name: '好用聚合',\n        title: '歌曲下载',\n        content: '成功创建下载任务',\n        duration: 3000,\n        dark: skinMode == 'night',\n        success: function success(res) {\n          if (res.confirm) {\n            uni.navigateTo({\n              url: '/pages/user/download' });\n\n          }\n        } });\n\n      this.instance = uni.downloadFile({\n        url: this.src,\n        timeout: TIMEOUT,\n        success: function success(res) {\n          if (res.statusCode == 200) {\n            uni.saveFile({\n              tempFilePath: res.tempFilePath,\n              success: function success(ret) {\n                _this.status = 2;\n                _this.savePath = ret.savedFilePath;\n                dispatch('cache/addCache', {\n                  id: _this.parentId,\n                  title: _this.title,\n                  cover: _this.cover,\n                  src: _this.savePath,\n                  bytes: _this.allBytes,\n                  type: _this.type,\n                  source: _this.source });\n\n                notification({\n                  icon: '/static/logo.png',\n                  name: '好用聚合',\n                  title: '任务成功',\n                  type: 'success',\n                  content: '歌曲下载成功',\n                  duration: 3000,\n                  dark: skinMode == 'night' });\n\n                dispatch('downer/removeTask', _this.id);\n              } });\n\n          } else {\n            _this.status = 3;\n            notification({\n              icon: '/static/logo.png',\n              name: '好用聚合',\n              title: '任务失败',\n              type: 'error',\n              content: '歌曲下载失败',\n              duration: 3000,\n              dark: skinMode == 'night' });\n\n            dispatch('downer/removeTask', _this.id);\n          }\n        },\n        fail: function fail(err) {\n          _this.status = 3;\n          notification({\n            icon: '/static/logo.png',\n            name: '好用聚合',\n            title: '任务失败',\n            type: 'error',\n            content: '歌曲下载失败',\n            duration: 3000,\n            dark: skinMode == 'night' });\n\n          dispatch('downer/removeTask', _this.id);\n        } });\n\n      this.status = 1;\n      this.instance.onProgressUpdate(function (res) {\n        _this.progress = res.progress;\n        _this.totalBytes = res.totalBytesWritten;\n        _this.allBytes = res.totalBytesExpectedToWrite;\n      });\n    } }, { key: \"destroy\", value: function destroy()\n    {\n      this.instance && this.status == 1 ? this.instance.abort() : null;\n      this.instance = null;\n    } }]);return Downer;}();exports.default = Downer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///82\n");

/***/ }),
/* 83 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _modal = __webpack_require__(/*! ./modal.js */ 84);\nvar _panel = _interopRequireDefault(__webpack_require__(/*! ./panel.js */ 87));\nvar _notification = _interopRequireDefault(__webpack_require__(/*! ./notification.js */ 88));\nvar _toolbar = _interopRequireDefault(__webpack_require__(/*! ./toolbar.js */ 89));\nvar _scircle = _interopRequireDefault(__webpack_require__(/*! ./scircle.js */ 90));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var _default =\n\n{\n  namespaced: true,\n  confirm: _modal.confirm,\n  alert: _modal.alert,\n  panel: _panel.default,\n  notification: _notification.default,\n  toolbar: _toolbar.default,\n  scircle: _scircle.default };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vanNfc2RrL3liLW5hdGl2ZS11aS9pbmRleC5qcyJdLCJuYW1lcyI6WyJuYW1lc3BhY2VkIiwiY29uZmlybSIsImFsZXJ0IiwicGFuZWwiLCJub3RpZmljYXRpb24iLCJ0b29sYmFyIiwic2NpcmNsZSJdLCJtYXBwaW5ncyI6InVGQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUY7O0FBRWU7QUFDZEEsWUFBVSxFQUFFLElBREU7QUFFZEMsU0FBTyxFQUFQQSxjQUZjO0FBR2RDLE9BQUssRUFBTEEsWUFIYztBQUlkQyxPQUFLLEVBQUxBLGNBSmM7QUFLZEMsY0FBWSxFQUFaQSxxQkFMYztBQU1kQyxTQUFPLEVBQVBBLGdCQU5jO0FBT2RDLFNBQU8sRUFBUEEsZ0JBUGMsRSIsImZpbGUiOiI4My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpcm0sIGFsZXJ0IH0gZnJvbSAnLi9tb2RhbC5qcydcclxuaW1wb3J0IHBhbmVsIGZyb20gJy4vcGFuZWwuanMnXHJcbmltcG9ydCBub3RpZmljYXRpb24gZnJvbSAnLi9ub3RpZmljYXRpb24uanMnXHJcbmltcG9ydCB0b29sYmFyIGZyb20gJy4vdG9vbGJhci5qcydcclxuaW1wb3J0IHNjaXJjbGUgZnJvbSAnLi9zY2lyY2xlLmpzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdG5hbWVzcGFjZWQ6IHRydWUsXHJcblx0Y29uZmlybSxcclxuXHRhbGVydCxcclxuXHRwYW5lbCxcclxuXHRub3RpZmljYXRpb24sXHJcblx0dG9vbGJhcixcclxuXHRzY2lyY2xlXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///83\n");

/***/ }),
/* 84 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/modal.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.modal = modal;exports.alert = alert;exports.confirm = confirm;\n\n\n\nvar _mask = _interopRequireDefault(__webpack_require__(/*! ./mask.js */ 85));\nvar _color = _interopRequireDefault(__webpack_require__(/*! ./color.js */ 86));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //弹窗\nvar windowWidth = uni.getSystemInfoSync().screenWidth;var windowHeight = uni.getSystemInfoSync().screenHeight;\nfunction modal(_ref) {var title = _ref.title,content = _ref.content,cancelHide = _ref.cancelHide,confirmText = _ref.confirmText,cancelText = _ref.cancelText,dark = _ref.dark,themeColor = _ref.themeColor,success = _ref.success,fail = _ref.fail;\n  var padding = uni.upx2px(20); //内间隔\n  var titleSize = uni.upx2px(30); //标题大小\n  var titleHeight = title ? titleSize + padding + padding : 0; //字体所占高度\n\n  var width = uni.upx2px(520); //弹框宽度\n  var height = uni.upx2px(220) + titleHeight; //弹框高度\n  var radius = uni.upx2px(10); //弹框圆角大小\n  var top = windowHeight / 2 - height / 2; //弹框top定位\n  var left = windowWidth / 2 - width / 2; //弹框left定位\n  var footerHeight = uni.upx2px(90); //弹框按钮栏所占高度\n  var footerTop = height - footerHeight; //弹框安钮栏top定位\n\n  var contentSize = uni.upx2px(24); //内容文字大小\n  var contentHeight = height - titleHeight - footerHeight - (title ? padding : 2 * padding); //内容文字高度\n\n  var btnSize = uni.upx2px(26);\n\n  var mode = dark ? 'dark' : 'light';\n  var bgColor = _color.default[mode].bg;\n  var lineColor = _color.default[mode].gap;\n  var titleColor = themeColor || _color.default[mode].title;\n  var textColor = _color.default[mode].title;\n\n  var mask = (0, _mask.default)();\n  var popup = new plus.nativeObj.View('popup', {\n    top: top + 'px',\n    left: 0 + 'px',\n    width: width + 'px',\n    height: height + 'px' });\n\n  var draws = [{\n    tag: 'rect',\n    id: 'bg',\n    rectStyles: {\n      color: bgColor,\n      radius: radius + 'px' },\n\n    position: {\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%' } },\n\n  {\n    tag: 'rect',\n    id: 'h-line',\n    rectStyles: {\n      color: lineColor },\n\n    position: {\n      top: footerTop + 'px',\n      left: 0,\n      width: '100%',\n      height: 1 + 'px' } },\n\n  {\n    tag: 'font',\n    id: 'title',\n    text: title,\n    textStyles: {\n      color: titleColor,\n      size: titleSize + 'px',\n      align: 'middle' },\n\n    position: {\n      top: 0,\n      left: padding / 2 + 'px',\n      width: width - padding + 'px',\n      height: titleHeight + 'px' } },\n\n  {\n    tag: 'font',\n    id: 'content',\n    text: content,\n    textStyles: {\n      color: textColor,\n      size: contentSize + 'px',\n      align: 'middle',\n      whiteSpace: 'normal' },\n\n    position: {\n      top: (title ? titleHeight : padding) + 'px',\n      left: padding / 2 + 'px',\n      width: width - padding + 'px',\n      height: contentHeight + 'px' } }];\n\n\n  var arr = [];\n  if (!cancelHide) {\n    arr = [\n    {\n      tag: 'rect',\n      id: 'v-line',\n      rectStyles: {\n        color: lineColor },\n\n      position: {\n        top: footerTop + 'px',\n        left: width / 2 - 0.5 + 'px',\n        width: 1 + 'px',\n        height: footerHeight + 'px' } },\n\n    {\n      tag: 'font',\n      id: 'confirm',\n      text: confirmText || '确认',\n      textStyles: {\n        color: titleColor,\n        size: btnSize + 'px',\n        weight: 'bold' },\n\n      position: {\n        top: footerTop + 'px',\n        left: width / 2 + 'px',\n        width: width / 2 + 'px',\n        height: footerHeight + 'px' } },\n\n    {\n      tag: 'font',\n      id: 'cancel',\n      text: cancelText || '取消',\n      textStyles: {\n        color: textColor,\n        size: btnSize + 'px' },\n\n      position: {\n        top: footerTop + 'px',\n        left: 0,\n        width: width / 2 + 'px',\n        height: footerHeight + 'px' } }];\n\n\n\n  } else {\n    arr = [\n    {\n      tag: 'font',\n      id: 'confirm',\n      text: confirmText || '确认',\n      textStyles: {\n        color: titleColor,\n        size: btnSize + 'px',\n        weight: 'bold' },\n\n      position: {\n        top: footerTop + 'px',\n        left: 0,\n        width: '100%',\n        height: footerHeight + 'px' } }];\n\n\n\n  }\n  draws = draws.concat(arr);\n  popup.draw(draws);\n\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var backs = page.$vm.$options.onBackPress; //记录下当前页面有可能设置的返回事件监听方法，用于还原\n  page.$vm.$options.onBackPress = new Array(0);\n  page.$vm.$options.onBackPress.push(function (e) {\n    complete(false);\n    return true;\n  });\n  var complete = function complete(confirm) {var cancel = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    try {\n      mask.close();\n      popup.close();\n      mask = null;\n      popup = null;\n      page.$vm.$options.onBackPress = backs; //还原当前页面的返回事件监听\n      pages = null;\n      page = null;\n      backs = null;\n      success ? success({\n        confirm: confirm,\n        cancel: cancel }) :\n      null;\n    } catch (e) {\n      fail ? fail(e) : null;\n    }\n  };\n  popup.addEventListener(\"click\", function (e) {\n    try {\n      var _confirm = {\n        top: footerTop,\n        bottom: footerTop + footerHeight,\n        left: cancelHide ? 0 : width / 2,\n        right: width };\n\n      var cancel = cancelHide ? {\n        top: -1,\n        bottom: -1,\n        left: -1,\n        right: -1 } :\n      {\n        top: footerTop,\n        bottom: footerTop + footerHeight,\n        left: 0,\n        right: width / 2 };\n\n      if (e.clientX >= _confirm.left && e.clientX <= _confirm.right && e.clientY >= _confirm.top && e.clientY <= _confirm.bottom) {\n        complete(true);\n      } else if (e.clientX >= cancel.left && e.clientX <= cancel.right && e.clientY >= cancel.top && e.clientY <= cancel.bottom) {\n        complete(false, true);\n      }\n    } catch (e) {\n      complete(false);\n    }\n  });\n  mask.addEventListener(\"click\", function (e) {\n    try {\n      complete(false);\n    } catch (e) {\n      complete(false);\n    }\n  });\n  mask.show();\n  popup.show();\n  var aLeft = 0;\n  var show = function show() {\n    setTimeout(function () {\n      aLeft += 10;\n      if (aLeft < left) {\n        popup.setStyle({\n          left: aLeft + 'px' });\n\n        show();\n      } else {\n        aLeft = left;\n        popup.setStyle({\n          left: aLeft + 'px' });\n\n      }\n    }, 10);\n  };\n  show();\n}\n\nfunction alert(_ref2) {var title = _ref2.title,content = _ref2.content,confirmText = _ref2.confirmText,dark = _ref2.dark,themeColor = _ref2.themeColor,success = _ref2.success,fail = _ref2.fail;\n  modal({\n    title: title,\n    content: content,\n    cancelHide: true,\n    confirmText: confirmText || '确认',\n    dark: dark || false,\n    themeColor: themeColor || '',\n    success: success || function () {},\n    fail: success || function () {} });\n\n}\n\nfunction confirm(_ref3) {var title = _ref3.title,content = _ref3.content,confirmText = _ref3.confirmText,cancelText = _ref3.cancelText,dark = _ref3.dark,themeColor = _ref3.themeColor,success = _ref3.success,fail = _ref3.fail;\n  modal({\n    title: title,\n    content: content,\n    cancelHide: false,\n    confirmText: confirmText || '确认',\n    cancelText: cancelText || '取消',\n    dark: dark || false,\n    themeColor: themeColor || '',\n    success: success || function () {},\n    fail: success || function () {} });\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n");

/***/ }),
/* 85 */
/*!****************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/mask.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = mask; //遮罩层\n\nfunction mask(opacity) {\n  var bgColor = \"rgba(0,0,0,\".concat(typeof opacity == 'number' ? opacity : 0.4, \")\");\n  var mask = new plus.nativeObj.View('mask', {\n    width: '100%',\n    height: '100%',\n    top: '0',\n    left: '0',\n    backgroundColor: bgColor });\n\n  return mask;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vanNfc2RrL3liLW5hdGl2ZS11aS9tYXNrLmpzIl0sIm5hbWVzIjpbIm1hc2siLCJvcGFjaXR5IiwiYmdDb2xvciIsInBsdXMiLCJuYXRpdmVPYmoiLCJWaWV3Iiwid2lkdGgiLCJoZWlnaHQiLCJ0b3AiLCJsZWZ0IiwiYmFja2dyb3VuZENvbG9yIl0sIm1hcHBpbmdzIjoic0ZBQUE7O0FBRWUsU0FBU0EsSUFBVCxDQUFlQyxPQUFmLEVBQXdCO0FBQ3RDLE1BQU1DLE9BQU8sd0JBQWlCLE9BQU9ELE9BQVAsSUFBa0IsUUFBbEIsR0FBNkJBLE9BQTdCLEdBQXVDLEdBQXhELE1BQWI7QUFDQSxNQUFNRCxJQUFJLEdBQUcsSUFBSUcsSUFBSSxDQUFDQyxTQUFMLENBQWVDLElBQW5CLENBQXdCLE1BQXhCLEVBQWdDO0FBQzVDQyxTQUFLLEVBQUUsTUFEcUM7QUFFNUNDLFVBQU0sRUFBRSxNQUZvQztBQUc1Q0MsT0FBRyxFQUFFLEdBSHVDO0FBSTVDQyxRQUFJLEVBQUUsR0FKc0M7QUFLNUNDLG1CQUFlLEVBQUVSLE9BTDJCLEVBQWhDLENBQWI7O0FBT0EsU0FBT0YsSUFBUDtBQUNBIiwiZmlsZSI6Ijg1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/pga7nvanlsYJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hc2sgKG9wYWNpdHkpIHtcclxuXHRjb25zdCBiZ0NvbG9yID0gYHJnYmEoMCwwLDAsJHt0eXBlb2Ygb3BhY2l0eSA9PSAnbnVtYmVyJyA/IG9wYWNpdHkgOiAwLjR9KWBcclxuXHRjb25zdCBtYXNrID0gbmV3IHBsdXMubmF0aXZlT2JqLlZpZXcoJ21hc2snLCB7XHJcblx0XHR3aWR0aDogJzEwMCUnLFxyXG5cdFx0aGVpZ2h0OiAnMTAwJScsXHJcblx0XHR0b3A6ICcwJyxcclxuXHRcdGxlZnQ6ICcwJyxcclxuXHRcdGJhY2tncm91bmRDb2xvcjogYmdDb2xvcixcclxuXHR9KTtcclxuXHRyZXR1cm4gbWFza1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///85\n");

/***/ }),
/* 86 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/color.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //原生组件使用颜色\nvar _default =\n{\n  'light': {\n    bg: '#FFFFFF',\n    title: '#333333',\n    gap: '#EEEEEE',\n    text: '#666666',\n    text_2: '#999999' },\n\n  'dark': {\n    bg: '#222222',\n    title: '#f4f7f5',\n    gap: '#191919',\n    text: '#8a8a8a',\n    text_2: '#888888' },\n\n  'waring': {\n    text: '#FCC121' },\n\n  'success': {\n    text: '#21C088' },\n\n  'error': {\n    text: '#FF3B30' } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vanNfc2RrL3liLW5hdGl2ZS11aS9jb2xvci5qcyJdLCJuYW1lcyI6WyJiZyIsInRpdGxlIiwiZ2FwIiwidGV4dCIsInRleHRfMiJdLCJtYXBwaW5ncyI6IndGQUFBOztBQUVlO0FBQ2QsV0FBUztBQUNSQSxNQUFFLEVBQUUsU0FESTtBQUVSQyxTQUFLLEVBQUUsU0FGQztBQUdSQyxPQUFHLEVBQUUsU0FIRztBQUlSQyxRQUFJLEVBQUUsU0FKRTtBQUtSQyxVQUFNLEVBQUUsU0FMQSxFQURLOztBQVFkLFVBQVE7QUFDUEosTUFBRSxFQUFFLFNBREc7QUFFUEMsU0FBSyxFQUFFLFNBRkE7QUFHUEMsT0FBRyxFQUFFLFNBSEU7QUFJUEMsUUFBSSxFQUFFLFNBSkM7QUFLUEMsVUFBTSxFQUFFLFNBTEQsRUFSTTs7QUFlZCxZQUFVO0FBQ1RELFFBQUksRUFBRSxTQURHLEVBZkk7O0FBa0JkLGFBQVc7QUFDVkEsUUFBSSxFQUFFLFNBREksRUFsQkc7O0FBcUJkLFdBQVM7QUFDUkEsUUFBSSxFQUFFLFNBREUsRUFyQkssRSIsImZpbGUiOiI4Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8v5Y6f55Sf57uE5Lu25L2/55So6aKc6ImyXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblx0J2xpZ2h0Jzoge1xyXG5cdFx0Ymc6ICcjRkZGRkZGJyxcclxuXHRcdHRpdGxlOiAnIzMzMzMzMycsXHJcblx0XHRnYXA6ICcjRUVFRUVFJyxcclxuXHRcdHRleHQ6ICcjNjY2NjY2JyxcclxuXHRcdHRleHRfMjogJyM5OTk5OTknXHJcblx0fSxcclxuXHQnZGFyayc6IHtcclxuXHRcdGJnOiAnIzIyMjIyMicsXHJcblx0XHR0aXRsZTogJyNmNGY3ZjUnLFxyXG5cdFx0Z2FwOiAnIzE5MTkxOScsXHJcblx0XHR0ZXh0OiAnIzhhOGE4YScsXHJcblx0XHR0ZXh0XzI6ICcjODg4ODg4J1xyXG5cdH0sXHJcblx0J3dhcmluZyc6IHtcclxuXHRcdHRleHQ6ICcjRkNDMTIxJ1xyXG5cdH0sXHJcblx0J3N1Y2Nlc3MnOiB7XHJcblx0XHR0ZXh0OiAnIzIxQzA4OCdcclxuXHR9LFxyXG5cdCdlcnJvcic6IHtcclxuXHRcdHRleHQ6ICcjRkYzQjMwJ1xyXG5cdH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///86\n");

/***/ }),
/* 87 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/panel.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.panel = panel;exports.default = void 0;\n\n\n\nvar _mask = _interopRequireDefault(__webpack_require__(/*! ./mask.js */ 85));\nvar _color = _interopRequireDefault(__webpack_require__(/*! ./color.js */ 86));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //操作面板\nvar windowWidth = uni.getSystemInfoSync().screenWidth;var windowHeight = uni.getSystemInfoSync().screenHeight;\nfunction panel(_ref) {var title = _ref.title,subTitle = _ref.subTitle,menus = _ref.menus,cancelText = _ref.cancelText,themeColor = _ref.themeColor,dark = _ref.dark,success = _ref.success,fail = _ref.fail;\n  var lines = Math.ceil(menus.length / 4);\n  var titleHeight = uni.upx2px(60) + (subTitle ? uni.upx2px(20) : 0);\n  var footerHeight = uni.upx2px(100);\n  var itemHeight = uni.upx2px(150);\n  var height = lines * itemHeight + footerHeight + titleHeight + uni.upx2px(20);\n  var footerTop = height - footerHeight;\n\n  var titleSize = uni.upx2px(28);\n  var textSize = uni.upx2px(22);\n\n  var mode = dark ? 'dark' : 'light';\n  var bgColor = _color.default[mode].bg;\n  var lineColor = _color.default[mode].gap;\n  var titleColor = themeColor || _color.default[mode].title;\n  var textColor = _color.default[mode].text_2;\n\n  var mask = (0, _mask.default)();\n  var popup = new plus.nativeObj.View('popup', {\n    width: '100%',\n    height: height + 'px',\n    bottom: -height + 'px',\n    left: '0' });\n\n  var draws = [{\n    tag: 'rect',\n    id: 'bg',\n    rectStyles: {\n      color: bgColor },\n\n    position: {\n      top: 0 + 'px',\n      left: 0 + 'px',\n      width: '100%',\n      height: '100%' } },\n\n  {\n    tag: 'font',\n    id: 'title',\n    text: title || '操作面板',\n    textStyles: {\n      color: titleColor,\n      size: titleSize + 'px',\n      overflow: 'ellipsis',\n      align: 'middle',\n      verticalAlign: 'middle' },\n\n    position: {\n      top: 0 + 'px',\n      left: '5%',\n      width: '90%',\n      height: titleHeight + 'px' } },\n\n  {\n    tag: 'font',\n    id: 'subTitle',\n    text: subTitle || '',\n    textStyles: {\n      color: textColor,\n      size: textSize + 'px',\n      overflow: 'ellipsis',\n      align: 'middle',\n      verticalAlign: 'middle' },\n\n    position: {\n      top: titleSize + 5 + 'px',\n      left: '5%',\n      width: '90%',\n      height: titleHeight + 'px' } },\n\n  {\n    tag: 'rect',\n    id: 'h-line',\n    rectStyles: {\n      color: lineColor },\n\n    position: {\n      top: footerTop + 'px',\n      left: 0,\n      width: '100%',\n      height: 1 + 'px' } },\n\n  {\n    tag: 'font',\n    id: 'cancelText',\n    text: cancelText || '关闭面板',\n    textStyles: {\n      color: titleColor,\n      size: titleSize + 'px',\n      align: 'middle',\n      verticalAlign: 'middle' },\n\n    position: {\n      top: footerTop + 'px',\n      left: 0,\n      width: '100%',\n      height: footerHeight + 'px' } }];\n\n\n  var drawMenuIcon = menus.map(function (menu, key) {\n    return {\n      tag: 'font',\n      id: menu.id,\n      text: menu.icon,\n      textStyles: {\n        family: menu.family,\n        fontSrc: menu.fontSrc,\n        color: menu.color,\n        size: menu.size + 'px',\n        align: 'middle',\n        verticalAlign: 'middle' },\n\n      position: {\n        top: titleHeight + Math.floor(key / 4) * itemHeight + 'px',\n        left: key % 4 * 25 + '%',\n        width: '25%',\n        height: itemHeight + 'px' } };\n\n\n  });\n  var drawMenuTitle = menus.map(function (menu, key) {\n    return {\n      tag: 'font',\n      id: menu.id + '_title',\n      text: menu.title,\n      textStyles: {\n        color: titleColor,\n        size: titleSize + 'px',\n        align: 'middle',\n        verticalAlign: 'bottom' },\n\n      position: {\n        top: titleHeight + Math.floor(key / 4) * itemHeight + 'px',\n        left: key % 4 * 25 + '%',\n        width: '25%',\n        height: itemHeight + 'px' } };\n\n\n  });\n  popup.draw(draws.concat(drawMenuIcon.concat(drawMenuTitle)));\n\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var backs = page.$vm.$options.onBackPress; //记录下当前页面有可能设置的返回事件监听方法，用于还原\n  page.$vm.$options.onBackPress = new Array(0);\n  page.$vm.$options.onBackPress.push(function (e) {\n    complete(false);\n    return true;\n  });\n  var complete = function complete(bol, data) {\n    try {\n      mask.close();\n      popup.close();\n      mask = null;\n      popup = null;\n      page.$vm.$options.onBackPress = backs; //还原当前页面的返回事件监听\n      pages = null;\n      page = null;\n      backs = null;\n      success ? success({\n        confirm: bol,\n        data: data || null }) :\n      null;\n    } catch (e) {\n      fail ? fail(e) : null;\n    }\n  };\n  popup.addEventListener(\"click\", function (e) {\n    try {\n      var menuItems = Object.keys(menus).map(function (key) {\n        return {\n          top: titleHeight + Math.floor(key / 4) * itemHeight,\n          bottom: titleHeight + Math.floor(key / 4) * itemHeight + itemHeight,\n          left: key % 4 * (windowWidth * 0.25),\n          right: key % 4 * (windowWidth * 0.25) + windowWidth * 0.25 };\n\n      });\n      menuItems.forEach(function (item, key) {\n        if (e.clientX >= item.left && e.clientX <= item.right && e.clientY >= item.top && e.clientY <= item.bottom) {\n          complete(true, {\n            id: menus[key].id,\n            key: key });\n\n        }\n      });\n      var cancel = {\n        top: footerTop,\n        bottom: footerTop + footerHeight,\n        left: 0,\n        right: windowWidth };\n\n      if (e.clientX >= cancel.left && e.clientX <= cancel.right && e.clientY >= cancel.top && e.clientY <= cancel.bottom) {\n        complete(false);\n      }\n    } catch (e) {\n      complete(false);\n    }\n  });\n  mask.addEventListener(\"click\", function (e) {\n    try {\n      complete(false);\n    } catch (e) {\n      complete(false);\n    }\n  });\n  mask.show();\n  popup.show();\n  var bottom = 0;\n  var show = function show() {\n    setTimeout(function () {\n      bottom += 10;\n      if (bottom >= height) {\n        bottom = height;\n        popup.setStyle({\n          bottom: bottom - height + 'px' });\n\n      } else {\n        popup.setStyle({\n          bottom: bottom - height + 'px' });\n\n        show();\n      }\n    }, 10);\n  };\n  show();\n}var _default =\n\npanel;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///87\n");

/***/ }),
/* 88 */
/*!************************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/notification.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.notification = notification;exports.default = void 0;\n\n\n\nvar _color = _interopRequireDefault(__webpack_require__(/*! ./color.js */ 86));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //顶部通知栏\nvar windowWidth = uni.getSystemInfoSync().screenWidth;var windowBarHeight = uni.getSystemInfoSync().statusBarHeight;\nfunction notification(_ref) {var title = _ref.title,content = _ref.content,icon = _ref.icon,name = _ref.name,duration = _ref.duration,type = _ref.type,dark = _ref.dark,success = _ref.success,fail = _ref.fail;\n  var timer = null;\n  var iconSize = uni.upx2px(60);\n  var titleSize = uni.upx2px(24);\n  var textSize = uni.upx2px(22);\n  var radius = uni.upx2px(20);\n  var padding = uni.upx2px(15);\n  var topHeight = icon || name ? 2 * padding + (icon ? iconSize : textSize) : 0;\n  var titleHeight = title ? titleSize : 0;\n  var contentHeight = content ? textSize + 2 * padding : 0;\n  var height = topHeight + titleHeight + contentHeight;\n\n  var mode = dark ? 'dark' : 'light';\n  var bgColor = _color.default[mode].bg;\n  var lineColor = _color.default[mode].gap;\n  var titleColor = _color.default[mode].title;\n  var textColor = _color.default[mode].text_2;\n  var tipColor = !type || type == 'default' ? '' : _color.default[type].text;\n  var popup = new plus.nativeObj.View('popup', {\n    width: windowWidth - 2 * padding + 'px',\n    height: height + 'px',\n    top: -(height + padding) + 'px',\n    left: padding + 'px' });\n\n  var draws = [{\n    tag: 'rect',\n    id: 'bg',\n    rectStyles: {\n      color: bgColor,\n      radius: radius + 'px',\n      borderWidth: '2px',\n      borderColor: lineColor },\n\n    position: {\n      top: 0 + 'px',\n      left: 0 + 'px',\n      width: '100%',\n      height: '100%' } }];\n\n\n  if (icon) {\n    draws.push({\n      tag: 'img',\n      id: 'icon',\n      src: icon,\n      position: {\n        top: padding + 'px',\n        left: padding + 'px',\n        width: iconSize + 'px',\n        height: iconSize + 'px' } });\n\n\n  }\n  if (name) {\n    draws.push({\n      tag: 'font',\n      id: 'name',\n      text: name || '',\n      textStyles: {\n        color: titleColor,\n        size: textSize + 'px',\n        overflow: 'ellipsis',\n        align: 'left',\n        verticalAlign: 'middle' },\n\n      position: {\n        top: 0,\n        left: (icon ? 2 * padding + iconSize : padding) + 'px',\n        width: windowWidth - iconSize - 2 * padding + 'px',\n        height: topHeight + 'px' } });\n\n\n  }\n  if (title) {\n    draws.push({\n      tag: 'font',\n      id: 'title',\n      text: title || '',\n      textStyles: {\n        color: tipColor ? tipColor : titleColor,\n        size: titleSize + 'px',\n        overflow: 'ellipsis',\n        align: 'left',\n        verticalAlign: 'middle' },\n\n      position: {\n        top: topHeight + 'px',\n        left: padding + 'px',\n        width: windowWidth - 2 * padding + 'px',\n        height: titleHeight + 'px' } });\n\n\n  }\n  if (content) {\n    draws.push({\n      tag: 'font',\n      id: 'content',\n      text: content || '',\n      textStyles: {\n        color: textColor,\n        size: textSize + 'px',\n        overflow: 'ellipsis',\n        align: 'left',\n        verticalAlign: 'middle' },\n\n      position: {\n        top: topHeight + titleHeight + 'px',\n        left: padding + 'px',\n        width: windowWidth - 2 * padding + 'px',\n        height: contentHeight + 'px' } });\n\n\n  }\n  popup.draw(draws);\n\n  var complete = function complete(bol) {\n    try {\n      timer ? clearTimeout(timer) : null;\n      timer = null;\n      popup.close();\n      popup = null;\n      success ? success({\n        confirm: bol }) :\n      null;\n    } catch (e) {\n      fail ? fail(e) : null;\n    }\n  };\n  popup.addEventListener(\"click\", function (e) {\n    try {\n      complete(true);\n    } catch (e) {\n      complete(false);\n    }\n  });\n  popup.show();\n  var top = 0;\n  var max = height + windowBarHeight;\n  var show = function show() {\n    setTimeout(function () {\n      top += 10;\n      if (top >= max) {\n        top = max;\n        popup.setStyle({\n          top: top - height + 'px' });\n\n        if (duration > 0) {\n          timer = setTimeout(function () {\n            complete(false);\n          }, duration ? duration : 2000);\n        }\n      } else {\n        popup.setStyle({\n          top: top - height + 'px' });\n\n        show();\n      }\n    }, 10);\n  };\n  show();\n}var _default =\n\nnotification;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///88\n");

/***/ }),
/* 89 */
/*!*******************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/toolbar.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.toolbar = toolbar;exports.default = void 0;var _mask = _interopRequireDefault(__webpack_require__(/*! ./mask.js */ 85));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n\n\nfunction toolbar(_ref) {var menus = _ref.menus,cancelText = _ref.cancelText,dark = _ref.dark,success = _ref.success,fail = _ref.fail;\n  var system = uni.getSystemInfoSync();\n  var windowWidth = system.windowWidth;\n  var windowHeight = system.screenHeight;\n  var height = windowHeight - uni.upx2px(200);\n  var itemHeight = uni.upx2px(50);\n  var lineItemLength = Math.floor(height / itemHeight); //每一列最多排多少项\n  var width = Math.ceil(menus.length / lineItemLength) * uni.upx2px(140);\n\n  var textSize = uni.upx2px(26);\n\n  var bgColor = dark ? '#3F3F3F' : '#FFFFFF';\n  var lineColor = dark ? '#191919' : '#c5c5c5';\n  var textColor = dark ? '#f4f7f5' : '#333333';\n\n  var mask = (0, _mask.default)(0);\n\n  var popup = new plus.nativeObj.View('toolbar', {\n    width: width + 'px',\n    height: height + 'px',\n    top: windowHeight / 2 - height / 2 + 'px',\n    left: windowWidth - width - uni.upx2px(20) + 'px' });\n\n  var draws = [{\n    tag: 'rect',\n    id: 'bg',\n    rectStyles: {\n      color: bgColor,\n      radius: uni.upx2px(20) + 'px',\n      borderWidth: '1px',\n      borderColor: lineColor },\n\n    position: {\n      top: 0 + 'px',\n      left: 0 + 'px',\n      width: width - +'px',\n      height: height + 'px' } }];\n\n\n  popup.draw(draws);\n\n  var pages = getCurrentPages();\n  var page = pages[pages.length - 1];\n  var backs = page.$vm.$options.onBackPress; //记录下当前页面有可能设置的返回事件监听方法，用于还原\n  page.$vm.$options.onBackPress = new Array(0);\n  page.$vm.$options.onBackPress.push(function (e) {\n    complete(false);\n    return true;\n  });\n  var complete = function complete(bol) {\n    try {\n      mask.close();\n      popup.close();\n      success({\n        confirm: bol });\n\n      page.$vm.$options.onBackPress = backs; //还原当前页面的返回事件监听\n    } catch (e) {\n      fail(e);\n    }\n  };\n  mask.show();\n  popup.show();\n}var _default =\n\ntoolbar;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vanNfc2RrL3liLW5hdGl2ZS11aS90b29sYmFyLmpzIl0sIm5hbWVzIjpbInRvb2xiYXIiLCJtZW51cyIsImNhbmNlbFRleHQiLCJkYXJrIiwic3VjY2VzcyIsImZhaWwiLCJzeXN0ZW0iLCJ1bmkiLCJnZXRTeXN0ZW1JbmZvU3luYyIsIndpbmRvd1dpZHRoIiwid2luZG93SGVpZ2h0Iiwic2NyZWVuSGVpZ2h0IiwiaGVpZ2h0IiwidXB4MnB4IiwiaXRlbUhlaWdodCIsImxpbmVJdGVtTGVuZ3RoIiwiTWF0aCIsImZsb29yIiwid2lkdGgiLCJjZWlsIiwibGVuZ3RoIiwidGV4dFNpemUiLCJiZ0NvbG9yIiwibGluZUNvbG9yIiwidGV4dENvbG9yIiwibWFzayIsInBvcHVwIiwicGx1cyIsIm5hdGl2ZU9iaiIsIlZpZXciLCJ0b3AiLCJsZWZ0IiwiZHJhd3MiLCJ0YWciLCJpZCIsInJlY3RTdHlsZXMiLCJjb2xvciIsInJhZGl1cyIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJwb3NpdGlvbiIsImRyYXciLCJwYWdlcyIsImdldEN1cnJlbnRQYWdlcyIsInBhZ2UiLCJiYWNrcyIsIiR2bSIsIiRvcHRpb25zIiwib25CYWNrUHJlc3MiLCJBcnJheSIsInB1c2giLCJlIiwiY29tcGxldGUiLCJib2wiLCJjbG9zZSIsImNvbmZpcm0iLCJzaG93Il0sIm1hcHBpbmdzIjoiaUhBQUEsNkU7Ozs7QUFJTyxTQUFTQSxPQUFULE9BQTRELEtBQXpDQyxLQUF5QyxRQUF6Q0EsS0FBeUMsQ0FBbENDLFVBQWtDLFFBQWxDQSxVQUFrQyxDQUF0QkMsSUFBc0IsUUFBdEJBLElBQXNCLENBQWhCQyxPQUFnQixRQUFoQkEsT0FBZ0IsQ0FBUEMsSUFBTyxRQUFQQSxJQUFPO0FBQ2xFLE1BQU1DLE1BQU0sR0FBR0MsR0FBRyxDQUFDQyxpQkFBSixFQUFmO0FBQ0EsTUFBTUMsV0FBVyxHQUFHSCxNQUFNLENBQUNHLFdBQTNCO0FBQ0EsTUFBTUMsWUFBWSxHQUFHSixNQUFNLENBQUNLLFlBQTVCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixZQUFZLEdBQUdILEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsQ0FBOUI7QUFDQSxNQUFNQyxVQUFVLEdBQUdQLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEVBQVgsQ0FBbkI7QUFDQSxNQUFNRSxjQUFjLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXTCxNQUFNLEdBQUdFLFVBQXBCLENBQXZCLENBTmtFLENBTVg7QUFDdkQsTUFBTUksS0FBSyxHQUFHRixJQUFJLENBQUNHLElBQUwsQ0FBVWxCLEtBQUssQ0FBQ21CLE1BQU4sR0FBZUwsY0FBekIsSUFBMkNSLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsQ0FBekQ7O0FBRUEsTUFBTVEsUUFBUSxHQUFHZCxHQUFHLENBQUNNLE1BQUosQ0FBVyxFQUFYLENBQWpCOztBQUVBLE1BQU1TLE9BQU8sR0FBR25CLElBQUksR0FBRyxTQUFILEdBQWUsU0FBbkM7QUFDQSxNQUFNb0IsU0FBUyxHQUFHcEIsSUFBSSxHQUFHLFNBQUgsR0FBZSxTQUFyQztBQUNBLE1BQU1xQixTQUFTLEdBQUdyQixJQUFJLEdBQUcsU0FBSCxHQUFlLFNBQXJDOztBQUVBLE1BQU1zQixJQUFJLEdBQUcsbUJBQVksQ0FBWixDQUFiOztBQUVBLE1BQU1DLEtBQUssR0FBRyxJQUFJQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUMsSUFBbkIsQ0FBd0IsU0FBeEIsRUFBbUM7QUFDaERYLFNBQUssRUFBRUEsS0FBSyxHQUFHLElBRGlDO0FBRWhETixVQUFNLEVBQUVBLE1BQU0sR0FBRyxJQUYrQjtBQUdoRGtCLE9BQUcsRUFBSXBCLFlBQVksR0FBRyxDQUFoQixHQUFzQkUsTUFBTSxHQUFHLENBQWhDLEdBQXNDLElBSEs7QUFJaERtQixRQUFJLEVBQUd0QixXQUFXLEdBQUdTLEtBQWQsR0FBc0JYLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEVBQVgsQ0FBdkIsR0FBeUMsSUFKQyxFQUFuQyxDQUFkOztBQU1BLE1BQUltQixLQUFLLEdBQUcsQ0FBQztBQUNaQyxPQUFHLEVBQUMsTUFEUTtBQUVaQyxNQUFFLEVBQUMsSUFGUztBQUdaQyxjQUFVLEVBQUU7QUFDWEMsV0FBSyxFQUFFZCxPQURJO0FBRVhlLFlBQU0sRUFBRTlCLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEVBQVgsSUFBaUIsSUFGZDtBQUdYeUIsaUJBQVcsRUFBRSxLQUhGO0FBSVhDLGlCQUFXLEVBQUVoQixTQUpGLEVBSEE7O0FBU1ppQixZQUFRLEVBQUU7QUFDVFYsU0FBRyxFQUFFLElBQUksSUFEQTtBQUVUQyxVQUFJLEVBQUUsSUFBSSxJQUZEO0FBR1RiLFdBQUssRUFBRUEsS0FBSyxHQUFJLENBQUUsSUFIVDtBQUlUTixZQUFNLEVBQUVBLE1BQU0sR0FBRyxJQUpSLEVBVEUsRUFBRCxDQUFaOzs7QUFnQkFjLE9BQUssQ0FBQ2UsSUFBTixDQUFXVCxLQUFYOztBQUVBLE1BQU1VLEtBQUssR0FBR0MsZUFBZSxFQUE3QjtBQUNBLE1BQU1DLElBQUksR0FBR0YsS0FBSyxDQUFDQSxLQUFLLENBQUN0QixNQUFOLEdBQWUsQ0FBaEIsQ0FBbEI7QUFDQSxNQUFNeUIsS0FBSyxHQUFHRCxJQUFJLENBQUNFLEdBQUwsQ0FBU0MsUUFBVCxDQUFrQkMsV0FBaEMsQ0EzQ2tFLENBMkN2QjtBQUMzQ0osTUFBSSxDQUFDRSxHQUFMLENBQVNDLFFBQVQsQ0FBa0JDLFdBQWxCLEdBQWdDLElBQUlDLEtBQUosQ0FBVSxDQUFWLENBQWhDO0FBQ0FMLE1BQUksQ0FBQ0UsR0FBTCxDQUFTQyxRQUFULENBQWtCQyxXQUFsQixDQUE4QkUsSUFBOUIsQ0FBbUMsVUFBQ0MsQ0FBRCxFQUFPO0FBQ3pDQyxZQUFRLENBQUMsS0FBRCxDQUFSO0FBQ0EsV0FBTyxJQUFQO0FBQ0EsR0FIRDtBQUlBLE1BQU1BLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQVVDLEdBQVYsRUFBZTtBQUMvQixRQUFHO0FBQ0Y1QixVQUFJLENBQUM2QixLQUFMO0FBQ0E1QixXQUFLLENBQUM0QixLQUFOO0FBQ0FsRCxhQUFPLENBQUM7QUFDUG1ELGVBQU8sRUFBRUYsR0FERixFQUFELENBQVA7O0FBR0FULFVBQUksQ0FBQ0UsR0FBTCxDQUFTQyxRQUFULENBQWtCQyxXQUFsQixHQUFnQ0gsS0FBaEMsQ0FORSxDQU1tQztBQUNyQyxLQVBELENBT0UsT0FBTU0sQ0FBTixFQUFRO0FBQ1Q5QyxVQUFJLENBQUM4QyxDQUFELENBQUo7QUFDQTtBQUNELEdBWEQ7QUFZQTFCLE1BQUksQ0FBQytCLElBQUw7QUFDQTlCLE9BQUssQ0FBQzhCLElBQU47QUFDQSxDOztBQUVjeEQsTyIsImZpbGUiOiI4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVNYXNrcyBmcm9tICcuL21hc2suanMnXHJcblxyXG5cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b29sYmFyICh7bWVudXMsIGNhbmNlbFRleHQsIGRhcmssIHN1Y2Nlc3MsIGZhaWx9KSB7XHJcblx0Y29uc3Qgc3lzdGVtID0gdW5pLmdldFN5c3RlbUluZm9TeW5jKCk7XHJcblx0Y29uc3Qgd2luZG93V2lkdGggPSBzeXN0ZW0ud2luZG93V2lkdGhcclxuXHRjb25zdCB3aW5kb3dIZWlnaHQgPSBzeXN0ZW0uc2NyZWVuSGVpZ2h0XHJcblx0Y29uc3QgaGVpZ2h0ID0gd2luZG93SGVpZ2h0IC0gdW5pLnVweDJweCgyMDApXHJcblx0Y29uc3QgaXRlbUhlaWdodCA9IHVuaS51cHgycHgoNTApXHJcblx0Y29uc3QgbGluZUl0ZW1MZW5ndGggPSBNYXRoLmZsb29yKGhlaWdodCAvIGl0ZW1IZWlnaHQpIC8v5q+P5LiA5YiX5pyA5aSa5o6S5aSa5bCR6aG5XHJcblx0Y29uc3Qgd2lkdGggPSBNYXRoLmNlaWwobWVudXMubGVuZ3RoIC8gbGluZUl0ZW1MZW5ndGgpICogdW5pLnVweDJweCgxNDApXHJcblx0XHJcblx0Y29uc3QgdGV4dFNpemUgPSB1bmkudXB4MnB4KDI2KVxyXG5cdFxyXG5cdGNvbnN0IGJnQ29sb3IgPSBkYXJrID8gJyMzRjNGM0YnIDogJyNGRkZGRkYnXHJcblx0Y29uc3QgbGluZUNvbG9yID0gZGFyayA/ICcjMTkxOTE5JyA6ICcjYzVjNWM1J1xyXG5cdGNvbnN0IHRleHRDb2xvciA9IGRhcmsgPyAnI2Y0ZjdmNScgOiAnIzMzMzMzMydcclxuXHRcclxuXHRjb25zdCBtYXNrID0gY3JlYXRlTWFza3MoMClcclxuXHRcclxuXHRjb25zdCBwb3B1cCA9IG5ldyBwbHVzLm5hdGl2ZU9iai5WaWV3KCd0b29sYmFyJywge1xyXG5cdFx0d2lkdGg6IHdpZHRoICsgJ3B4JyxcclxuXHRcdGhlaWdodDogaGVpZ2h0ICsgJ3B4JyxcclxuXHRcdHRvcDogKCh3aW5kb3dIZWlnaHQgLyAyKSAtIChoZWlnaHQgLyAyKSkgKyAncHgnLFxyXG5cdFx0bGVmdDogKHdpbmRvd1dpZHRoIC0gd2lkdGggLSB1bmkudXB4MnB4KDIwKSkgKyAncHgnLFxyXG5cdH0pO1xyXG5cdGxldCBkcmF3cyA9IFt7XHJcblx0XHR0YWc6J3JlY3QnLFxyXG5cdFx0aWQ6J2JnJyxcclxuXHRcdHJlY3RTdHlsZXM6IHtcclxuXHRcdFx0Y29sb3I6IGJnQ29sb3IsXHJcblx0XHRcdHJhZGl1czogdW5pLnVweDJweCgyMCkgKyAncHgnLFxyXG5cdFx0XHRib3JkZXJXaWR0aDogJzFweCcsXHJcblx0XHRcdGJvcmRlckNvbG9yOiBsaW5lQ29sb3JcclxuXHRcdH0sXHJcblx0XHRwb3NpdGlvbjoge1xyXG5cdFx0XHR0b3A6IDAgKyAncHgnLFxyXG5cdFx0XHRsZWZ0OiAwICsgJ3B4JyxcclxuXHRcdFx0d2lkdGg6IHdpZHRoIC0gICsgJ3B4JyxcclxuXHRcdFx0aGVpZ2h0OiBoZWlnaHQgKyAncHgnLFxyXG5cdFx0fVxyXG5cdH1dXHJcblx0cG9wdXAuZHJhdyhkcmF3cylcclxuXHRcclxuXHRjb25zdCBwYWdlcyA9IGdldEN1cnJlbnRQYWdlcygpXHJcblx0Y29uc3QgcGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDFdXHJcblx0Y29uc3QgYmFja3MgPSBwYWdlLiR2bS4kb3B0aW9ucy5vbkJhY2tQcmVzcy8v6K6w5b2V5LiL5b2T5YmN6aG16Z2i5pyJ5Y+v6IO96K6+572u55qE6L+U5Zue5LqL5Lu255uR5ZCs5pa55rOV77yM55So5LqO6L+Y5Y6fXHJcblx0cGFnZS4kdm0uJG9wdGlvbnMub25CYWNrUHJlc3MgPSBuZXcgQXJyYXkoMClcclxuXHRwYWdlLiR2bS4kb3B0aW9ucy5vbkJhY2tQcmVzcy5wdXNoKChlKSA9PiB7XHJcblx0XHRjb21wbGV0ZShmYWxzZSlcclxuXHRcdHJldHVybiB0cnVlXHJcblx0fSlcclxuXHRjb25zdCBjb21wbGV0ZSA9IGZ1bmN0aW9uIChib2wpIHtcclxuXHRcdHRyeXtcclxuXHRcdFx0bWFzay5jbG9zZSgpXHJcblx0XHRcdHBvcHVwLmNsb3NlKClcclxuXHRcdFx0c3VjY2Vzcyh7XHJcblx0XHRcdFx0Y29uZmlybTogYm9sXHJcblx0XHRcdH0pXHJcblx0XHRcdHBhZ2UuJHZtLiRvcHRpb25zLm9uQmFja1ByZXNzID0gYmFja3MvL+i/mOWOn+W9k+WJjemhtemdoueahOi/lOWbnuS6i+S7tuebkeWQrFxyXG5cdFx0fSBjYXRjaChlKXtcclxuXHRcdFx0ZmFpbChlKVxyXG5cdFx0fVxyXG5cdH1cclxuXHRtYXNrLnNob3coKVxyXG5cdHBvcHVwLnNob3coKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB0b29sYmFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///89\n");

/***/ }),
/* 90 */
/*!*******************************************************************!*\
  !*** G:/my-project/uni-polymerize/js_sdk/yb-native-ui/scircle.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var stopInterval = false;\nvar touchtime = 0;\n\nvar windowWidth = uni.getSystemInfoSync().screenWidth;\nvar windowHeight = uni.getSystemInfoSync().screenHeight;\n\nfunction create(_ref) {var size = _ref.size,left = _ref.left,top = _ref.top,text = _ref.text,border = _ref.border,touch = _ref.touch,func = _ref.func,dark = _ref.dark;\n  var btn = new plus.nativeObj.View('overall-btn', {\n    width: size + 'px',\n    height: size + 'px',\n    top: top + 'px',\n    left: left + 'px' });\n\n  drawRect(btn, size, border || 5, dark || false);\n  if (text) {\n    drawText(btn, text, dark || false);\n  }\n  var setInterval = function setInterval() {\n    setTimeout(function () {\n      touchtime += 50;\n      if (!stopInterval) {\n        setInterval();\n      }\n    }, 50);\n  };\n  if (touch) {\n    btn.addEventListener(\"touchstart\", function (e) {\n      stopInterval = false;\n      setInterval();\n    });\n    btn.addEventListener(\"touchmove\", function (e) {\n      top = e.pageY - size / 2;\n      left = e.pageX - size / 2;\n      if (top < 0) top = 0;\n      if (top > windowHeight - size) top = windowHeight - size;\n      if (left < 0) left = 0;\n      if (left > windowWidth - size) left = windowWidth - size;\n      btn.setStyle({ top: top + 'px', left: left + 'px' });\n    });\n    btn.addEventListener(\"touchend\", function (e) {\n      stopInterval = true;\n      if (touchtime < 200 && func) {\n        e.top = top;\n        e.left = left;\n        func(e);\n      }\n      touchtime = 0;\n    });\n  } else {\n    if (func) {\n      btn.addEventListener(\"click\", function (e) {\n        func(e);\n      });\n    }\n  }\n  return {\n    show: function show() {\n      return btn.show();\n    },\n    hide: function hide() {\n      return btn.hide();\n    },\n    close: function close() {\n      return btn.close();\n    },\n    draw: function draw(text) {\n      drawText(btn, text, dark || false);\n    },\n    reset: function reset(_ref2) {var dark = _ref2.dark;\n      drawRect(btn, size, border, dark || false);\n    } };\n\n}\n\nfunction drawRect(btn, size, border, dark) {\n  var opacity = 0.3;\n  var bgColor = dark ? \"rgba(255,255,255,\".concat(opacity, \")\") : \"rgba(0,0,0,\".concat(opacity, \")\");\n  var borderColor = dark ? \"rgba(50,50,50,\".concat(opacity, \")\") : \"rgba(225,225,225,\".concat(opacity, \")\");\n  btn.draw([{\n    tag: 'rect',\n    id: 'bg',\n    rectStyles: {\n      color: bgColor,\n      radius: size + 'px',\n      borderColor: borderColor,\n      borderWidth: border + 'px' },\n\n    position: {\n      top: border / 2 + 'px',\n      left: border / 2 + 'px',\n      width: size - border + 'px',\n      height: size - border + 'px' } }]);\n\n\n}\n\nfunction drawText(btn, text, dark) {\n  var color = dark ? 'rgba(0,0,0,0.7)' : 'rgba(255,255,255,0.7)';\n  btn.draw([{\n    tag: 'font', id: 'text', text: text,\n    textStyles: {\n      size: size / 2 + 'px',\n      color: color,\n      verticalAlign: 'middle',\n      weight: 'bold',\n      align: 'center' } }]);\n\n\n}var _default =\n\ncreate;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90\n");

/***/ }),
/* 91 */
/*!***********************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/audio.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _config = __webpack_require__(/*! ../config.js */ 67);\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/js_sdk/yb-native-ui/index.js */ 83));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}var\n\nrandomSoleNumber = _util.default.randomSoleNumber;\n\n//音乐播放\nvar state = {\n  player: null, //播放实例\n  currentSong: null, //当前播放歌曲\n  playStatus: false, //播放状态\n  currentTime: 0, //播放时间\n  duration: 1, //歌曲长度\n  playList: [], //播放列表\n  playMode: uni.getStorageSync(_config.PLAYMODE) || 'round', //播放模式\n  playOrder: [], //播放订单\n  lyricShow: uni.getStorageSync(_config.LYRICSHOW) || false //是否显示全局歌词\n};\n\nvar getters = {\n  getPlayer: function getPlayer(state) {\n    return state.player;\n  },\n  getCurrentSong: function getCurrentSong(state) {\n    return state.currentSong;\n  },\n  getPlayStatus: function getPlayStatus(state) {\n    return state.playStatus;\n  },\n  getCurrentTime: function getCurrentTime(state) {\n    return state.currentTime;\n  },\n  getDuration: function getDuration(state) {\n    return state.duration;\n  },\n  getPlayList: function getPlayList(state) {\n    return state.playList;\n  },\n  getPlayMode: function getPlayMode(state) {\n    return state.playMode;\n  },\n  getPlayOrder: function getPlayOrder(state) {\n    return state.playOrder;\n  },\n  getLyricShow: function getLyricShow(state) {\n    return state.lyricShow;\n  } };\n\n\nvar mutations = {\n  //设置播放实例\n  setPlayer: function setPlayer(state, player) {\n    state.player = player || null;\n  },\n  //设置当前播放歌曲\n  setCurrentSong: function setCurrentSong(state, song) {\n    state.currentSong = song || null;\n  },\n  //设置当前播放状态\n  setPlayStatus: function setPlayStatus(state, status) {\n    state.playStatus = status;\n  },\n  //设置当前播放时间\n  setCurrentTime: function setCurrentTime(state, time) {\n    state.currentTime = time || 0;\n  },\n  //设置当前歌曲长度\n  setDuration: function setDuration(state, time) {\n    state.duration = time;\n  },\n  //设置播放列表\n  setPlayList: function setPlayList(state, playList) {\n    state.playList = playList || [];\n  },\n  //设置播放模式\n  setPlayMode: function setPlayMode(state, playMode) {\n    state.playMode = playMode || 'round';\n    uni.setStorageSync(_config.PLAYMODE, state.playMode);\n  },\n  //设置播放模式\n  setPlayOrder: function setPlayOrder(state, playOrder) {\n    state.playOrder = playOrder || [];\n  },\n  //设置是否显示全局歌词\n  setLyricShow: function setLyricShow(state, bol) {\n    state.lyricShow = bol;\n    uni.setStorageSync(_config.LYRICSHOW, state.lyricShow);\n  } };\n\n\nvar actions = {\n  //增加歌曲\n  addSong: function addSong(_ref, songs) {var state = _ref.state,commit = _ref.commit,dispatch = _ref.dispatch;\n    var list = _toConsumableArray(state.playList);\n    var newSongs = songs.filter(function (song) {\n      return !song.payplay && list.findIndex(function (item) {return item.id == song.id;}) == -1;\n    });\n    list = list.concat(newSongs);\n    commit('setPlayList', list);\n    dispatch('changePlayOrder');\n  },\n  //移除指定歌曲\n  removeSong: function removeSong(_ref2, id) {var state = _ref2.state,commit = _ref2.commit,dispatch = _ref2.dispatch;\n    var list = _toConsumableArray(state.playList);\n    var orders = _toConsumableArray(state.playOrder);\n    var songIndex = list.findIndex(function (item) {return item.id == id;});\n    var orderIndex = orders.findIndex(function (order) {return order == id;});\n    var currentId = state.currentSong ? state.currentSong.id : null;\n    list.splice(songIndex, 1);\n    orders.splice(orderIndex, 1);\n    commit('setPlayList', list);\n    commit('setPlayOrder', orders);\n    currentId == id ? list.length > 0 ? dispatch('next') : dispatch('destroy') : null;\n  },\n  //清空播放列表\n  clearSong: function clearSong(_ref3) {var commit = _ref3.commit,dispatch = _ref3.dispatch;\n    dispatch('destroy');\n    commit('setPlayList', []);\n    commit('setPlayOrder', []);\n  },\n  //切换播放模式\n  switchPlayMode: function switchPlayMode(_ref4) {var state = _ref4.state,commit = _ref4.commit,dispatch = _ref4.dispatch;\n    switch (state.playMode) {\n      case 'round':\n        commit('setPlayMode', 'loop');\n        break;\n      case 'loop':\n        commit('setPlayMode', 'random');\n        break;\n      default:\n        commit('setPlayMode', 'round');\n        break;}\n\n    dispatch('changePlayOrder');\n  },\n  //切换歌词显示\n  switchLyricShow: function switchLyricShow(_ref5) {var state = _ref5.state,commit = _ref5.commit;\n    commit('setLyricShow', !state.lyricShow);\n  },\n  changePlayOrder: function changePlayOrder(_ref6) {var state = _ref6.state,commit = _ref6.commit;\n    var list = _toConsumableArray(state.playList);\n    switch (state.playMode) {\n      case 'random':\n        var arr = randomSoleNumber(list.length);\n        var order = [];\n        arr.forEach(function (index) {\n          order.push(list[index].id);\n        });\n        commit('setPlayOrder', order);\n        break;\n      case 'loop':\n        var orders = state.currentSong ? [state.currentSong.id] : [list[0].id];\n        commit('setPlayOrder', orders);\n        break;\n      default:\n        commit('setPlayOrder', list.map(function (item) {return item.id;}));\n        break;}\n\n  },\n  //下一首\n  next: function next(_ref7) {var state = _ref7.state,dispatch = _ref7.dispatch;\n    var orders = _toConsumableArray(state.playOrder);\n    var currentIndex = state.currentSong ? orders.findIndex(function (order) {return order == state.currentSong.id;}) : 0;\n    var newCurrent = currentIndex >= orders.length - 1 ? 0 : currentIndex + 1;\n    dispatch('create', orders[newCurrent]);\n  },\n  //上一首\n  prev: function prev(_ref8) {var state = _ref8.state,dispatch = _ref8.dispatch;\n    var orders = _toConsumableArray(state.playOrder);\n    var currentIndex = state.currentSong ? orders.findIndex(function (order) {return order == state.currentSong.id;}) : 0;\n    var newCurrent = currentIndex <= 0 ? orders.length - 1 : currentIndex - 1;\n    dispatch('create', orders[newCurrent]);\n  },\n  create: function create(_ref9, id) {var _this = this;var state = _ref9.state,commit = _ref9.commit,dispatch = _ref9.dispatch;\n    state.player ? dispatch('destroy') : null;\n    var songs = _toConsumableArray(state.playList);\n    var currentSong = songs.find(function (song) {return song.id == id;});\n    var Player = __webpack_require__(/*! @/assets/constructor/player.js */ 92).default;\n    commit('setPlayer', new Player(currentSong));\n    commit('setCurrentSong', currentSong);\n    state.player.init().then(function (status) {\n      if (status) {\n        state.player.instance.play();\n        state.player.instance.onEnded(function () {\n          dispatch('next');\n        });\n        state.player.instance.onError(function () {\n          _index.default.alert({\n            title: '错误提示',\n            content: '歌曲播放失败！换首歌曲播放吧',\n            dark: _this.skinMode == 'night',\n            success: function success(res) {\n              dispatch('removeSong', id);\n            } });\n\n        });\n        state.player.instance.onTimeUpdate(function () {\n          commit('setCurrentTime', state.player.instance.currentTime);\n        });\n        state.player.instance.onPlay(function () {\n          commit('setPlayStatus', true);\n          commit('setDuration', state.player.instance.duration);\n        });\n        state.player.instance.onPause(function () {\n          commit('setPlayStatus', false);\n        });\n        state.player.instance.onStop(function () {\n          commit('setPlayStatus', false);\n        });\n        state.player.instance.onEnded(function () {\n          commit('setPlayStatus', false);\n        });\n      } else {\n        _index.default.alert({\n          title: '错误提示',\n          content: '歌曲播放失败！换首歌曲播放吧',\n          dark: _this.skinMode == 'night',\n          success: function success(res) {\n            dispatch('removeSong', id);\n          } });\n\n      }\n    });\n  },\n  destroy: function destroy(_ref10) {var state = _ref10.state,commit = _ref10.commit;\n    state.player ? state.player.destroy() : null;\n    commit('setPlayStatus', false);\n    commit('setCurrentTime', 0);\n    commit('setDuration', 1);\n    commit('setPlayer', null);\n    commit('setCurrentSong', null);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///91\n");

/***/ }),
/* 92 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/player.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 43));\n\nvar _music = _interopRequireDefault(__webpack_require__(/*! @/assets/api/music.js */ 120));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);}_next(undefined);});};}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}var\n\ngetters = _store.default.getters,dispatch = _store.default.dispatch;var\nERR_OK = _config.default.ERR_OK;var\ngetPlayUrl = _music.default.getPlayUrl,getLyric = _music.default.getLyric;var\n\nPlayer = /*#__PURE__*/function () {\n  function Player(song) {_classCallCheck(this, Player);\n    this.id = song.id;\n    this.songId = song.songId || '';\n    this.lyricId = song.lyricId || '';\n    this.src = song.src || getCache(this.id);\n    this.lyric = song.lyric || '';\n    this.instance = null;\n    this.song = song;\n    this.source = song.source;\n  }_createClass(Player, [{ key: \"init\", value: function () {var _init = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee() {var _this = this;var file, arr;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:\n\n                this.instance = uni.createInnerAudioContext();if (!(\n                this.source == 'local')) {_context.next = 9;break;}if (!\n                this.src) {_context.next = 8;break;}\n                file = plus.android.newObject('java.io.File', this.src);if (!\n                plus.android.invoke(file, 'exists')) {_context.next = 8;break;}\n                this.instance.src = this.src;\n                dispatch('record/addRecord', this.song);return _context.abrupt(\"return\",\n                true);case 8:return _context.abrupt(\"return\",\n\n\n                false);case 9:\n\n                arr = [];\n                this.songId && !this.src ? arr.push(getPlayUrl({\n                  id: this.songId,\n                  source: this.source,\n                  extra: this.song.extra })) :\n                this.instance.src = this.src;\n                this.lyricId && !this.lyric ? arr.push(getLyric({\n                  id: this.lyricId,\n                  source: this.source,\n                  extra: this.song.extra })) :\n                null;if (!(\n                arr.length > 0)) {_context.next = 18;break;}_context.next = 15;return Promise.all(arr).then(function (ress) {\n                  ress.forEach(function (res, key) {\n                    if (res.code == ERR_OK) {\n                      if (res.data.src) {\n                        _this.src = res.data.src;\n                      }\n                      if (res.data.lyric) {\n                        _this.lyric = res.data.lyric;\n                      }\n                    }\n                  });\n                  if (_this.src) {\n                    _this.instance.src = _this.src;\n                    dispatch('record/addRecord', _this.song);\n                  }\n                  return _this.src ? true : false;\n                }).catch(function () {\n                  return false;\n                });case 15:_context.t0 = _context.sent;_context.next = 19;break;case 18:_context.t0 = true;case 19:return _context.abrupt(\"return\", _context.t0);case 20:case \"end\":return _context.stop();}}}, _callee, this);}));function init() {return _init.apply(this, arguments);}return init;}() }, { key: \"destroy\", value: function destroy()\n\n    {\n      this.instance.stop();\n      this.instance.destroy();\n      this.instance = null;\n    } }]);return Player;}();\n\n\n//获取缓存\nexports.default = Player;function getCache(id) {\n  var caches = getters['cache/getCache'];\n  var index = caches.findIndex(function (cache) {return cache.parentId == id;});\n  if (index > -1) {\n    var src = plus.io.convertLocalFileSystemURL(caches[index].src);\n    var file = plus.android.newObject('java.io.File', src);\n    if (plus.android.invoke(file, 'exists')) {\n      return src;\n    } else {\n      dispatch('cache/removeCache', caches[index].id);\n    }\n  }\n  return null;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///92\n");

/***/ }),
/* 93 */,
/* 94 */
/*!***************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/song.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //单曲\nvar\nSong =\nfunction Song(_ref) {var title = _ref.title,songId = _ref.songId,lyricId = _ref.lyricId,commentId = _ref.commentId,src = _ref.src,lyric = _ref.lyric,cover = _ref.cover,singer = _ref.singer,desc = _ref.desc,payplay = _ref.payplay,playnum = _ref.playnum,style = _ref.style,tag = _ref.tag,extra = _ref.extra,source = _ref.source;_classCallCheck(this, Song);\n  this.id = (songId || '') + '_' + source;\n  this.title = title; //名称\n  this.songId = songId || '', //歌曲ID\n  this.lyricId = lyricId || '', //歌词ID\n  this.commentId = commentId || '', //评论ID\n  this.src = src || ''; //播放路径\n  this.lyric = lyric || ''; //歌词\n  this.cover = cover || '/static/music/music-bg.jpg'; //封面\n  this.singer = singer || '未知歌手'; //歌手\n  this.desc = desc || ''; //介绍\n  this.payplay = payplay || false; //是否需要支付播放\n  this.playnum = playnum || 0; //播放次数\n  this.style = style || ''; //风格\n  this.tag = tag || []; //标签\n  this.extra = extra || {}; //附加字段\n  this.type = 'song'; //单曲类型\n  this.source = source; //来源\n};exports.default = Song;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL3NvbmcuanMiXSwibmFtZXMiOlsiU29uZyIsInRpdGxlIiwic29uZ0lkIiwibHlyaWNJZCIsImNvbW1lbnRJZCIsInNyYyIsImx5cmljIiwiY292ZXIiLCJzaW5nZXIiLCJkZXNjIiwicGF5cGxheSIsInBsYXludW0iLCJzdHlsZSIsInRhZyIsImV4dHJhIiwic291cmNlIiwiaWQiLCJ0eXBlIl0sIm1hcHBpbmdzIjoiNk9BQUE7O0FBRXFCQSxJO0FBQ3BCLG9CQUFnSSxLQUFuSEMsS0FBbUgsUUFBbkhBLEtBQW1ILENBQTVHQyxNQUE0RyxRQUE1R0EsTUFBNEcsQ0FBcEdDLE9BQW9HLFFBQXBHQSxPQUFvRyxDQUEzRkMsU0FBMkYsUUFBM0ZBLFNBQTJGLENBQWhGQyxHQUFnRixRQUFoRkEsR0FBZ0YsQ0FBM0VDLEtBQTJFLFFBQTNFQSxLQUEyRSxDQUFwRUMsS0FBb0UsUUFBcEVBLEtBQW9FLENBQTdEQyxNQUE2RCxRQUE3REEsTUFBNkQsQ0FBckRDLElBQXFELFFBQXJEQSxJQUFxRCxDQUEvQ0MsT0FBK0MsUUFBL0NBLE9BQStDLENBQXRDQyxPQUFzQyxRQUF0Q0EsT0FBc0MsQ0FBN0JDLEtBQTZCLFFBQTdCQSxLQUE2QixDQUF0QkMsR0FBc0IsUUFBdEJBLEdBQXNCLENBQWpCQyxLQUFpQixRQUFqQkEsS0FBaUIsQ0FBVkMsTUFBVSxRQUFWQSxNQUFVO0FBQy9ILE9BQUtDLEVBQUwsR0FBVSxDQUFDZCxNQUFNLElBQUksRUFBWCxJQUFpQixHQUFqQixHQUF1QmEsTUFBakM7QUFDRSxPQUFLZCxLQUFMLEdBQWFBLEtBQWIsQ0FGNkgsQ0FFM0c7QUFDbEIsT0FBS0MsTUFBTCxHQUFjQSxNQUFNLElBQUksRUFBeEIsRUFBMkI7QUFDM0IsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksRUFEMUIsRUFDNkI7QUFDN0IsT0FBS0MsU0FBTCxHQUFpQkEsU0FBUyxJQUFJLEVBRjlCLEVBRWlDO0FBQ2pDLE9BQUtDLEdBQUwsR0FBV0EsR0FBRyxJQUFJLEVBSGxCLENBSDZILENBTXpHO0FBQ3BCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBUDZILENBT3JHO0FBQ3hCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLDRCQUF0QixDQVI2SCxDQVEzRTtBQUNsRCxPQUFLQyxNQUFMLEdBQWNBLE1BQU0sSUFBSSxNQUF4QixDQVQ2SCxDQVMvRjtBQUM5QixPQUFLQyxJQUFMLEdBQVlBLElBQUksSUFBSSxFQUFwQixDQVY2SCxDQVV2RztBQUN0QixPQUFLQyxPQUFMLEdBQWVBLE9BQU8sSUFBSSxLQUExQixDQVg2SCxDQVc5RjtBQUMvQixPQUFLQyxPQUFMLEdBQWVBLE9BQU8sSUFBSSxDQUExQixDQVo2SCxDQVlsRztBQUM3QixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSxFQUF0QixDQWIrSCxDQWF2RztBQUN4QixPQUFLQyxHQUFMLEdBQVdBLEdBQUcsSUFBSSxFQUFsQixDQWQrSCxDQWMzRztBQUNsQixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSxFQUF0QixDQWY2SCxDQWVyRztBQUN4QixPQUFLRyxJQUFMLEdBQVksTUFBWixDQWhCNkgsQ0FnQjNHO0FBQ2xCLE9BQUtGLE1BQUwsR0FBY0EsTUFBZCxDQWpCNkgsQ0FpQnpHO0FBQ3RCLEMiLCJmaWxlIjoiOTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL+WNleabslxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU29uZyB7XHJcblx0Y29uc3RydWN0b3Ioe3RpdGxlLCBzb25nSWQsIGx5cmljSWQsIGNvbW1lbnRJZCwgc3JjLCBseXJpYywgY292ZXIsIHNpbmdlciwgZGVzYywgcGF5cGxheSwgcGxheW51bSwgc3R5bGUsIHRhZywgZXh0cmEsIHNvdXJjZSB9KSB7XHJcblx0XHR0aGlzLmlkID0gKHNvbmdJZCB8fCAnJykgKyAnXycgKyBzb3VyY2VcclxuXHQgIFx0dGhpcy50aXRsZSA9IHRpdGxlLy/lkI3np7BcclxuXHQgIFx0dGhpcy5zb25nSWQgPSBzb25nSWQgfHwgJycsLy/mrYzmm7JJRFxyXG5cdCAgXHR0aGlzLmx5cmljSWQgPSBseXJpY0lkIHx8ICcnLC8v5q2M6K+NSURcclxuXHQgIFx0dGhpcy5jb21tZW50SWQgPSBjb21tZW50SWQgfHwgJycsLy/or4TorrpJRFxyXG5cdCAgXHR0aGlzLnNyYyA9IHNyYyB8fCAnJy8v5pKt5pS+6Lev5b6EXHJcblx0ICBcdHRoaXMubHlyaWMgPSBseXJpYyB8fCAnJy8v5q2M6K+NXHJcblx0ICBcdHRoaXMuY292ZXIgPSBjb3ZlciB8fCAnL3N0YXRpYy9tdXNpYy9tdXNpYy1iZy5qcGcnLy/lsIHpnaJcclxuXHQgIFx0dGhpcy5zaW5nZXIgPSBzaW5nZXIgfHwgJ+acquefpeatjOaJiycvL+atjOaJi1xyXG5cdCAgXHR0aGlzLmRlc2MgPSBkZXNjIHx8ICcnLy/ku4vnu41cclxuXHQgIFx0dGhpcy5wYXlwbGF5ID0gcGF5cGxheSB8fCBmYWxzZS8v5piv5ZCm6ZyA6KaB5pSv5LuY5pKt5pS+XHJcblx0ICBcdHRoaXMucGxheW51bSA9IHBsYXludW0gfHwgMC8v5pKt5pS+5qyh5pWwXHJcblx0XHR0aGlzLnN0eWxlID0gc3R5bGUgfHwgJycvL+mjjuagvFxyXG5cdFx0dGhpcy50YWcgPSB0YWcgfHwgW10vL+agh+etvlxyXG5cdCAgXHR0aGlzLmV4dHJhID0gZXh0cmEgfHwge30vL+mZhOWKoOWtl+autVxyXG5cdCAgXHR0aGlzLnR5cGUgPSAnc29uZycvL+WNleabsuexu+Wei1xyXG5cdCAgXHR0aGlzLnNvdXJjZSA9IHNvdXJjZS8v5p2l5rqQXHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///94\n");

/***/ }),
/* 95 */
/*!****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/album.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //音乐专辑\nvar\nAlbum =\nfunction Album(_ref) {var albumId = _ref.albumId,commentId = _ref.commentId,title = _ref.title,cover = _ref.cover,desc = _ref.desc,song = _ref.song,creator = _ref.creator,playnum = _ref.playnum,style = _ref.style,tag = _ref.tag,extra = _ref.extra,type = _ref.type,source = _ref.source;_classCallCheck(this, Album);\n  this.id = albumId + '_' + source;\n  this.albumId = albumId; //专辑ID\n  this.commentId = commentId || '', //评论ID\n  this.title = title; //名称\n  this.cover = cover || '/static/music/music-bg.jpg'; //封面\n  this.desc = desc || ''; //介绍\n  this.song = song || []; //单曲集合\n  this.creator = creator || '不详'; //创建者\n  this.playnum = playnum || 0; //播放次数\n  this.style = style || ''; //风格\n  this.tag = tag || []; //标签\n  this.extra = extra || {}; //附加字段\n  this.type = type; //type包含 top:<排行榜> banner:<轮播图> album:<歌单> newAlbum: <新碟>\n  this.source = source; //来源\n};exports.default = Album;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2FsYnVtLmpzIl0sIm5hbWVzIjpbIkFsYnVtIiwiYWxidW1JZCIsImNvbW1lbnRJZCIsInRpdGxlIiwiY292ZXIiLCJkZXNjIiwic29uZyIsImNyZWF0b3IiLCJwbGF5bnVtIiwic3R5bGUiLCJ0YWciLCJleHRyYSIsInR5cGUiLCJzb3VyY2UiLCJpZCJdLCJtYXBwaW5ncyI6IjZPQUFBOztBQUVxQkEsSztBQUNwQixxQkFBK0csS0FBbEdDLE9BQWtHLFFBQWxHQSxPQUFrRyxDQUF6RkMsU0FBeUYsUUFBekZBLFNBQXlGLENBQTlFQyxLQUE4RSxRQUE5RUEsS0FBOEUsQ0FBdkVDLEtBQXVFLFFBQXZFQSxLQUF1RSxDQUFoRUMsSUFBZ0UsUUFBaEVBLElBQWdFLENBQTFEQyxJQUEwRCxRQUExREEsSUFBMEQsQ0FBcERDLE9BQW9ELFFBQXBEQSxPQUFvRCxDQUEzQ0MsT0FBMkMsUUFBM0NBLE9BQTJDLENBQWxDQyxLQUFrQyxRQUFsQ0EsS0FBa0MsQ0FBM0JDLEdBQTJCLFFBQTNCQSxHQUEyQixDQUF0QkMsS0FBc0IsUUFBdEJBLEtBQXNCLENBQWZDLElBQWUsUUFBZkEsSUFBZSxDQUFUQyxNQUFTLFFBQVRBLE1BQVM7QUFDOUcsT0FBS0MsRUFBTCxHQUFVYixPQUFPLEdBQUcsR0FBVixHQUFnQlksTUFBMUI7QUFDQSxPQUFLWixPQUFMLEdBQWVBLE9BQWYsQ0FGOEcsQ0FFdkY7QUFDdkIsT0FBS0MsU0FBTCxHQUFpQkEsU0FBUyxJQUFJLEVBQTlCLEVBQWtDO0FBQ2xDLE9BQUtDLEtBQUwsR0FBYUEsS0FEYixDQUg4RyxDQUkzRjtBQUNuQixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSw0QkFBdEIsQ0FMOEcsQ0FLM0Q7QUFDbkQsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FOOEcsQ0FNdkY7QUFDdkIsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FQOEcsQ0FPdkY7QUFDdkIsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksSUFBMUIsQ0FSOEcsQ0FRL0U7QUFDL0IsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksQ0FBMUIsQ0FUOEcsQ0FTbEY7QUFDNUIsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEIsQ0FWOEcsQ0FVdEY7QUFDeEIsT0FBS0MsR0FBTCxHQUFXQSxHQUFHLElBQUksRUFBbEIsQ0FYOEcsQ0FXMUY7QUFDcEIsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEIsQ0FaOEcsQ0FZckY7QUFDekIsT0FBS0MsSUFBTCxHQUFZQSxJQUFaLENBYjhHLENBYTdGO0FBQ2pCLE9BQUtDLE1BQUwsR0FBY0EsTUFBZCxDQWQ4RyxDQWN6RjtBQUNyQixDIiwiZmlsZSI6Ijk1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/pn7PkuZDkuJPovpFcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFsYnVtIHtcclxuXHRjb25zdHJ1Y3Rvcih7YWxidW1JZCwgY29tbWVudElkLCB0aXRsZSwgY292ZXIsIGRlc2MsIHNvbmcsIGNyZWF0b3IsIHBsYXludW0sIHN0eWxlLCB0YWcsIGV4dHJhLCB0eXBlLCBzb3VyY2V9KSB7XHJcblx0XHR0aGlzLmlkID0gYWxidW1JZCArICdfJyArIHNvdXJjZVxyXG5cdFx0dGhpcy5hbGJ1bUlkID0gYWxidW1JZCAvL+S4k+i+kUlEXHJcblx0XHR0aGlzLmNvbW1lbnRJZCA9IGNvbW1lbnRJZCB8fCAnJywgLy/or4TorrpJRFxyXG5cdFx0dGhpcy50aXRsZSA9IHRpdGxlIC8v5ZCN56ewXHJcblx0XHR0aGlzLmNvdmVyID0gY292ZXIgfHwgJy9zdGF0aWMvbXVzaWMvbXVzaWMtYmcuanBnJyAvL+WwgemdolxyXG5cdFx0dGhpcy5kZXNjID0gZGVzYyB8fCAnJyAvL+S7i+e7jVxyXG5cdFx0dGhpcy5zb25nID0gc29uZyB8fCBbXSAvL+WNleabsumbhuWQiFxyXG5cdFx0dGhpcy5jcmVhdG9yID0gY3JlYXRvciB8fCAn5LiN6K+mJyAvL+WIm+W7uuiAhVxyXG5cdFx0dGhpcy5wbGF5bnVtID0gcGxheW51bSB8fCAwIC8v5pKt5pS+5qyh5pWwXHJcblx0XHR0aGlzLnN0eWxlID0gc3R5bGUgfHwgJycvL+mjjuagvFxyXG5cdFx0dGhpcy50YWcgPSB0YWcgfHwgW10vL+agh+etvlxyXG5cdFx0dGhpcy5leHRyYSA9IGV4dHJhIHx8IHt9IC8v6ZmE5Yqg5a2X5q61XHJcblx0XHR0aGlzLnR5cGUgPSB0eXBlIC8vdHlwZeWMheWQqyB0b3A6POaOkuihjOamnD4gYmFubmVyOjzova7mkq3lm74+IGFsYnVtOjzmrYzljZU+IG5ld0FsYnVtOiA85paw56KfPlxyXG5cdFx0dGhpcy5zb3VyY2UgPSBzb3VyY2UgLy/mnaXmupBcclxuXHR9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///95\n");

/***/ }),
/* 96 */
/*!*****************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/singer.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //歌手\nvar\nSinger =\nfunction Singer(_ref) {var singerId = _ref.singerId,title = _ref.title,cover = _ref.cover,desc = _ref.desc,song = _ref.song,albumSize = _ref.albumSize,style = _ref.style,tag = _ref.tag,extra = _ref.extra,source = _ref.source;_classCallCheck(this, Singer);\n  this.id = singerId + '_' + source;\n  this.singerId = singerId; //歌手ID\n  this.title = title; //歌手名称\n  this.cover = cover || '/static/music/music-bg.jpg'; //歌手封面\n  this.desc = desc || ''; //歌手介绍\n  this.song = song || []; //单曲集合\n  this.albumSize = albumSize || 0; //专辑数量\n  this.style = style || ''; //风格\n  this.tag = tag || []; //标签\n  this.extra = extra || {}; //附加字段\n  this.type = 'singer'; //歌手类型\n  this.source = source; //来源\n};exports.default = Singer;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL3Npbmdlci5qcyJdLCJuYW1lcyI6WyJTaW5nZXIiLCJzaW5nZXJJZCIsInRpdGxlIiwiY292ZXIiLCJkZXNjIiwic29uZyIsImFsYnVtU2l6ZSIsInN0eWxlIiwidGFnIiwiZXh0cmEiLCJzb3VyY2UiLCJpZCIsInR5cGUiXSwibWFwcGluZ3MiOiI2T0FBQTs7QUFFcUJBLE07QUFDcEIsc0JBQXdGLEtBQTNFQyxRQUEyRSxRQUEzRUEsUUFBMkUsQ0FBakVDLEtBQWlFLFFBQWpFQSxLQUFpRSxDQUExREMsS0FBMEQsUUFBMURBLEtBQTBELENBQW5EQyxJQUFtRCxRQUFuREEsSUFBbUQsQ0FBN0NDLElBQTZDLFFBQTdDQSxJQUE2QyxDQUF2Q0MsU0FBdUMsUUFBdkNBLFNBQXVDLENBQTVCQyxLQUE0QixRQUE1QkEsS0FBNEIsQ0FBckJDLEdBQXFCLFFBQXJCQSxHQUFxQixDQUFoQkMsS0FBZ0IsUUFBaEJBLEtBQWdCLENBQVRDLE1BQVMsUUFBVEEsTUFBUztBQUN2RixPQUFLQyxFQUFMLEdBQVVWLFFBQVEsR0FBRyxHQUFYLEdBQWlCUyxNQUEzQjtBQUNFLE9BQUtULFFBQUwsR0FBZ0JBLFFBQWhCLENBRnFGLENBRTdEO0FBQ3hCLE9BQUtDLEtBQUwsR0FBYUEsS0FBYixDQUhxRixDQUduRTtBQUNsQixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSw0QkFBdEIsQ0FKcUYsQ0FJbkM7QUFDbEQsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FMcUYsQ0FLL0Q7QUFDdEIsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FOcUYsQ0FNL0Q7QUFDdEIsT0FBS0MsU0FBTCxHQUFpQkEsU0FBUyxJQUFJLENBQTlCLENBUHFGLENBT3REO0FBQ2pDLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBUnVGLENBUS9EO0FBQ3hCLE9BQUtDLEdBQUwsR0FBV0EsR0FBRyxJQUFJLEVBQWxCLENBVHVGLENBU25FO0FBQ2xCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBVnFGLENBVTdEO0FBQ3hCLE9BQUtHLElBQUwsR0FBWSxRQUFaLENBWHFGLENBV2hFO0FBQ3JCLE9BQUtGLE1BQUwsR0FBY0EsTUFBZCxDQVpxRixDQVlqRTtBQUN0QixDIiwiZmlsZSI6Ijk2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/mrYzmiYtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNpbmdlciB7XHJcblx0Y29uc3RydWN0b3Ioe3NpbmdlcklkLCB0aXRsZSwgY292ZXIsIGRlc2MsIHNvbmcsIGFsYnVtU2l6ZSwgc3R5bGUsIHRhZywgZXh0cmEsIHNvdXJjZX0pIHtcclxuXHRcdHRoaXMuaWQgPSBzaW5nZXJJZCArICdfJyArIHNvdXJjZVxyXG5cdCAgXHR0aGlzLnNpbmdlcklkID0gc2luZ2VySWQvL+atjOaJi0lEXHJcblx0ICBcdHRoaXMudGl0bGUgPSB0aXRsZS8v5q2M5omL5ZCN56ewXHJcblx0ICBcdHRoaXMuY292ZXIgPSBjb3ZlciB8fCAnL3N0YXRpYy9tdXNpYy9tdXNpYy1iZy5qcGcnLy/mrYzmiYvlsIHpnaJcclxuXHQgIFx0dGhpcy5kZXNjID0gZGVzYyB8fCAnJy8v5q2M5omL5LuL57uNXHJcblx0ICBcdHRoaXMuc29uZyA9IHNvbmcgfHwgW10vL+WNleabsumbhuWQiFxyXG5cdCAgXHR0aGlzLmFsYnVtU2l6ZSA9IGFsYnVtU2l6ZSB8fCAwLy/kuJPovpHmlbDph49cclxuXHRcdHRoaXMuc3R5bGUgPSBzdHlsZSB8fCAnJy8v6aOO5qC8XHJcblx0XHR0aGlzLnRhZyA9IHRhZyB8fCBbXS8v5qCH562+XHJcblx0ICBcdHRoaXMuZXh0cmEgPSBleHRyYSB8fCB7fS8v6ZmE5Yqg5a2X5q61XHJcblx0ICBcdHRoaXMudHlwZSA9ICdzaW5nZXInIC8v5q2M5omL57G75Z6LXHJcblx0ICBcdHRoaXMuc291cmNlID0gc291cmNlLy/mnaXmupBcclxuXHR9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///96\n");

/***/ }),
/* 97 */
/*!******************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/comment.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //评论\nvar\nComment =\nfunction Comment(_ref) {var id = _ref.id,avatar = _ref.avatar,title = _ref.title,subtitle = _ref.subtitle,content = _ref.content,subComment = _ref.subComment,extra = _ref.extra;_classCallCheck(this, Comment);\n  this.id = id;\n  this.avatar = avatar;\n  this.title = title;\n  this.subtitle = subtitle || '';\n  this.content = content || '';\n  this.subComment = subComment || [];\n  this.type = 'comment'; //类型\n  this.extra = extra || {}; //附加字段\n};exports.default = Comment;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2NvbW1lbnQuanMiXSwibmFtZXMiOlsiQ29tbWVudCIsImlkIiwiYXZhdGFyIiwidGl0bGUiLCJzdWJ0aXRsZSIsImNvbnRlbnQiLCJzdWJDb21tZW50IiwiZXh0cmEiLCJ0eXBlIl0sIm1hcHBpbmdzIjoiNk9BQUE7O0FBRXFCQSxPO0FBQ3BCLHVCQUF1RSxLQUExREMsRUFBMEQsUUFBMURBLEVBQTBELENBQXREQyxNQUFzRCxRQUF0REEsTUFBc0QsQ0FBOUNDLEtBQThDLFFBQTlDQSxLQUE4QyxDQUF2Q0MsUUFBdUMsUUFBdkNBLFFBQXVDLENBQTdCQyxPQUE2QixRQUE3QkEsT0FBNkIsQ0FBcEJDLFVBQW9CLFFBQXBCQSxVQUFvQixDQUFSQyxLQUFRLFFBQVJBLEtBQVE7QUFDckUsT0FBS04sRUFBTCxHQUFVQSxFQUFWO0FBQ0EsT0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsT0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsT0FBS0MsUUFBTCxHQUFnQkEsUUFBUSxJQUFJLEVBQTVCO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksRUFBMUI7QUFDQSxPQUFLQyxVQUFMLEdBQWtCQSxVQUFVLElBQUksRUFBaEM7QUFDQSxPQUFLRSxJQUFMLEdBQVksU0FBWixDQVBxRSxDQU9oRDtBQUNyQixPQUFLRCxLQUFMLEdBQWFBLEtBQUssSUFBSSxFQUF0QixDQVJxRSxDQVE3QztBQUN6QixDIiwiZmlsZSI6Ijk3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/or4TorrpcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1lbnQge1xyXG5cdGNvbnN0cnVjdG9yKHtpZCwgYXZhdGFyLCB0aXRsZSwgc3VidGl0bGUsIGNvbnRlbnQsIHN1YkNvbW1lbnQsIGV4dHJhfSkge1xyXG5cdCAgdGhpcy5pZCA9IGlkXHJcblx0ICB0aGlzLmF2YXRhciA9IGF2YXRhclxyXG5cdCAgdGhpcy50aXRsZSA9IHRpdGxlXHJcblx0ICB0aGlzLnN1YnRpdGxlID0gc3VidGl0bGUgfHwgJydcclxuXHQgIHRoaXMuY29udGVudCA9IGNvbnRlbnQgfHwgJydcclxuXHQgIHRoaXMuc3ViQ29tbWVudCA9IHN1YkNvbW1lbnQgfHwgW11cclxuXHQgIHRoaXMudHlwZSA9ICdjb21tZW50Jy8v57G75Z6LXHJcblx0ICB0aGlzLmV4dHJhID0gZXh0cmEgfHwge30vL+mZhOWKoOWtl+autVxyXG5cdH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97\n");

/***/ }),
/* 98 */
/*!***********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/qqSign.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = getSecuritySign;var __sign_hash_20200305 = function __sign_hash_20200305(n) {\n  function l(n, t) {\n    var o = (65535 & n) + (65535 & t);\n    return (n >> 16) + (t >> 16) + (o >> 16) << 16 | 65535 & o;\n  }\n  function r(n, t, o, e, u, p) {\n    return l((i = l(l(t, n), l(e, p))) << (r = u) | i >>> 32 - r, o);\n    var i, r;\n  }\n  function g(n, t, o, e, u, p, i) {\n    return r(t & o | ~t & e, n, t, u, p, i);\n  }\n  function a(n, t, o, e, u, p, i) {\n    return r(t & e | o & ~e, n, t, u, p, i);\n  }\n  function s(n, t, o, e, u, p, i) {\n    return r(t ^ o ^ e, n, t, u, p, i);\n  }\n  function v(n, t, o, e, u, p, i) {\n    return r(o ^ (t | ~e), n, t, u, p, i);\n  }\n  function t(n) {\n    return function (n) {\n      var t,o = \"\";\n      for (t = 0; t < 32 * n.length; t += 8) {o += String.fromCharCode(n[t >> 5] >>> t % 32 & 255);}\n      return o;\n    }(function (n, t) {\n      n[t >> 5] |= 128 << t % 32, n[14 + (t + 64 >>> 9 << 4)] = t;\n      var o,e,u,p,i,r = 1732584193,\n      f = -271733879,\n      h = -1732584194,\n      c = 271733878;\n      for (o = 0; o < n.length; o += 16) {r = g(e = r, u = f, p = h, i = c, n[o], 7, -\n        680876936), c = g(c, r, f, h, n[o + 1], 12, -389564586), h = g(h, c, r, f, n[o +\n        2], 17, 606105819), f = g(f, h, c, r, n[o + 3], 22, -1044525330), r = g(r, f, h,\n        c, n[o + 4], 7, -176418897), c = g(c, r, f, h, n[o + 5], 12, 1200080426), h = g(\n        h, c, r, f, n[o + 6], 17, -1473231341), f = g(f, h, c, r, n[o + 7], 22, -\n        45705983), r = g(r, f, h, c, n[o + 8], 7, 1770035416), c = g(c, r, f, h, n[o +\n        9], 12, -1958414417), h = g(h, c, r, f, n[o + 10], 17, -42063), f = g(f, h, c,\n        r, n[o + 11], 22, -1990404162), r = g(r, f, h, c, n[o + 12], 7, 1804603682), c =\n        g(c, r, f, h, n[o + 13], 12, -40341101), h = g(h, c, r, f, n[o + 14], 17, -\n        1502002290), r = a(r, f = g(f, h, c, r, n[o + 15], 22, 1236535329), h, c, n[o +\n        1], 5, -165796510), c = a(c, r, f, h, n[o + 6], 9, -1069501632), h = a(h, c, r,\n        f, n[o + 11], 14, 643717713), f = a(f, h, c, r, n[o], 20, -373897302), r = a(r,\n        f, h, c, n[o + 5], 5, -701558691), c = a(c, r, f, h, n[o + 10], 9, 38016083),\n        h = a(h, c, r, f, n[o + 15], 14, -660478335), f = a(f, h, c, r, n[o + 4], 20, -\n        405537848), r = a(r, f, h, c, n[o + 9], 5, 568446438), c = a(c, r, f, h, n[o +\n        14], 9, -1019803690), h = a(h, c, r, f, n[o + 3], 14, -187363961), f = a(f, h,\n        c, r, n[o + 8], 20, 1163531501), r = a(r, f, h, c, n[o + 13], 5, -1444681467),\n        c = a(c, r, f, h, n[o + 2], 9, -51403784), h = a(h, c, r, f, n[o + 7], 14,\n        1735328473), r = s(r, f = a(f, h, c, r, n[o + 12], 20, -1926607734), h, c, n[o +\n        5], 4, -378558), c = s(c, r, f, h, n[o + 8], 11, -2022574463), h = s(h, c, r, f,\n        n[o + 11], 16, 1839030562), f = s(f, h, c, r, n[o + 14], 23, -35309556), r = s(\n        r, f, h, c, n[o + 1], 4, -1530992060), c = s(c, r, f, h, n[o + 4], 11,\n        1272893353), h = s(h, c, r, f, n[o + 7], 16, -155497632), f = s(f, h, c, r, n[\n        o + 10], 23, -1094730640), r = s(r, f, h, c, n[o + 13], 4, 681279174), c = s(c,\n        r, f, h, n[o], 11, -358537222), h = s(h, c, r, f, n[o + 3], 16, -722521979), f =\n        s(f, h, c, r, n[o + 6], 23, 76029189), r = s(r, f, h, c, n[o + 9], 4, -640364487),\n        c = s(c, r, f, h, n[o + 12], 11, -421815835), h = s(h, c, r, f, n[o + 15], 16,\n        530742520), r = v(r, f = s(f, h, c, r, n[o + 2], 23, -995338651), h, c, n[o], 6,\n        -198630844), c = v(c, r, f, h, n[o + 7], 10, 1126891415), h = v(h, c, r, f, n[\n        o + 14], 15, -1416354905), f = v(f, h, c, r, n[o + 5], 21, -57434055), r = v(r,\n        f, h, c, n[o + 12], 6, 1700485571), c = v(c, r, f, h, n[o + 3], 10, -\n        1894986606), h = v(h, c, r, f, n[o + 10], 15, -1051523), f = v(f, h, c, r, n[o + 1],\n        21, -2054922799), r = v(r, f, h, c, n[o + 8], 6, 1873313359), c = v(c, r, f, h,\n        n[o + 15], 10, -30611744), h = v(h, c, r, f, n[o + 6], 15, -1560198380), f = v(\n        f, h, c, r, n[o + 13], 21, 1309151649), r = v(r, f, h, c, n[o + 4], 6, -\n        145523070), c = v(c, r, f, h, n[o + 11], 10, -1120210379), h = v(h, c, r, f, n[\n        o + 2], 15, 718787259), f = v(f, h, c, r, n[o + 9], 21, -343485551), r = l(r,\n        e), f = l(f, u), h = l(h, p), c = l(c, i);}\n      return [r, f, h, c];\n    }(function (n) {\n      var t,o = [];\n      for (o[(n.length >> 2) - 1] = void 0, t = 0; t < o.length; t += 1) {o[t] = 0;}\n      for (t = 0; t < 8 * n.length; t += 8) {o[t >> 5] |= (255 & n.charCodeAt(t / 8)) <<\n        t % 32;}\n      return o;\n    }(n), 8 * n.length));\n  }\n  function o(n) {\n    return t(unescape(encodeURIComponent(n)));\n  }\n  return function (n) {\n    var t,o,e = \"0123456789abcdef\",\n    u = \"\";\n    for (o = 0; o < n.length; o += 1) {t = n.charCodeAt(o), u += e.charAt(t >>> 4 & 15) + e.charAt(\n      15 & t);}\n    return u;\n  }(o(n));\n};\nfunction getSecuritySign(data) {\n  var str = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var count = Math.floor(Math.random() * 7 + 10);\n  var sign = 'zza';\n  for (var i = 0; i < count; i++) {\n    sign += str[Math.floor(Math.random() * 36)];\n  }\n  sign += __sign_hash_20200305('CJBPACrRuNy7' + JSON.stringify(data));\n  return sign;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///98\n");

/***/ }),
/* 99 */
/*!***********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/asrsea.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _cryptoJs = _interopRequireDefault(__webpack_require__(/*! @/assets/crypto-js/crypto-js.js */ 100));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nfunction aes(params, key) {\n  var c = _cryptoJs.default.enc.Utf8.parse(key);\n  var d = _cryptoJs.default.enc.Utf8.parse(\"0102030405060708\");\n  var e = _cryptoJs.default.enc.Utf8.parse(params);\n  var f = _cryptoJs.default.AES.encrypt(e, c, {\n    iv: d,\n    mode: _cryptoJs.default.mode.CBC });\n\n  return f.toString();\n}\n\nfunction params(data, key) {\n  var param = aes(JSON.stringify(data), '0CoJUm6Qyw8W8jud');\n  return aes(param, key);\n}var _default =\n\nparams;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL290aGVyL2FzcnNlYS5qcyJdLCJuYW1lcyI6WyJhZXMiLCJwYXJhbXMiLCJrZXkiLCJjIiwiQ3J5cHRvSlMiLCJlbmMiLCJVdGY4IiwicGFyc2UiLCJkIiwiZSIsImYiLCJBRVMiLCJlbmNyeXB0IiwiaXYiLCJtb2RlIiwiQ0JDIiwidG9TdHJpbmciLCJkYXRhIiwicGFyYW0iLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoidUZBQUEsd0c7O0FBRUEsU0FBU0EsR0FBVCxDQUFhQyxNQUFiLEVBQXFCQyxHQUFyQixFQUEwQjtBQUN6QixNQUFNQyxDQUFDLEdBQUdDLGtCQUFTQyxHQUFULENBQWFDLElBQWIsQ0FBa0JDLEtBQWxCLENBQXdCTCxHQUF4QixDQUFWO0FBQ0EsTUFBTU0sQ0FBQyxHQUFHSixrQkFBU0MsR0FBVCxDQUFhQyxJQUFiLENBQWtCQyxLQUFsQixDQUF3QixrQkFBeEIsQ0FBVjtBQUNBLE1BQU1FLENBQUMsR0FBR0wsa0JBQVNDLEdBQVQsQ0FBYUMsSUFBYixDQUFrQkMsS0FBbEIsQ0FBd0JOLE1BQXhCLENBQVY7QUFDQSxNQUFNUyxDQUFDLEdBQUdOLGtCQUFTTyxHQUFULENBQWFDLE9BQWIsQ0FBcUJILENBQXJCLEVBQXdCTixDQUF4QixFQUEyQjtBQUNwQ1UsTUFBRSxFQUFFTCxDQURnQztBQUVwQ00sUUFBSSxFQUFFVixrQkFBU1UsSUFBVCxDQUFjQyxHQUZnQixFQUEzQixDQUFWOztBQUlBLFNBQU9MLENBQUMsQ0FBQ00sUUFBRixFQUFQO0FBQ0E7O0FBRUQsU0FBU2YsTUFBVCxDQUFnQmdCLElBQWhCLEVBQXNCZixHQUF0QixFQUEyQjtBQUMxQixNQUFNZ0IsS0FBSyxHQUFHbEIsR0FBRyxDQUFDbUIsSUFBSSxDQUFDQyxTQUFMLENBQWVILElBQWYsQ0FBRCxFQUF1QixrQkFBdkIsQ0FBakI7QUFDQSxTQUFPakIsR0FBRyxDQUFDa0IsS0FBRCxFQUFRaEIsR0FBUixDQUFWO0FBQ0EsQzs7QUFFY0QsTSIsImZpbGUiOiI5OS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDcnlwdG9KUyBmcm9tIFwiQC9hc3NldHMvY3J5cHRvLWpzL2NyeXB0by1qcy5qc1wiXHJcblxyXG5mdW5jdGlvbiBhZXMocGFyYW1zLCBrZXkpIHtcclxuXHRjb25zdCBjID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2Uoa2V5KVxyXG5cdGNvbnN0IGQgPSBDcnlwdG9KUy5lbmMuVXRmOC5wYXJzZShcIjAxMDIwMzA0MDUwNjA3MDhcIilcclxuXHRjb25zdCBlID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UocGFyYW1zKVxyXG5cdGNvbnN0IGYgPSBDcnlwdG9KUy5BRVMuZW5jcnlwdChlLCBjLCB7XHJcblx0XHRpdjogZCxcclxuXHRcdG1vZGU6IENyeXB0b0pTLm1vZGUuQ0JDXHJcblx0fSk7XHJcblx0cmV0dXJuIGYudG9TdHJpbmcoKVxyXG59XHJcblxyXG5mdW5jdGlvbiBwYXJhbXMoZGF0YSwga2V5KSB7XHJcblx0Y29uc3QgcGFyYW0gPSBhZXMoSlNPTi5zdHJpbmdpZnkoZGF0YSksICcwQ29KVW02UXl3OFc4anVkJylcclxuXHRyZXR1cm4gYWVzKHBhcmFtLCBrZXkpXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBhcmFtc1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///99\n");

/***/ }),
/* 100 */
/*!******************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/crypto-js/crypto-js.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_crypto, global, __webpack_provided_global_dot_crypto) {;(function (root, factory) {\n  if (true) {\n    // CommonJS\n    module.exports = exports = factory();\n  } else\n  {}\n})(this, function () {\n\n  /*globals window, global, require*/\n\n  /**\n                                       * CryptoJS core components.\n                                       */\n  var CryptoJS = CryptoJS || function (Math, undefined) {\n\n    var crypto;\n\n    // Native crypto from window (Browser)\n    if (typeof window !== 'undefined' && __webpack_provided_window_dot_crypto) {\n      crypto = __webpack_provided_window_dot_crypto;\n    }\n\n    // Native crypto in web worker (Browser)\n    if (typeof self !== 'undefined' && self.crypto) {\n      crypto = self.crypto;\n    }\n\n    // Native crypto from worker\n    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n      crypto = globalThis.crypto;\n    }\n\n    // Native (experimental IE 11) crypto from window (Browser)\n    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n      crypto = window.msCrypto;\n    }\n\n    // Native crypto from global (NodeJS)\n    if (!crypto && typeof global !== 'undefined' && __webpack_provided_global_dot_crypto) {\n      crypto = __webpack_provided_global_dot_crypto;\n    }\n\n    // Native crypto import via require (NodeJS)\n    if (!crypto && \"function\" === 'function') {\n      try {\n        crypto = __webpack_require__(/*! crypto */ 102);\n      } catch (err) {}\n    }\n\n    /*\n       * Cryptographically secure pseudorandom number generator\n       *\n       * As Math.random() is cryptographically not safe to use\n       */\n    var cryptoSecureRandomInt = function cryptoSecureRandomInt() {\n      if (crypto) {\n        // Use getRandomValues method (Browser)\n        if (typeof crypto.getRandomValues === 'function') {\n          try {\n            return crypto.getRandomValues(new Uint32Array(1))[0];\n          } catch (err) {}\n        }\n\n        // Use randomBytes method (NodeJS)\n        if (typeof crypto.randomBytes === 'function') {\n          try {\n            return crypto.randomBytes(4).readInt32LE();\n          } catch (err) {}\n        }\n      }\n\n      throw new Error('Native crypto module could not be used to get secure random number.');\n    };\n\n    /*\n        * Local polyfill of Object.create\n         */\n\n    var create = Object.create || function () {\n      function F() {}\n\n      return function (obj) {\n        var subtype;\n\n        F.prototype = obj;\n\n        subtype = new F();\n\n        F.prototype = null;\n\n        return subtype;\n      };\n    }();\n\n    /**\n          * CryptoJS namespace.\n          */\n    var C = {};\n\n    /**\n                 * Library namespace.\n                 */\n    var C_lib = C.lib = {};\n\n    /**\n                             * Base object for prototypal inheritance.\n                             */\n    var Base = C_lib.Base = function () {\n\n\n      return {\n        /**\n                * Creates a new object that inherits from this object.\n                *\n                * @param {Object} overrides Properties to copy into the new object.\n                *\n                * @return {Object} The new object.\n                *\n                * @static\n                *\n                * @example\n                *\n                *     var MyType = CryptoJS.lib.Base.extend({\n                *         field: 'value',\n                *\n                *         method: function () {\n                *         }\n                *     });\n                */\n        extend: function extend(overrides) {\n          // Spawn\n          var subtype = create(this);\n\n          // Augment\n          if (overrides) {\n            subtype.mixIn(overrides);\n          }\n\n          // Create default initializer\n          if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n            subtype.init = function () {\n              subtype.$super.init.apply(this, arguments);\n            };\n          }\n\n          // Initializer's prototype is the subtype object\n          subtype.init.prototype = subtype;\n\n          // Reference supertype\n          subtype.$super = this;\n\n          return subtype;\n        },\n\n        /**\n            * Extends this object and runs the init method.\n            * Arguments to create() will be passed to init().\n            *\n            * @return {Object} The new object.\n            *\n            * @static\n            *\n            * @example\n            *\n            *     var instance = MyType.create();\n            */\n        create: function create() {\n          var instance = this.extend();\n          instance.init.apply(instance, arguments);\n\n          return instance;\n        },\n\n        /**\n            * Initializes a newly created object.\n            * Override this method to add some logic when your objects are created.\n            *\n            * @example\n            *\n            *     var MyType = CryptoJS.lib.Base.extend({\n            *         init: function () {\n            *             // ...\n            *         }\n            *     });\n            */\n        init: function init() {\n        },\n\n        /**\n            * Copies properties into this object.\n            *\n            * @param {Object} properties The properties to mix in.\n            *\n            * @example\n            *\n            *     MyType.mixIn({\n            *         field: 'value'\n            *     });\n            */\n        mixIn: function mixIn(properties) {\n          for (var propertyName in properties) {\n            if (properties.hasOwnProperty(propertyName)) {\n              this[propertyName] = properties[propertyName];\n            }\n          }\n\n          // IE won't copy toString using the loop above\n          if (properties.hasOwnProperty('toString')) {\n            this.toString = properties.toString;\n          }\n        },\n\n        /**\n            * Creates a copy of this object.\n            *\n            * @return {Object} The clone.\n            *\n            * @example\n            *\n            *     var clone = instance.clone();\n            */\n        clone: function clone() {\n          return this.init.prototype.extend(this);\n        } };\n\n    }();\n\n    /**\n          * An array of 32-bit words.\n          *\n          * @property {Array} words The array of 32-bit words.\n          * @property {number} sigBytes The number of significant bytes in this word array.\n          */\n    var WordArray = C_lib.WordArray = Base.extend({\n      /**\n                                                     * Initializes a newly created word array.\n                                                     *\n                                                     * @param {Array} words (Optional) An array of 32-bit words.\n                                                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n                                                     *\n                                                     * @example\n                                                     *\n                                                     *     var wordArray = CryptoJS.lib.WordArray.create();\n                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n                                                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n                                                     */\n      init: function init(words, sigBytes) {\n        words = this.words = words || [];\n\n        if (sigBytes != undefined) {\n          this.sigBytes = sigBytes;\n        } else {\n          this.sigBytes = words.length * 4;\n        }\n      },\n\n      /**\n          * Converts this word array to a string.\n          *\n          * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n          *\n          * @return {string} The stringified word array.\n          *\n          * @example\n          *\n          *     var string = wordArray + '';\n          *     var string = wordArray.toString();\n          *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n          */\n      toString: function toString(encoder) {\n        return (encoder || Hex).stringify(this);\n      },\n\n      /**\n          * Concatenates a word array to this word array.\n          *\n          * @param {WordArray} wordArray The word array to append.\n          *\n          * @return {WordArray} This word array.\n          *\n          * @example\n          *\n          *     wordArray1.concat(wordArray2);\n          */\n      concat: function concat(wordArray) {\n        // Shortcuts\n        var thisWords = this.words;\n        var thatWords = wordArray.words;\n        var thisSigBytes = this.sigBytes;\n        var thatSigBytes = wordArray.sigBytes;\n\n        // Clamp excess bits\n        this.clamp();\n\n        // Concat\n        if (thisSigBytes % 4) {\n          // Copy one byte at a time\n          for (var i = 0; i < thatSigBytes; i++) {\n            var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n            thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;\n          }\n        } else {\n          // Copy one word at a time\n          for (var j = 0; j < thatSigBytes; j += 4) {\n            thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];\n          }\n        }\n        this.sigBytes += thatSigBytes;\n\n        // Chainable\n        return this;\n      },\n\n      /**\n          * Removes insignificant bits.\n          *\n          * @example\n          *\n          *     wordArray.clamp();\n          */\n      clamp: function clamp() {\n        // Shortcuts\n        var words = this.words;\n        var sigBytes = this.sigBytes;\n\n        // Clamp\n        words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;\n        words.length = Math.ceil(sigBytes / 4);\n      },\n\n      /**\n          * Creates a copy of this word array.\n          *\n          * @return {WordArray} The clone.\n          *\n          * @example\n          *\n          *     var clone = wordArray.clone();\n          */\n      clone: function clone() {\n        var clone = Base.clone.call(this);\n        clone.words = this.words.slice(0);\n\n        return clone;\n      },\n\n      /**\n          * Creates a word array filled with random bytes.\n          *\n          * @param {number} nBytes The number of random bytes to generate.\n          *\n          * @return {WordArray} The random word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.lib.WordArray.random(16);\n          */\n      random: function random(nBytes) {\n        var words = [];\n\n        for (var i = 0; i < nBytes; i += 4) {\n          words.push(cryptoSecureRandomInt());\n        }\n\n        return new WordArray.init(words, nBytes);\n      } });\n\n\n    /**\n             * Encoder namespace.\n             */\n    var C_enc = C.enc = {};\n\n    /**\n                             * Hex encoding strategy.\n                             */\n    var Hex = C_enc.Hex = {\n      /**\n                             * Converts a word array to a hex string.\n                             *\n                             * @param {WordArray} wordArray The word array.\n                             *\n                             * @return {string} The hex string.\n                             *\n                             * @static\n                             *\n                             * @example\n                             *\n                             *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n                             */\n      stringify: function stringify(wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var hexChars = [];\n        for (var i = 0; i < sigBytes; i++) {\n          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          hexChars.push((bite >>> 4).toString(16));\n          hexChars.push((bite & 0x0f).toString(16));\n        }\n\n        return hexChars.join('');\n      },\n\n      /**\n          * Converts a hex string to a word array.\n          *\n          * @param {string} hexStr The hex string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n          */\n      parse: function parse(hexStr) {\n        // Shortcut\n        var hexStrLength = hexStr.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < hexStrLength; i += 2) {\n          words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;\n        }\n\n        return new WordArray.init(words, hexStrLength / 2);\n      } };\n\n\n    /**\n            * Latin1 encoding strategy.\n            */\n    var Latin1 = C_enc.Latin1 = {\n      /**\n                                   * Converts a word array to a Latin1 string.\n                                   *\n                                   * @param {WordArray} wordArray The word array.\n                                   *\n                                   * @return {string} The Latin1 string.\n                                   *\n                                   * @static\n                                   *\n                                   * @example\n                                   *\n                                   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n                                   */\n      stringify: function stringify(wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var latin1Chars = [];\n        for (var i = 0; i < sigBytes; i++) {\n          var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          latin1Chars.push(String.fromCharCode(bite));\n        }\n\n        return latin1Chars.join('');\n      },\n\n      /**\n          * Converts a Latin1 string to a word array.\n          *\n          * @param {string} latin1Str The Latin1 string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n          */\n      parse: function parse(latin1Str) {\n        // Shortcut\n        var latin1StrLength = latin1Str.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < latin1StrLength; i++) {\n          words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;\n        }\n\n        return new WordArray.init(words, latin1StrLength);\n      } };\n\n\n    /**\n            * UTF-8 encoding strategy.\n            */\n    var Utf8 = C_enc.Utf8 = {\n      /**\n                               * Converts a word array to a UTF-8 string.\n                               *\n                               * @param {WordArray} wordArray The word array.\n                               *\n                               * @return {string} The UTF-8 string.\n                               *\n                               * @static\n                               *\n                               * @example\n                               *\n                               *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n                               */\n      stringify: function stringify(wordArray) {\n        try {\n          return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n        } catch (e) {\n          throw new Error('Malformed UTF-8 data');\n        }\n      },\n\n      /**\n          * Converts a UTF-8 string to a word array.\n          *\n          * @param {string} utf8Str The UTF-8 string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n          */\n      parse: function parse(utf8Str) {\n        return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n      } };\n\n\n    /**\n            * Abstract buffered block algorithm template.\n            *\n            * The property blockSize must be implemented in a concrete subtype.\n            *\n            * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n            */\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n      /**\n                                                                               * Resets this block algorithm's data buffer to its initial state.\n                                                                               *\n                                                                               * @example\n                                                                               *\n                                                                               *     bufferedBlockAlgorithm.reset();\n                                                                               */\n      reset: function reset() {\n        // Initial values\n        this._data = new WordArray.init();\n        this._nDataBytes = 0;\n      },\n\n      /**\n          * Adds new data to this block algorithm's buffer.\n          *\n          * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n          *\n          * @example\n          *\n          *     bufferedBlockAlgorithm._append('data');\n          *     bufferedBlockAlgorithm._append(wordArray);\n          */\n      _append: function _append(data) {\n        // Convert string to WordArray, else assume WordArray already\n        if (typeof data == 'string') {\n          data = Utf8.parse(data);\n        }\n\n        // Append\n        this._data.concat(data);\n        this._nDataBytes += data.sigBytes;\n      },\n\n      /**\n          * Processes available data blocks.\n          *\n          * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n          *\n          * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n          *\n          * @return {WordArray} The processed data.\n          *\n          * @example\n          *\n          *     var processedData = bufferedBlockAlgorithm._process();\n          *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n          */\n      _process: function _process(doFlush) {\n        var processedWords;\n\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n        var dataSigBytes = data.sigBytes;\n        var blockSize = this.blockSize;\n        var blockSizeBytes = blockSize * 4;\n\n        // Count blocks ready\n        var nBlocksReady = dataSigBytes / blockSizeBytes;\n        if (doFlush) {\n          // Round up to include partial blocks\n          nBlocksReady = Math.ceil(nBlocksReady);\n        } else {\n          // Round down to include only full blocks,\n          // less the number of blocks that must remain in the buffer\n          nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n        }\n\n        // Count words ready\n        var nWordsReady = nBlocksReady * blockSize;\n\n        // Count bytes ready\n        var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n        // Process blocks\n        if (nWordsReady) {\n          for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n            // Perform concrete-algorithm logic\n            this._doProcessBlock(dataWords, offset);\n          }\n\n          // Remove processed words\n          processedWords = dataWords.splice(0, nWordsReady);\n          data.sigBytes -= nBytesReady;\n        }\n\n        // Return processed words\n        return new WordArray.init(processedWords, nBytesReady);\n      },\n\n      /**\n          * Creates a copy of this object.\n          *\n          * @return {Object} The clone.\n          *\n          * @example\n          *\n          *     var clone = bufferedBlockAlgorithm.clone();\n          */\n      clone: function clone() {\n        var clone = Base.clone.call(this);\n        clone._data = this._data.clone();\n\n        return clone;\n      },\n\n      _minBufferSize: 0 });\n\n\n    /**\n                             * Abstract hasher template.\n                             *\n                             * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n                             */\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n      /**\n                                                                 * Configuration options.\n                                                                 */\n      cfg: Base.extend(),\n\n      /**\n                           * Initializes a newly created hasher.\n                           *\n                           * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n                           *\n                           * @example\n                           *\n                           *     var hasher = CryptoJS.algo.SHA256.create();\n                           */\n      init: function init(cfg) {\n        // Apply config defaults\n        this.cfg = this.cfg.extend(cfg);\n\n        // Set initial values\n        this.reset();\n      },\n\n      /**\n          * Resets this hasher to its initial state.\n          *\n          * @example\n          *\n          *     hasher.reset();\n          */\n      reset: function reset() {\n        // Reset data buffer\n        BufferedBlockAlgorithm.reset.call(this);\n\n        // Perform concrete-hasher logic\n        this._doReset();\n      },\n\n      /**\n          * Updates this hasher with a message.\n          *\n          * @param {WordArray|string} messageUpdate The message to append.\n          *\n          * @return {Hasher} This hasher.\n          *\n          * @example\n          *\n          *     hasher.update('message');\n          *     hasher.update(wordArray);\n          */\n      update: function update(messageUpdate) {\n        // Append\n        this._append(messageUpdate);\n\n        // Update the hash\n        this._process();\n\n        // Chainable\n        return this;\n      },\n\n      /**\n          * Finalizes the hash computation.\n          * Note that the finalize operation is effectively a destructive, read-once operation.\n          *\n          * @param {WordArray|string} messageUpdate (Optional) A final message update.\n          *\n          * @return {WordArray} The hash.\n          *\n          * @example\n          *\n          *     var hash = hasher.finalize();\n          *     var hash = hasher.finalize('message');\n          *     var hash = hasher.finalize(wordArray);\n          */\n      finalize: function finalize(messageUpdate) {\n        // Final message update\n        if (messageUpdate) {\n          this._append(messageUpdate);\n        }\n\n        // Perform concrete-hasher logic\n        var hash = this._doFinalize();\n\n        return hash;\n      },\n\n      blockSize: 512 / 32,\n\n      /**\n                            * Creates a shortcut function to a hasher's object interface.\n                            *\n                            * @param {Hasher} hasher The hasher to create a helper for.\n                            *\n                            * @return {Function} The shortcut function.\n                            *\n                            * @static\n                            *\n                            * @example\n                            *\n                            *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n                            */\n      _createHelper: function _createHelper(hasher) {\n        return function (message, cfg) {\n          return new hasher.init(cfg).finalize(message);\n        };\n      },\n\n      /**\n          * Creates a shortcut function to the HMAC's object interface.\n          *\n          * @param {Hasher} hasher The hasher to use in this HMAC helper.\n          *\n          * @return {Function} The shortcut function.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n          */\n      _createHmacHelper: function _createHmacHelper(hasher) {\n        return function (message, key) {\n          return new C_algo.HMAC.init(hasher, key).finalize(message);\n        };\n      } });\n\n\n    /**\n             * Algorithm namespace.\n             */\n    var C_algo = C.algo = {};\n\n    return C;\n  }(Math);\n\n\n  (function (undefined) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var X32WordArray = C_lib.WordArray;\n\n    /**\n                                         * x64 namespace.\n                                         */\n    var C_x64 = C.x64 = {};\n\n    /**\n                             * A 64-bit word.\n                             */\n    var X64Word = C_x64.Word = Base.extend({\n      /**\n                                              * Initializes a newly created 64-bit word.\n                                              *\n                                              * @param {number} high The high 32 bits.\n                                              * @param {number} low The low 32 bits.\n                                              *\n                                              * @example\n                                              *\n                                              *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n                                              */\n      init: function init(high, low) {\n        this.high = high;\n        this.low = low;\n      }\n\n      /**\n         * Bitwise NOTs this word.\n         *\n         * @return {X64Word} A new x64-Word object after negating.\n         *\n         * @example\n         *\n         *     var negated = x64Word.not();\n         */\n      // not: function () {\n      // var high = ~this.high;\n      // var low = ~this.low;\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Bitwise ANDs this word with the passed word.\n       *\n       * @param {X64Word} word The x64-Word to AND with this word.\n       *\n       * @return {X64Word} A new x64-Word object after ANDing.\n       *\n       * @example\n       *\n       *     var anded = x64Word.and(anotherX64Word);\n       */\n      // and: function (word) {\n      // var high = this.high & word.high;\n      // var low = this.low & word.low;\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Bitwise ORs this word with the passed word.\n       *\n       * @param {X64Word} word The x64-Word to OR with this word.\n       *\n       * @return {X64Word} A new x64-Word object after ORing.\n       *\n       * @example\n       *\n       *     var ored = x64Word.or(anotherX64Word);\n       */\n      // or: function (word) {\n      // var high = this.high | word.high;\n      // var low = this.low | word.low;\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Bitwise XORs this word with the passed word.\n       *\n       * @param {X64Word} word The x64-Word to XOR with this word.\n       *\n       * @return {X64Word} A new x64-Word object after XORing.\n       *\n       * @example\n       *\n       *     var xored = x64Word.xor(anotherX64Word);\n       */\n      // xor: function (word) {\n      // var high = this.high ^ word.high;\n      // var low = this.low ^ word.low;\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Shifts this word n bits to the left.\n       *\n       * @param {number} n The number of bits to shift.\n       *\n       * @return {X64Word} A new x64-Word object after shifting.\n       *\n       * @example\n       *\n       *     var shifted = x64Word.shiftL(25);\n       */\n      // shiftL: function (n) {\n      // if (n < 32) {\n      // var high = (this.high << n) | (this.low >>> (32 - n));\n      // var low = this.low << n;\n      // } else {\n      // var high = this.low << (n - 32);\n      // var low = 0;\n      // }\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Shifts this word n bits to the right.\n       *\n       * @param {number} n The number of bits to shift.\n       *\n       * @return {X64Word} A new x64-Word object after shifting.\n       *\n       * @example\n       *\n       *     var shifted = x64Word.shiftR(7);\n       */\n      // shiftR: function (n) {\n      // if (n < 32) {\n      // var low = (this.low >>> n) | (this.high << (32 - n));\n      // var high = this.high >>> n;\n      // } else {\n      // var low = this.high >>> (n - 32);\n      // var high = 0;\n      // }\n\n      // return X64Word.create(high, low);\n      // },\n\n      /**\n       * Rotates this word n bits to the left.\n       *\n       * @param {number} n The number of bits to rotate.\n       *\n       * @return {X64Word} A new x64-Word object after rotating.\n       *\n       * @example\n       *\n       *     var rotated = x64Word.rotL(25);\n       */\n      // rotL: function (n) {\n      // return this.shiftL(n).or(this.shiftR(64 - n));\n      // },\n\n      /**\n       * Rotates this word n bits to the right.\n       *\n       * @param {number} n The number of bits to rotate.\n       *\n       * @return {X64Word} A new x64-Word object after rotating.\n       *\n       * @example\n       *\n       *     var rotated = x64Word.rotR(7);\n       */\n      // rotR: function (n) {\n      // return this.shiftR(n).or(this.shiftL(64 - n));\n      // },\n\n      /**\n       * Adds this word with the passed word.\n       *\n       * @param {X64Word} word The x64-Word to add with this word.\n       *\n       * @return {X64Word} A new x64-Word object after adding.\n       *\n       * @example\n       *\n       *     var added = x64Word.add(anotherX64Word);\n       */\n      // add: function (word) {\n      // var low = (this.low + word.low) | 0;\n      // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n      // var high = (this.high + word.high + carry) | 0;\n\n      // return X64Word.create(high, low);\n      // }\n    });\n\n    /**\n         * An array of 64-bit words.\n         *\n         * @property {Array} words The array of CryptoJS.x64.Word objects.\n         * @property {number} sigBytes The number of significant bytes in this word array.\n         */\n    var X64WordArray = C_x64.WordArray = Base.extend({\n      /**\n                                                        * Initializes a newly created word array.\n                                                        *\n                                                        * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n                                                        * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n                                                        *\n                                                        * @example\n                                                        *\n                                                        *     var wordArray = CryptoJS.x64.WordArray.create();\n                                                        *\n                                                        *     var wordArray = CryptoJS.x64.WordArray.create([\n                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n                                                        *     ]);\n                                                        *\n                                                        *     var wordArray = CryptoJS.x64.WordArray.create([\n                                                        *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n                                                        *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n                                                        *     ], 10);\n                                                        */\n      init: function init(words, sigBytes) {\n        words = this.words = words || [];\n\n        if (sigBytes != undefined) {\n          this.sigBytes = sigBytes;\n        } else {\n          this.sigBytes = words.length * 8;\n        }\n      },\n\n      /**\n          * Converts this 64-bit word array to a 32-bit word array.\n          *\n          * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n          *\n          * @example\n          *\n          *     var x32WordArray = x64WordArray.toX32();\n          */\n      toX32: function toX32() {\n        // Shortcuts\n        var x64Words = this.words;\n        var x64WordsLength = x64Words.length;\n\n        // Convert\n        var x32Words = [];\n        for (var i = 0; i < x64WordsLength; i++) {\n          var x64Word = x64Words[i];\n          x32Words.push(x64Word.high);\n          x32Words.push(x64Word.low);\n        }\n\n        return X32WordArray.create(x32Words, this.sigBytes);\n      },\n\n      /**\n          * Creates a copy of this word array.\n          *\n          * @return {X64WordArray} The clone.\n          *\n          * @example\n          *\n          *     var clone = x64WordArray.clone();\n          */\n      clone: function clone() {\n        var clone = Base.clone.call(this);\n\n        // Clone \"words\" array\n        var words = clone.words = this.words.slice(0);\n\n        // Clone each X64Word object\n        var wordsLength = words.length;\n        for (var i = 0; i < wordsLength; i++) {\n          words[i] = words[i].clone();\n        }\n\n        return clone;\n      } });\n\n  })();\n\n\n  (function () {\n    // Check if typed arrays are supported\n    if (typeof ArrayBuffer != 'function') {\n      return;\n    }\n\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n\n    // Reference original init\n    var superInit = WordArray.init;\n\n    // Augment WordArray.init to handle typed arrays\n    var subInit = WordArray.init = function (typedArray) {\n      // Convert buffers to uint8\n      if (typedArray instanceof ArrayBuffer) {\n        typedArray = new Uint8Array(typedArray);\n      }\n\n      // Convert other array views to uint8\n      if (\n      typedArray instanceof Int8Array ||\n      typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray ||\n      typedArray instanceof Int16Array ||\n      typedArray instanceof Uint16Array ||\n      typedArray instanceof Int32Array ||\n      typedArray instanceof Uint32Array ||\n      typedArray instanceof Float32Array ||\n      typedArray instanceof Float64Array)\n      {\n        typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n      }\n\n      // Handle Uint8Array\n      if (typedArray instanceof Uint8Array) {\n        // Shortcut\n        var typedArrayByteLength = typedArray.byteLength;\n\n        // Extract bytes\n        var words = [];\n        for (var i = 0; i < typedArrayByteLength; i++) {\n          words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;\n        }\n\n        // Initialize this word array\n        superInit.call(this, words, typedArrayByteLength);\n      } else {\n        // Else call normal init\n        superInit.apply(this, arguments);\n      }\n    };\n\n    subInit.prototype = WordArray;\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n                        * UTF-16 BE encoding strategy.\n                        */\n    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n      /**\n                                                   * Converts a word array to a UTF-16 BE string.\n                                                   *\n                                                   * @param {WordArray} wordArray The word array.\n                                                   *\n                                                   * @return {string} The UTF-16 BE string.\n                                                   *\n                                                   * @static\n                                                   *\n                                                   * @example\n                                                   *\n                                                   *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n                                                   */\n      stringify: function stringify(wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var utf16Chars = [];\n        for (var i = 0; i < sigBytes; i += 2) {\n          var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;\n          utf16Chars.push(String.fromCharCode(codePoint));\n        }\n\n        return utf16Chars.join('');\n      },\n\n      /**\n          * Converts a UTF-16 BE string to a word array.\n          *\n          * @param {string} utf16Str The UTF-16 BE string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n          */\n      parse: function parse(utf16Str) {\n        // Shortcut\n        var utf16StrLength = utf16Str.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < utf16StrLength; i++) {\n          words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;\n        }\n\n        return WordArray.create(words, utf16StrLength * 2);\n      } };\n\n\n    /**\n            * UTF-16 LE encoding strategy.\n            */\n    C_enc.Utf16LE = {\n      /**\n                       * Converts a word array to a UTF-16 LE string.\n                       *\n                       * @param {WordArray} wordArray The word array.\n                       *\n                       * @return {string} The UTF-16 LE string.\n                       *\n                       * @static\n                       *\n                       * @example\n                       *\n                       *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n                       */\n      stringify: function stringify(wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n\n        // Convert\n        var utf16Chars = [];\n        for (var i = 0; i < sigBytes; i += 2) {\n          var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);\n          utf16Chars.push(String.fromCharCode(codePoint));\n        }\n\n        return utf16Chars.join('');\n      },\n\n      /**\n          * Converts a UTF-16 LE string to a word array.\n          *\n          * @param {string} utf16Str The UTF-16 LE string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n          */\n      parse: function parse(utf16Str) {\n        // Shortcut\n        var utf16StrLength = utf16Str.length;\n\n        // Convert\n        var words = [];\n        for (var i = 0; i < utf16StrLength; i++) {\n          words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);\n        }\n\n        return WordArray.create(words, utf16StrLength * 2);\n      } };\n\n\n    function swapEndian(word) {\n      return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;\n    }\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n                        * Base64 encoding strategy.\n                        */\n    var Base64 = C_enc.Base64 = {\n      /**\n                                   * Converts a word array to a Base64 string.\n                                   *\n                                   * @param {WordArray} wordArray The word array.\n                                   *\n                                   * @return {string} The Base64 string.\n                                   *\n                                   * @static\n                                   *\n                                   * @example\n                                   *\n                                   *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n                                   */\n      stringify: function stringify(wordArray) {\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n        var map = this._map;\n\n        // Clamp excess bits\n        wordArray.clamp();\n\n        // Convert\n        var base64Chars = [];\n        for (var i = 0; i < sigBytes; i += 3) {\n          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;\n          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;\n\n          var triplet = byte1 << 16 | byte2 << 8 | byte3;\n\n          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {\n            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));\n          }\n        }\n\n        // Add padding\n        var paddingChar = map.charAt(64);\n        if (paddingChar) {\n          while (base64Chars.length % 4) {\n            base64Chars.push(paddingChar);\n          }\n        }\n\n        return base64Chars.join('');\n      },\n\n      /**\n          * Converts a Base64 string to a word array.\n          *\n          * @param {string} base64Str The Base64 string.\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n          */\n      parse: function parse(base64Str) {\n        // Shortcuts\n        var base64StrLength = base64Str.length;\n        var map = this._map;\n        var reverseMap = this._reverseMap;\n\n        if (!reverseMap) {\n          reverseMap = this._reverseMap = [];\n          for (var j = 0; j < map.length; j++) {\n            reverseMap[map.charCodeAt(j)] = j;\n          }\n        }\n\n        // Ignore padding\n        var paddingChar = map.charAt(64);\n        if (paddingChar) {\n          var paddingIndex = base64Str.indexOf(paddingChar);\n          if (paddingIndex !== -1) {\n            base64StrLength = paddingIndex;\n          }\n        }\n\n        // Convert\n        return parseLoop(base64Str, base64StrLength, reverseMap);\n\n      },\n\n      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=' };\n\n\n    function parseLoop(base64Str, base64StrLength, reverseMap) {\n      var words = [];\n      var nBytes = 0;\n      for (var i = 0; i < base64StrLength; i++) {\n        if (i % 4) {\n          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;\n          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;\n          var bitsCombined = bits1 | bits2;\n          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;\n          nBytes++;\n        }\n      }\n      return WordArray.create(words, nBytes);\n    }\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n                        * Base64url encoding strategy.\n                        */\n    var Base64url = C_enc.Base64url = {\n      /**\n                                         * Converts a word array to a Base64url string.\n                                         *\n                                         * @param {WordArray} wordArray The word array.\n                                         *\n                                         * @param {boolean} urlSafe Whether to use url safe\n                                         *\n                                         * @return {string} The Base64url string.\n                                         *\n                                         * @static\n                                         *\n                                         * @example\n                                         *\n                                         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n                                         */\n      stringify: function stringify(wordArray) {var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        // Shortcuts\n        var words = wordArray.words;\n        var sigBytes = wordArray.sigBytes;\n        var map = urlSafe ? this._safe_map : this._map;\n\n        // Clamp excess bits\n        wordArray.clamp();\n\n        // Convert\n        var base64Chars = [];\n        for (var i = 0; i < sigBytes; i += 3) {\n          var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;\n          var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;\n          var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;\n\n          var triplet = byte1 << 16 | byte2 << 8 | byte3;\n\n          for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j++) {\n            base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));\n          }\n        }\n\n        // Add padding\n        var paddingChar = map.charAt(64);\n        if (paddingChar) {\n          while (base64Chars.length % 4) {\n            base64Chars.push(paddingChar);\n          }\n        }\n\n        return base64Chars.join('');\n      },\n\n      /**\n          * Converts a Base64url string to a word array.\n          *\n          * @param {string} base64Str The Base64url string.\n          *\n          * @param {boolean} urlSafe Whether to use url safe\n          *\n          * @return {WordArray} The word array.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n          */\n      parse: function parse(base64Str) {var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        // Shortcuts\n        var base64StrLength = base64Str.length;\n        var map = urlSafe ? this._safe_map : this._map;\n        var reverseMap = this._reverseMap;\n\n        if (!reverseMap) {\n          reverseMap = this._reverseMap = [];\n          for (var j = 0; j < map.length; j++) {\n            reverseMap[map.charCodeAt(j)] = j;\n          }\n        }\n\n        // Ignore padding\n        var paddingChar = map.charAt(64);\n        if (paddingChar) {\n          var paddingIndex = base64Str.indexOf(paddingChar);\n          if (paddingIndex !== -1) {\n            base64StrLength = paddingIndex;\n          }\n        }\n\n        // Convert\n        return parseLoop(base64Str, base64StrLength, reverseMap);\n\n      },\n\n      _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n      _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_' };\n\n\n    function parseLoop(base64Str, base64StrLength, reverseMap) {\n      var words = [];\n      var nBytes = 0;\n      for (var i = 0; i < base64StrLength; i++) {\n        if (i % 4) {\n          var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;\n          var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;\n          var bitsCombined = bits1 | bits2;\n          words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;\n          nBytes++;\n        }\n      }\n      return WordArray.create(words, nBytes);\n    }\n  })();\n\n  (function (Math) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Constants table\n    var T = [];\n\n    // Compute constants\n    (function () {\n      for (var i = 0; i < 64; i++) {\n        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;\n      }\n    })();\n\n    /**\n           * MD5 hash algorithm.\n           */\n    var MD5 = C_algo.MD5 = Hasher.extend({\n      _doReset: function _doReset() {\n        this._hash = new WordArray.init([\n        0x67452301, 0xefcdab89,\n        0x98badcfe, 0x10325476]);\n\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Swap endian\n        for (var i = 0; i < 16; i++) {\n          // Shortcuts\n          var offset_i = offset + i;\n          var M_offset_i = M[offset_i];\n\n          M[offset_i] =\n          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |\n          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\n\n        }\n\n        // Shortcuts\n        var H = this._hash.words;\n\n        var M_offset_0 = M[offset + 0];\n        var M_offset_1 = M[offset + 1];\n        var M_offset_2 = M[offset + 2];\n        var M_offset_3 = M[offset + 3];\n        var M_offset_4 = M[offset + 4];\n        var M_offset_5 = M[offset + 5];\n        var M_offset_6 = M[offset + 6];\n        var M_offset_7 = M[offset + 7];\n        var M_offset_8 = M[offset + 8];\n        var M_offset_9 = M[offset + 9];\n        var M_offset_10 = M[offset + 10];\n        var M_offset_11 = M[offset + 11];\n        var M_offset_12 = M[offset + 12];\n        var M_offset_13 = M[offset + 13];\n        var M_offset_14 = M[offset + 14];\n        var M_offset_15 = M[offset + 15];\n\n        // Working varialbes\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n\n        // Computation\n        a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n        d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n        c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n        b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n        a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n        d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n        c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n        b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n        a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n        d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n        c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n        b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n        a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n        d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n        c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n        b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n        a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n        d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n        c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n        b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n        a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n        d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n        c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n        b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n        a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n        d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n        c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n        b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n        a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n        d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n        c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n        b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n        a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n        d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n        c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n        b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n        a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n        d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n        c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n        b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n        a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n        d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n        c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n        b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n        a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n        d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n        c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n        b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n        a = II(a, b, c, d, M_offset_0, 6, T[48]);\n        d = II(d, a, b, c, M_offset_7, 10, T[49]);\n        c = II(c, d, a, b, M_offset_14, 15, T[50]);\n        b = II(b, c, d, a, M_offset_5, 21, T[51]);\n        a = II(a, b, c, d, M_offset_12, 6, T[52]);\n        d = II(d, a, b, c, M_offset_3, 10, T[53]);\n        c = II(c, d, a, b, M_offset_10, 15, T[54]);\n        b = II(b, c, d, a, M_offset_1, 21, T[55]);\n        a = II(a, b, c, d, M_offset_8, 6, T[56]);\n        d = II(d, a, b, c, M_offset_15, 10, T[57]);\n        c = II(c, d, a, b, M_offset_6, 15, T[58]);\n        b = II(b, c, d, a, M_offset_13, 21, T[59]);\n        a = II(a, b, c, d, M_offset_4, 6, T[60]);\n        d = II(d, a, b, c, M_offset_11, 10, T[61]);\n        c = II(c, d, a, b, M_offset_2, 15, T[62]);\n        b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n        // Intermediate hash value\n        H[0] = H[0] + a | 0;\n        H[1] = H[1] + b | 0;\n        H[2] = H[2] + c | 0;\n        H[3] = H[3] + d | 0;\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n\n        var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n        var nBitsTotalL = nBitsTotal;\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] =\n        (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff |\n        (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;\n\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =\n        (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff |\n        (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;\n\n\n        data.sigBytes = (dataWords.length + 1) * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Shortcuts\n        var hash = this._hash;\n        var H = hash.words;\n\n        // Swap endian\n        for (var i = 0; i < 4; i++) {\n          // Shortcut\n          var H_i = H[i];\n\n          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |\n          (H_i << 24 | H_i >>> 8) & 0xff00ff00;\n        }\n\n        // Return final computed hash\n        return hash;\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n      } });\n\n\n    function FF(a, b, c, d, x, s, t) {\n      var n = a + (b & c | ~b & d) + x + t;\n      return (n << s | n >>> 32 - s) + b;\n    }\n\n    function GG(a, b, c, d, x, s, t) {\n      var n = a + (b & d | c & ~d) + x + t;\n      return (n << s | n >>> 32 - s) + b;\n    }\n\n    function HH(a, b, c, d, x, s, t) {\n      var n = a + (b ^ c ^ d) + x + t;\n      return (n << s | n >>> 32 - s) + b;\n    }\n\n    function II(a, b, c, d, x, s, t) {\n      var n = a + (c ^ (b | ~d)) + x + t;\n      return (n << s | n >>> 32 - s) + b;\n    }\n\n    /**\n       * Shortcut function to the hasher's object interface.\n       *\n       * @param {WordArray|string} message The message to hash.\n       *\n       * @return {WordArray} The hash.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var hash = CryptoJS.MD5('message');\n       *     var hash = CryptoJS.MD5(wordArray);\n       */\n    C.MD5 = Hasher._createHelper(MD5);\n\n    /**\n                                        * Shortcut function to the HMAC's object interface.\n                                        *\n                                        * @param {WordArray|string} message The message to hash.\n                                        * @param {WordArray|string} key The secret key.\n                                        *\n                                        * @return {WordArray} The HMAC.\n                                        *\n                                        * @static\n                                        *\n                                        * @example\n                                        *\n                                        *     var hmac = CryptoJS.HmacMD5(message, key);\n                                        */\n    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n  })(Math);\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Reusable object\n    var W = [];\n\n    /**\n                 * SHA-1 hash algorithm.\n                 */\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\n      _doReset: function _doReset() {\n        this._hash = new WordArray.init([\n        0x67452301, 0xefcdab89,\n        0x98badcfe, 0x10325476,\n        0xc3d2e1f0]);\n\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcut\n        var H = this._hash.words;\n\n        // Working variables\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n        var e = H[4];\n\n        // Computation\n        for (var i = 0; i < 80; i++) {\n          if (i < 16) {\n            W[i] = M[offset + i] | 0;\n          } else {\n            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n            W[i] = n << 1 | n >>> 31;\n          }\n\n          var t = (a << 5 | a >>> 27) + e + W[i];\n          if (i < 20) {\n            t += (b & c | ~b & d) + 0x5a827999;\n          } else if (i < 40) {\n            t += (b ^ c ^ d) + 0x6ed9eba1;\n          } else if (i < 60) {\n            t += (b & c | b & d | c & d) - 0x70e44324;\n          } else /* if (i < 80) */{\n              t += (b ^ c ^ d) - 0x359d3e2a;\n            }\n\n          e = d;\n          d = c;\n          c = b << 30 | b >>> 2;\n          b = a;\n          a = t;\n        }\n\n        // Intermediate hash value\n        H[0] = H[0] + a | 0;\n        H[1] = H[1] + b | 0;\n        H[2] = H[2] + c | 0;\n        H[3] = H[3] + d | 0;\n        H[4] = H[4] + e | 0;\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Return final computed hash\n        return this._hash;\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n      } });\n\n\n    /**\n             * Shortcut function to the hasher's object interface.\n             *\n             * @param {WordArray|string} message The message to hash.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hash = CryptoJS.SHA1('message');\n             *     var hash = CryptoJS.SHA1(wordArray);\n             */\n    C.SHA1 = Hasher._createHelper(SHA1);\n\n    /**\n                                          * Shortcut function to the HMAC's object interface.\n                                          *\n                                          * @param {WordArray|string} message The message to hash.\n                                          * @param {WordArray|string} key The secret key.\n                                          *\n                                          * @return {WordArray} The HMAC.\n                                          *\n                                          * @static\n                                          *\n                                          * @example\n                                          *\n                                          *     var hmac = CryptoJS.HmacSHA1(message, key);\n                                          */\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n  })();\n\n\n  (function (Math) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Initialization and round constants tables\n    var H = [];\n    var K = [];\n\n    // Compute constants\n    (function () {\n      function isPrime(n) {\n        var sqrtN = Math.sqrt(n);\n        for (var factor = 2; factor <= sqrtN; factor++) {\n          if (!(n % factor)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      function getFractionalBits(n) {\n        return (n - (n | 0)) * 0x100000000 | 0;\n      }\n\n      var n = 2;\n      var nPrime = 0;\n      while (nPrime < 64) {\n        if (isPrime(n)) {\n          if (nPrime < 8) {\n            H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n          }\n          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n          nPrime++;\n        }\n\n        n++;\n      }\n    })();\n\n    // Reusable object\n    var W = [];\n\n    /**\n                 * SHA-256 hash algorithm.\n                 */\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\n      _doReset: function _doReset() {\n        this._hash = new WordArray.init(H.slice(0));\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcut\n        var H = this._hash.words;\n\n        // Working variables\n        var a = H[0];\n        var b = H[1];\n        var c = H[2];\n        var d = H[3];\n        var e = H[4];\n        var f = H[5];\n        var g = H[6];\n        var h = H[7];\n\n        // Computation\n        for (var i = 0; i < 64; i++) {\n          if (i < 16) {\n            W[i] = M[offset + i] | 0;\n          } else {\n            var gamma0x = W[i - 15];\n            var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (\n            gamma0x << 14 | gamma0x >>> 18) ^\n            gamma0x >>> 3;\n\n            var gamma1x = W[i - 2];\n            var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (\n            gamma1x << 13 | gamma1x >>> 19) ^\n            gamma1x >>> 10;\n\n            W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n          }\n\n          var ch = e & f ^ ~e & g;\n          var maj = a & b ^ a & c ^ b & c;\n\n          var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);\n          var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);\n\n          var t1 = h + sigma1 + ch + K[i] + W[i];\n          var t2 = sigma0 + maj;\n\n          h = g;\n          g = f;\n          f = e;\n          e = d + t1 | 0;\n          d = c;\n          c = b;\n          b = a;\n          a = t1 + t2 | 0;\n        }\n\n        // Intermediate hash value\n        H[0] = H[0] + a | 0;\n        H[1] = H[1] + b | 0;\n        H[2] = H[2] + c | 0;\n        H[3] = H[3] + d | 0;\n        H[4] = H[4] + e | 0;\n        H[5] = H[5] + f | 0;\n        H[6] = H[6] + g | 0;\n        H[7] = H[7] + h | 0;\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Return final computed hash\n        return this._hash;\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n      } });\n\n\n    /**\n             * Shortcut function to the hasher's object interface.\n             *\n             * @param {WordArray|string} message The message to hash.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hash = CryptoJS.SHA256('message');\n             *     var hash = CryptoJS.SHA256(wordArray);\n             */\n    C.SHA256 = Hasher._createHelper(SHA256);\n\n    /**\n                                              * Shortcut function to the HMAC's object interface.\n                                              *\n                                              * @param {WordArray|string} message The message to hash.\n                                              * @param {WordArray|string} key The secret key.\n                                              *\n                                              * @return {WordArray} The HMAC.\n                                              *\n                                              * @static\n                                              *\n                                              * @example\n                                              *\n                                              *     var hmac = CryptoJS.HmacSHA256(message, key);\n                                              */\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n  })(Math);\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_algo = C.algo;\n    var SHA256 = C_algo.SHA256;\n\n    /**\n                                 * SHA-224 hash algorithm.\n                                 */\n    var SHA224 = C_algo.SHA224 = SHA256.extend({\n      _doReset: function _doReset() {\n        this._hash = new WordArray.init([\n        0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n        0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);\n\n      },\n\n      _doFinalize: function _doFinalize() {\n        var hash = SHA256._doFinalize.call(this);\n\n        hash.sigBytes -= 4;\n\n        return hash;\n      } });\n\n\n    /**\n             * Shortcut function to the hasher's object interface.\n             *\n             * @param {WordArray|string} message The message to hash.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hash = CryptoJS.SHA224('message');\n             *     var hash = CryptoJS.SHA224(wordArray);\n             */\n    C.SHA224 = SHA256._createHelper(SHA224);\n\n    /**\n                                              * Shortcut function to the HMAC's object interface.\n                                              *\n                                              * @param {WordArray|string} message The message to hash.\n                                              * @param {WordArray|string} key The secret key.\n                                              *\n                                              * @return {WordArray} The HMAC.\n                                              *\n                                              * @static\n                                              *\n                                              * @example\n                                              *\n                                              *     var hmac = CryptoJS.HmacSHA224(message, key);\n                                              */\n    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Hasher = C_lib.Hasher;\n    var C_x64 = C.x64;\n    var X64Word = C_x64.Word;\n    var X64WordArray = C_x64.WordArray;\n    var C_algo = C.algo;\n\n    function X64Word_create() {\n      return X64Word.create.apply(X64Word, arguments);\n    }\n\n    // Constants\n    var K = [\n    X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n    X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n    X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n    X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n    X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n    X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n    X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n    X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n    X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n    X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n    X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n    X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n    X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n    X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n    X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n    X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n    X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n    X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n    X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n    X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n    X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n    X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n    X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n    X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n    X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n    X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n    X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n    X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n    X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n    X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n    X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n    X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n    X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n    X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n    X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n    X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n    X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n    X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n    X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n    X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)];\n\n\n    // Reusable objects\n    var W = [];\n    (function () {\n      for (var i = 0; i < 80; i++) {\n        W[i] = X64Word_create();\n      }\n    })();\n\n    /**\n           * SHA-512 hash algorithm.\n           */\n    var SHA512 = C_algo.SHA512 = Hasher.extend({\n      _doReset: function _doReset() {\n        this._hash = new X64WordArray.init([\n        new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n        new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n        new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n        new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)]);\n\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcuts\n        var H = this._hash.words;\n\n        var H0 = H[0];\n        var H1 = H[1];\n        var H2 = H[2];\n        var H3 = H[3];\n        var H4 = H[4];\n        var H5 = H[5];\n        var H6 = H[6];\n        var H7 = H[7];\n\n        var H0h = H0.high;\n        var H0l = H0.low;\n        var H1h = H1.high;\n        var H1l = H1.low;\n        var H2h = H2.high;\n        var H2l = H2.low;\n        var H3h = H3.high;\n        var H3l = H3.low;\n        var H4h = H4.high;\n        var H4l = H4.low;\n        var H5h = H5.high;\n        var H5l = H5.low;\n        var H6h = H6.high;\n        var H6l = H6.low;\n        var H7h = H7.high;\n        var H7l = H7.low;\n\n        // Working variables\n        var ah = H0h;\n        var al = H0l;\n        var bh = H1h;\n        var bl = H1l;\n        var ch = H2h;\n        var cl = H2l;\n        var dh = H3h;\n        var dl = H3l;\n        var eh = H4h;\n        var el = H4l;\n        var fh = H5h;\n        var fl = H5l;\n        var gh = H6h;\n        var gl = H6l;\n        var hh = H7h;\n        var hl = H7l;\n\n        // Rounds\n        for (var i = 0; i < 80; i++) {\n          var Wil;\n          var Wih;\n\n          // Shortcut\n          var Wi = W[i];\n\n          // Extend message\n          if (i < 16) {\n            Wih = Wi.high = M[offset + i * 2] | 0;\n            Wil = Wi.low = M[offset + i * 2 + 1] | 0;\n          } else {\n            // Gamma0\n            var gamma0x = W[i - 15];\n            var gamma0xh = gamma0x.high;\n            var gamma0xl = gamma0x.low;\n            var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;\n            var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);\n\n            // Gamma1\n            var gamma1x = W[i - 2];\n            var gamma1xh = gamma1x.high;\n            var gamma1xl = gamma1x.low;\n            var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;\n            var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);\n\n            // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n            var Wi7 = W[i - 7];\n            var Wi7h = Wi7.high;\n            var Wi7l = Wi7.low;\n\n            var Wi16 = W[i - 16];\n            var Wi16h = Wi16.high;\n            var Wi16l = Wi16.low;\n\n            Wil = gamma0l + Wi7l;\n            Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);\n            Wil = Wil + gamma1l;\n            Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);\n            Wil = Wil + Wi16l;\n            Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);\n\n            Wi.high = Wih;\n            Wi.low = Wil;\n          }\n\n          var chh = eh & fh ^ ~eh & gh;\n          var chl = el & fl ^ ~el & gl;\n          var majh = ah & bh ^ ah & ch ^ bh & ch;\n          var majl = al & bl ^ al & cl ^ bl & cl;\n\n          var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);\n          var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);\n          var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);\n          var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);\n\n          // t1 = h + sigma1 + ch + K[i] + W[i]\n          var Ki = K[i];\n          var Kih = Ki.high;\n          var Kil = Ki.low;\n\n          var t1l = hl + sigma1l;\n          var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);\n          var t1l = t1l + chl;\n          var t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);\n          var t1l = t1l + Kil;\n          var t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);\n          var t1l = t1l + Wil;\n          var t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);\n\n          // t2 = sigma0 + maj\n          var t2l = sigma0l + majl;\n          var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);\n\n          // Update working variables\n          hh = gh;\n          hl = gl;\n          gh = fh;\n          gl = fl;\n          fh = eh;\n          fl = el;\n          el = dl + t1l | 0;\n          eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;\n          dh = ch;\n          dl = cl;\n          ch = bh;\n          cl = bl;\n          bh = ah;\n          bl = al;\n          al = t1l + t2l | 0;\n          ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;\n        }\n\n        // Intermediate hash value\n        H0l = H0.low = H0l + al;\n        H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);\n        H1l = H1.low = H1l + bl;\n        H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);\n        H2l = H2.low = H2l + cl;\n        H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);\n        H3l = H3.low = H3l + dl;\n        H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);\n        H4l = H4.low = H4l + el;\n        H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);\n        H5l = H5.low = H5l + fl;\n        H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);\n        H6l = H6.low = H6l + gl;\n        H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);\n        H7l = H7.low = H7l + hl;\n        H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n        dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Convert hash to 32-bit word array before returning\n        var hash = this._hash.toX32();\n\n        // Return final computed hash\n        return hash;\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n      },\n\n      blockSize: 1024 / 32 });\n\n\n    /**\n                                * Shortcut function to the hasher's object interface.\n                                *\n                                * @param {WordArray|string} message The message to hash.\n                                *\n                                * @return {WordArray} The hash.\n                                *\n                                * @static\n                                *\n                                * @example\n                                *\n                                *     var hash = CryptoJS.SHA512('message');\n                                *     var hash = CryptoJS.SHA512(wordArray);\n                                */\n    C.SHA512 = Hasher._createHelper(SHA512);\n\n    /**\n                                              * Shortcut function to the HMAC's object interface.\n                                              *\n                                              * @param {WordArray|string} message The message to hash.\n                                              * @param {WordArray|string} key The secret key.\n                                              *\n                                              * @return {WordArray} The HMAC.\n                                              *\n                                              * @static\n                                              *\n                                              * @example\n                                              *\n                                              *     var hmac = CryptoJS.HmacSHA512(message, key);\n                                              */\n    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_x64 = C.x64;\n    var X64Word = C_x64.Word;\n    var X64WordArray = C_x64.WordArray;\n    var C_algo = C.algo;\n    var SHA512 = C_algo.SHA512;\n\n    /**\n                                 * SHA-384 hash algorithm.\n                                 */\n    var SHA384 = C_algo.SHA384 = SHA512.extend({\n      _doReset: function _doReset() {\n        this._hash = new X64WordArray.init([\n        new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n        new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n        new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n        new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)]);\n\n      },\n\n      _doFinalize: function _doFinalize() {\n        var hash = SHA512._doFinalize.call(this);\n\n        hash.sigBytes -= 16;\n\n        return hash;\n      } });\n\n\n    /**\n             * Shortcut function to the hasher's object interface.\n             *\n             * @param {WordArray|string} message The message to hash.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hash = CryptoJS.SHA384('message');\n             *     var hash = CryptoJS.SHA384(wordArray);\n             */\n    C.SHA384 = SHA512._createHelper(SHA384);\n\n    /**\n                                              * Shortcut function to the HMAC's object interface.\n                                              *\n                                              * @param {WordArray|string} message The message to hash.\n                                              * @param {WordArray|string} key The secret key.\n                                              *\n                                              * @return {WordArray} The HMAC.\n                                              *\n                                              * @static\n                                              *\n                                              * @example\n                                              *\n                                              *     var hmac = CryptoJS.HmacSHA384(message, key);\n                                              */\n    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n  })();\n\n\n  (function (Math) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_x64 = C.x64;\n    var X64Word = C_x64.Word;\n    var C_algo = C.algo;\n\n    // Constants tables\n    var RHO_OFFSETS = [];\n    var PI_INDEXES = [];\n    var ROUND_CONSTANTS = [];\n\n    // Compute Constants\n    (function () {\n      // Compute rho offset constants\n      var x = 1,y = 0;\n      for (var t = 0; t < 24; t++) {\n        RHO_OFFSETS[x + 5 * y] = (t + 1) * (t + 2) / 2 % 64;\n\n        var newX = y % 5;\n        var newY = (2 * x + 3 * y) % 5;\n        x = newX;\n        y = newY;\n      }\n\n      // Compute pi index constants\n      for (var x = 0; x < 5; x++) {\n        for (var y = 0; y < 5; y++) {\n          PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;\n        }\n      }\n\n      // Compute round constants\n      var LFSR = 0x01;\n      for (var i = 0; i < 24; i++) {\n        var roundConstantMsw = 0;\n        var roundConstantLsw = 0;\n\n        for (var j = 0; j < 7; j++) {\n          if (LFSR & 0x01) {\n            var bitPosition = (1 << j) - 1;\n            if (bitPosition < 32) {\n              roundConstantLsw ^= 1 << bitPosition;\n            } else /* if (bitPosition >= 32) */{\n                roundConstantMsw ^= 1 << bitPosition - 32;\n              }\n          }\n\n          // Compute next LFSR\n          if (LFSR & 0x80) {\n            // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n            LFSR = LFSR << 1 ^ 0x71;\n          } else {\n            LFSR <<= 1;\n          }\n        }\n\n        ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n      }\n    })();\n\n    // Reusable objects for temporary values\n    var T = [];\n    (function () {\n      for (var i = 0; i < 25; i++) {\n        T[i] = X64Word.create();\n      }\n    })();\n\n    /**\n           * SHA-3 hash algorithm.\n           */\n    var SHA3 = C_algo.SHA3 = Hasher.extend({\n      /**\n                                              * Configuration options.\n                                              *\n                                              * @property {number} outputLength\n                                              *   The desired number of bits in the output hash.\n                                              *   Only values permitted are: 224, 256, 384, 512.\n                                              *   Default: 512\n                                              */\n      cfg: Hasher.cfg.extend({\n        outputLength: 512 }),\n\n\n      _doReset: function _doReset() {\n        var state = this._state = [];\n        for (var i = 0; i < 25; i++) {\n          state[i] = new X64Word.init();\n        }\n\n        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcuts\n        var state = this._state;\n        var nBlockSizeLanes = this.blockSize / 2;\n\n        // Absorb\n        for (var i = 0; i < nBlockSizeLanes; i++) {\n          // Shortcuts\n          var M2i = M[offset + 2 * i];\n          var M2i1 = M[offset + 2 * i + 1];\n\n          // Swap endian\n          M2i =\n          (M2i << 8 | M2i >>> 24) & 0x00ff00ff |\n          (M2i << 24 | M2i >>> 8) & 0xff00ff00;\n\n          M2i1 =\n          (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff |\n          (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;\n\n\n          // Absorb message into state\n          var lane = state[i];\n          lane.high ^= M2i1;\n          lane.low ^= M2i;\n        }\n\n        // Rounds\n        for (var round = 0; round < 24; round++) {\n          // Theta\n          for (var x = 0; x < 5; x++) {\n            // Mix column lanes\n            var tMsw = 0,tLsw = 0;\n            for (var y = 0; y < 5; y++) {\n              var lane = state[x + 5 * y];\n              tMsw ^= lane.high;\n              tLsw ^= lane.low;\n            }\n\n            // Temporary values\n            var Tx = T[x];\n            Tx.high = tMsw;\n            Tx.low = tLsw;\n          }\n          for (var x = 0; x < 5; x++) {\n            // Shortcuts\n            var Tx4 = T[(x + 4) % 5];\n            var Tx1 = T[(x + 1) % 5];\n            var Tx1Msw = Tx1.high;\n            var Tx1Lsw = Tx1.low;\n\n            // Mix surrounding columns\n            var tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);\n            var tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);\n            for (var y = 0; y < 5; y++) {\n              var lane = state[x + 5 * y];\n              lane.high ^= tMsw;\n              lane.low ^= tLsw;\n            }\n          }\n\n          // Rho Pi\n          for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n            var tMsw;\n            var tLsw;\n\n            // Shortcuts\n            var lane = state[laneIndex];\n            var laneMsw = lane.high;\n            var laneLsw = lane.low;\n            var rhoOffset = RHO_OFFSETS[laneIndex];\n\n            // Rotate lanes\n            if (rhoOffset < 32) {\n              tMsw = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;\n              tLsw = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;\n            } else /* if (rhoOffset >= 32) */{\n                tMsw = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;\n                tLsw = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;\n              }\n\n            // Transpose lanes\n            var TPiLane = T[PI_INDEXES[laneIndex]];\n            TPiLane.high = tMsw;\n            TPiLane.low = tLsw;\n          }\n\n          // Rho pi at x = y = 0\n          var T0 = T[0];\n          var state0 = state[0];\n          T0.high = state0.high;\n          T0.low = state0.low;\n\n          // Chi\n          for (var x = 0; x < 5; x++) {\n            for (var y = 0; y < 5; y++) {\n              // Shortcuts\n              var laneIndex = x + 5 * y;\n              var lane = state[laneIndex];\n              var TLane = T[laneIndex];\n              var Tx1Lane = T[(x + 1) % 5 + 5 * y];\n              var Tx2Lane = T[(x + 2) % 5 + 5 * y];\n\n              // Mix rows\n              lane.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;\n              lane.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;\n            }\n          }\n\n          // Iota\n          var lane = state[0];\n          var roundConstant = ROUND_CONSTANTS[round];\n          lane.high ^= roundConstant.high;\n          lane.low ^= roundConstant.low;\n        }\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n        var blockSizeBits = this.blockSize * 32;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;\n        dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;\n        data.sigBytes = dataWords.length * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Shortcuts\n        var state = this._state;\n        var outputLengthBytes = this.cfg.outputLength / 8;\n        var outputLengthLanes = outputLengthBytes / 8;\n\n        // Squeeze\n        var hashWords = [];\n        for (var i = 0; i < outputLengthLanes; i++) {\n          // Shortcuts\n          var lane = state[i];\n          var laneMsw = lane.high;\n          var laneLsw = lane.low;\n\n          // Swap endian\n          laneMsw =\n          (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff |\n          (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;\n\n          laneLsw =\n          (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff |\n          (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;\n\n\n          // Squeeze state to retrieve hash\n          hashWords.push(laneLsw);\n          hashWords.push(laneMsw);\n        }\n\n        // Return final computed hash\n        return new WordArray.init(hashWords, outputLengthBytes);\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n\n        var state = clone._state = this._state.slice(0);\n        for (var i = 0; i < 25; i++) {\n          state[i] = state[i].clone();\n        }\n\n        return clone;\n      } });\n\n\n    /**\n             * Shortcut function to the hasher's object interface.\n             *\n             * @param {WordArray|string} message The message to hash.\n             *\n             * @return {WordArray} The hash.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var hash = CryptoJS.SHA3('message');\n             *     var hash = CryptoJS.SHA3(wordArray);\n             */\n    C.SHA3 = Hasher._createHelper(SHA3);\n\n    /**\n                                          * Shortcut function to the HMAC's object interface.\n                                          *\n                                          * @param {WordArray|string} message The message to hash.\n                                          * @param {WordArray|string} key The secret key.\n                                          *\n                                          * @return {WordArray} The HMAC.\n                                          *\n                                          * @static\n                                          *\n                                          * @example\n                                          *\n                                          *     var hmac = CryptoJS.HmacSHA3(message, key);\n                                          */\n    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n  })(Math);\n\n\n  /** @preserve\n            (c) 2012 by Cédric Mesnil. All rights reserved.\n            \tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n            \t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n                - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n            \tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n            */\n\n\n\n\n  (function (Math) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Constants table\n    var _zl = WordArray.create([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);\n    var _zr = WordArray.create([\n    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);\n    var _sl = WordArray.create([\n    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);\n    var _sr = WordArray.create([\n    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);\n\n    var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n    var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n    /**\n                                                                                               * RIPEMD160 hash algorithm.\n                                                                                               */\n    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n      _doReset: function _doReset() {\n        this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n\n        // Swap endian\n        for (var i = 0; i < 16; i++) {\n          // Shortcuts\n          var offset_i = offset + i;\n          var M_offset_i = M[offset_i];\n\n          // Swap\n          M[offset_i] =\n          (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff |\n          (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;\n\n        }\n        // Shortcut\n        var H = this._hash.words;\n        var hl = _hl.words;\n        var hr = _hr.words;\n        var zl = _zl.words;\n        var zr = _zr.words;\n        var sl = _sl.words;\n        var sr = _sr.words;\n\n        // Working variables\n        var al, bl, cl, dl, el;\n        var ar, br, cr, dr, er;\n\n        ar = al = H[0];\n        br = bl = H[1];\n        cr = cl = H[2];\n        dr = dl = H[3];\n        er = el = H[4];\n        // Computation\n        var t;\n        for (var i = 0; i < 80; i += 1) {\n          t = al + M[offset + zl[i]] | 0;\n          if (i < 16) {\n            t += f1(bl, cl, dl) + hl[0];\n          } else if (i < 32) {\n            t += f2(bl, cl, dl) + hl[1];\n          } else if (i < 48) {\n            t += f3(bl, cl, dl) + hl[2];\n          } else if (i < 64) {\n            t += f4(bl, cl, dl) + hl[3];\n          } else {// if (i<80) {\n            t += f5(bl, cl, dl) + hl[4];\n          }\n          t = t | 0;\n          t = rotl(t, sl[i]);\n          t = t + el | 0;\n          al = el;\n          el = dl;\n          dl = rotl(cl, 10);\n          cl = bl;\n          bl = t;\n\n          t = ar + M[offset + zr[i]] | 0;\n          if (i < 16) {\n            t += f5(br, cr, dr) + hr[0];\n          } else if (i < 32) {\n            t += f4(br, cr, dr) + hr[1];\n          } else if (i < 48) {\n            t += f3(br, cr, dr) + hr[2];\n          } else if (i < 64) {\n            t += f2(br, cr, dr) + hr[3];\n          } else {// if (i<80) {\n            t += f1(br, cr, dr) + hr[4];\n          }\n          t = t | 0;\n          t = rotl(t, sr[i]);\n          t = t + er | 0;\n          ar = er;\n          er = dr;\n          dr = rotl(cr, 10);\n          cr = br;\n          br = t;\n        }\n        // Intermediate hash value\n        t = H[1] + cl + dr | 0;\n        H[1] = H[2] + dl + er | 0;\n        H[2] = H[3] + el + ar | 0;\n        H[3] = H[4] + al + br | 0;\n        H[4] = H[0] + bl + cr | 0;\n        H[0] = t;\n      },\n\n      _doFinalize: function _doFinalize() {\n        // Shortcuts\n        var data = this._data;\n        var dataWords = data.words;\n\n        var nBitsTotal = this._nDataBytes * 8;\n        var nBitsLeft = data.sigBytes * 8;\n\n        // Add padding\n        dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n        dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] =\n        (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff |\n        (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;\n\n        data.sigBytes = (dataWords.length + 1) * 4;\n\n        // Hash final blocks\n        this._process();\n\n        // Shortcuts\n        var hash = this._hash;\n        var H = hash.words;\n\n        // Swap endian\n        for (var i = 0; i < 5; i++) {\n          // Shortcut\n          var H_i = H[i];\n\n          // Swap\n          H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff |\n          (H_i << 24 | H_i >>> 8) & 0xff00ff00;\n        }\n\n        // Return final computed hash\n        return hash;\n      },\n\n      clone: function clone() {\n        var clone = Hasher.clone.call(this);\n        clone._hash = this._hash.clone();\n\n        return clone;\n      } });\n\n\n\n    function f1(x, y, z) {\n      return x ^ y ^ z;\n\n    }\n\n    function f2(x, y, z) {\n      return x & y | ~x & z;\n    }\n\n    function f3(x, y, z) {\n      return (x | ~y) ^ z;\n    }\n\n    function f4(x, y, z) {\n      return x & z | y & ~z;\n    }\n\n    function f5(x, y, z) {\n      return x ^ (y | ~z);\n\n    }\n\n    function rotl(x, n) {\n      return x << n | x >>> 32 - n;\n    }\n\n\n    /**\n       * Shortcut function to the hasher's object interface.\n       *\n       * @param {WordArray|string} message The message to hash.\n       *\n       * @return {WordArray} The hash.\n       *\n       * @static\n       *\n       * @example\n       *\n       *     var hash = CryptoJS.RIPEMD160('message');\n       *     var hash = CryptoJS.RIPEMD160(wordArray);\n       */\n    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n    /**\n                                                    * Shortcut function to the HMAC's object interface.\n                                                    *\n                                                    * @param {WordArray|string} message The message to hash.\n                                                    * @param {WordArray|string} key The secret key.\n                                                    *\n                                                    * @return {WordArray} The HMAC.\n                                                    *\n                                                    * @static\n                                                    *\n                                                    * @example\n                                                    *\n                                                    *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n                                                    */\n    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n  })(Math);\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var C_algo = C.algo;\n\n    /**\n                          * HMAC algorithm.\n                          */\n    var HMAC = C_algo.HMAC = Base.extend({\n      /**\n                                            * Initializes a newly created HMAC.\n                                            *\n                                            * @param {Hasher} hasher The hash algorithm to use.\n                                            * @param {WordArray|string} key The secret key.\n                                            *\n                                            * @example\n                                            *\n                                            *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n                                            */\n      init: function init(hasher, key) {\n        // Init hasher\n        hasher = this._hasher = new hasher.init();\n\n        // Convert string to WordArray, else assume WordArray already\n        if (typeof key == 'string') {\n          key = Utf8.parse(key);\n        }\n\n        // Shortcuts\n        var hasherBlockSize = hasher.blockSize;\n        var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n        // Allow arbitrary length keys\n        if (key.sigBytes > hasherBlockSizeBytes) {\n          key = hasher.finalize(key);\n        }\n\n        // Clamp excess bits\n        key.clamp();\n\n        // Clone key for inner and outer pads\n        var oKey = this._oKey = key.clone();\n        var iKey = this._iKey = key.clone();\n\n        // Shortcuts\n        var oKeyWords = oKey.words;\n        var iKeyWords = iKey.words;\n\n        // XOR keys with pad constants\n        for (var i = 0; i < hasherBlockSize; i++) {\n          oKeyWords[i] ^= 0x5c5c5c5c;\n          iKeyWords[i] ^= 0x36363636;\n        }\n        oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n        // Set initial values\n        this.reset();\n      },\n\n      /**\n          * Resets this HMAC to its initial state.\n          *\n          * @example\n          *\n          *     hmacHasher.reset();\n          */\n      reset: function reset() {\n        // Shortcut\n        var hasher = this._hasher;\n\n        // Reset\n        hasher.reset();\n        hasher.update(this._iKey);\n      },\n\n      /**\n          * Updates this HMAC with a message.\n          *\n          * @param {WordArray|string} messageUpdate The message to append.\n          *\n          * @return {HMAC} This HMAC instance.\n          *\n          * @example\n          *\n          *     hmacHasher.update('message');\n          *     hmacHasher.update(wordArray);\n          */\n      update: function update(messageUpdate) {\n        this._hasher.update(messageUpdate);\n\n        // Chainable\n        return this;\n      },\n\n      /**\n          * Finalizes the HMAC computation.\n          * Note that the finalize operation is effectively a destructive, read-once operation.\n          *\n          * @param {WordArray|string} messageUpdate (Optional) A final message update.\n          *\n          * @return {WordArray} The HMAC.\n          *\n          * @example\n          *\n          *     var hmac = hmacHasher.finalize();\n          *     var hmac = hmacHasher.finalize('message');\n          *     var hmac = hmacHasher.finalize(wordArray);\n          */\n      finalize: function finalize(messageUpdate) {\n        // Shortcut\n        var hasher = this._hasher;\n\n        // Compute HMAC\n        var innerHash = hasher.finalize(messageUpdate);\n        hasher.reset();\n        var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n        return hmac;\n      } });\n\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var WordArray = C_lib.WordArray;\n    var C_algo = C.algo;\n    var SHA1 = C_algo.SHA1;\n    var HMAC = C_algo.HMAC;\n\n    /**\n                             * Password-Based Key Derivation Function 2 algorithm.\n                             */\n    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n      /**\n                                                * Configuration options.\n                                                *\n                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n                                                * @property {Hasher} hasher The hasher to use. Default: SHA1\n                                                * @property {number} iterations The number of iterations to perform. Default: 1\n                                                */\n      cfg: Base.extend({\n        keySize: 128 / 32,\n        hasher: SHA1,\n        iterations: 1 }),\n\n\n      /**\n                           * Initializes a newly created key derivation function.\n                           *\n                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n                           *\n                           * @example\n                           *\n                           *     var kdf = CryptoJS.algo.PBKDF2.create();\n                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n                           *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n                           */\n      init: function init(cfg) {\n        this.cfg = this.cfg.extend(cfg);\n      },\n\n      /**\n          * Computes the Password-Based Key Derivation Function 2.\n          *\n          * @param {WordArray|string} password The password.\n          * @param {WordArray|string} salt A salt.\n          *\n          * @return {WordArray} The derived key.\n          *\n          * @example\n          *\n          *     var key = kdf.compute(password, salt);\n          */\n      compute: function compute(password, salt) {\n        // Shortcut\n        var cfg = this.cfg;\n\n        // Init HMAC\n        var hmac = HMAC.create(cfg.hasher, password);\n\n        // Initial values\n        var derivedKey = WordArray.create();\n        var blockIndex = WordArray.create([0x00000001]);\n\n        // Shortcuts\n        var derivedKeyWords = derivedKey.words;\n        var blockIndexWords = blockIndex.words;\n        var keySize = cfg.keySize;\n        var iterations = cfg.iterations;\n\n        // Generate key\n        while (derivedKeyWords.length < keySize) {\n          var block = hmac.update(salt).finalize(blockIndex);\n          hmac.reset();\n\n          // Shortcuts\n          var blockWords = block.words;\n          var blockWordsLength = blockWords.length;\n\n          // Iterations\n          var intermediate = block;\n          for (var i = 1; i < iterations; i++) {\n            intermediate = hmac.finalize(intermediate);\n            hmac.reset();\n\n            // Shortcut\n            var intermediateWords = intermediate.words;\n\n            // XOR intermediate with block\n            for (var j = 0; j < blockWordsLength; j++) {\n              blockWords[j] ^= intermediateWords[j];\n            }\n          }\n\n          derivedKey.concat(block);\n          blockIndexWords[0]++;\n        }\n        derivedKey.sigBytes = keySize * 4;\n\n        return derivedKey;\n      } });\n\n\n    /**\n             * Computes the Password-Based Key Derivation Function 2.\n             *\n             * @param {WordArray|string} password The password.\n             * @param {WordArray|string} salt A salt.\n             * @param {Object} cfg (Optional) The configuration options to use for this computation.\n             *\n             * @return {WordArray} The derived key.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var key = CryptoJS.PBKDF2(password, salt);\n             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n             *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n             */\n    C.PBKDF2 = function (password, salt, cfg) {\n      return PBKDF2.create(cfg).compute(password, salt);\n    };\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var WordArray = C_lib.WordArray;\n    var C_algo = C.algo;\n    var MD5 = C_algo.MD5;\n\n    /**\n                           * This key derivation function is meant to conform with EVP_BytesToKey.\n                           * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n                           */\n    var EvpKDF = C_algo.EvpKDF = Base.extend({\n      /**\n                                                * Configuration options.\n                                                *\n                                                * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n                                                * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n                                                * @property {number} iterations The number of iterations to perform. Default: 1\n                                                */\n      cfg: Base.extend({\n        keySize: 128 / 32,\n        hasher: MD5,\n        iterations: 1 }),\n\n\n      /**\n                           * Initializes a newly created key derivation function.\n                           *\n                           * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n                           *\n                           * @example\n                           *\n                           *     var kdf = CryptoJS.algo.EvpKDF.create();\n                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n                           *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n                           */\n      init: function init(cfg) {\n        this.cfg = this.cfg.extend(cfg);\n      },\n\n      /**\n          * Derives a key from a password.\n          *\n          * @param {WordArray|string} password The password.\n          * @param {WordArray|string} salt A salt.\n          *\n          * @return {WordArray} The derived key.\n          *\n          * @example\n          *\n          *     var key = kdf.compute(password, salt);\n          */\n      compute: function compute(password, salt) {\n        var block;\n\n        // Shortcut\n        var cfg = this.cfg;\n\n        // Init hasher\n        var hasher = cfg.hasher.create();\n\n        // Initial values\n        var derivedKey = WordArray.create();\n\n        // Shortcuts\n        var derivedKeyWords = derivedKey.words;\n        var keySize = cfg.keySize;\n        var iterations = cfg.iterations;\n\n        // Generate key\n        while (derivedKeyWords.length < keySize) {\n          if (block) {\n            hasher.update(block);\n          }\n          block = hasher.update(password).finalize(salt);\n          hasher.reset();\n\n          // Iterations\n          for (var i = 1; i < iterations; i++) {\n            block = hasher.finalize(block);\n            hasher.reset();\n          }\n\n          derivedKey.concat(block);\n        }\n        derivedKey.sigBytes = keySize * 4;\n\n        return derivedKey;\n      } });\n\n\n    /**\n             * Derives a key from a password.\n             *\n             * @param {WordArray|string} password The password.\n             * @param {WordArray|string} salt A salt.\n             * @param {Object} cfg (Optional) The configuration options to use for this computation.\n             *\n             * @return {WordArray} The derived key.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var key = CryptoJS.EvpKDF(password, salt);\n             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n             *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n             */\n    C.EvpKDF = function (password, salt, cfg) {\n      return EvpKDF.create(cfg).compute(password, salt);\n    };\n  })();\n\n\n  /**\n         * Cipher core components.\n         */\n  CryptoJS.lib.Cipher || function (undefined) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var WordArray = C_lib.WordArray;\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var Base64 = C_enc.Base64;\n    var C_algo = C.algo;\n    var EvpKDF = C_algo.EvpKDF;\n\n    /**\n                                 * Abstract base cipher template.\n                                 *\n                                 * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n                                 * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n                                 * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n                                 * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n                                 */\n    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n      /**\n                                                                 * Configuration options.\n                                                                 *\n                                                                 * @property {WordArray} iv The IV to use for this operation.\n                                                                 */\n      cfg: Base.extend(),\n\n      /**\n                           * Creates this cipher in encryption mode.\n                           *\n                           * @param {WordArray} key The key.\n                           * @param {Object} cfg (Optional) The configuration options to use for this operation.\n                           *\n                           * @return {Cipher} A cipher instance.\n                           *\n                           * @static\n                           *\n                           * @example\n                           *\n                           *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n                           */\n      createEncryptor: function createEncryptor(key, cfg) {\n        return this.create(this._ENC_XFORM_MODE, key, cfg);\n      },\n\n      /**\n          * Creates this cipher in decryption mode.\n          *\n          * @param {WordArray} key The key.\n          * @param {Object} cfg (Optional) The configuration options to use for this operation.\n          *\n          * @return {Cipher} A cipher instance.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n          */\n      createDecryptor: function createDecryptor(key, cfg) {\n        return this.create(this._DEC_XFORM_MODE, key, cfg);\n      },\n\n      /**\n          * Initializes a newly created cipher.\n          *\n          * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n          * @param {WordArray} key The key.\n          * @param {Object} cfg (Optional) The configuration options to use for this operation.\n          *\n          * @example\n          *\n          *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n          */\n      init: function init(xformMode, key, cfg) {\n        // Apply config defaults\n        this.cfg = this.cfg.extend(cfg);\n\n        // Store transform mode and key\n        this._xformMode = xformMode;\n        this._key = key;\n\n        // Set initial values\n        this.reset();\n      },\n\n      /**\n          * Resets this cipher to its initial state.\n          *\n          * @example\n          *\n          *     cipher.reset();\n          */\n      reset: function reset() {\n        // Reset data buffer\n        BufferedBlockAlgorithm.reset.call(this);\n\n        // Perform concrete-cipher logic\n        this._doReset();\n      },\n\n      /**\n          * Adds data to be encrypted or decrypted.\n          *\n          * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n          *\n          * @return {WordArray} The data after processing.\n          *\n          * @example\n          *\n          *     var encrypted = cipher.process('data');\n          *     var encrypted = cipher.process(wordArray);\n          */\n      process: function process(dataUpdate) {\n        // Append\n        this._append(dataUpdate);\n\n        // Process available blocks\n        return this._process();\n      },\n\n      /**\n          * Finalizes the encryption or decryption process.\n          * Note that the finalize operation is effectively a destructive, read-once operation.\n          *\n          * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n          *\n          * @return {WordArray} The data after final processing.\n          *\n          * @example\n          *\n          *     var encrypted = cipher.finalize();\n          *     var encrypted = cipher.finalize('data');\n          *     var encrypted = cipher.finalize(wordArray);\n          */\n      finalize: function finalize(dataUpdate) {\n        // Final data update\n        if (dataUpdate) {\n          this._append(dataUpdate);\n        }\n\n        // Perform concrete-cipher logic\n        var finalProcessedData = this._doFinalize();\n\n        return finalProcessedData;\n      },\n\n      keySize: 128 / 32,\n\n      ivSize: 128 / 32,\n\n      _ENC_XFORM_MODE: 1,\n\n      _DEC_XFORM_MODE: 2,\n\n      /**\n                           * Creates shortcut functions to a cipher's object interface.\n                           *\n                           * @param {Cipher} cipher The cipher to create a helper for.\n                           *\n                           * @return {Object} An object with encrypt and decrypt shortcut functions.\n                           *\n                           * @static\n                           *\n                           * @example\n                           *\n                           *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n                           */\n      _createHelper: function () {\n        function selectCipherStrategy(key) {\n          if (typeof key == 'string') {\n            return PasswordBasedCipher;\n          } else {\n            return SerializableCipher;\n          }\n        }\n\n        return function (cipher) {\n          return {\n            encrypt: function encrypt(message, key, cfg) {\n              return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n            },\n\n            decrypt: function decrypt(ciphertext, key, cfg) {\n              return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n            } };\n\n        };\n      }() });\n\n\n    /**\n               * Abstract base stream cipher template.\n               *\n               * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n               */\n    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n      _doFinalize: function _doFinalize() {\n        // Process partial blocks\n        var finalProcessedBlocks = this._process(!!'flush');\n\n        return finalProcessedBlocks;\n      },\n\n      blockSize: 1 });\n\n\n    /**\n                        * Mode namespace.\n                        */\n    var C_mode = C.mode = {};\n\n    /**\n                               * Abstract base block cipher mode template.\n                               */\n    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n      /**\n                                                                 * Creates this mode for encryption.\n                                                                 *\n                                                                 * @param {Cipher} cipher A block cipher instance.\n                                                                 * @param {Array} iv The IV words.\n                                                                 *\n                                                                 * @static\n                                                                 *\n                                                                 * @example\n                                                                 *\n                                                                 *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n                                                                 */\n      createEncryptor: function createEncryptor(cipher, iv) {\n        return this.Encryptor.create(cipher, iv);\n      },\n\n      /**\n          * Creates this mode for decryption.\n          *\n          * @param {Cipher} cipher A block cipher instance.\n          * @param {Array} iv The IV words.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n          */\n      createDecryptor: function createDecryptor(cipher, iv) {\n        return this.Decryptor.create(cipher, iv);\n      },\n\n      /**\n          * Initializes a newly created mode.\n          *\n          * @param {Cipher} cipher A block cipher instance.\n          * @param {Array} iv The IV words.\n          *\n          * @example\n          *\n          *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n          */\n      init: function init(cipher, iv) {\n        this._cipher = cipher;\n        this._iv = iv;\n      } });\n\n\n    /**\n             * Cipher Block Chaining mode.\n             */\n    var CBC = C_mode.CBC = function () {\n      /**\n                                         * Abstract base CBC mode.\n                                         */\n      var CBC = BlockCipherMode.extend();\n\n      /**\n                                           * CBC encryptor.\n                                           */\n      CBC.Encryptor = CBC.extend({\n        /**\n                                    * Processes the data block at offset.\n                                    *\n                                    * @param {Array} words The data words to operate on.\n                                    * @param {number} offset The offset where the block starts.\n                                    *\n                                    * @example\n                                    *\n                                    *     mode.processBlock(data.words, offset);\n                                    */\n        processBlock: function processBlock(words, offset) {\n          // Shortcuts\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n\n          // XOR and encrypt\n          xorBlock.call(this, words, offset, blockSize);\n          cipher.encryptBlock(words, offset);\n\n          // Remember this block to use with next block\n          this._prevBlock = words.slice(offset, offset + blockSize);\n        } });\n\n\n      /**\n               * CBC decryptor.\n               */\n      CBC.Decryptor = CBC.extend({\n        /**\n                                    * Processes the data block at offset.\n                                    *\n                                    * @param {Array} words The data words to operate on.\n                                    * @param {number} offset The offset where the block starts.\n                                    *\n                                    * @example\n                                    *\n                                    *     mode.processBlock(data.words, offset);\n                                    */\n        processBlock: function processBlock(words, offset) {\n          // Shortcuts\n          var cipher = this._cipher;\n          var blockSize = cipher.blockSize;\n\n          // Remember this block to use with next block\n          var thisBlock = words.slice(offset, offset + blockSize);\n\n          // Decrypt and XOR\n          cipher.decryptBlock(words, offset);\n          xorBlock.call(this, words, offset, blockSize);\n\n          // This block becomes the previous block\n          this._prevBlock = thisBlock;\n        } });\n\n\n      function xorBlock(words, offset, blockSize) {\n        var block;\n\n        // Shortcut\n        var iv = this._iv;\n\n        // Choose mixing block\n        if (iv) {\n          block = iv;\n\n          // Remove IV for subsequent blocks\n          this._iv = undefined;\n        } else {\n          block = this._prevBlock;\n        }\n\n        // XOR blocks\n        for (var i = 0; i < blockSize; i++) {\n          words[offset + i] ^= block[i];\n        }\n      }\n\n      return CBC;\n    }();\n\n    /**\n          * Padding namespace.\n          */\n    var C_pad = C.pad = {};\n\n    /**\n                             * PKCS #5/7 padding strategy.\n                             */\n    var Pkcs7 = C_pad.Pkcs7 = {\n      /**\n                                 * Pads data using the algorithm defined in PKCS #5/7.\n                                 *\n                                 * @param {WordArray} data The data to pad.\n                                 * @param {number} blockSize The multiple that the data should be padded to.\n                                 *\n                                 * @static\n                                 *\n                                 * @example\n                                 *\n                                 *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n                                 */\n      pad: function pad(data, blockSize) {\n        // Shortcut\n        var blockSizeBytes = blockSize * 4;\n\n        // Count padding bytes\n        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n        // Create padding word\n        var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;\n\n        // Create padding\n        var paddingWords = [];\n        for (var i = 0; i < nPaddingBytes; i += 4) {\n          paddingWords.push(paddingWord);\n        }\n        var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n        // Add padding\n        data.concat(padding);\n      },\n\n      /**\n          * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n          *\n          * @param {WordArray} data The data to unpad.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n          */\n      unpad: function unpad(data) {\n        // Get number of padding bytes from last byte\n        var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\n\n        // Remove padding\n        data.sigBytes -= nPaddingBytes;\n      } };\n\n\n    /**\n            * Abstract base block cipher template.\n            *\n            * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n            */\n    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n      /**\n                                                           * Configuration options.\n                                                           *\n                                                           * @property {Mode} mode The block mode to use. Default: CBC\n                                                           * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n                                                           */\n      cfg: Cipher.cfg.extend({\n        mode: CBC,\n        padding: Pkcs7 }),\n\n\n      reset: function reset() {\n        var modeCreator;\n\n        // Reset cipher\n        Cipher.reset.call(this);\n\n        // Shortcuts\n        var cfg = this.cfg;\n        var iv = cfg.iv;\n        var mode = cfg.mode;\n\n        // Reset block mode\n        if (this._xformMode == this._ENC_XFORM_MODE) {\n          modeCreator = mode.createEncryptor;\n        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{\n            modeCreator = mode.createDecryptor;\n            // Keep at least one block in the buffer for unpadding\n            this._minBufferSize = 1;\n          }\n\n        if (this._mode && this._mode.__creator == modeCreator) {\n          this._mode.init(this, iv && iv.words);\n        } else {\n          this._mode = modeCreator.call(mode, this, iv && iv.words);\n          this._mode.__creator = modeCreator;\n        }\n      },\n\n      _doProcessBlock: function _doProcessBlock(words, offset) {\n        this._mode.processBlock(words, offset);\n      },\n\n      _doFinalize: function _doFinalize() {\n        var finalProcessedBlocks;\n\n        // Shortcut\n        var padding = this.cfg.padding;\n\n        // Finalize\n        if (this._xformMode == this._ENC_XFORM_MODE) {\n          // Pad data\n          padding.pad(this._data, this.blockSize);\n\n          // Process final blocks\n          finalProcessedBlocks = this._process(!!'flush');\n        } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{\n            // Process final blocks\n            finalProcessedBlocks = this._process(!!'flush');\n\n            // Unpad data\n            padding.unpad(finalProcessedBlocks);\n          }\n\n        return finalProcessedBlocks;\n      },\n\n      blockSize: 128 / 32 });\n\n\n    /**\n                               * A collection of cipher parameters.\n                               *\n                               * @property {WordArray} ciphertext The raw ciphertext.\n                               * @property {WordArray} key The key to this ciphertext.\n                               * @property {WordArray} iv The IV used in the ciphering operation.\n                               * @property {WordArray} salt The salt used with a key derivation function.\n                               * @property {Cipher} algorithm The cipher algorithm.\n                               * @property {Mode} mode The block mode used in the ciphering operation.\n                               * @property {Padding} padding The padding scheme used in the ciphering operation.\n                               * @property {number} blockSize The block size of the cipher.\n                               * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n                               */\n    var CipherParams = C_lib.CipherParams = Base.extend({\n      /**\n                                                           * Initializes a newly created cipher params object.\n                                                           *\n                                                           * @param {Object} cipherParams An object with any of the possible cipher parameters.\n                                                           *\n                                                           * @example\n                                                           *\n                                                           *     var cipherParams = CryptoJS.lib.CipherParams.create({\n                                                           *         ciphertext: ciphertextWordArray,\n                                                           *         key: keyWordArray,\n                                                           *         iv: ivWordArray,\n                                                           *         salt: saltWordArray,\n                                                           *         algorithm: CryptoJS.algo.AES,\n                                                           *         mode: CryptoJS.mode.CBC,\n                                                           *         padding: CryptoJS.pad.PKCS7,\n                                                           *         blockSize: 4,\n                                                           *         formatter: CryptoJS.format.OpenSSL\n                                                           *     });\n                                                           */\n      init: function init(cipherParams) {\n        this.mixIn(cipherParams);\n      },\n\n      /**\n          * Converts this cipher params object to a string.\n          *\n          * @param {Format} formatter (Optional) The formatting strategy to use.\n          *\n          * @return {string} The stringified cipher params.\n          *\n          * @throws Error If neither the formatter nor the default formatter is set.\n          *\n          * @example\n          *\n          *     var string = cipherParams + '';\n          *     var string = cipherParams.toString();\n          *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n          */\n      toString: function toString(formatter) {\n        return (formatter || this.formatter).stringify(this);\n      } });\n\n\n    /**\n             * Format namespace.\n             */\n    var C_format = C.format = {};\n\n    /**\n                                   * OpenSSL formatting strategy.\n                                   */\n    var OpenSSLFormatter = C_format.OpenSSL = {\n      /**\n                                                 * Converts a cipher params object to an OpenSSL-compatible string.\n                                                 *\n                                                 * @param {CipherParams} cipherParams The cipher params object.\n                                                 *\n                                                 * @return {string} The OpenSSL-compatible string.\n                                                 *\n                                                 * @static\n                                                 *\n                                                 * @example\n                                                 *\n                                                 *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n                                                 */\n      stringify: function stringify(cipherParams) {\n        var wordArray;\n\n        // Shortcuts\n        var ciphertext = cipherParams.ciphertext;\n        var salt = cipherParams.salt;\n\n        // Format\n        if (salt) {\n          wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n        } else {\n          wordArray = ciphertext;\n        }\n\n        return wordArray.toString(Base64);\n      },\n\n      /**\n          * Converts an OpenSSL-compatible string to a cipher params object.\n          *\n          * @param {string} openSSLStr The OpenSSL-compatible string.\n          *\n          * @return {CipherParams} The cipher params object.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n          */\n      parse: function parse(openSSLStr) {\n        var salt;\n\n        // Parse base64\n        var ciphertext = Base64.parse(openSSLStr);\n\n        // Shortcut\n        var ciphertextWords = ciphertext.words;\n\n        // Test for salt\n        if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n          // Extract salt\n          salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n          // Remove salt from ciphertext\n          ciphertextWords.splice(0, 4);\n          ciphertext.sigBytes -= 16;\n        }\n\n        return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n      } };\n\n\n    /**\n            * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n            */\n    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n      /**\n                                                                       * Configuration options.\n                                                                       *\n                                                                       * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n                                                                       */\n      cfg: Base.extend({\n        format: OpenSSLFormatter }),\n\n\n      /**\n                                      * Encrypts a message.\n                                      *\n                                      * @param {Cipher} cipher The cipher algorithm to use.\n                                      * @param {WordArray|string} message The message to encrypt.\n                                      * @param {WordArray} key The key.\n                                      * @param {Object} cfg (Optional) The configuration options to use for this operation.\n                                      *\n                                      * @return {CipherParams} A cipher params object.\n                                      *\n                                      * @static\n                                      *\n                                      * @example\n                                      *\n                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n                                      *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n                                      */\n      encrypt: function encrypt(cipher, message, key, cfg) {\n        // Apply config defaults\n        cfg = this.cfg.extend(cfg);\n\n        // Encrypt\n        var encryptor = cipher.createEncryptor(key, cfg);\n        var ciphertext = encryptor.finalize(message);\n\n        // Shortcut\n        var cipherCfg = encryptor.cfg;\n\n        // Create and return serializable cipher params\n        return CipherParams.create({\n          ciphertext: ciphertext,\n          key: key,\n          iv: cipherCfg.iv,\n          algorithm: cipher,\n          mode: cipherCfg.mode,\n          padding: cipherCfg.padding,\n          blockSize: cipher.blockSize,\n          formatter: cfg.format });\n\n      },\n\n      /**\n          * Decrypts serialized ciphertext.\n          *\n          * @param {Cipher} cipher The cipher algorithm to use.\n          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n          * @param {WordArray} key The key.\n          * @param {Object} cfg (Optional) The configuration options to use for this operation.\n          *\n          * @return {WordArray} The plaintext.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n          *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n          */\n      decrypt: function decrypt(cipher, ciphertext, key, cfg) {\n        // Apply config defaults\n        cfg = this.cfg.extend(cfg);\n\n        // Convert string to CipherParams\n        ciphertext = this._parse(ciphertext, cfg.format);\n\n        // Decrypt\n        var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n        return plaintext;\n      },\n\n      /**\n          * Converts serialized ciphertext to CipherParams,\n          * else assumed CipherParams already and returns ciphertext unchanged.\n          *\n          * @param {CipherParams|string} ciphertext The ciphertext.\n          * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n          *\n          * @return {CipherParams} The unserialized ciphertext.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n          */\n      _parse: function _parse(ciphertext, format) {\n        if (typeof ciphertext == 'string') {\n          return format.parse(ciphertext, this);\n        } else {\n          return ciphertext;\n        }\n      } });\n\n\n    /**\n             * Key derivation function namespace.\n             */\n    var C_kdf = C.kdf = {};\n\n    /**\n                             * OpenSSL key derivation function.\n                             */\n    var OpenSSLKdf = C_kdf.OpenSSL = {\n      /**\n                                        * Derives a key and IV from a password.\n                                        *\n                                        * @param {string} password The password to derive from.\n                                        * @param {number} keySize The size in words of the key to generate.\n                                        * @param {number} ivSize The size in words of the IV to generate.\n                                        * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n                                        *\n                                        * @return {CipherParams} A cipher params object with the key, IV, and salt.\n                                        *\n                                        * @static\n                                        *\n                                        * @example\n                                        *\n                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n                                        *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n                                        */\n      execute: function execute(password, keySize, ivSize, salt) {\n        // Generate random salt\n        if (!salt) {\n          salt = WordArray.random(64 / 8);\n        }\n\n        // Derive key and IV\n        var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n        // Separate key and IV\n        var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n        key.sigBytes = keySize * 4;\n\n        // Return params\n        return CipherParams.create({ key: key, iv: iv, salt: salt });\n      } };\n\n\n    /**\n            * A serializable cipher wrapper that derives the key from a password,\n            * and returns ciphertext as a serializable cipher params object.\n            */\n    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n      /**\n                                                                                       * Configuration options.\n                                                                                       *\n                                                                                       * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n                                                                                       */\n      cfg: SerializableCipher.cfg.extend({\n        kdf: OpenSSLKdf }),\n\n\n      /**\n                             * Encrypts a message using a password.\n                             *\n                             * @param {Cipher} cipher The cipher algorithm to use.\n                             * @param {WordArray|string} message The message to encrypt.\n                             * @param {string} password The password.\n                             * @param {Object} cfg (Optional) The configuration options to use for this operation.\n                             *\n                             * @return {CipherParams} A cipher params object.\n                             *\n                             * @static\n                             *\n                             * @example\n                             *\n                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n                             *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n                             */\n      encrypt: function encrypt(cipher, message, password, cfg) {\n        // Apply config defaults\n        cfg = this.cfg.extend(cfg);\n\n        // Derive key and other params\n        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n        // Add IV to config\n        cfg.iv = derivedParams.iv;\n\n        // Encrypt\n        var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n        // Mix in derived params\n        ciphertext.mixIn(derivedParams);\n\n        return ciphertext;\n      },\n\n      /**\n          * Decrypts serialized ciphertext using a password.\n          *\n          * @param {Cipher} cipher The cipher algorithm to use.\n          * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n          * @param {string} password The password.\n          * @param {Object} cfg (Optional) The configuration options to use for this operation.\n          *\n          * @return {WordArray} The plaintext.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n          *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n          */\n      decrypt: function decrypt(cipher, ciphertext, password, cfg) {\n        // Apply config defaults\n        cfg = this.cfg.extend(cfg);\n\n        // Convert string to CipherParams\n        ciphertext = this._parse(ciphertext, cfg.format);\n\n        // Derive key and other params\n        var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n        // Add IV to config\n        cfg.iv = derivedParams.iv;\n\n        // Decrypt\n        var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n        return plaintext;\n      } });\n\n  }();\n\n\n  /**\n        * Cipher Feedback block mode.\n        */\n  CryptoJS.mode.CFB = function () {\n    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n    CFB.Encryptor = CFB.extend({\n      processBlock: function processBlock(words, offset) {\n        // Shortcuts\n        var cipher = this._cipher;\n        var blockSize = cipher.blockSize;\n\n        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n        // Remember this block to use with next block\n        this._prevBlock = words.slice(offset, offset + blockSize);\n      } });\n\n\n    CFB.Decryptor = CFB.extend({\n      processBlock: function processBlock(words, offset) {\n        // Shortcuts\n        var cipher = this._cipher;\n        var blockSize = cipher.blockSize;\n\n        // Remember this block to use with next block\n        var thisBlock = words.slice(offset, offset + blockSize);\n\n        generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n        // This block becomes the previous block\n        this._prevBlock = thisBlock;\n      } });\n\n\n    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n      var keystream;\n\n      // Shortcut\n      var iv = this._iv;\n\n      // Generate keystream\n      if (iv) {\n        keystream = iv.slice(0);\n\n        // Remove IV for subsequent blocks\n        this._iv = undefined;\n      } else {\n        keystream = this._prevBlock;\n      }\n      cipher.encryptBlock(keystream, 0);\n\n      // Encrypt\n      for (var i = 0; i < blockSize; i++) {\n        words[offset + i] ^= keystream[i];\n      }\n    }\n\n    return CFB;\n  }();\n\n\n  /**\n        * Counter block mode.\n        */\n  CryptoJS.mode.CTR = function () {\n    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n    var Encryptor = CTR.Encryptor = CTR.extend({\n      processBlock: function processBlock(words, offset) {\n        // Shortcuts\n        var cipher = this._cipher;\n        var blockSize = cipher.blockSize;\n        var iv = this._iv;\n        var counter = this._counter;\n\n        // Generate keystream\n        if (iv) {\n          counter = this._counter = iv.slice(0);\n\n          // Remove IV for subsequent blocks\n          this._iv = undefined;\n        }\n        var keystream = counter.slice(0);\n        cipher.encryptBlock(keystream, 0);\n\n        // Increment counter\n        counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;\n\n        // Encrypt\n        for (var i = 0; i < blockSize; i++) {\n          words[offset + i] ^= keystream[i];\n        }\n      } });\n\n\n    CTR.Decryptor = Encryptor;\n\n    return CTR;\n  }();\n\n\n  /** @preserve\n        * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n        * derived from CryptoJS.mode.CTR\n        * Jan Hruby jhruby.web@gmail.com\n        */\n  CryptoJS.mode.CTRGladman = function () {\n    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n    function incWord(word)\n    {\n      if ((word >> 24 & 0xff) === 0xff) {//overflow\n        var b1 = word >> 16 & 0xff;\n        var b2 = word >> 8 & 0xff;\n        var b3 = word & 0xff;\n\n        if (b1 === 0xff) // overflow b1\n          {\n            b1 = 0;\n            if (b2 === 0xff)\n            {\n              b2 = 0;\n              if (b3 === 0xff)\n              {\n                b3 = 0;\n              } else\n\n              {\n                ++b3;\n              }\n            } else\n\n            {\n              ++b2;\n            }\n          } else\n\n        {\n          ++b1;\n        }\n\n        word = 0;\n        word += b1 << 16;\n        word += b2 << 8;\n        word += b3;\n      } else\n\n      {\n        word += 0x01 << 24;\n      }\n      return word;\n    }\n\n    function incCounter(counter)\n    {\n      if ((counter[0] = incWord(counter[0])) === 0)\n      {\n        // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n        counter[1] = incWord(counter[1]);\n      }\n      return counter;\n    }\n\n    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n      processBlock: function processBlock(words, offset) {\n        // Shortcuts\n        var cipher = this._cipher;\n        var blockSize = cipher.blockSize;\n        var iv = this._iv;\n        var counter = this._counter;\n\n        // Generate keystream\n        if (iv) {\n          counter = this._counter = iv.slice(0);\n\n          // Remove IV for subsequent blocks\n          this._iv = undefined;\n        }\n\n        incCounter(counter);\n\n        var keystream = counter.slice(0);\n        cipher.encryptBlock(keystream, 0);\n\n        // Encrypt\n        for (var i = 0; i < blockSize; i++) {\n          words[offset + i] ^= keystream[i];\n        }\n      } });\n\n\n    CTRGladman.Decryptor = Encryptor;\n\n    return CTRGladman;\n  }();\n\n\n\n\n  /**\n        * Output Feedback block mode.\n        */\n  CryptoJS.mode.OFB = function () {\n    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n    var Encryptor = OFB.Encryptor = OFB.extend({\n      processBlock: function processBlock(words, offset) {\n        // Shortcuts\n        var cipher = this._cipher;\n        var blockSize = cipher.blockSize;\n        var iv = this._iv;\n        var keystream = this._keystream;\n\n        // Generate keystream\n        if (iv) {\n          keystream = this._keystream = iv.slice(0);\n\n          // Remove IV for subsequent blocks\n          this._iv = undefined;\n        }\n        cipher.encryptBlock(keystream, 0);\n\n        // Encrypt\n        for (var i = 0; i < blockSize; i++) {\n          words[offset + i] ^= keystream[i];\n        }\n      } });\n\n\n    OFB.Decryptor = Encryptor;\n\n    return OFB;\n  }();\n\n\n  /**\n        * Electronic Codebook block mode.\n        */\n  CryptoJS.mode.ECB = function () {\n    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n    ECB.Encryptor = ECB.extend({\n      processBlock: function processBlock(words, offset) {\n        this._cipher.encryptBlock(words, offset);\n      } });\n\n\n    ECB.Decryptor = ECB.extend({\n      processBlock: function processBlock(words, offset) {\n        this._cipher.decryptBlock(words, offset);\n      } });\n\n\n    return ECB;\n  }();\n\n\n  /**\n        * ANSI X.923 padding strategy.\n        */\n  CryptoJS.pad.AnsiX923 = {\n    pad: function pad(data, blockSize) {\n      // Shortcuts\n      var dataSigBytes = data.sigBytes;\n      var blockSizeBytes = blockSize * 4;\n\n      // Count padding bytes\n      var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n      // Compute last byte position\n      var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n      // Pad\n      data.clamp();\n      data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;\n      data.sigBytes += nPaddingBytes;\n    },\n\n    unpad: function unpad(data) {\n      // Get number of padding bytes from last byte\n      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\n\n      // Remove padding\n      data.sigBytes -= nPaddingBytes;\n    } };\n\n\n\n  /**\n          * ISO 10126 padding strategy.\n          */\n  CryptoJS.pad.Iso10126 = {\n    pad: function pad(data, blockSize) {\n      // Shortcut\n      var blockSizeBytes = blockSize * 4;\n\n      // Count padding bytes\n      var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n      // Pad\n      data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n      concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n    },\n\n    unpad: function unpad(data) {\n      // Get number of padding bytes from last byte\n      var nPaddingBytes = data.words[data.sigBytes - 1 >>> 2] & 0xff;\n\n      // Remove padding\n      data.sigBytes -= nPaddingBytes;\n    } };\n\n\n\n  /**\n          * ISO/IEC 9797-1 Padding Method 2.\n          */\n  CryptoJS.pad.Iso97971 = {\n    pad: function pad(data, blockSize) {\n      // Add 0x80 byte\n      data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n      // Zero pad the rest\n      CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n    },\n\n    unpad: function unpad(data) {\n      // Remove zero padding\n      CryptoJS.pad.ZeroPadding.unpad(data);\n\n      // Remove one more byte -- the 0x80 byte\n      data.sigBytes--;\n    } };\n\n\n\n  /**\n          * Zero padding strategy.\n          */\n  CryptoJS.pad.ZeroPadding = {\n    pad: function pad(data, blockSize) {\n      // Shortcut\n      var blockSizeBytes = blockSize * 4;\n\n      // Pad\n      data.clamp();\n      data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);\n    },\n\n    unpad: function unpad(data) {\n      // Shortcut\n      var dataWords = data.words;\n\n      // Unpad\n      var i = data.sigBytes - 1;\n      for (var i = data.sigBytes - 1; i >= 0; i--) {\n        if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {\n          data.sigBytes = i + 1;\n          break;\n        }\n      }\n    } };\n\n\n\n  /**\n          * A noop padding strategy.\n          */\n  CryptoJS.pad.NoPadding = {\n    pad: function pad() {\n    },\n\n    unpad: function unpad() {\n    } };\n\n\n\n  (function (undefined) {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var CipherParams = C_lib.CipherParams;\n    var C_enc = C.enc;\n    var Hex = C_enc.Hex;\n    var C_format = C.format;\n\n    var HexFormatter = C_format.Hex = {\n      /**\n                                         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n                                         *\n                                         * @param {CipherParams} cipherParams The cipher params object.\n                                         *\n                                         * @return {string} The hexadecimally encoded string.\n                                         *\n                                         * @static\n                                         *\n                                         * @example\n                                         *\n                                         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n                                         */\n      stringify: function stringify(cipherParams) {\n        return cipherParams.ciphertext.toString(Hex);\n      },\n\n      /**\n          * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n          *\n          * @param {string} input The hexadecimally encoded string.\n          *\n          * @return {CipherParams} The cipher params object.\n          *\n          * @static\n          *\n          * @example\n          *\n          *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n          */\n      parse: function parse(input) {\n        var ciphertext = Hex.parse(input);\n        return CipherParams.create({ ciphertext: ciphertext });\n      } };\n\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var BlockCipher = C_lib.BlockCipher;\n    var C_algo = C.algo;\n\n    // Lookup tables\n    var SBOX = [];\n    var INV_SBOX = [];\n    var SUB_MIX_0 = [];\n    var SUB_MIX_1 = [];\n    var SUB_MIX_2 = [];\n    var SUB_MIX_3 = [];\n    var INV_SUB_MIX_0 = [];\n    var INV_SUB_MIX_1 = [];\n    var INV_SUB_MIX_2 = [];\n    var INV_SUB_MIX_3 = [];\n\n    // Compute lookup tables\n    (function () {\n      // Compute double table\n      var d = [];\n      for (var i = 0; i < 256; i++) {\n        if (i < 128) {\n          d[i] = i << 1;\n        } else {\n          d[i] = i << 1 ^ 0x11b;\n        }\n      }\n\n      // Walk GF(2^8)\n      var x = 0;\n      var xi = 0;\n      for (var i = 0; i < 256; i++) {\n        // Compute sbox\n        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n        SBOX[x] = sx;\n        INV_SBOX[sx] = x;\n\n        // Compute multiplication\n        var x2 = d[x];\n        var x4 = d[x2];\n        var x8 = d[x4];\n\n        // Compute sub bytes, mix columns tables\n        var t = d[sx] * 0x101 ^ sx * 0x1010100;\n        SUB_MIX_0[x] = t << 24 | t >>> 8;\n        SUB_MIX_1[x] = t << 16 | t >>> 16;\n        SUB_MIX_2[x] = t << 8 | t >>> 24;\n        SUB_MIX_3[x] = t;\n\n        // Compute inv sub bytes, inv mix columns tables\n        var t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;\n        INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;\n        INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;\n        INV_SUB_MIX_3[sx] = t;\n\n        // Compute next counter\n        if (!x) {\n          x = xi = 1;\n        } else {\n          x = x2 ^ d[d[d[x8 ^ x2]]];\n          xi ^= d[d[xi]];\n        }\n      }\n    })();\n\n    // Precomputed Rcon lookup\n    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n    /**\n                                                                                    * AES block cipher algorithm.\n                                                                                    */\n    var AES = C_algo.AES = BlockCipher.extend({\n      _doReset: function _doReset() {\n        var t;\n\n        // Skip reset of nRounds has been set before and key did not change\n        if (this._nRounds && this._keyPriorReset === this._key) {\n          return;\n        }\n\n        // Shortcuts\n        var key = this._keyPriorReset = this._key;\n        var keyWords = key.words;\n        var keySize = key.sigBytes / 4;\n\n        // Compute number of rounds\n        var nRounds = this._nRounds = keySize + 6;\n\n        // Compute number of key schedule rows\n        var ksRows = (nRounds + 1) * 4;\n\n        // Compute key schedule\n        var keySchedule = this._keySchedule = [];\n        for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n          if (ksRow < keySize) {\n            keySchedule[ksRow] = keyWords[ksRow];\n          } else {\n            t = keySchedule[ksRow - 1];\n\n            if (!(ksRow % keySize)) {\n              // Rot word\n              t = t << 8 | t >>> 24;\n\n              // Sub word\n              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\n\n              // Mix Rcon\n              t ^= RCON[ksRow / keySize | 0] << 24;\n            } else if (keySize > 6 && ksRow % keySize == 4) {\n              // Sub word\n              t = SBOX[t >>> 24] << 24 | SBOX[t >>> 16 & 0xff] << 16 | SBOX[t >>> 8 & 0xff] << 8 | SBOX[t & 0xff];\n            }\n\n            keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n          }\n        }\n\n        // Compute inv key schedule\n        var invKeySchedule = this._invKeySchedule = [];\n        for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n          var ksRow = ksRows - invKsRow;\n\n          if (invKsRow % 4) {\n            var t = keySchedule[ksRow];\n          } else {\n            var t = keySchedule[ksRow - 4];\n          }\n\n          if (invKsRow < 4 || ksRow <= 4) {\n            invKeySchedule[invKsRow] = t;\n          } else {\n            invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[t >>> 16 & 0xff]] ^\n            INV_SUB_MIX_2[SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n          }\n        }\n      },\n\n      encryptBlock: function encryptBlock(M, offset) {\n        this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n      },\n\n      decryptBlock: function decryptBlock(M, offset) {\n        // Swap 2nd and 4th rows\n        var t = M[offset + 1];\n        M[offset + 1] = M[offset + 3];\n        M[offset + 3] = t;\n\n        this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n        // Inv swap 2nd and 4th rows\n        var t = M[offset + 1];\n        M[offset + 1] = M[offset + 3];\n        M[offset + 3] = t;\n      },\n\n      _doCryptBlock: function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n        // Shortcut\n        var nRounds = this._nRounds;\n\n        // Get input, add round key\n        var s0 = M[offset] ^ keySchedule[0];\n        var s1 = M[offset + 1] ^ keySchedule[1];\n        var s2 = M[offset + 2] ^ keySchedule[2];\n        var s3 = M[offset + 3] ^ keySchedule[3];\n\n        // Key schedule row counter\n        var ksRow = 4;\n\n        // Rounds\n        for (var round = 1; round < nRounds; round++) {\n          // Shift rows, sub bytes, mix columns, add round key\n          var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n          var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n          var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n          var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n          // Update state\n          s0 = t0;\n          s1 = t1;\n          s2 = t2;\n          s3 = t3;\n        }\n\n        // Shift rows, sub bytes, add round key\n        var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n        var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n        var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n        var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n        // Set output\n        M[offset] = t0;\n        M[offset + 1] = t1;\n        M[offset + 2] = t2;\n        M[offset + 3] = t3;\n      },\n\n      keySize: 256 / 32 });\n\n\n    /**\n                             * Shortcut functions to the cipher's object interface.\n                             *\n                             * @example\n                             *\n                             *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n                             *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n                             */\n    C.AES = BlockCipher._createHelper(AES);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var BlockCipher = C_lib.BlockCipher;\n    var C_algo = C.algo;\n\n    // Permuted Choice 1 constants\n    var PC1 = [\n    57, 49, 41, 33, 25, 17, 9, 1,\n    58, 50, 42, 34, 26, 18, 10, 2,\n    59, 51, 43, 35, 27, 19, 11, 3,\n    60, 52, 44, 36, 63, 55, 47, 39,\n    31, 23, 15, 7, 62, 54, 46, 38,\n    30, 22, 14, 6, 61, 53, 45, 37,\n    29, 21, 13, 5, 28, 20, 12, 4];\n\n\n    // Permuted Choice 2 constants\n    var PC2 = [\n    14, 17, 11, 24, 1, 5,\n    3, 28, 15, 6, 21, 10,\n    23, 19, 12, 4, 26, 8,\n    16, 7, 27, 20, 13, 2,\n    41, 52, 31, 37, 47, 55,\n    30, 40, 51, 45, 33, 48,\n    44, 49, 39, 56, 34, 53,\n    46, 42, 50, 36, 29, 32];\n\n\n    // Cumulative bit shift constants\n    var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n    // SBOXes and round permutation constants\n    var SBOX_P = [\n    {\n      0x0: 0x808200,\n      0x10000000: 0x8000,\n      0x20000000: 0x808002,\n      0x30000000: 0x2,\n      0x40000000: 0x200,\n      0x50000000: 0x808202,\n      0x60000000: 0x800202,\n      0x70000000: 0x800000,\n      0x80000000: 0x202,\n      0x90000000: 0x800200,\n      0xa0000000: 0x8200,\n      0xb0000000: 0x808000,\n      0xc0000000: 0x8002,\n      0xd0000000: 0x800002,\n      0xe0000000: 0x0,\n      0xf0000000: 0x8202,\n      0x8000000: 0x0,\n      0x18000000: 0x808202,\n      0x28000000: 0x8202,\n      0x38000000: 0x8000,\n      0x48000000: 0x808200,\n      0x58000000: 0x200,\n      0x68000000: 0x808002,\n      0x78000000: 0x2,\n      0x88000000: 0x800200,\n      0x98000000: 0x8200,\n      0xa8000000: 0x808000,\n      0xb8000000: 0x800202,\n      0xc8000000: 0x800002,\n      0xd8000000: 0x8002,\n      0xe8000000: 0x202,\n      0xf8000000: 0x800000,\n      0x1: 0x8000,\n      0x10000001: 0x2,\n      0x20000001: 0x808200,\n      0x30000001: 0x800000,\n      0x40000001: 0x808002,\n      0x50000001: 0x8200,\n      0x60000001: 0x200,\n      0x70000001: 0x800202,\n      0x80000001: 0x808202,\n      0x90000001: 0x808000,\n      0xa0000001: 0x800002,\n      0xb0000001: 0x8202,\n      0xc0000001: 0x202,\n      0xd0000001: 0x800200,\n      0xe0000001: 0x8002,\n      0xf0000001: 0x0,\n      0x8000001: 0x808202,\n      0x18000001: 0x808000,\n      0x28000001: 0x800000,\n      0x38000001: 0x200,\n      0x48000001: 0x8000,\n      0x58000001: 0x800002,\n      0x68000001: 0x2,\n      0x78000001: 0x8202,\n      0x88000001: 0x8002,\n      0x98000001: 0x800202,\n      0xa8000001: 0x202,\n      0xb8000001: 0x808200,\n      0xc8000001: 0x800200,\n      0xd8000001: 0x0,\n      0xe8000001: 0x8200,\n      0xf8000001: 0x808002 },\n\n    {\n      0x0: 0x40084010,\n      0x1000000: 0x4000,\n      0x2000000: 0x80000,\n      0x3000000: 0x40080010,\n      0x4000000: 0x40000010,\n      0x5000000: 0x40084000,\n      0x6000000: 0x40004000,\n      0x7000000: 0x10,\n      0x8000000: 0x84000,\n      0x9000000: 0x40004010,\n      0xa000000: 0x40000000,\n      0xb000000: 0x84010,\n      0xc000000: 0x80010,\n      0xd000000: 0x0,\n      0xe000000: 0x4010,\n      0xf000000: 0x40080000,\n      0x800000: 0x40004000,\n      0x1800000: 0x84010,\n      0x2800000: 0x10,\n      0x3800000: 0x40004010,\n      0x4800000: 0x40084010,\n      0x5800000: 0x40000000,\n      0x6800000: 0x80000,\n      0x7800000: 0x40080010,\n      0x8800000: 0x80010,\n      0x9800000: 0x0,\n      0xa800000: 0x4000,\n      0xb800000: 0x40080000,\n      0xc800000: 0x40000010,\n      0xd800000: 0x84000,\n      0xe800000: 0x40084000,\n      0xf800000: 0x4010,\n      0x10000000: 0x0,\n      0x11000000: 0x40080010,\n      0x12000000: 0x40004010,\n      0x13000000: 0x40084000,\n      0x14000000: 0x40080000,\n      0x15000000: 0x10,\n      0x16000000: 0x84010,\n      0x17000000: 0x4000,\n      0x18000000: 0x4010,\n      0x19000000: 0x80000,\n      0x1a000000: 0x80010,\n      0x1b000000: 0x40000010,\n      0x1c000000: 0x84000,\n      0x1d000000: 0x40004000,\n      0x1e000000: 0x40000000,\n      0x1f000000: 0x40084010,\n      0x10800000: 0x84010,\n      0x11800000: 0x80000,\n      0x12800000: 0x40080000,\n      0x13800000: 0x4000,\n      0x14800000: 0x40004000,\n      0x15800000: 0x40084010,\n      0x16800000: 0x10,\n      0x17800000: 0x40000000,\n      0x18800000: 0x40084000,\n      0x19800000: 0x40000010,\n      0x1a800000: 0x40004010,\n      0x1b800000: 0x80010,\n      0x1c800000: 0x0,\n      0x1d800000: 0x4010,\n      0x1e800000: 0x40080010,\n      0x1f800000: 0x84000 },\n\n    {\n      0x0: 0x104,\n      0x100000: 0x0,\n      0x200000: 0x4000100,\n      0x300000: 0x10104,\n      0x400000: 0x10004,\n      0x500000: 0x4000004,\n      0x600000: 0x4010104,\n      0x700000: 0x4010000,\n      0x800000: 0x4000000,\n      0x900000: 0x4010100,\n      0xa00000: 0x10100,\n      0xb00000: 0x4010004,\n      0xc00000: 0x4000104,\n      0xd00000: 0x10000,\n      0xe00000: 0x4,\n      0xf00000: 0x100,\n      0x80000: 0x4010100,\n      0x180000: 0x4010004,\n      0x280000: 0x0,\n      0x380000: 0x4000100,\n      0x480000: 0x4000004,\n      0x580000: 0x10000,\n      0x680000: 0x10004,\n      0x780000: 0x104,\n      0x880000: 0x4,\n      0x980000: 0x100,\n      0xa80000: 0x4010000,\n      0xb80000: 0x10104,\n      0xc80000: 0x10100,\n      0xd80000: 0x4000104,\n      0xe80000: 0x4010104,\n      0xf80000: 0x4000000,\n      0x1000000: 0x4010100,\n      0x1100000: 0x10004,\n      0x1200000: 0x10000,\n      0x1300000: 0x4000100,\n      0x1400000: 0x100,\n      0x1500000: 0x4010104,\n      0x1600000: 0x4000004,\n      0x1700000: 0x0,\n      0x1800000: 0x4000104,\n      0x1900000: 0x4000000,\n      0x1a00000: 0x4,\n      0x1b00000: 0x10100,\n      0x1c00000: 0x4010000,\n      0x1d00000: 0x104,\n      0x1e00000: 0x10104,\n      0x1f00000: 0x4010004,\n      0x1080000: 0x4000000,\n      0x1180000: 0x104,\n      0x1280000: 0x4010100,\n      0x1380000: 0x0,\n      0x1480000: 0x10004,\n      0x1580000: 0x4000100,\n      0x1680000: 0x100,\n      0x1780000: 0x4010004,\n      0x1880000: 0x10000,\n      0x1980000: 0x4010104,\n      0x1a80000: 0x10104,\n      0x1b80000: 0x4000004,\n      0x1c80000: 0x4000104,\n      0x1d80000: 0x4010000,\n      0x1e80000: 0x4,\n      0x1f80000: 0x10100 },\n\n    {\n      0x0: 0x80401000,\n      0x10000: 0x80001040,\n      0x20000: 0x401040,\n      0x30000: 0x80400000,\n      0x40000: 0x0,\n      0x50000: 0x401000,\n      0x60000: 0x80000040,\n      0x70000: 0x400040,\n      0x80000: 0x80000000,\n      0x90000: 0x400000,\n      0xa0000: 0x40,\n      0xb0000: 0x80001000,\n      0xc0000: 0x80400040,\n      0xd0000: 0x1040,\n      0xe0000: 0x1000,\n      0xf0000: 0x80401040,\n      0x8000: 0x80001040,\n      0x18000: 0x40,\n      0x28000: 0x80400040,\n      0x38000: 0x80001000,\n      0x48000: 0x401000,\n      0x58000: 0x80401040,\n      0x68000: 0x0,\n      0x78000: 0x80400000,\n      0x88000: 0x1000,\n      0x98000: 0x80401000,\n      0xa8000: 0x400000,\n      0xb8000: 0x1040,\n      0xc8000: 0x80000000,\n      0xd8000: 0x400040,\n      0xe8000: 0x401040,\n      0xf8000: 0x80000040,\n      0x100000: 0x400040,\n      0x110000: 0x401000,\n      0x120000: 0x80000040,\n      0x130000: 0x0,\n      0x140000: 0x1040,\n      0x150000: 0x80400040,\n      0x160000: 0x80401000,\n      0x170000: 0x80001040,\n      0x180000: 0x80401040,\n      0x190000: 0x80000000,\n      0x1a0000: 0x80400000,\n      0x1b0000: 0x401040,\n      0x1c0000: 0x80001000,\n      0x1d0000: 0x400000,\n      0x1e0000: 0x40,\n      0x1f0000: 0x1000,\n      0x108000: 0x80400000,\n      0x118000: 0x80401040,\n      0x128000: 0x0,\n      0x138000: 0x401000,\n      0x148000: 0x400040,\n      0x158000: 0x80000000,\n      0x168000: 0x80001040,\n      0x178000: 0x40,\n      0x188000: 0x80000040,\n      0x198000: 0x1000,\n      0x1a8000: 0x80001000,\n      0x1b8000: 0x80400040,\n      0x1c8000: 0x1040,\n      0x1d8000: 0x80401000,\n      0x1e8000: 0x400000,\n      0x1f8000: 0x401040 },\n\n    {\n      0x0: 0x80,\n      0x1000: 0x1040000,\n      0x2000: 0x40000,\n      0x3000: 0x20000000,\n      0x4000: 0x20040080,\n      0x5000: 0x1000080,\n      0x6000: 0x21000080,\n      0x7000: 0x40080,\n      0x8000: 0x1000000,\n      0x9000: 0x20040000,\n      0xa000: 0x20000080,\n      0xb000: 0x21040080,\n      0xc000: 0x21040000,\n      0xd000: 0x0,\n      0xe000: 0x1040080,\n      0xf000: 0x21000000,\n      0x800: 0x1040080,\n      0x1800: 0x21000080,\n      0x2800: 0x80,\n      0x3800: 0x1040000,\n      0x4800: 0x40000,\n      0x5800: 0x20040080,\n      0x6800: 0x21040000,\n      0x7800: 0x20000000,\n      0x8800: 0x20040000,\n      0x9800: 0x0,\n      0xa800: 0x21040080,\n      0xb800: 0x1000080,\n      0xc800: 0x20000080,\n      0xd800: 0x21000000,\n      0xe800: 0x1000000,\n      0xf800: 0x40080,\n      0x10000: 0x40000,\n      0x11000: 0x80,\n      0x12000: 0x20000000,\n      0x13000: 0x21000080,\n      0x14000: 0x1000080,\n      0x15000: 0x21040000,\n      0x16000: 0x20040080,\n      0x17000: 0x1000000,\n      0x18000: 0x21040080,\n      0x19000: 0x21000000,\n      0x1a000: 0x1040000,\n      0x1b000: 0x20040000,\n      0x1c000: 0x40080,\n      0x1d000: 0x20000080,\n      0x1e000: 0x0,\n      0x1f000: 0x1040080,\n      0x10800: 0x21000080,\n      0x11800: 0x1000000,\n      0x12800: 0x1040000,\n      0x13800: 0x20040080,\n      0x14800: 0x20000000,\n      0x15800: 0x1040080,\n      0x16800: 0x80,\n      0x17800: 0x21040000,\n      0x18800: 0x40080,\n      0x19800: 0x21040080,\n      0x1a800: 0x0,\n      0x1b800: 0x21000000,\n      0x1c800: 0x1000080,\n      0x1d800: 0x40000,\n      0x1e800: 0x20040000,\n      0x1f800: 0x20000080 },\n\n    {\n      0x0: 0x10000008,\n      0x100: 0x2000,\n      0x200: 0x10200000,\n      0x300: 0x10202008,\n      0x400: 0x10002000,\n      0x500: 0x200000,\n      0x600: 0x200008,\n      0x700: 0x10000000,\n      0x800: 0x0,\n      0x900: 0x10002008,\n      0xa00: 0x202000,\n      0xb00: 0x8,\n      0xc00: 0x10200008,\n      0xd00: 0x202008,\n      0xe00: 0x2008,\n      0xf00: 0x10202000,\n      0x80: 0x10200000,\n      0x180: 0x10202008,\n      0x280: 0x8,\n      0x380: 0x200000,\n      0x480: 0x202008,\n      0x580: 0x10000008,\n      0x680: 0x10002000,\n      0x780: 0x2008,\n      0x880: 0x200008,\n      0x980: 0x2000,\n      0xa80: 0x10002008,\n      0xb80: 0x10200008,\n      0xc80: 0x0,\n      0xd80: 0x10202000,\n      0xe80: 0x202000,\n      0xf80: 0x10000000,\n      0x1000: 0x10002000,\n      0x1100: 0x10200008,\n      0x1200: 0x10202008,\n      0x1300: 0x2008,\n      0x1400: 0x200000,\n      0x1500: 0x10000000,\n      0x1600: 0x10000008,\n      0x1700: 0x202000,\n      0x1800: 0x202008,\n      0x1900: 0x0,\n      0x1a00: 0x8,\n      0x1b00: 0x10200000,\n      0x1c00: 0x2000,\n      0x1d00: 0x10002008,\n      0x1e00: 0x10202000,\n      0x1f00: 0x200008,\n      0x1080: 0x8,\n      0x1180: 0x202000,\n      0x1280: 0x200000,\n      0x1380: 0x10000008,\n      0x1480: 0x10002000,\n      0x1580: 0x2008,\n      0x1680: 0x10202008,\n      0x1780: 0x10200000,\n      0x1880: 0x10202000,\n      0x1980: 0x10200008,\n      0x1a80: 0x2000,\n      0x1b80: 0x202008,\n      0x1c80: 0x200008,\n      0x1d80: 0x0,\n      0x1e80: 0x10000000,\n      0x1f80: 0x10002008 },\n\n    {\n      0x0: 0x100000,\n      0x10: 0x2000401,\n      0x20: 0x400,\n      0x30: 0x100401,\n      0x40: 0x2100401,\n      0x50: 0x0,\n      0x60: 0x1,\n      0x70: 0x2100001,\n      0x80: 0x2000400,\n      0x90: 0x100001,\n      0xa0: 0x2000001,\n      0xb0: 0x2100400,\n      0xc0: 0x2100000,\n      0xd0: 0x401,\n      0xe0: 0x100400,\n      0xf0: 0x2000000,\n      0x8: 0x2100001,\n      0x18: 0x0,\n      0x28: 0x2000401,\n      0x38: 0x2100400,\n      0x48: 0x100000,\n      0x58: 0x2000001,\n      0x68: 0x2000000,\n      0x78: 0x401,\n      0x88: 0x100401,\n      0x98: 0x2000400,\n      0xa8: 0x2100000,\n      0xb8: 0x100001,\n      0xc8: 0x400,\n      0xd8: 0x2100401,\n      0xe8: 0x1,\n      0xf8: 0x100400,\n      0x100: 0x2000000,\n      0x110: 0x100000,\n      0x120: 0x2000401,\n      0x130: 0x2100001,\n      0x140: 0x100001,\n      0x150: 0x2000400,\n      0x160: 0x2100400,\n      0x170: 0x100401,\n      0x180: 0x401,\n      0x190: 0x2100401,\n      0x1a0: 0x100400,\n      0x1b0: 0x1,\n      0x1c0: 0x0,\n      0x1d0: 0x2100000,\n      0x1e0: 0x2000001,\n      0x1f0: 0x400,\n      0x108: 0x100400,\n      0x118: 0x2000401,\n      0x128: 0x2100001,\n      0x138: 0x1,\n      0x148: 0x2000000,\n      0x158: 0x100000,\n      0x168: 0x401,\n      0x178: 0x2100400,\n      0x188: 0x2000001,\n      0x198: 0x2100000,\n      0x1a8: 0x0,\n      0x1b8: 0x2100401,\n      0x1c8: 0x100401,\n      0x1d8: 0x400,\n      0x1e8: 0x2000400,\n      0x1f8: 0x100001 },\n\n    {\n      0x0: 0x8000820,\n      0x1: 0x20000,\n      0x2: 0x8000000,\n      0x3: 0x20,\n      0x4: 0x20020,\n      0x5: 0x8020820,\n      0x6: 0x8020800,\n      0x7: 0x800,\n      0x8: 0x8020000,\n      0x9: 0x8000800,\n      0xa: 0x20800,\n      0xb: 0x8020020,\n      0xc: 0x820,\n      0xd: 0x0,\n      0xe: 0x8000020,\n      0xf: 0x20820,\n      0x80000000: 0x800,\n      0x80000001: 0x8020820,\n      0x80000002: 0x8000820,\n      0x80000003: 0x8000000,\n      0x80000004: 0x8020000,\n      0x80000005: 0x20800,\n      0x80000006: 0x20820,\n      0x80000007: 0x20,\n      0x80000008: 0x8000020,\n      0x80000009: 0x820,\n      0x8000000a: 0x20020,\n      0x8000000b: 0x8020800,\n      0x8000000c: 0x0,\n      0x8000000d: 0x8020020,\n      0x8000000e: 0x8000800,\n      0x8000000f: 0x20000,\n      0x10: 0x20820,\n      0x11: 0x8020800,\n      0x12: 0x20,\n      0x13: 0x800,\n      0x14: 0x8000800,\n      0x15: 0x8000020,\n      0x16: 0x8020020,\n      0x17: 0x20000,\n      0x18: 0x0,\n      0x19: 0x20020,\n      0x1a: 0x8020000,\n      0x1b: 0x8000820,\n      0x1c: 0x8020820,\n      0x1d: 0x20800,\n      0x1e: 0x820,\n      0x1f: 0x8000000,\n      0x80000010: 0x20000,\n      0x80000011: 0x800,\n      0x80000012: 0x8020020,\n      0x80000013: 0x20820,\n      0x80000014: 0x20,\n      0x80000015: 0x8020000,\n      0x80000016: 0x8000000,\n      0x80000017: 0x8000820,\n      0x80000018: 0x8020820,\n      0x80000019: 0x8000020,\n      0x8000001a: 0x8000800,\n      0x8000001b: 0x0,\n      0x8000001c: 0x20800,\n      0x8000001d: 0x820,\n      0x8000001e: 0x20020,\n      0x8000001f: 0x8020800 }];\n\n\n\n    // Masks that select the SBOX input\n    var SBOX_MASK = [\n    0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n    0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];\n\n\n    /**\n                                                      * DES block cipher algorithm.\n                                                      */\n    var DES = C_algo.DES = BlockCipher.extend({\n      _doReset: function _doReset() {\n        // Shortcuts\n        var key = this._key;\n        var keyWords = key.words;\n\n        // Select 56 bits according to PC1\n        var keyBits = [];\n        for (var i = 0; i < 56; i++) {\n          var keyBitPos = PC1[i] - 1;\n          keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;\n        }\n\n        // Assemble 16 subkeys\n        var subKeys = this._subKeys = [];\n        for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n          // Create subkey\n          var subKey = subKeys[nSubKey] = [];\n\n          // Shortcut\n          var bitShift = BIT_SHIFTS[nSubKey];\n\n          // Select 48 bits according to PC2\n          for (var i = 0; i < 24; i++) {\n            // Select from the left 28 key bits\n            subKey[i / 6 | 0] |= keyBits[(PC2[i] - 1 + bitShift) % 28] << 31 - i % 6;\n\n            // Select from the right 28 key bits\n            subKey[4 + (i / 6 | 0)] |= keyBits[28 + (PC2[i + 24] - 1 + bitShift) % 28] << 31 - i % 6;\n          }\n\n          // Since each subkey is applied to an expanded 32-bit input,\n          // the subkey can be broken into 8 values scaled to 32-bits,\n          // which allows the key to be used without expansion\n          subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;\n          for (var i = 1; i < 7; i++) {\n            subKey[i] = subKey[i] >>> (i - 1) * 4 + 3;\n          }\n          subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;\n        }\n\n        // Compute inverse subkeys\n        var invSubKeys = this._invSubKeys = [];\n        for (var i = 0; i < 16; i++) {\n          invSubKeys[i] = subKeys[15 - i];\n        }\n      },\n\n      encryptBlock: function encryptBlock(M, offset) {\n        this._doCryptBlock(M, offset, this._subKeys);\n      },\n\n      decryptBlock: function decryptBlock(M, offset) {\n        this._doCryptBlock(M, offset, this._invSubKeys);\n      },\n\n      _doCryptBlock: function _doCryptBlock(M, offset, subKeys) {\n        // Get input\n        this._lBlock = M[offset];\n        this._rBlock = M[offset + 1];\n\n        // Initial permutation\n        exchangeLR.call(this, 4, 0x0f0f0f0f);\n        exchangeLR.call(this, 16, 0x0000ffff);\n        exchangeRL.call(this, 2, 0x33333333);\n        exchangeRL.call(this, 8, 0x00ff00ff);\n        exchangeLR.call(this, 1, 0x55555555);\n\n        // Rounds\n        for (var round = 0; round < 16; round++) {\n          // Shortcuts\n          var subKey = subKeys[round];\n          var lBlock = this._lBlock;\n          var rBlock = this._rBlock;\n\n          // Feistel function\n          var f = 0;\n          for (var i = 0; i < 8; i++) {\n            f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n          }\n          this._lBlock = rBlock;\n          this._rBlock = lBlock ^ f;\n        }\n\n        // Undo swap from last round\n        var t = this._lBlock;\n        this._lBlock = this._rBlock;\n        this._rBlock = t;\n\n        // Final permutation\n        exchangeLR.call(this, 1, 0x55555555);\n        exchangeRL.call(this, 8, 0x00ff00ff);\n        exchangeRL.call(this, 2, 0x33333333);\n        exchangeLR.call(this, 16, 0x0000ffff);\n        exchangeLR.call(this, 4, 0x0f0f0f0f);\n\n        // Set output\n        M[offset] = this._lBlock;\n        M[offset + 1] = this._rBlock;\n      },\n\n      keySize: 64 / 32,\n\n      ivSize: 64 / 32,\n\n      blockSize: 64 / 32 });\n\n\n    // Swap bits across the left and right words\n    function exchangeLR(offset, mask) {\n      var t = (this._lBlock >>> offset ^ this._rBlock) & mask;\n      this._rBlock ^= t;\n      this._lBlock ^= t << offset;\n    }\n\n    function exchangeRL(offset, mask) {\n      var t = (this._rBlock >>> offset ^ this._lBlock) & mask;\n      this._lBlock ^= t;\n      this._rBlock ^= t << offset;\n    }\n\n    /**\n       * Shortcut functions to the cipher's object interface.\n       *\n       * @example\n       *\n       *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n       *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n       */\n    C.DES = BlockCipher._createHelper(DES);\n\n    /**\n                                             * Triple-DES block cipher algorithm.\n                                             */\n    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n      _doReset: function _doReset() {\n        // Shortcuts\n        var key = this._key;\n        var keyWords = key.words;\n        // Make sure the key length is valid (64, 128 or >= 192 bit)\n        if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n          throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n        }\n\n        // Extend the key according to the keying options defined in 3DES standard\n        var key1 = keyWords.slice(0, 2);\n        var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n        var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n        // Create DES instances\n        this._des1 = DES.createEncryptor(WordArray.create(key1));\n        this._des2 = DES.createEncryptor(WordArray.create(key2));\n        this._des3 = DES.createEncryptor(WordArray.create(key3));\n      },\n\n      encryptBlock: function encryptBlock(M, offset) {\n        this._des1.encryptBlock(M, offset);\n        this._des2.decryptBlock(M, offset);\n        this._des3.encryptBlock(M, offset);\n      },\n\n      decryptBlock: function decryptBlock(M, offset) {\n        this._des3.decryptBlock(M, offset);\n        this._des2.encryptBlock(M, offset);\n        this._des1.decryptBlock(M, offset);\n      },\n\n      keySize: 192 / 32,\n\n      ivSize: 64 / 32,\n\n      blockSize: 64 / 32 });\n\n\n    /**\n                              * Shortcut functions to the cipher's object interface.\n                              *\n                              * @example\n                              *\n                              *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n                              *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n                              */\n    C.TripleDES = BlockCipher._createHelper(TripleDES);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var StreamCipher = C_lib.StreamCipher;\n    var C_algo = C.algo;\n\n    /**\n                          * RC4 stream cipher algorithm.\n                          */\n    var RC4 = C_algo.RC4 = StreamCipher.extend({\n      _doReset: function _doReset() {\n        // Shortcuts\n        var key = this._key;\n        var keyWords = key.words;\n        var keySigBytes = key.sigBytes;\n\n        // Init sbox\n        var S = this._S = [];\n        for (var i = 0; i < 256; i++) {\n          S[i] = i;\n        }\n\n        // Key setup\n        for (var i = 0, j = 0; i < 256; i++) {\n          var keyByteIndex = i % keySigBytes;\n          var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;\n\n          j = (j + S[i] + keyByte) % 256;\n\n          // Swap\n          var t = S[i];\n          S[i] = S[j];\n          S[j] = t;\n        }\n\n        // Counters\n        this._i = this._j = 0;\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        M[offset] ^= generateKeystreamWord.call(this);\n      },\n\n      keySize: 256 / 32,\n\n      ivSize: 0 });\n\n\n    function generateKeystreamWord() {\n      // Shortcuts\n      var S = this._S;\n      var i = this._i;\n      var j = this._j;\n\n      // Generate keystream word\n      var keystreamWord = 0;\n      for (var n = 0; n < 4; n++) {\n        i = (i + 1) % 256;\n        j = (j + S[i]) % 256;\n\n        // Swap\n        var t = S[i];\n        S[i] = S[j];\n        S[j] = t;\n\n        keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;\n      }\n\n      // Update counters\n      this._i = i;\n      this._j = j;\n\n      return keystreamWord;\n    }\n\n    /**\n       * Shortcut functions to the cipher's object interface.\n       *\n       * @example\n       *\n       *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n       *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n       */\n    C.RC4 = StreamCipher._createHelper(RC4);\n\n    /**\n                                              * Modified RC4 stream cipher algorithm.\n                                              */\n    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n      /**\n                                                 * Configuration options.\n                                                 *\n                                                 * @property {number} drop The number of keystream words to drop. Default 192\n                                                 */\n      cfg: RC4.cfg.extend({\n        drop: 192 }),\n\n\n      _doReset: function _doReset() {\n        RC4._doReset.call(this);\n\n        // Drop\n        for (var i = this.cfg.drop; i > 0; i--) {\n          generateKeystreamWord.call(this);\n        }\n      } });\n\n\n    /**\n             * Shortcut functions to the cipher's object interface.\n             *\n             * @example\n             *\n             *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n             *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n             */\n    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var StreamCipher = C_lib.StreamCipher;\n    var C_algo = C.algo;\n\n    // Reusable objects\n    var S = [];\n    var C_ = [];\n    var G = [];\n\n    /**\n                 * Rabbit stream cipher algorithm\n                 */\n    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n      _doReset: function _doReset() {\n        // Shortcuts\n        var K = this._key.words;\n        var iv = this.cfg.iv;\n\n        // Swap endian\n        for (var i = 0; i < 4; i++) {\n          K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff |\n          (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;\n        }\n\n        // Generate initial state values\n        var X = this._X = [\n        K[0], K[3] << 16 | K[2] >>> 16,\n        K[1], K[0] << 16 | K[3] >>> 16,\n        K[2], K[1] << 16 | K[0] >>> 16,\n        K[3], K[2] << 16 | K[1] >>> 16];\n\n\n        // Generate initial counter values\n        var C = this._C = [\n        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,\n        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,\n        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,\n        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];\n\n\n        // Carry bit\n        this._b = 0;\n\n        // Iterate the system four times\n        for (var i = 0; i < 4; i++) {\n          nextState.call(this);\n        }\n\n        // Modify the counters\n        for (var i = 0; i < 8; i++) {\n          C[i] ^= X[i + 4 & 7];\n        }\n\n        // IV setup\n        if (iv) {\n          // Shortcuts\n          var IV = iv.words;\n          var IV_0 = IV[0];\n          var IV_1 = IV[1];\n\n          // Generate four subvectors\n          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;\n          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;\n          var i1 = i0 >>> 16 | i2 & 0xffff0000;\n          var i3 = i2 << 16 | i0 & 0x0000ffff;\n\n          // Modify counter values\n          C[0] ^= i0;\n          C[1] ^= i1;\n          C[2] ^= i2;\n          C[3] ^= i3;\n          C[4] ^= i0;\n          C[5] ^= i1;\n          C[6] ^= i2;\n          C[7] ^= i3;\n\n          // Iterate the system four times\n          for (var i = 0; i < 4; i++) {\n            nextState.call(this);\n          }\n        }\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcut\n        var X = this._X;\n\n        // Iterate the system\n        nextState.call(this);\n\n        // Generate four keystream words\n        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;\n        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;\n        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;\n        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;\n\n        for (var i = 0; i < 4; i++) {\n          // Swap endian\n          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |\n          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;\n\n          // Encrypt\n          M[offset + i] ^= S[i];\n        }\n      },\n\n      blockSize: 128 / 32,\n\n      ivSize: 64 / 32 });\n\n\n    function nextState() {\n      // Shortcuts\n      var X = this._X;\n      var C = this._C;\n\n      // Save old counter values\n      for (var i = 0; i < 8; i++) {\n        C_[i] = C[i];\n      }\n\n      // Calculate new counter values\n      C[0] = C[0] + 0x4d34d34d + this._b | 0;\n      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;\n      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;\n      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;\n      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;\n      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;\n      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;\n      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;\n      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;\n\n      // Calculate the g-values\n      for (var i = 0; i < 8; i++) {\n        var gx = X[i] + C[i];\n\n        // Construct high and low argument for squaring\n        var ga = gx & 0xffff;\n        var gb = gx >>> 16;\n\n        // Calculate high and low result of squaring\n        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;\n        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);\n\n        // High XOR low\n        G[i] = gh ^ gl;\n      }\n\n      // Calculate new state values\n      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;\n      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;\n      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;\n      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;\n      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;\n      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;\n      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;\n      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;\n    }\n\n    /**\n       * Shortcut functions to the cipher's object interface.\n       *\n       * @example\n       *\n       *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n       *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n       */\n    C.Rabbit = StreamCipher._createHelper(Rabbit);\n  })();\n\n\n  (function () {\n    // Shortcuts\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var StreamCipher = C_lib.StreamCipher;\n    var C_algo = C.algo;\n\n    // Reusable objects\n    var S = [];\n    var C_ = [];\n    var G = [];\n\n    /**\n                 * Rabbit stream cipher algorithm.\n                 *\n                 * This is a legacy version that neglected to convert the key to little-endian.\n                 * This error doesn't affect the cipher's security,\n                 * but it does affect its compatibility with other implementations.\n                 */\n    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n      _doReset: function _doReset() {\n        // Shortcuts\n        var K = this._key.words;\n        var iv = this.cfg.iv;\n\n        // Generate initial state values\n        var X = this._X = [\n        K[0], K[3] << 16 | K[2] >>> 16,\n        K[1], K[0] << 16 | K[3] >>> 16,\n        K[2], K[1] << 16 | K[0] >>> 16,\n        K[3], K[2] << 16 | K[1] >>> 16];\n\n\n        // Generate initial counter values\n        var C = this._C = [\n        K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff,\n        K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff,\n        K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff,\n        K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];\n\n\n        // Carry bit\n        this._b = 0;\n\n        // Iterate the system four times\n        for (var i = 0; i < 4; i++) {\n          nextState.call(this);\n        }\n\n        // Modify the counters\n        for (var i = 0; i < 8; i++) {\n          C[i] ^= X[i + 4 & 7];\n        }\n\n        // IV setup\n        if (iv) {\n          // Shortcuts\n          var IV = iv.words;\n          var IV_0 = IV[0];\n          var IV_1 = IV[1];\n\n          // Generate four subvectors\n          var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;\n          var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;\n          var i1 = i0 >>> 16 | i2 & 0xffff0000;\n          var i3 = i2 << 16 | i0 & 0x0000ffff;\n\n          // Modify counter values\n          C[0] ^= i0;\n          C[1] ^= i1;\n          C[2] ^= i2;\n          C[3] ^= i3;\n          C[4] ^= i0;\n          C[5] ^= i1;\n          C[6] ^= i2;\n          C[7] ^= i3;\n\n          // Iterate the system four times\n          for (var i = 0; i < 4; i++) {\n            nextState.call(this);\n          }\n        }\n      },\n\n      _doProcessBlock: function _doProcessBlock(M, offset) {\n        // Shortcut\n        var X = this._X;\n\n        // Iterate the system\n        nextState.call(this);\n\n        // Generate four keystream words\n        S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;\n        S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;\n        S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;\n        S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;\n\n        for (var i = 0; i < 4; i++) {\n          // Swap endian\n          S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff |\n          (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;\n\n          // Encrypt\n          M[offset + i] ^= S[i];\n        }\n      },\n\n      blockSize: 128 / 32,\n\n      ivSize: 64 / 32 });\n\n\n    function nextState() {\n      // Shortcuts\n      var X = this._X;\n      var C = this._C;\n\n      // Save old counter values\n      for (var i = 0; i < 8; i++) {\n        C_[i] = C[i];\n      }\n\n      // Calculate new counter values\n      C[0] = C[0] + 0x4d34d34d + this._b | 0;\n      C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;\n      C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;\n      C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;\n      C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;\n      C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;\n      C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;\n      C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;\n      this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;\n\n      // Calculate the g-values\n      for (var i = 0; i < 8; i++) {\n        var gx = X[i] + C[i];\n\n        // Construct high and low argument for squaring\n        var ga = gx & 0xffff;\n        var gb = gx >>> 16;\n\n        // Calculate high and low result of squaring\n        var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;\n        var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);\n\n        // High XOR low\n        G[i] = gh ^ gl;\n      }\n\n      // Calculate new state values\n      X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;\n      X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;\n      X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;\n      X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;\n      X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;\n      X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;\n      X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;\n      X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;\n    }\n\n    /**\n       * Shortcut functions to the cipher's object interface.\n       *\n       * @example\n       *\n       *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n       *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n       */\n    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n  })();\n\n\n  return CryptoJS;\n\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/crypto.js */ 101)[\"default\"], __webpack_require__(/*! (webpack)/buildin/global.js */ 48), __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/crypto.js */ 101)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///100\n");

/***/ }),
/* 101 */
/*!*****************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/crypto.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var lookup = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 62, 0, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
  0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
  21, 22, 23, 24, 25, 0, 0, 0, 0, 63, 0, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
  40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51
]

function base64Decode (source, target) {
  var sourceLength = source.length
  var paddingLength = (source[sourceLength - 2] === '=' ? 2 : (source[sourceLength - 1] === '=' ? 1
    : 0))

  var tmp
  var byteIndex = 0
  var baseLength = (sourceLength - paddingLength) & 0xfffffffc

  for (var i = 0; i < baseLength; i += 4) {
    tmp = (lookup[source.charCodeAt(i)] << 18) |
      (lookup[source.charCodeAt(i + 1)] << 12) |
      (lookup[source.charCodeAt(i + 2)] << 6) |
      (lookup[source.charCodeAt(i + 3)])

    target[byteIndex++] = (tmp >> 16) & 0xFF
    target[byteIndex++] = (tmp >> 8) & 0xFF
    target[byteIndex++] = (tmp) & 0xFF
  }

  if (paddingLength === 1) {
    tmp = (lookup[source.charCodeAt(i)] << 10) |
      (lookup[source.charCodeAt(i + 1)] << 4) |
      (lookup[source.charCodeAt(i + 2)] >> 2)

    target[byteIndex++] = (tmp >> 8) & 0xFF
    target[byteIndex++] = tmp & 0xFF
  }

  if (paddingLength === 2) {
    tmp = (lookup[source.charCodeAt(i)] << 2) | (lookup[source.charCodeAt(i + 1)] >> 4)

    target[byteIndex++] = tmp & 0xFF
  }
}

/* harmony default export */ __webpack_exports__["default"] = ({
  getRandomValues (arr) {
    if (!(
      arr instanceof Int8Array ||
        arr instanceof Uint8Array ||
        arr instanceof Int16Array ||
        arr instanceof Uint16Array ||
        arr instanceof Int32Array ||
        arr instanceof Uint32Array ||
        arr instanceof Uint8ClampedArray
    )) {
      throw new Error('Expected an integer array')
    }
    if (arr.byteLength > 65536) {
      throw new Error('Can only request a maximum of 65536 bytes')
    }
    var crypto = uni.requireNativePlugin('DCloud-Crypto')
    base64Decode(crypto.getRandomValues(arr.byteLength), new Uint8Array(arr.buffer, arr.byteOffset,
      arr.byteLength))
    return arr
  }
});


/***/ }),
/* 102 */
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 103 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/api/global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.getTag = getTag;exports.replaceHTML = replaceHTML;exports.htmlDecodeByRegExp = htmlDecodeByRegExp;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _trie = _interopRequireDefault(__webpack_require__(/*! @/assets/other/trie.js */ 104));\nvar _s2t = __webpack_require__(/*! @/assets/other/s2t.js */ 105);\nvar _dict = __webpack_require__(/*! @/assets/other/dict.js */ 106);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === \"Object\" && o.constructor) n = o.constructor.name;if (n === \"Map\" || n === \"Set\") return Array.from(o);if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}var\n\ngetters = _store.default.getters;\n\n//获取关键词\nfunction getTag(source, cc) {\n  var sources = getters['source/get'];\n  var storyStoreDict = getters['dict/get'].filter(function (item) {return item.type == 'story';}).map(function (item) {\n    return item.title;\n  });\n  var comicStoreDict = getters['dict/get'].filter(function (item) {return item.type == 'comic';}).map(function (item) {\n    return item.title;\n  });\n  var bookIndex = sources.filter(function (item) {return item.type == 'story';}).findIndex(function (item) {return item.id == source;});\n  var comicIndex = sources.filter(function (item) {return item.type == 'comic';}).findIndex(function (item) {return item.id == source;});\n  var dict = comicIndex > -1 ? _dict.comicDict.concat(comicStoreDict) : _dict.bookDict.concat(storyStoreDict);\n  var str = (0, _s2t.simpleToTraditional)(dict.toString());\n  str = str + ',' + (0, _s2t.traditionalToSimple)(str);\n  str = str + ',' + str.toUpperCase();\n  str = str + ',' + str.toLowerCase();\n  dict = dict.concat(str.split(','));\n  var trie = new _trie.default();\n  trie.init(_toConsumableArray(new Set(dict)));\n  return trie.splitWords(cc);\n}\n\n/**\r\n   * 去除html字符串的无关内容\r\n   * @param {Number} html html字符串\r\n  */\nfunction replaceHTML(html) {\n  var str = JSON.stringify(html); //将html转化为字符\n  str = str.replace(/\\\\n/g, ''); //去除\\n\n  str = str.replace(/\\\\r/g, ''); //去除\\r\n  str = str.replace(/\\\\t/g, ''); //去除\\t\n  str = str.replace(/&nbsp;/g, ''); //去除&nbsp;\n  str = str.replace(/\\\\/g, ''); //去除掉无关的斜杠\n  return str;\n}\n\n//转义html特殊字符\nfunction htmlDecodeByRegExp(str) {\n  var s = \"\";\n  if (str.length == 0) return \"\";\n  s = str.replace(/&#58;/g, \":\");\n  s = s.replace(/&#32;/g, \" \");\n  s = s.replace(/&#33;/g, \"!\");\n  s = s.replace(/&#34;/g, '\"');\n  s = s.replace(/&#35;/g, \"#\");\n  s = s.replace(/&#36;/g, \"$\");\n  s = s.replace(/&#37;/g, \"%\");\n  s = s.replace(/&#38;/g, \"&\");\n  s = s.replace(/&#39;/g, \"'\");\n  s = s.replace(/&#40;/g, \"(\");\n  s = s.replace(/&#41;/g, \")\");\n  s = s.replace(/&#42;/g, \"*\");\n  s = s.replace(/&#43;/g, \"+\");\n  s = s.replace(/&#44;/g, \",\");\n  s = s.replace(/&#45;/g, \"-\");\n  s = s.replace(/&#46;/g, \".\");\n  s = s.replace(/&#47;/g, \"/\");\n  s = s.replace(/&#13;/g, \"\\n\");\n  s = s.replace(/<br\\/>/g, \"\\n\");\n  s = s.replace(/<br \\/>/g, \"\\n\");\n  s = s.replace(/&amp;/g, \"\");\n  s = s.replace(/#65279;/g, \"\");\n  s = s.replace(/&hellip;/g, '...');\n  s = s.replace(/&mdash;/g, '—');\n  s = s.replace(/&ldquo;/g, \"“\");\n  s = s.replace(/&rdquo;/g, \"”\");\n  s = s.replace(/&middot;/g, \".\");\n  return s;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///103\n");

/***/ }),
/* 104 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/trie.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = Trie;var stop = {\n  \"的\": 1 };\n\n\n\n// Trie树\nfunction Trie() {\n  this.root = new Node(null);\n}\n\nTrie.prototype = {\n  /**\r\n                    * 将Unicode转成UTF8的三字节\r\n                    */\n  toBytes: function toBytes(word) {\n    var result = [];\n    for (var i = 0; i < word.length; i++) {\n      var code = word.charCodeAt(i);\n      // 单字节\n      if (code < 0x80) {\n        result.push(code);\n      } else {\n        // 三字节\n        result = result.concat(this.toUTF8(code));\n      }\n    }\n    return result;\n  },\n\n  toUTF8: function toUTF8(c) {\n    // 1110xxxx 10xxxxxx 10xxxxxx\n    // 1110xxxx\n    var byte1 = 0xE0 | c >> 12 & 0x0F;\n    // 10xxxxxx\n    var byte2 = 0x80 | c >> 6 & 0x3F;\n    // 10xxxxxx\n    var byte3 = 0x80 | c & 0x3F;\n    return [byte1, byte2, byte3];\n  },\n\n  toUTF16: function toUTF16(b1, b2, b3) {\n    // 1110xxxx 10xxxxxx 10xxxxxx\n    var byte1 = b1 << 4 | b2 >> 2 & 0x0F;\n    var byte2 = (b2 & 0x03) << 6 | b3 & 0x3F;\n    var utf16 = (byte1 & 0x00FF) << 8 | byte2;\n    return utf16;\n  },\n\n  /**\r\n     * 添加每个词到Trie树\r\n     */\n  add: function add(word) {\n    var node = this.root,\n    bytes = this.toBytes(word),\n    len = bytes.length;\n    for (var i = 0; i < len; i++) {\n      var c = bytes[i];\n      // 如果不存在则添加，否则不需要再保存了，因为共用前缀\n      if (!(c in node.childs)) {\n        node.childs[c] = new Node(c);\n      }\n      node = node.childs[c];\n    }\n    node.asWord(); // 成词边界\n  },\n\n  /**\r\n     * 按字节在Trie树中搜索\r\n     */\n  search: function search(bytes) {\n    var node = this.root,\n    len = bytes.length,\n    result = [];\n    var word = [],\n    j = 0;\n    for (var i = 0; i < len; i++) {\n      var c = bytes[i],\n      childs = node.childs;\n      if (!(c in childs)) {\n        return result;\n      }\n      if (c < 0x80) {\n        word.push(String.fromCharCode(c));\n      } else {\n        j++;\n        if (j % 3 == 0) {\n          var b1 = bytes[i - 2];\n          var b2 = bytes[i - 1];\n          var b3 = c;\n          word.push(String.fromCharCode(this.toUTF16(b1, b2, b3)));\n        }\n      }\n      // 如果是停止词，则退出\n      if (word.join('') in stop) {\n        return result;\n      }\n      // 成词\n      var cnode = childs[c];\n      if (cnode.isWord()) {\n        cnode.addCount(); // 用于计数判断\n        result.push(word.join(''));\n      }\n      node = cnode;\n    }\n    return result;\n  },\n\n  /**\r\n     * 分词\r\n     */\n  splitWords: function splitWords(words) {\n    // 转换成单字节进行搜索\n    var bytes = this.toBytes(words);\n    var start = 0,\n    end = bytes.length - 1,\n    result = [];\n    while (start != end) {\n      var word = [];\n      for (var i = start; i <= end; i++) {\n        var b = bytes[i]; // 逐个取出字节\n        word.push(b);\n        var finds = this.search(word);\n        if (finds !== false && finds.length > 0) {\n          // 如果在字典中，则添加到分词结果集\n          result = result.concat(finds);\n        }\n      }\n      start++;\n    }\n    return result;\n  },\n\n  /**\r\n     * 词始化整棵Trie树\r\n     */\n  init: function init(dict) {\n    for (var i = 0; i < dict.length; i++) {\n      this.add(dict[i]);\n    }\n  } };\n\n\n\n\n// 节点\nfunction Node(_byte) {\n  this.childs = {}; // 子节点集合\n  this._byte = _byte || null; // 此节点上存储的字节\n  this._isWord = false; // 边界保存，表示是否可以组成一个词\n  this._count = 0;\n}\n\nNode.prototype = {\n  isWord: function isWord() {\n    return this._isWord && this._count == 0;\n  },\n  asWord: function asWord() {\n    this._isWord = true;\n  },\n  addCount: function addCount() {\n    this._count++;\n  },\n  getCount: function getCount() {\n    return this._count;\n  } };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///104\n");

/***/ }),
/* 105 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/s2t.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.simpleToTraditional = simpleToTraditional;exports.traditionalToSimple = traditionalToSimple;\nvar zh_s =\n'锕皑蔼碍爱嗳嫒瑷暧霭谙铵鹌肮袄奥媪骜鳌坝罢钯摆败呗颁办绊钣帮绑镑谤剥饱宝报鲍鸨龅辈贝钡狈备惫鹎贲锛绷笔毕毙币闭荜哔滗铋筚跸边编贬变辩辫苄缏笾标骠飑飙镖镳鳔鳖别瘪濒滨宾摈傧缤槟殡膑镔髌鬓饼禀拨钵铂驳饽钹鹁补钸财参蚕残惭惨灿骖黪苍舱仓沧厕侧册测恻层诧锸侪钗搀掺蝉馋谗缠铲产阐颤冁谄谶蒇忏婵骣觇禅镡场尝长偿肠厂畅伥苌怅阊鲳钞车彻砗尘陈衬伧谌榇碜龀撑称惩诚骋枨柽铖铛痴迟驰耻齿炽饬鸱冲冲虫宠铳畴踌筹绸俦帱雠橱厨锄雏础储触处刍绌蹰传钏疮闯创怆锤缍纯鹑绰辍龊辞词赐鹚聪葱囱从丛苁骢枞凑辏蹿窜撺错锉鹾达哒鞑带贷骀绐担单郸掸胆惮诞弹殚赕瘅箪当挡党荡档谠砀裆捣岛祷导盗焘灯邓镫敌涤递缔籴诋谛绨觌镝颠点垫电巅钿癫钓调铫鲷谍叠鲽钉顶锭订铤丢铥东动栋冻岽鸫窦犊独读赌镀渎椟牍笃黩锻断缎簖兑队对怼镦吨顿钝炖趸夺堕铎鹅额讹恶饿谔垩阏轭锇锷鹗颚颛鳄诶儿尔饵贰迩铒鸸鲕发罚阀珐矾钒烦贩饭访纺钫鲂飞诽废费绯镄鲱纷坟奋愤粪偾丰枫锋风疯冯缝讽凤沣肤辐抚辅赋复负讣妇缚凫驸绂绋赙麸鲋鳆钆该钙盖赅杆赶秆赣尴擀绀冈刚钢纲岗戆镐睾诰缟锆搁鸽阁铬个纥镉颍给亘赓绠鲠龚宫巩贡钩沟苟构购够诟缑觏蛊顾诂毂钴锢鸪鹄鹘剐挂鸹掴关观馆惯贯诖掼鹳鳏广犷规归龟闺轨诡贵刽匦刿妫桧鲑鳜辊滚衮绲鲧锅国过埚呙帼椁蝈铪骇韩汉阚绗颉号灏颢阂鹤贺诃阖蛎横轰鸿红黉讧荭闳鲎壶护沪户浒鹕哗华画划话骅桦铧怀坏欢环还缓换唤痪焕涣奂缳锾鲩黄谎鳇挥辉毁贿秽会烩汇讳诲绘诙荟哕浍缋珲晖荤浑诨馄阍获货祸钬镬击机积饥迹讥鸡绩缉极辑级挤几蓟剂济计记际继纪讦诘荠叽哜骥玑觊齑矶羁虿跻霁鲚鲫夹荚颊贾钾价驾郏浃铗镓蛲歼监坚笺间艰缄茧检碱硷拣捡简俭减荐槛鉴践贱见键舰剑饯渐溅涧谏缣戋戬睑鹣笕鲣鞯将浆蒋桨奖讲酱绛缰胶浇骄娇搅铰矫侥脚饺缴绞轿较挢峤鹪鲛阶节洁结诫届疖颌鲒紧锦仅谨进晋烬尽劲荆茎卺荩馑缙赆觐鲸惊经颈静镜径痉竞净刭泾迳弪胫靓纠厩旧阄鸠鹫驹举据锯惧剧讵屦榉飓钜锔窭龃鹃绢锩镌隽觉决绝谲珏钧军骏皲开凯剀垲忾恺铠锴龛闶钪铐颗壳课骒缂轲钶锞颔垦恳龈铿抠库裤喾块侩郐哙脍宽狯髋矿旷况诓诳邝圹纩贶亏岿窥馈溃匮蒉愦聩篑阃锟鲲扩阔蛴蜡腊莱来赖崃徕涞濑赉睐铼癞籁蓝栏拦篮阑兰澜谰揽览懒缆烂滥岚榄斓镧褴琅阆锒捞劳涝唠崂铑铹痨乐鳓镭垒类泪诔缧篱狸离鲤礼丽厉励砾历沥隶俪郦坜苈莅蓠呖逦骊缡枥栎轹砺锂鹂疠粝跞雳鲡鳢俩联莲连镰怜涟帘敛脸链恋炼练蔹奁潋琏殓裢裣鲢粮凉两辆谅魉疗辽镣缭钌鹩猎临邻鳞凛赁蔺廪檩辚躏龄铃灵岭领绫棂蛏鲮馏刘浏骝绺镏鹨龙聋咙笼垄拢陇茏泷珑栊胧砻楼娄搂篓偻蒌喽嵝镂瘘耧蝼髅芦卢颅庐炉掳卤虏鲁赂禄录陆垆撸噜闾泸渌栌橹轳辂辘氇胪鸬鹭舻鲈峦挛孪滦乱脔娈栾鸾銮抡轮伦仑沦纶论囵萝罗逻锣箩骡骆络荦猡泺椤脶镙驴吕铝侣屡缕虑滤绿榈褛锊呒妈玛码蚂马骂吗唛嬷杩买麦卖迈脉劢瞒馒蛮满谩缦镘颡鳗猫锚铆贸麽没镁门闷们扪焖懑钔锰梦眯谜弥觅幂芈谧猕祢绵缅渑腼黾庙缈缪灭悯闽闵缗鸣铭谬谟蓦馍殁镆谋亩钼呐钠纳难挠脑恼闹铙讷馁内拟腻铌鲵撵辇鲶酿鸟茑袅聂啮镊镍陧蘖嗫颟蹑柠狞宁拧泞苎咛聍钮纽脓浓农侬哝驽钕诺傩疟欧鸥殴呕沤讴怄瓯盘蹒庞抛疱赔辔喷鹏纰罴铍骗谝骈飘缥频贫嫔苹凭评泼颇钋扑铺朴谱镤镨栖脐齐骑岂启气弃讫蕲骐绮桤碛颀颃鳍牵钎铅迁签谦钱钳潜浅谴堑佥荨悭骞缱椠钤枪呛墙蔷强抢嫱樯戗炝锖锵镪羟跄锹桥乔侨翘窍诮谯荞缲硗跷窃惬锲箧钦亲寝锓轻氢倾顷请庆揿鲭琼穷茕蛱巯赇虮鳅趋区躯驱龋诎岖阒觑鸲颧权劝诠绻辁铨却鹊确阕阙悫让饶扰绕荛娆桡热韧认纫饪轫荣绒嵘蝾缛铷颦软锐蚬闰润洒萨飒鳃赛伞毵糁丧骚扫缫涩啬铯穑杀刹纱铩鲨筛晒酾删闪陕赡缮讪姗骟钐鳝墒伤赏垧殇觞烧绍赊摄慑设厍滠畲绅审婶肾渗诜谂渖声绳胜师狮湿诗时蚀实识驶势适释饰视试谥埘莳弑轼贳铈鲥寿兽绶枢输书赎属术树竖数摅纾帅闩双谁税顺说硕烁铄丝饲厮驷缌锶鸶耸怂颂讼诵擞薮馊飕锼苏诉肃谡稣虽随绥岁谇孙损笋荪狲缩琐锁唢睃獭挞闼铊鳎台态钛鲐摊贪瘫滩坛谭谈叹昙钽锬顸汤烫傥饧铴镗涛绦讨韬铽腾誊锑题体屉缇鹈阗条粜龆鲦贴铁厅听烃铜统恸头钭秃图钍团抟颓蜕饨脱鸵驮驼椭箨鼍袜娲腽弯湾顽万纨绾网辋韦违围为潍维苇伟伪纬谓卫诿帏闱沩涠玮韪炜鲔温闻纹稳问阌瓮挝蜗涡窝卧莴龌呜钨乌诬无芜吴坞雾务误邬庑怃妩骛鹉鹜锡牺袭习铣戏细饩阋玺觋虾辖峡侠狭厦吓硖鲜纤贤衔闲显险现献县馅羡宪线苋莶藓岘猃娴鹇痫蚝籼跹厢镶乡详响项芗饷骧缃飨萧嚣销晓啸哓潇骁绡枭箫协挟携胁谐写泻谢亵撷绁缬锌衅兴陉荥凶汹锈绣馐鸺虚嘘须许叙绪续诩顼轩悬选癣绚谖铉镟学谑泶鳕勋询寻驯训讯逊埙浔鲟压鸦鸭哑亚讶垭娅桠氩阉烟盐严岩颜阎艳厌砚彦谚验厣赝俨兖谳恹闫酽魇餍鼹鸯杨扬疡阳痒养样炀瑶摇尧遥窑谣药轺鹞鳐爷页业叶靥谒邺晔烨医铱颐遗仪蚁艺亿忆义诣议谊译异绎诒呓峄饴怿驿缢轶贻钇镒镱瘗舣荫阴银饮隐铟瘾樱婴鹰应缨莹萤营荧蝇赢颖茔莺萦蓥撄嘤滢潆璎鹦瘿颏罂哟拥佣痈踊咏镛优忧邮铀犹诱莸铕鱿舆鱼渔娱与屿语狱誉预驭伛俣谀谕蓣嵛饫阈妪纡觎欤钰鹆鹬龉鸳渊辕园员圆缘远橼鸢鼋约跃钥粤悦阅钺郧匀陨运蕴酝晕韵郓芸恽愠纭韫殒氲杂灾载攒暂赞瓒趱錾赃脏驵凿枣责择则泽赜啧帻箦贼谮赠综缯轧铡闸栅诈斋债毡盏斩辗崭栈战绽谵张涨帐账胀赵诏钊蛰辙锗这谪辄鹧贞针侦诊镇阵浈缜桢轸赈祯鸩挣睁狰争帧症郑证诤峥钲铮筝织职执纸挚掷帜质滞骘栉栀轵轾贽鸷蛳絷踬踯觯钟终种肿众锺诌轴皱昼骤纣绉猪诸诛烛瞩嘱贮铸驻伫槠铢专砖转赚啭馔颞桩庄装妆壮状锥赘坠缀骓缒谆准着浊诼镯兹资渍谘缁辎赀眦锱龇鲻踪总纵偬邹诹驺鲰诅组镞钻缵躜鳟翱并卜沉丑淀迭斗范干皋硅柜后伙秸杰诀夸里凌么霉捻凄扦圣尸抬涂洼喂污锨咸蝎彝涌游吁御愿岳云灶扎札筑于志注凋讠谫郄勐凼坂垅垴埯埝苘荬荮莜莼菰藁揸吒吣咔咝咴噘噼嚯幞岙嵴彷徼犸狍馀馇馓馕愣憷懔丬溆滟溷漤潴澹甯纟绔绱珉枧桊桉槔橥轱轷赍肷胨飚煳煅熘愍淼砜磙眍钚钷铘铞锃锍锎锏锘锝锪锫锿镅镎镢镥镩镲稆鹋鹛鹱疬疴痖癯裥襁耢颥螨麴鲅鲆鲇鲞鲴鲺鲼鳊鳋鳘鳙鞒鞴齄';\nvar zh_t =\n'錒皚藹礙愛噯嬡璦曖靄諳銨鵪骯襖奧媼驁鰲壩罷鈀擺敗唄頒辦絆鈑幫綁鎊謗剝飽寶報鮑鴇齙輩貝鋇狽備憊鵯賁錛繃筆畢斃幣閉蓽嗶潷鉍篳蹕邊編貶變辯辮芐緶籩標驃颮飆鏢鑣鰾鱉別癟瀕濱賓擯儐繽檳殯臏鑌髕鬢餅稟撥缽鉑駁餑鈸鵓補鈽財參蠶殘慚慘燦驂黲蒼艙倉滄廁側冊測惻層詫鍤儕釵攙摻蟬饞讒纏鏟產闡顫囅諂讖蕆懺嬋驏覘禪鐔場嘗長償腸廠暢倀萇悵閶鯧鈔車徹硨塵陳襯傖諶櫬磣齔撐稱懲誠騁棖檉鋮鐺癡遲馳恥齒熾飭鴟沖衝蟲寵銃疇躊籌綢儔幬讎櫥廚鋤雛礎儲觸處芻絀躕傳釧瘡闖創愴錘綞純鶉綽輟齪辭詞賜鶿聰蔥囪從叢蓯驄樅湊輳躥竄攛錯銼鹺達噠韃帶貸駘紿擔單鄲撣膽憚誕彈殫賧癉簞當擋黨蕩檔讜碭襠搗島禱導盜燾燈鄧鐙敵滌遞締糴詆諦綈覿鏑顛點墊電巔鈿癲釣調銚鯛諜疊鰈釘頂錠訂鋌丟銩東動棟凍崠鶇竇犢獨讀賭鍍瀆櫝牘篤黷鍛斷緞籪兌隊對懟鐓噸頓鈍燉躉奪墮鐸鵝額訛惡餓諤堊閼軛鋨鍔鶚顎顓鱷誒兒爾餌貳邇鉺鴯鮞發罰閥琺礬釩煩販飯訪紡鈁魴飛誹廢費緋鐨鯡紛墳奮憤糞僨豐楓鋒風瘋馮縫諷鳳灃膚輻撫輔賦復負訃婦縛鳧駙紱紼賻麩鮒鰒釓該鈣蓋賅桿趕稈贛尷搟紺岡剛鋼綱崗戇鎬睪誥縞鋯擱鴿閣鉻個紇鎘潁給亙賡綆鯁龔宮鞏貢鉤溝茍構購夠詬緱覯蠱顧詁轂鈷錮鴣鵠鶻剮掛鴰摑關觀館慣貫詿摜鸛鰥廣獷規歸龜閨軌詭貴劊匭劌媯檜鮭鱖輥滾袞緄鯀鍋國過堝咼幗槨蟈鉿駭韓漢闞絎頡號灝顥閡鶴賀訶闔蠣橫轟鴻紅黌訌葒閎鱟壺護滬戶滸鶘嘩華畫劃話驊樺鏵懷壞歡環還緩換喚瘓煥渙奐繯鍰鯇黃謊鰉揮輝毀賄穢會燴匯諱誨繪詼薈噦澮繢琿暉葷渾諢餛閽獲貨禍鈥鑊擊機積饑跡譏雞績緝極輯級擠幾薊劑濟計記際繼紀訐詰薺嘰嚌驥璣覬齏磯羈蠆躋霽鱭鯽夾莢頰賈鉀價駕郟浹鋏鎵蟯殲監堅箋間艱緘繭檢堿鹼揀撿簡儉減薦檻鑒踐賤見鍵艦劍餞漸濺澗諫縑戔戩瞼鶼筧鰹韉將漿蔣槳獎講醬絳韁膠澆驕嬌攪鉸矯僥腳餃繳絞轎較撟嶠鷦鮫階節潔結誡屆癤頜鮚緊錦僅謹進晉燼盡勁荊莖巹藎饉縉贐覲鯨驚經頸靜鏡徑痙競凈剄涇逕弳脛靚糾廄舊鬮鳩鷲駒舉據鋸懼劇詎屨櫸颶鉅鋦窶齟鵑絹錈鐫雋覺決絕譎玨鈞軍駿皸開凱剴塏愾愷鎧鍇龕閌鈧銬顆殼課騍緙軻鈳錁頷墾懇齦鏗摳庫褲嚳塊儈鄶噲膾寬獪髖礦曠況誆誑鄺壙纊貺虧巋窺饋潰匱蕢憒聵簣閫錕鯤擴闊蠐蠟臘萊來賴崍徠淶瀨賚睞錸癩籟藍欄攔籃闌蘭瀾讕攬覽懶纜爛濫嵐欖斕鑭襤瑯閬鋃撈勞澇嘮嶗銠鐒癆樂鰳鐳壘類淚誄縲籬貍離鯉禮麗厲勵礫歷瀝隸儷酈壢藶蒞蘺嚦邐驪縭櫪櫟轢礪鋰鸝癘糲躒靂鱺鱧倆聯蓮連鐮憐漣簾斂臉鏈戀煉練蘞奩瀲璉殮褳襝鰱糧涼兩輛諒魎療遼鐐繚釕鷯獵臨鄰鱗凜賃藺廩檁轔躪齡鈴靈嶺領綾欞蟶鯪餾劉瀏騮綹鎦鷚龍聾嚨籠壟攏隴蘢瀧瓏櫳朧礱樓婁摟簍僂蔞嘍嶁鏤瘺耬螻髏蘆盧顱廬爐擄鹵虜魯賂祿錄陸壚擼嚕閭瀘淥櫨櫓轤輅轆氌臚鸕鷺艫鱸巒攣孿灤亂臠孌欒鸞鑾掄輪倫侖淪綸論圇蘿羅邏鑼籮騾駱絡犖玀濼欏腡鏍驢呂鋁侶屢縷慮濾綠櫚褸鋝嘸媽瑪碼螞馬罵嗎嘜嬤榪買麥賣邁脈勱瞞饅蠻滿謾縵鏝顙鰻貓錨鉚貿麼沒鎂門悶們捫燜懣鍆錳夢瞇謎彌覓冪羋謐獼禰綿緬澠靦黽廟緲繆滅憫閩閔緡鳴銘謬謨驀饃歿鏌謀畝鉬吶鈉納難撓腦惱鬧鐃訥餒內擬膩鈮鯢攆輦鯰釀鳥蔦裊聶嚙鑷鎳隉蘗囁顢躡檸獰寧擰濘苧嚀聹鈕紐膿濃農儂噥駑釹諾儺瘧歐鷗毆嘔漚謳慪甌盤蹣龐拋皰賠轡噴鵬紕羆鈹騙諞駢飄縹頻貧嬪蘋憑評潑頗釙撲鋪樸譜鏷鐠棲臍齊騎豈啟氣棄訖蘄騏綺榿磧頎頏鰭牽釬鉛遷簽謙錢鉗潛淺譴塹僉蕁慳騫繾槧鈐槍嗆墻薔強搶嬙檣戧熗錆鏘鏹羥蹌鍬橋喬僑翹竅誚譙蕎繰磽蹺竊愜鍥篋欽親寢鋟輕氫傾頃請慶撳鯖瓊窮煢蛺巰賕蟣鰍趨區軀驅齲詘嶇闃覷鴝顴權勸詮綣輇銓卻鵲確闋闕愨讓饒擾繞蕘嬈橈熱韌認紉飪軔榮絨嶸蠑縟銣顰軟銳蜆閏潤灑薩颯鰓賽傘毿糝喪騷掃繅澀嗇銫穡殺剎紗鎩鯊篩曬釃刪閃陜贍繕訕姍騸釤鱔墑傷賞坰殤觴燒紹賒攝懾設厙灄畬紳審嬸腎滲詵諗瀋聲繩勝師獅濕詩時蝕實識駛勢適釋飾視試謚塒蒔弒軾貰鈰鰣壽獸綬樞輸書贖屬術樹豎數攄紓帥閂雙誰稅順說碩爍鑠絲飼廝駟緦鍶鷥聳慫頌訟誦擻藪餿颼鎪蘇訴肅謖穌雖隨綏歲誶孫損筍蓀猻縮瑣鎖嗩脧獺撻闥鉈鰨臺態鈦鮐攤貪癱灘壇譚談嘆曇鉭錟頇湯燙儻餳鐋鏜濤絳討韜鋱騰謄銻題體屜緹鵜闐條糶齠鰷貼鐵廳聽烴銅統慟頭鈄禿圖釷團摶頹蛻飩脫鴕馱駝橢籜鼉襪媧膃彎灣頑萬紈綰網輞韋違圍為濰維葦偉偽緯謂衛諉幃闈溈潿瑋韙煒鮪溫聞紋穩問閿甕撾蝸渦窩臥萵齷嗚鎢烏誣無蕪吳塢霧務誤鄔廡憮嫵騖鵡鶩錫犧襲習銑戲細餼鬩璽覡蝦轄峽俠狹廈嚇硤鮮纖賢銜閑顯險現獻縣餡羨憲線莧薟蘚峴獫嫻鷴癇蠔秈躚廂鑲鄉詳響項薌餉驤緗饗蕭囂銷曉嘯嘵瀟驍綃梟簫協挾攜脅諧寫瀉謝褻擷紲纈鋅釁興陘滎兇洶銹繡饈鵂虛噓須許敘緒續詡頊軒懸選癬絢諼鉉鏇學謔澩鱈勛詢尋馴訓訊遜塤潯鱘壓鴉鴨啞亞訝埡婭椏氬閹煙鹽嚴巖顏閻艷厭硯彥諺驗厴贗儼兗讞懨閆釅魘饜鼴鴦楊揚瘍陽癢養樣煬瑤搖堯遙窯謠藥軺鷂鰩爺頁業葉靨謁鄴曄燁醫銥頤遺儀蟻藝億憶義詣議誼譯異繹詒囈嶧飴懌驛縊軼貽釔鎰鐿瘞艤蔭陰銀飲隱銦癮櫻嬰鷹應纓瑩螢營熒蠅贏穎塋鶯縈鎣攖嚶瀅瀠瓔鸚癭頦罌喲擁傭癰踴詠鏞優憂郵鈾猶誘蕕銪魷輿魚漁娛與嶼語獄譽預馭傴俁諛諭蕷崳飫閾嫗紆覦歟鈺鵒鷸齬鴛淵轅園員圓緣遠櫞鳶黿約躍鑰粵悅閱鉞鄖勻隕運蘊醞暈韻鄆蕓惲慍紜韞殞氳雜災載攢暫贊瓚趲鏨贓臟駔鑿棗責擇則澤賾嘖幘簀賊譖贈綜繒軋鍘閘柵詐齋債氈盞斬輾嶄棧戰綻譫張漲帳賬脹趙詔釗蟄轍鍺這謫輒鷓貞針偵診鎮陣湞縝楨軫賑禎鴆掙睜猙爭幀癥鄭證諍崢鉦錚箏織職執紙摯擲幟質滯騭櫛梔軹輊贄鷙螄縶躓躑觶鐘終種腫眾鍾謅軸皺晝驟紂縐豬諸誅燭矚囑貯鑄駐佇櫧銖專磚轉賺囀饌顳樁莊裝妝壯狀錐贅墜綴騅縋諄準著濁諑鐲茲資漬諮緇輜貲眥錙齜鯔蹤總縱傯鄒諏騶鯫詛組鏃鉆纘躦鱒翺並蔔沈醜澱叠鬥範幹臯矽櫃後夥稭傑訣誇裏淩麽黴撚淒扡聖屍擡塗窪餵汙鍁鹹蠍彜湧遊籲禦願嶽雲竈紮劄築於誌註雕訁譾郤猛氹阪壟堖垵墊檾蕒葤蓧蒓菇槁摣咤唚哢噝噅撅劈謔襆嶴脊仿僥獁麅餘餷饊饢楞怵懍爿漵灩混濫瀦淡寧糸絝緔瑉梘棬案橰櫫軲軤賫膁腖飈糊煆溜湣渺碸滾瞘鈈鉕鋣銱鋥鋶鐦鐧鍩鍀鍃錇鎄鎇鎿鐝鑥鑹鑔穭鶓鶥鸌癧屙瘂臒襇繈耮顬蟎麯鮁鮃鮎鯗鯝鯴鱝鯿鰠鰵鱅鞽韝齇';\n\n/**\r\nevent {Function()} simpleToTraditional \r\nauthor yingbing\r\ndescription 简转繁\r\nparam {String} cc = [需要转换的文本] \r\nreturn {String}\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            **/\nfunction simpleToTraditional(cc) {\n  var str = '';\n  for (var i = 0; i < cc.length; i++) {\n    var index = zh_s.indexOf(cc.charAt(i));\n    if (index != -1) {\n      str += zh_t.charAt(index);\n    } else {\n      str += cc.charAt(i);\n    }\n  }\n  return str;\n}\n\n/**\r\n   * @event {Function()} traditionalToSimple \r\n   * @author yingbing\r\n   * @description 繁转简\r\n   * @param {String} cc = [需要转换的文本] \r\n   * @return {String}\r\n   **/\nfunction traditionalToSimple(cc) {\n  var str = '';\n  for (var i = 0; i < cc.length; i++) {\n    var index = zh_t.indexOf(cc.charAt(i));\n    if (index != -1) {\n      str += zh_s.charAt(index);\n    } else {\n      str += cc.charAt(i);\n    }\n  }\n  return str;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///105\n");

/***/ }),
/* 106 */
/*!*********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/dict.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.comicDict = exports.bookDict = void 0;var bookDict = [\n'种田',\n'种田文',\n'种田流',\n'部落',\n'史前',\n'物种',\n'穿越',\n'穿越时空',\n'穿书',\n'快穿',\n'系统',\n'清穿',\n'武侠',\n'江湖',\n'侠客',\n'行侠仗义',\n'快意恩仇',\n'改文',\n'异能',\n'随身空间',\n'金手指',\n'玉佩',\n'打脸',\n'磨难',\n'星际',\n'日常',\n'爽文',\n'基建',\n'甜文',\n'甜宠',\n'萌宠',\n'主受',\n'主攻',\n'CP',\n'NPC',\n'搞笑',\n'完结',\n'番外',\n'轻松',\n'强推',\n'金推',\n'vip',\n'晋江',\n'起点',\n'书刊',\n'顶点',\n'笔趣阁',\n'黑岩',\n'PO18',\n'女强',\n'强强',\n'综漫',\n'综武侠',\n'综神话',\n'综影视',\n'HP',\n'火影',\n'斗罗',\n'无限',\n'无限流',\n'兑换',\n'主神',\n'耽美',\n'仙侠修真',\n'仙侠',\n'修真',\n'修仙',\n'神幻',\n'神怪',\n'洪荒',\n'宗门',\n'青龙',\n'朱雀',\n'玄武',\n'白虎',\n'神兽',\n'凤凰',\n'麒麟',\n'蛇妖',\n'蛇精',\n'九尾',\n'狐狸',\n'狐妖',\n'狐狸精',\n'狐精',\n'练功流',\n'热血',\n'丹药',\n'炼丹',\n'丹修',\n'药师',\n'剑修',\n'剑灵',\n'剑圣',\n'灵修',\n'妖修',\n'魔灵',\n'修士',\n'灵宠',\n'天仙',\n'仙女',\n'天神',\n'都市',\n'特种兵',\n'兵王',\n'男女',\n'玄幻',\n'魔法',\n'魔法师',\n'魔法少女',\n'马猴烧酒',\n'委员',\n'社团',\n'战斗',\n'养成',\n'废宅',\n'作家',\n'陷阱',\n'英雄',\n'Hero',\n'肥宅',\n'催眠',\n'野望',\n'小学生',\n'高中',\n'大学',\n'物语',\n'幻想',\n'幻想曲',\n'长篇',\n'短篇',\n'中篇',\n'狂想',\n'狂想曲',\n'东方',\n'大小姐',\n'女儿',\n'女友',\n'法师',\n'骑士',\n'战士',\n'西幻',\n'东幻',\n'大陆',\n'魔法幻情',\n'亡灵',\n'亡灵异族',\n'邪恶',\n'史诗',\n'史诗奇幻',\n'魔女',\n'女巫',\n'巫女',\n'巫师',\n'治愈',\n'治愈系',\n'怪物',\n'Monster',\n'Witch',\n'异世',\n'异界',\n'异世界',\n'勇者',\n'少女',\n'恶龙',\n'魔王',\n'轻小说',\n'冒险',\n'奇幻',\n'奇异',\n'召唤',\n'恶魔',\n'魅魔',\n'梦魇',\n'兽人',\n'尸鬼',\n'吸血鬼',\n'血族',\n'狼人',\n'魔兽',\n'转生',\n'硬核',\n'历史',\n'恐怖',\n'悬疑',\n'侦探',\n'警察',\n'女警',\n'案件',\n'间谍',\n'特工',\n'谍战',\n'改编',\n'推理',\n'盗墓',\n'倒斗',\n'阴谋',\n'摸金校尉',\n'变幻莫测',\n'奇事',\n'怪事',\n'诡异',\n'离奇',\n'灵异',\n'神怪',\n'网游',\n'全息',\n'科幻',\n'建设',\n'领袖',\n'领地',\n'领主',\n'同人',\n'剑三',\n'末日',\n'末世',\n'病毒',\n'丧尸',\n'生存',\n'求生',\n'荒岛',\n'小岛',\n'无人岛',\n'流落',\n'基地',\n'进化',\n'虫族',\n'异形',\n'灾变',\n'法则',\n'位面',\n'时代',\n'大佬',\n'言情',\n'古言',\n'古早',\n'虐文',\n'虐恋',\n'婚恋',\n'婚姻',\n'狗血',\n'现言',\n'现耽',\n'古耽',\n'豪门',\n'商业',\n'商战',\n'世家',\n'总裁',\n'黑化',\n'ooc',\n'都市情缘',\n'金丝雀',\n'娱乐圈',\n'带球跑',\n'怀孕',\n'初恋',\n'双洁',\n'双处',\n'追妻',\n'追妻火葬场',\n'海王',\n'渣男',\n'渣女',\n'影帝',\n'影后',\n'小白',\n'女尊',\n'师尊',\n'师父',\n'师傅',\n'师姐',\n'师兄',\n'师妹',\n'师弟',\n'神仙',\n'天师',\n'传承',\n'人鬼',\n'人鬼殊途',\n'人鬼情未了',\n'女鬼',\n'鬼怪',\n'幽灵',\n'茅山',\n'僵尸',\n'妖怪',\n'宠物',\n'成精',\n'修炼',\n'道士',\n'道长',\n'半仙',\n'风水',\n'水猴子',\n'水鬼',\n'鬼王',\n'鬼蜮',\n'地狱',\n'地府',\n'鬼差',\n'红衣',\n'恶鬼',\n'凶灵',\n'协议',\n'合约',\n'契约',\n'百鬼夜行',\n'布衣',\n'布衣生活',\n'田园',\n'农家',\n'农村',\n'山野人家',\n'山村',\n'重生',\n'电竞',\n'电子竞技',\n'竞技',\n'游戏',\n'死亡游戏',\n'综艺',\n'玛丽苏',\n'古风',\n'大明',\n'明朝',\n'大唐',\n'唐朝',\n'宋朝',\n'大宋',\n'春秋',\n'战国',\n'情有独钟',\n'破镜重圆',\n'阴差阳错',\n'天作之和',\n'天选之人',\n'天选之子',\n'平步青云',\n'天才',\n'太上皇',\n'皇帝',\n'女帝',\n'女王',\n'太女',\n'皇后',\n'太后',\n'太子',\n'奸臣',\n'公主',\n'驸马',\n'宫廷',\n'侯爵',\n'反派',\n'Boss',\n'千金',\n'小姐',\n'知己',\n'反派',\n'新婚',\n'妓女',\n'青楼',\n'怡红院',\n'女子',\n'娇妻',\n'妻子',\n'妻儿',\n'妻女',\n'妇女',\n'父女',\n'父子',\n'母子',\n'母女',\n'女儿',\n'孩子',\n'儿子',\n'收养',\n'孤儿',\n'妻离子散',\n'家破人亡',\n'惨绝人寰',\n'联姻',\n'校花',\n'死对头',\n'前任',\n'女配',\n'女主',\n'替身',\n'宠妻',\n'男主',\n'男配',\n'校草',\n'校霸',\n'逆袭',\n'屌丝',\n'炮灰',\n'霸总',\n'绿茶',\n'复仇',\n'深仇大恨',\n'血海深仇',\n'青梅',\n'竹马',\n'青梅竹马',\n'白月光',\n'姐妹',\n'姐弟',\n'兄妹',\n'骨科',\n'未来',\n'未来架空',\n'历史衍生',\n'1v1',\n'私设',\n'天降',\n'架空',\n'失忆',\n'现言',\n'男生',\n'女生',\n'女神',\n'民国',\n'租界',\n'出版',\n'纪实',\n'日记',\n'传记',\n'名著',\n'精校',\n'50年代',\n'五十年代',\n'五零',\n'60年代',\n'六十年代',\n'六零',\n'70年代',\n'七十年代',\n'七零',\n'80年代',\n'八十年代',\n'八零',\n'90年代',\n'九十年代',\n'九零',\n'年代文',\n'龙傲天',\n'升级流',\n'升级',\n'双胞胎',\n'双子',\n'灵魂',\n'灵魂转换',\n'换身',\n'百合',\n'女变男',\n'同性恋',\n'les',\n'lesbian',\n'gl',\n'扶她',\n'Futa',\n'双性',\n'变百',\n'性转',\n'变身',\n'生子',\n'男装',\n'女装',\n'abo',\n'Alpha',\n'Beta',\n'Omega',\n'高h',\n'np',\n'后宫',\n'萝莉',\n'loli',\n'校园',\n'同桌',\n'师生',\n'病娇',\n'美食',\n'隐婚',\n'搞笑',\n'保镖',\n'无敌',\n'风俗',\n'cos',\n'cosplay',\n'coser',\n'二次元',\n'动漫',\n'Acg',\n'史莱姆',\n'宅男',\n'宅女',\n'腐女',\n'系列',\n'作品',\n'娃娃',\n'手办'];exports.bookDict = bookDict;\n\n\nvar comicDict = [\n'热血',\n'黑帮',\n'鬼才',\n'生活',\n'高中',\n'校队',\n'初中',\n'猎奇',\n'运动',\n'吸血鬼',\n'血族',\n'赛车',\n'勇者',\n'冒险',\n'冒险者',\n'小队',\n'公主',\n'国王',\n'恶龙',\n'史莱姆',\n'异世界',\n'异界',\n'异世',\n'穿越',\n'魔法',\n'魔物',\n'骷髅',\n'进化',\n'不死',\n'转生',\n'奇幻',\n'经典',\n'同伴',\n'学院',\n'魔术',\n'首席',\n'温馨',\n'喜剧',\n'魔族',\n'魔法少女',\n'马猴烧酒',\n'机战',\n'机甲',\n'装甲',\n'机器人',\n'战争',\n'人性',\n'人形',\n'人偶',\n'作品',\n'同人',\n'老物',\n'年代物',\n'单行本',\n'杂志',\n'周刊',\n'Comic',\n'Comic Lo',\n'Acg',\n'四格',\n'搞笑',\n'日常',\n'欢乐',\n'女装',\n'感人',\n'沙雕',\n'女友',\n'男友',\n'前男友',\n'前女友',\n'前任',\n'大叔',\n'同事',\n'工作',\n'风俗',\n'灵异',\n'恐怖',\n'悬疑',\n'百合',\n'酒精',\n'yuri',\n'ゆり',\n'修仙',\n'修真',\n'末世',\n'末日',\n'丧尸',\n'病毒',\n'灾难',\n'宅男',\n'宅女',\n'腐女',\n'少女',\n'女生',\n'男生',\n'少年',\n'小孩',\n'后宫',\n'汉化组',\n'汉化',\n'中国语',\n'翻译',\n'国漫',\n'日漫',\n'风景',\n'事件',\n'美食',\n'真人',\n'青梅竹马',\n'恋爱',\n'工口',\n'エロ',\n'童贞',\n'短篇',\n'长篇',\n'剧情',\n'骨科',\n'舞蹈',\n'兄妹',\n'妹',\n'お兄',\n'姉',\n'姐弟',\n'妹妹',\n'哥哥',\n'姐姐',\n'性转',\n'双性',\n'futa',\n'futanari',\n'扶她',\n'扶他',\n'萝莉',\n'幼女',\n'ロリ',\n'Loli',\n'Lolita',\n'Lolicon',\n'Cute',\n'可爱',\n'可愛い',\n'角色',\n'阿姨',\n'叔母',\n'老师',\n'先生',\n'おば様',\n'おば',\n'人妻',\n'精灵',\n'妖精',\n'OL',\n'双马尾',\n'不知火舞',\n'Tifa',\n'蒂法',\n'Rem',\n'蕾姆',\n'女仆',\n'护士',\n'小姐姐',\n'女优',\n'偶像',\n'Idol',\n'忍者',\n'2b',\n'拳皇',\n'Kof',\n'nier',\n'尼尔',\n'岛风',\n'狂三',\n\n'乡下',\n'乡村',\n'夏天',\n'夏日',\n'夏期',\n'暑假',\n'补习',\n'彩页',\n'全彩',\n'双胞胎',\n'双子',\n'荒岛',\n'小岛',\n'无人岛',\n'流落',\n'遭难',\n'FullColor',\n'游戏',\n'ゲーム',\n'CG',\n'时间停止',\n'触手',\n'媚药',\n'检察官',\n'绑架',\n'监禁',\n'强暴',\n'强奸',\n'凌辱',\n'实写',\n'真实',\n'催眠',\n'睡眠',\n'恶堕',\n'睡奸',\n'幼驯染',\n'射精',\n'管理',\n'店员',\n'社长',\n'淫乱',\n'島',\n'诊所',\n'医院',\n'病気',\n'病院',\n'邻居',\n'青春期',\n'援交',\n'拷问',\n'韩漫',\n'黑皮',\n'黒い',\n'晒痕',\n'晒伤',\n'日焼',\n'横切',\n'奴隶',\n'可爱',\n'系列',\n'本子',\n'ntr',\n'无惨',\n'无修正',\n'无修',\n'Pixiv',\n'P站',\n'杂图',\n'插图',\n'散图',\n'画册',\n'图册',\n'美图',\n'伦理',\n'家庭',\n'学生',\n'幼稚',\n'小学生',\n'中学生',\n'初中生',\n'高中生',\n'大学生',\n'Js',\n'Jc',\n'Jk',\n\n'画师',\n'彩画堂',\n'水龙敬',\n'黑犬',\n'Black Dog',\n'かるま龍狼',\n\n'圣诞',\n'泳池',\n'Pool',\n'海滩',\n'沙滩',\n'Bitch',\n'温泉',\n'澡堂',\n'風呂',\n'卧室',\n'学校',\n'幼稚园',\n'校园',\n'校園',\n'艺校',\n'艺术',\n'90后',\n'教室',\n'浴室',\n'酒店',\n'School',\n'Girl',\n'av',\n'番号',\n'极品',\n'捆绑',\n'拍摄',\n'人体',\n'全裸',\n'裸体',\n'摄影',\n'纯爱',\n'短片',\n'清凉',\n\n'Uniform',\n'制服',\n'和服',\n'护士服',\n'水手服',\n'白丝',\n'黑丝',\n'丝袜',\n'胖次',\n'Pants',\n'欧派',\n'绝对领域',\n'体操服',\n'迷你裙',\n'热裤',\n'旗袍',\n'内衣',\n'内裤',\n'China',\n'水手服',\n'比基尼',\n'泳衣',\n'死库水',\n'校服',\n'短裙',\n'超短裙',\n'蕾丝',\n\n'超清',\n'高清',\n'诱惑',\n'勾引',\n'引诱',\n'精选',\n'精品',\n'唯美',\n'身材',\n'极品',\n'嫩妹',\n'女孩',\n'白虎',\n'私密',\n'嫩穴',\n'无毛',\n'Pussy',\n'Ass',\n'白嫩',\n'粉嫩',\n'巨乳',\n'贫乳',\n'微乳',\n'乳头',\n'乳房',\n'美胸',\n'明星',\n'G奶',\n'大奶',\n'大尺度',\n'无圣光',\n'掰穴',\n'长腿',\n'美腿',\n'足控',\n'颜值',\n'自拍',\n'偷拍',\n'私拍',\n'私房',\n'街拍',\n'街头',\n'性感',\n'Sex',\n'Sexy',\n'自慰',\n'露出',\n'野外',\n'透明',\n'情趣',\n'公交',\n'公众',\n'合集',\n'收集',\n'收藏',\n'流出',\n'表演',\n'走光',\n'意外',\n'鄰家',\n'邻家',\n'清纯',\n'小妹',\n'妹子',\n'娇羞',\n'害羞',\n'变态',\n'暴露',\n'vip',\n'VIP',\n'付费',\n'会员',\n'推特',\n'Twitter',\n'福利',\n'福利姬',\n'Cos',\n'Coser',\n'Cosplay',\n'写真',\n'专辑',\n'无水印',\n'国产',\n'国模',\n'模特',\n'网红',\n'正妹',\n'直播',\n'主播',\n'欧美',\n'日韩',\n'映画',\n'网路收集',\n'网络收集',\n'越南',\n'东南亚',\n'日本',\n'霓虹',\n'Japan',\n'Japanese',\n'MFStar',\n'模范学院',\n'GirlsDelta',\n'XiuRen',\n'秀人网',\n'DJAWA Photo',\n'ArtGravia',\n'Azami',\n'FEILIN',\n'嗲囡囡',\n'Leehee Express',\n'Ugirl',\n'尤果网',\n'芊芊芊宝',\n'rioko涼涼子',\n'少女映画',\n'Kuuko',\n'小蔡头喵喵喵',\n'Kaya Huang',\n'Pialoof',\n'Hoshilily',\n'YouMi',\n'尤蜜荟',\n'XiaoYu',\n'语画界',\n'Imiss',\n'ArtGravia',\n'新蔻岛',\n'シンコウジマ',\n'Hidori Rose',\n'恶犬小姐姐',\n'Nagisa魔物喵',\n'Meenfox',\n'Quackiess',\n'HuaYang',\n'花漾写真',\n'软软醬',\n'きょう肉肉',\n'萌小兔',\n'Bololi',\n'菠萝社',\n'悠宝',\n'小鸟酱',\n'柚木',\n'YuZuKi',\n'风之领域',\n'小丁',\n'Parton',\n'押尾猫'];exports.comicDict = comicDict;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///106\n");

/***/ }),
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */
/*!************************************************************!*\
  !*** G:/my-project/uni-polymerize/store/modules/reader.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\nvar _config = __webpack_require__(/*! ../config.js */ 67); //书籍阅读\n\nvar state = {\n  reader: null, //阅读实例\n  fontSize: uni.getStorageSync(_config.READFONTSIZE) || 15, //小说字体大小\n  pageType: uni.getStorageSync(_config.READPAGETYPE) || 'real', //小说翻页类型\n  lineHeight: uni.getStorageSync(_config.READLINEHEIGHT) || 15, //小说行间距\n  direction: uni.getStorageSync(_config.READDIRECTION) || 'vertical' //阅读方向\n};\n\nvar getters = {\n  getReader: function getReader(state) {\n    return state.reader;\n  },\n  getFontSize: function getFontSize(state) {\n    return state.fontSize;\n  },\n  getPageType: function getPageType(state) {\n    return state.pageType;\n  },\n  getLineHeight: function getLineHeight(state) {\n    return state.lineHeight;\n  },\n  getDirection: function getDirection(state) {\n    return state.direction;\n  } };\n\n\nvar mutations = {\n  //设置阅读实例\n  setReader: function setReader(state, reader) {\n    state.reader = reader || null;\n  },\n  //设置字体大小\n  setFontSize: function setFontSize(state, fontSize) {\n    state.fontSize = fontSize || 15;\n    uni.setStorageSync(_config.READFONTSIZE, state.fontSize);\n  },\n  //设置翻页类型\n  setPageType: function setPageType(state, pageType) {\n    state.pageType = pageType || 'real';\n    uni.setStorageSync(_config.READPAGETYPE, state.pageType);\n  },\n  //设置行间距\n  setLineHeight: function setLineHeight(state, lineHeight) {\n    state.lineHeight = lineHeight || 15;\n    uni.setStorageSync(_config.READLINEHEIGHT, state.lineHeight);\n  },\n  //设置阅读方向\n  setDirection: function setDirection(state, direction) {\n    state.direction = direction || 'vertical';\n    uni.setStorageSync(_config.READDIRECTION, state.direction);\n  } };\n\n\nvar actions = {\n  //初始化阅读实例\n  init: function init(_ref, reader) {var commit = _ref.commit;\n    commit('setReader', reader);\n  },\n  //销毁阅读实例\n  destroy: function destroy(_ref2) {var commit = _ref2.commit;\n    commit('setReader', null);\n  },\n  //改变字体大小\n  changeFontSize: function changeFontSize(_ref3, fontSize) {var commit = _ref3.commit;\n    commit('setFontSize', fontSize);\n  },\n  //改变翻页类型\n  changePageType: function changePageType(_ref4, pageType) {var commit = _ref4.commit;\n    commit('setPageType', pageType);\n  },\n  //改变行间距\n  changeLineHeight: function changeLineHeight(_ref5, lineHeight) {var commit = _ref5.commit;\n    commit('setLineHeight', lineHeight);\n  },\n  //改变阅读方向\n  changeDirection: function changeDirection(_ref6, direction) {var commit = _ref6.commit;\n    commit('setDirection', direction);\n  } };var _default =\n\n\n{\n  namespaced: true,\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvbW9kdWxlcy9yZWFkZXIuanMiXSwibmFtZXMiOlsic3RhdGUiLCJyZWFkZXIiLCJmb250U2l6ZSIsInVuaSIsImdldFN0b3JhZ2VTeW5jIiwiUkVBREZPTlRTSVpFIiwicGFnZVR5cGUiLCJSRUFEUEFHRVRZUEUiLCJsaW5lSGVpZ2h0IiwiUkVBRExJTkVIRUlHSFQiLCJkaXJlY3Rpb24iLCJSRUFERElSRUNUSU9OIiwiZ2V0dGVycyIsImdldFJlYWRlciIsImdldEZvbnRTaXplIiwiZ2V0UGFnZVR5cGUiLCJnZXRMaW5lSGVpZ2h0IiwiZ2V0RGlyZWN0aW9uIiwibXV0YXRpb25zIiwic2V0UmVhZGVyIiwic2V0Rm9udFNpemUiLCJzZXRTdG9yYWdlU3luYyIsInNldFBhZ2VUeXBlIiwic2V0TGluZUhlaWdodCIsInNldERpcmVjdGlvbiIsImFjdGlvbnMiLCJpbml0IiwiY29tbWl0IiwiZGVzdHJveSIsImNoYW5nZUZvbnRTaXplIiwiY2hhbmdlUGFnZVR5cGUiLCJjaGFuZ2VMaW5lSGVpZ2h0IiwiY2hhbmdlRGlyZWN0aW9uIiwibmFtZXNwYWNlZCJdLCJtYXBwaW5ncyI6IjtBQUNBLDBELENBREE7O0FBR0EsSUFBTUEsS0FBSyxHQUFHO0FBQ2JDLFFBQU0sRUFBRSxJQURLLEVBQ0E7QUFDYkMsVUFBUSxFQUFFQyxHQUFHLENBQUNDLGNBQUosQ0FBbUJDLG9CQUFuQixLQUFvQyxFQUZqQyxFQUVxQztBQUNsREMsVUFBUSxFQUFFSCxHQUFHLENBQUNDLGNBQUosQ0FBbUJHLG9CQUFuQixLQUFvQyxNQUhqQyxFQUd5QztBQUN0REMsWUFBVSxFQUFFTCxHQUFHLENBQUNDLGNBQUosQ0FBbUJLLHNCQUFuQixLQUFzQyxFQUpyQyxFQUl5QztBQUN0REMsV0FBUyxFQUFFUCxHQUFHLENBQUNDLGNBQUosQ0FBbUJPLHFCQUFuQixLQUFxQyxVQUxuQyxDQUs4QztBQUw5QyxDQUFkOztBQVFBLElBQU1DLE9BQU8sR0FBRztBQUNmQyxXQURlLHFCQUNKYixLQURJLEVBQ0c7QUFDakIsV0FBT0EsS0FBSyxDQUFDQyxNQUFiO0FBQ0EsR0FIYztBQUlmYSxhQUplLHVCQUlGZCxLQUpFLEVBSUs7QUFDbkIsV0FBT0EsS0FBSyxDQUFDRSxRQUFiO0FBQ0EsR0FOYztBQU9mYSxhQVBlLHVCQU9GZixLQVBFLEVBT0s7QUFDbkIsV0FBT0EsS0FBSyxDQUFDTSxRQUFiO0FBQ0EsR0FUYztBQVVmVSxlQVZlLHlCQVVBaEIsS0FWQSxFQVVPO0FBQ3JCLFdBQU9BLEtBQUssQ0FBQ1EsVUFBYjtBQUNBLEdBWmM7QUFhZlMsY0FiZSx3QkFhRGpCLEtBYkMsRUFhTTtBQUNwQixXQUFPQSxLQUFLLENBQUNVLFNBQWI7QUFDQSxHQWZjLEVBQWhCOzs7QUFrQkEsSUFBTVEsU0FBUyxHQUFHO0FBQ2pCO0FBQ0FDLFdBRmlCLHFCQUVObkIsS0FGTSxFQUVDQyxNQUZELEVBRVM7QUFDekJELFNBQUssQ0FBQ0MsTUFBTixHQUFlQSxNQUFNLElBQUksSUFBekI7QUFDQSxHQUpnQjtBQUtqQjtBQUNBbUIsYUFOaUIsdUJBTUpwQixLQU5JLEVBTUdFLFFBTkgsRUFNYTtBQUM3QkYsU0FBSyxDQUFDRSxRQUFOLEdBQWlCQSxRQUFRLElBQUksRUFBN0I7QUFDQUMsT0FBRyxDQUFDa0IsY0FBSixDQUFtQmhCLG9CQUFuQixFQUFpQ0wsS0FBSyxDQUFDRSxRQUF2QztBQUNBLEdBVGdCO0FBVWpCO0FBQ0FvQixhQVhpQix1QkFXSnRCLEtBWEksRUFXR00sUUFYSCxFQVdhO0FBQzdCTixTQUFLLENBQUNNLFFBQU4sR0FBaUJBLFFBQVEsSUFBSSxNQUE3QjtBQUNBSCxPQUFHLENBQUNrQixjQUFKLENBQW1CZCxvQkFBbkIsRUFBaUNQLEtBQUssQ0FBQ00sUUFBdkM7QUFDQSxHQWRnQjtBQWVqQjtBQUNBaUIsZUFoQmlCLHlCQWdCRnZCLEtBaEJFLEVBZ0JLUSxVQWhCTCxFQWdCaUI7QUFDakNSLFNBQUssQ0FBQ1EsVUFBTixHQUFtQkEsVUFBVSxJQUFJLEVBQWpDO0FBQ0FMLE9BQUcsQ0FBQ2tCLGNBQUosQ0FBbUJaLHNCQUFuQixFQUFtQ1QsS0FBSyxDQUFDUSxVQUF6QztBQUNBLEdBbkJnQjtBQW9CakI7QUFDQWdCLGNBckJpQix3QkFxQkh4QixLQXJCRyxFQXFCSVUsU0FyQkosRUFxQmU7QUFDL0JWLFNBQUssQ0FBQ1UsU0FBTixHQUFrQkEsU0FBUyxJQUFJLFVBQS9CO0FBQ0FQLE9BQUcsQ0FBQ2tCLGNBQUosQ0FBbUJWLHFCQUFuQixFQUFrQ1gsS0FBSyxDQUFDVSxTQUF4QztBQUNBLEdBeEJnQixFQUFsQjs7O0FBMkJBLElBQU1lLE9BQU8sR0FBRztBQUNmO0FBQ0FDLE1BRmUsc0JBRUN6QixNQUZELEVBRVMsS0FBakIwQixNQUFpQixRQUFqQkEsTUFBaUI7QUFDdkJBLFVBQU0sQ0FBQyxXQUFELEVBQWMxQixNQUFkLENBQU47QUFDQSxHQUpjO0FBS2Y7QUFDQTJCLFNBTmUsMEJBTUksS0FBVEQsTUFBUyxTQUFUQSxNQUFTO0FBQ2xCQSxVQUFNLENBQUMsV0FBRCxFQUFjLElBQWQsQ0FBTjtBQUNBLEdBUmM7QUFTZjtBQUNBRSxnQkFWZSxpQ0FVVTNCLFFBVlYsRUFVb0IsS0FBbkJ5QixNQUFtQixTQUFuQkEsTUFBbUI7QUFDbENBLFVBQU0sQ0FBQyxhQUFELEVBQWdCekIsUUFBaEIsQ0FBTjtBQUNBLEdBWmM7QUFhZjtBQUNBNEIsZ0JBZGUsaUNBY1V4QixRQWRWLEVBY29CLEtBQW5CcUIsTUFBbUIsU0FBbkJBLE1BQW1CO0FBQ2xDQSxVQUFNLENBQUMsYUFBRCxFQUFnQnJCLFFBQWhCLENBQU47QUFDQSxHQWhCYztBQWlCZjtBQUNBeUIsa0JBbEJlLG1DQWtCWXZCLFVBbEJaLEVBa0J3QixLQUFyQm1CLE1BQXFCLFNBQXJCQSxNQUFxQjtBQUN0Q0EsVUFBTSxDQUFDLGVBQUQsRUFBa0JuQixVQUFsQixDQUFOO0FBQ0EsR0FwQmM7QUFxQmY7QUFDQXdCLGlCQXRCZSxrQ0FzQld0QixTQXRCWCxFQXNCc0IsS0FBcEJpQixNQUFvQixTQUFwQkEsTUFBb0I7QUFDcENBLFVBQU0sQ0FBQyxjQUFELEVBQWlCakIsU0FBakIsQ0FBTjtBQUNBLEdBeEJjLEVBQWhCLEM7OztBQTJCZTtBQUNYdUIsWUFBVSxFQUFFLElBREQ7QUFFWGpDLE9BQUssRUFBTEEsS0FGVztBQUdYWSxTQUFPLEVBQVBBLE9BSFc7QUFJWE0sV0FBUyxFQUFUQSxTQUpXO0FBS2RPLFNBQU8sRUFBUEEsT0FMYyxFIiwiZmlsZSI6IjExMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8v5Lmm57GN6ZiF6K+7XHJcbmltcG9ydCB7IFJFQURGT05UU0laRSwgUkVBRFBBR0VUWVBFLCBSRUFETElORUhFSUdIVCwgUkVBRERJUkVDVElPTiB9IGZyb20gJy4uL2NvbmZpZy5qcydcclxuXHJcbmNvbnN0IHN0YXRlID0ge1xyXG5cdHJlYWRlcjogbnVsbCwvL+mYheivu+WunuS+i1xyXG5cdGZvbnRTaXplOiB1bmkuZ2V0U3RvcmFnZVN5bmMoUkVBREZPTlRTSVpFKSB8fCAxNSwgLy/lsI/or7TlrZfkvZPlpKflsI9cclxuXHRwYWdlVHlwZTogdW5pLmdldFN0b3JhZ2VTeW5jKFJFQURQQUdFVFlQRSkgfHwgJ3JlYWwnLCAvL+Wwj+ivtOe/u+mhteexu+Wei1xyXG5cdGxpbmVIZWlnaHQ6IHVuaS5nZXRTdG9yYWdlU3luYyhSRUFETElORUhFSUdIVCkgfHwgMTUsIC8v5bCP6K+06KGM6Ze06LedXHJcblx0ZGlyZWN0aW9uOiB1bmkuZ2V0U3RvcmFnZVN5bmMoUkVBRERJUkVDVElPTikgfHwgJ3ZlcnRpY2FsJyAvL+mYheivu+aWueWQkVxyXG59XHJcblxyXG5jb25zdCBnZXR0ZXJzID0ge1xyXG5cdGdldFJlYWRlciAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5yZWFkZXJcclxuXHR9LFxyXG5cdGdldEZvbnRTaXplIChzdGF0ZSkge1xyXG5cdFx0cmV0dXJuIHN0YXRlLmZvbnRTaXplXHJcblx0fSxcclxuXHRnZXRQYWdlVHlwZSAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5wYWdlVHlwZVxyXG5cdH0sXHJcblx0Z2V0TGluZUhlaWdodCAoc3RhdGUpIHtcclxuXHRcdHJldHVybiBzdGF0ZS5saW5lSGVpZ2h0XHJcblx0fSxcclxuXHRnZXREaXJlY3Rpb24gKHN0YXRlKSB7XHJcblx0XHRyZXR1cm4gc3RhdGUuZGlyZWN0aW9uXHJcblx0fVxyXG59XHJcblxyXG5jb25zdCBtdXRhdGlvbnMgPSB7XHJcblx0Ly/orr7nva7pmIXor7vlrp7kvotcclxuXHRzZXRSZWFkZXIgKHN0YXRlLCByZWFkZXIpIHtcclxuXHRcdHN0YXRlLnJlYWRlciA9IHJlYWRlciB8fCBudWxsXHJcblx0fSxcclxuXHQvL+iuvue9ruWtl+S9k+Wkp+Wwj1xyXG5cdHNldEZvbnRTaXplIChzdGF0ZSwgZm9udFNpemUpIHtcclxuXHRcdHN0YXRlLmZvbnRTaXplID0gZm9udFNpemUgfHwgMTVcclxuXHRcdHVuaS5zZXRTdG9yYWdlU3luYyhSRUFERk9OVFNJWkUsIHN0YXRlLmZvbnRTaXplKVxyXG5cdH0sXHJcblx0Ly/orr7nva7nv7vpobXnsbvlnotcclxuXHRzZXRQYWdlVHlwZSAoc3RhdGUsIHBhZ2VUeXBlKSB7XHJcblx0XHRzdGF0ZS5wYWdlVHlwZSA9IHBhZ2VUeXBlIHx8ICdyZWFsJ1xyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKFJFQURQQUdFVFlQRSwgc3RhdGUucGFnZVR5cGUpXHJcblx0fSxcclxuXHQvL+iuvue9ruihjOmXtOi3nVxyXG5cdHNldExpbmVIZWlnaHQgKHN0YXRlLCBsaW5lSGVpZ2h0KSB7XHJcblx0XHRzdGF0ZS5saW5lSGVpZ2h0ID0gbGluZUhlaWdodCB8fCAxNVxyXG5cdFx0dW5pLnNldFN0b3JhZ2VTeW5jKFJFQURMSU5FSEVJR0hULCBzdGF0ZS5saW5lSGVpZ2h0KVxyXG5cdH0sXHJcblx0Ly/orr7nva7pmIXor7vmlrnlkJFcclxuXHRzZXREaXJlY3Rpb24gKHN0YXRlLCBkaXJlY3Rpb24pIHtcclxuXHRcdHN0YXRlLmRpcmVjdGlvbiA9IGRpcmVjdGlvbiB8fCAndmVydGljYWwnXHJcblx0XHR1bmkuc2V0U3RvcmFnZVN5bmMoUkVBRERJUkVDVElPTiwgc3RhdGUuZGlyZWN0aW9uKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgYWN0aW9ucyA9IHtcclxuXHQvL+WIneWni+WMlumYheivu+WunuS+i1xyXG5cdGluaXQgKHtjb21taXR9LCByZWFkZXIpIHtcclxuXHRcdGNvbW1pdCgnc2V0UmVhZGVyJywgcmVhZGVyKVxyXG5cdH0sXHJcblx0Ly/plIDmr4HpmIXor7vlrp7kvotcclxuXHRkZXN0cm95ICh7Y29tbWl0fSkge1xyXG5cdFx0Y29tbWl0KCdzZXRSZWFkZXInLCBudWxsKVxyXG5cdH0sXHJcblx0Ly/mlLnlj5jlrZfkvZPlpKflsI9cclxuXHRjaGFuZ2VGb250U2l6ZSh7Y29tbWl0fSwgZm9udFNpemUpIHtcclxuXHRcdGNvbW1pdCgnc2V0Rm9udFNpemUnLCBmb250U2l6ZSlcclxuXHR9LFxyXG5cdC8v5pS55Y+Y57+76aG157G75Z6LXHJcblx0Y2hhbmdlUGFnZVR5cGUoe2NvbW1pdH0sIHBhZ2VUeXBlKSB7XHJcblx0XHRjb21taXQoJ3NldFBhZ2VUeXBlJywgcGFnZVR5cGUpXHJcblx0fSxcclxuXHQvL+aUueWPmOihjOmXtOi3nVxyXG5cdGNoYW5nZUxpbmVIZWlnaHQoe2NvbW1pdH0sIGxpbmVIZWlnaHQpIHtcclxuXHRcdGNvbW1pdCgnc2V0TGluZUhlaWdodCcsIGxpbmVIZWlnaHQpXHJcblx0fSxcclxuXHQvL+aUueWPmOmYheivu+aWueWQkVxyXG5cdGNoYW5nZURpcmVjdGlvbih7Y29tbWl0fSwgZGlyZWN0aW9uKSB7XHJcblx0XHRjb21taXQoJ3NldERpcmVjdGlvbicsIGRpcmVjdGlvbilcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWVzcGFjZWQ6IHRydWUsXHJcbiAgICBzdGF0ZSxcclxuICAgIGdldHRlcnMsXHJcbiAgICBtdXRhdGlvbnMsXHJcblx0YWN0aW9uc1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///110\n");

/***/ }),
/* 111 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/api/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _music = _interopRequireDefault(__webpack_require__(/*! ./music.js */ 120));\nvar _book = _interopRequireDefault(__webpack_require__(/*! ./book.js */ 112));\nvar _comic = _interopRequireDefault(__webpack_require__(/*! ./comic.js */ 117));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\nvar api = {\n  music: _music.default,\n  book: _book.default,\n  comic: _comic.default };var _default =\n\n\napi;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2FwaS9pbmRleC5qcyJdLCJuYW1lcyI6WyJhcGkiLCJtdXNpYyIsImJvb2siLCJjb21pYyJdLCJtYXBwaW5ncyI6InVGQUFBO0FBQ0E7QUFDQSxnRjs7QUFFQSxJQUFNQSxHQUFHLEdBQUc7QUFDWEMsT0FBSyxFQUFFQSxjQURJO0FBRVhDLE1BQUksRUFBRUEsYUFGSztBQUdYQyxPQUFLLEVBQUVBLGNBSEksRUFBWixDOzs7QUFNZUgsRyIsImZpbGUiOiIxMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXVzaWMgZnJvbSAnLi9tdXNpYy5qcydcclxuaW1wb3J0IGJvb2sgZnJvbSAnLi9ib29rLmpzJ1xyXG5pbXBvcnQgY29taWMgZnJvbSAnLi9jb21pYy5qcydcclxuXHJcbmNvbnN0IGFwaSA9IHtcclxuXHRtdXNpYzogbXVzaWMsXHJcblx0Ym9vazogYm9vayxcclxuXHRjb21pYzogY29taWMsXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFwaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///111\n");

/***/ }),
/* 112 */
/*!*******************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/api/book.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/plugins/request/index.js */ 57));\nvar _index2 = _interopRequireDefault(__webpack_require__(/*! @/plugins/xhr/index.js */ 60));\nvar _gb = _interopRequireDefault(__webpack_require__(/*! @/assets/other/gb2312.js */ 113));\nvar _book = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/book.js */ 114));\nvar _bookshelf = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/bookshelf.js */ 115));\nvar _chapter = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/chapter.js */ 116));\nvar _comment = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/comment.js */ 97));\nvar _global = __webpack_require__(/*! @/assets/api/global.js */ 103);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // 获取 Vuex Store 实例，注意是**实例**，而不是 vuex 这个库\nvar\ngetters = _store.default.getters;var\nERR_OK = _config.default.ERR_OK,ERR_FALSE = _config.default.ERR_FALSE;var\ndateFormat = _util.default.dateFormat,time2seconds = _util.default.time2seconds;\nvar context = {\n  xhr: _index2.default,\n  http: _index.default,\n  gb2312: _gb.default,\n  Book: _book.default,\n  Bookshelf: _bookshelf.default,\n  Chapter: _chapter.default,\n  Comment: _comment.default,\n  ERR_OK: ERR_OK,\n  ERR_FALSE: ERR_FALSE,\n  replaceHTML: _global.replaceHTML,\n  htmlDecodeByRegExp: _global.htmlDecodeByRegExp,\n  getTag: _global.getTag,\n  dateFormat: dateFormat,\n  time2seconds: time2seconds };var _default =\n\n\n{\n  //搜索列表\n  search: function search() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'story';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$searc;\n      if (((_source$request$searc = source.request.search) === null || _source$request$searc === void 0 ? void 0 : _source$request$searc.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.search.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取热门搜索关键词\n  getHotKeyword: function getHotKeyword() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'story';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getHo;\n      if (((_source$request$getHo = source.request.getHotKeyword) === null || _source$request$getHo === void 0 ? void 0 : _source$request$getHo.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getHotKeyword.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n\n  //获取热门推荐\n  getRecome: function getRecome() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'story';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getRe;\n      if (((_source$request$getRe = source.request.getRecome) === null || _source$request$getRe === void 0 ? void 0 : _source$request$getRe.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getRecome.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取分类列表\n  getTypeList: function getTypeList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'story';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getTy;\n      if (((_source$request$getTy = source.request.getTypeList) === null || _source$request$getTy === void 0 ? void 0 : _source$request$getTy.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getTypeList.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取分类详情\n  getTypeDetail: function getTypeDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getTypeDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取书籍详情\n  getDetail: function getDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取书籍内容\n  getContent: function getContent() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getContent.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取评论\n  getComment: function getComment() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getComment.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///112\n");

/***/ }),
/* 113 */
/*!***********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/other/gb2312.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = UrlEncode;function UrlEncode(str) {\n  var i,c,ret = \"\",\n  strSpecial = \"!\\\"#$%&'()*+,/:;<=>?@[\\]^`{|}~%\";\n  for (i = 0; i < str.length; i++) {\n    //alert(str.charCodeAt(i)); \n\n    c = str.charAt(i);\n    if (c == \" \")\n    ret += \"+\";else\n    if (strSpecial.indexOf(c) != -1)\n    ret += \"%\" + str.charCodeAt(i).toString(16);else\n    if (z[str.charCodeAt(i)] != null) {\n      var d = z[str.charCodeAt(i)];\n      try {\n        ret += \"%\" + d.slice(0, 2) + \"%\" + d.slice(-2);\n      } catch (e) {\n        alert(\" $$ error name = \" + e.name + \", message = \" + e.message + \", d \" + i + \"= \" + str.charCodeAt(i));\n      }\n    } else\n    ret += c;\n  }\n  return ret;\n}\n\nfunction getSpell(str, sp) {\n  var i,c,t,ret = \"\";\n  if (sp == null)\n  sp = \"\";\n\n  for (i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) >= 0x4e00) {\n      c = parseInt(z[str.charCodeAt(i)], 16);\n      if (c < 55290) {\n        for (t = qswhSpell.length - 1; t > 0; t = t - 2) {\n          if (qswhSpell[t] <= c)\n          break;}\n        if (t > 0)\n        ret += qswhSpell[t - 1] + sp;\n      }\n    }\n  }\n  return ret.substr(0, ret.length - sp.length);\n}\n\nvar z = new Array();\nz[0x00A4] = 'A1E8';\nz[0x00A7] = 'A1EC';\nz[0x00A8] = 'A1A7';\nz[0x00B0] = 'A1E3';\nz[0x00B1] = 'A1C0';\nz[0x00B7] = 'A1A4';\nz[0x00D7] = 'A1C1';\nz[0x00E0] = 'A8A4';\nz[0x00E1] = 'A8A2';\nz[0x00E8] = 'A8A8';\nz[0x00E9] = 'A8A6';\nz[0x00EA] = 'A8BA';\nz[0x00EC] = 'A8AC';\nz[0x00ED] = 'A8AA';\nz[0x00F2] = 'A8B0';\nz[0x00F3] = 'A8AE';\nz[0x00F7] = 'A1C2';\nz[0x00F9] = 'A8B4';\nz[0x00FA] = 'A8B2';\nz[0x00FC] = 'A8B9';\nz[0x0101] = 'A8A1';\nz[0x0113] = 'A8A5';\nz[0x011B] = 'A8A7';\nz[0x012B] = 'A8A9';\nz[0x014D] = 'A8AD';\nz[0x016B] = 'A8B1';\nz[0x01CE] = 'A8A3';\nz[0x01D0] = 'A8AB';\nz[0x01D2] = 'A8AF';\nz[0x01D4] = 'A8B3';\nz[0x01D6] = 'A8B5';\nz[0x01D8] = 'A8B6';\nz[0x01DA] = 'A8B7';\nz[0x01DC] = 'A8B8';\nz[0x02C7] = 'A1A6';\nz[0x02C9] = 'A1A5';\nz[0x0391] = 'A6A1';\nz[0x0392] = 'A6A2';\nz[0x0393] = 'A6A3';\nz[0x0394] = 'A6A4';\nz[0x0395] = 'A6A5';\nz[0x0396] = 'A6A6';\nz[0x0397] = 'A6A7';\nz[0x0398] = 'A6A8';\nz[0x0399] = 'A6A9';\nz[0x039A] = 'A6AA';\nz[0x039B] = 'A6AB';\nz[0x039C] = 'A6AC';\nz[0x039D] = 'A6AD';\nz[0x039E] = 'A6AE';\nz[0x039F] = 'A6AF';\nz[0x03A0] = 'A6B0';\nz[0x03A1] = 'A6B1';\nz[0x03A3] = 'A6B2';\nz[0x03A4] = 'A6B3';\nz[0x03A5] = 'A6B4';\nz[0x03A6] = 'A6B5';\nz[0x03A7] = 'A6B6';\nz[0x03A8] = 'A6B7';\nz[0x03A9] = 'A6B8';\nz[0x03B1] = 'A6C1';\nz[0x03B2] = 'A6C2';\nz[0x03B3] = 'A6C3';\nz[0x03B4] = 'A6C4';\nz[0x03B5] = 'A6C5';\nz[0x03B6] = 'A6C6';\nz[0x03B7] = 'A6C7';\nz[0x03B8] = 'A6C8';\nz[0x03B9] = 'A6C9';\nz[0x03BA] = 'A6CA';\nz[0x03BB] = 'A6CB';\nz[0x03BC] = 'A6CC';\nz[0x03BD] = 'A6CD';\nz[0x03BE] = 'A6CE';\nz[0x03BF] = 'A6CF';\nz[0x03C0] = 'A6D0';\nz[0x03C1] = 'A6D1';\nz[0x03C3] = 'A6D2';\nz[0x03C4] = 'A6D3';\nz[0x03C5] = 'A6D4';\nz[0x03C6] = 'A6D5';\nz[0x03C7] = 'A6D6';\nz[0x03C8] = 'A6D7';\nz[0x03C9] = 'A6D8';\nz[0x0401] = 'A7A7';\nz[0x0410] = 'A7A1';\nz[0x0411] = 'A7A2';\nz[0x0412] = 'A7A3';\nz[0x0413] = 'A7A4';\nz[0x0414] = 'A7A5';\nz[0x0415] = 'A7A6';\nz[0x0416] = 'A7A8';\nz[0x0417] = 'A7A9';\nz[0x0418] = 'A7AA';\nz[0x0419] = 'A7AB';\nz[0x041A] = 'A7AC';\nz[0x041B] = 'A7AD';\nz[0x041C] = 'A7AE';\nz[0x041D] = 'A7AF';\nz[0x041E] = 'A7B0';\nz[0x041F] = 'A7B1';\nz[0x0420] = 'A7B2';\nz[0x0421] = 'A7B3';\nz[0x0422] = 'A7B4';\nz[0x0423] = 'A7B5';\nz[0x0424] = 'A7B6';\nz[0x0425] = 'A7B7';\nz[0x0426] = 'A7B8';\nz[0x0427] = 'A7B9';\nz[0x0428] = 'A7BA';\nz[0x0429] = 'A7BB';\nz[0x042A] = 'A7BC';\nz[0x042B] = 'A7BD';\nz[0x042C] = 'A7BE';\nz[0x042D] = 'A7BF';\nz[0x042E] = 'A7C0';\nz[0x042F] = 'A7C1';\nz[0x0430] = 'A7D1';\nz[0x0431] = 'A7D2';\nz[0x0432] = 'A7D3';\nz[0x0433] = 'A7D4';\nz[0x0434] = 'A7D5';\nz[0x0435] = 'A7D6';\nz[0x0436] = 'A7D8';\nz[0x0437] = 'A7D9';\nz[0x0438] = 'A7DA';\nz[0x0439] = 'A7DB';\nz[0x043A] = 'A7DC';\nz[0x043B] = 'A7DD';\nz[0x043C] = 'A7DE';\nz[0x043D] = 'A7DF';\nz[0x043E] = 'A7E0';\nz[0x043F] = 'A7E1';\nz[0x0440] = 'A7E2';\nz[0x0441] = 'A7E3';\nz[0x0442] = 'A7E4';\nz[0x0443] = 'A7E5';\nz[0x0444] = 'A7E6';\nz[0x0445] = 'A7E7';\nz[0x0446] = 'A7E8';\nz[0x0447] = 'A7E9';\nz[0x0448] = 'A7EA';\nz[0x0449] = 'A7EB';\nz[0x044A] = 'A7EC';\nz[0x044B] = 'A7ED';\nz[0x044C] = 'A7EE';\nz[0x044D] = 'A7EF';\nz[0x044E] = 'A7F0';\nz[0x044F] = 'A7F1';\nz[0x0451] = 'A7D7';\nz[0x2014] = 'A1AA';\nz[0x2016] = 'A1AC';\nz[0x2018] = 'A1AE';\nz[0x2019] = 'A1AF';\nz[0x201C] = 'A1B0';\nz[0x201D] = 'A1B1';\nz[0x2026] = 'A1AD';\nz[0x2030] = 'A1EB';\nz[0x2032] = 'A1E4';\nz[0x2033] = 'A1E5';\nz[0x203B] = 'A1F9';\nz[0x2103] = 'A1E6';\nz[0x2116] = 'A1ED';\nz[0x2160] = 'A2F1';\nz[0x2161] = 'A2F2';\nz[0x2162] = 'A2F3';\nz[0x2163] = 'A2F4';\nz[0x2164] = 'A2F5';\nz[0x2165] = 'A2F6';\nz[0x2166] = 'A2F7';\nz[0x2167] = 'A2F8';\nz[0x2168] = 'A2F9';\nz[0x2169] = 'A2FA';\nz[0x216A] = 'A2FB';\nz[0x216B] = 'A2FC';\nz[0x2190] = 'A1FB';\nz[0x2191] = 'A1FC';\nz[0x2192] = 'A1FA';\nz[0x2193] = 'A1FD';\nz[0x2208] = 'A1CA';\nz[0x220F] = 'A1C7';\nz[0x2211] = 'A1C6';\nz[0x221A] = 'A1CC';\nz[0x221D] = 'A1D8';\nz[0x221E] = 'A1DE';\nz[0x2220] = 'A1CF';\nz[0x2225] = 'A1CE';\nz[0x2227] = 'A1C4';\nz[0x2228] = 'A1C5';\nz[0x2229] = 'A1C9';\nz[0x222A] = 'A1C8';\nz[0x222B] = 'A1D2';\nz[0x222E] = 'A1D3';\nz[0x2234] = 'A1E0';\nz[0x2235] = 'A1DF';\nz[0x2236] = 'A1C3';\nz[0x2237] = 'A1CB';\nz[0x223D] = 'A1D7';\nz[0x2248] = 'A1D6';\nz[0x224C] = 'A1D5';\nz[0x2260] = 'A1D9';\nz[0x2261] = 'A1D4';\nz[0x2264] = 'A1DC';\nz[0x2265] = 'A1DD';\nz[0x226E] = 'A1DA';\nz[0x226F] = 'A1DB';\nz[0x2299] = 'A1D1';\nz[0x22A5] = 'A1CD';\nz[0x2312] = 'A1D0';\nz[0x2460] = 'A2D9';\nz[0x2461] = 'A2DA';\nz[0x2462] = 'A2DB';\nz[0x2463] = 'A2DC';\nz[0x2464] = 'A2DD';\nz[0x2465] = 'A2DE';\nz[0x2466] = 'A2DF';\nz[0x2467] = 'A2E0';\nz[0x2468] = 'A2E1';\nz[0x2469] = 'A2E2';\nz[0x2474] = 'A2C5';\nz[0x2475] = 'A2C6';\nz[0x2476] = 'A2C7';\nz[0x2477] = 'A2C8';\nz[0x2478] = 'A2C9';\nz[0x2479] = 'A2CA';\nz[0x247A] = 'A2CB';\nz[0x247B] = 'A2CC';\nz[0x247C] = 'A2CD';\nz[0x247D] = 'A2CE';\nz[0x247E] = 'A2CF';\nz[0x247F] = 'A2D0';\nz[0x2480] = 'A2D1';\nz[0x2481] = 'A2D2';\nz[0x2482] = 'A2D3';\nz[0x2483] = 'A2D4';\nz[0x2484] = 'A2D5';\nz[0x2485] = 'A2D6';\nz[0x2486] = 'A2D7';\nz[0x2487] = 'A2D8';\nz[0x2488] = 'A2B1';\nz[0x2489] = 'A2B2';\nz[0x248A] = 'A2B3';\nz[0x248B] = 'A2B4';\nz[0x248C] = 'A2B5';\nz[0x248D] = 'A2B6';\nz[0x248E] = 'A2B7';\nz[0x248F] = 'A2B8';\nz[0x2490] = 'A2B9';\nz[0x2491] = 'A2BA';\nz[0x2492] = 'A2BB';\nz[0x2493] = 'A2BC';\nz[0x2494] = 'A2BD';\nz[0x2495] = 'A2BE';\nz[0x2496] = 'A2BF';\nz[0x2497] = 'A2C0';\nz[0x2498] = 'A2C1';\nz[0x2499] = 'A2C2';\nz[0x249A] = 'A2C3';\nz[0x249B] = 'A2C4';\nz[0x2500] = 'A9A4';\nz[0x2501] = 'A9A5';\nz[0x2502] = 'A9A6';\nz[0x2503] = 'A9A7';\nz[0x2504] = 'A9A8';\nz[0x2505] = 'A9A9';\nz[0x2506] = 'A9AA';\nz[0x2507] = 'A9AB';\nz[0x2508] = 'A9AC';\nz[0x2509] = 'A9AD';\nz[0x250A] = 'A9AE';\nz[0x250B] = 'A9AF';\nz[0x250C] = 'A9B0';\nz[0x250D] = 'A9B1';\nz[0x250E] = 'A9B2';\nz[0x250F] = 'A9B3';\nz[0x2510] = 'A9B4';\nz[0x2511] = 'A9B5';\nz[0x2512] = 'A9B6';\nz[0x2513] = 'A9B7';\nz[0x2514] = 'A9B8';\nz[0x2515] = 'A9B9';\nz[0x2516] = 'A9BA';\nz[0x2517] = 'A9BB';\nz[0x2518] = 'A9BC';\nz[0x2519] = 'A9BD';\nz[0x251A] = 'A9BE';\nz[0x251B] = 'A9BF';\nz[0x251C] = 'A9C0';\nz[0x251D] = 'A9C1';\nz[0x251E] = 'A9C2';\nz[0x251F] = 'A9C3';\nz[0x2520] = 'A9C4';\nz[0x2521] = 'A9C5';\nz[0x2522] = 'A9C6';\nz[0x2523] = 'A9C7';\nz[0x2524] = 'A9C8';\nz[0x2525] = 'A9C9';\nz[0x2526] = 'A9CA';\nz[0x2527] = 'A9CB';\nz[0x2528] = 'A9CC';\nz[0x2529] = 'A9CD';\nz[0x252A] = 'A9CE';\nz[0x252B] = 'A9CF';\nz[0x252C] = 'A9D0';\nz[0x252D] = 'A9D1';\nz[0x252E] = 'A9D2';\nz[0x252F] = 'A9D3';\nz[0x2530] = 'A9D4';\nz[0x2531] = 'A9D5';\nz[0x2532] = 'A9D6';\nz[0x2533] = 'A9D7';\nz[0x2534] = 'A9D8';\nz[0x2535] = 'A9D9';\nz[0x2536] = 'A9DA';\nz[0x2537] = 'A9DB';\nz[0x2538] = 'A9DC';\nz[0x2539] = 'A9DD';\nz[0x253A] = 'A9DE';\nz[0x253B] = 'A9DF';\nz[0x253C] = 'A9E0';\nz[0x253D] = 'A9E1';\nz[0x253E] = 'A9E2';\nz[0x253F] = 'A9E3';\nz[0x2540] = 'A9E4';\nz[0x2541] = 'A9E5';\nz[0x2542] = 'A9E6';\nz[0x2543] = 'A9E7';\nz[0x2544] = 'A9E8';\nz[0x2545] = 'A9E9';\nz[0x2546] = 'A9EA';\nz[0x2547] = 'A9EB';\nz[0x2548] = 'A9EC';\nz[0x2549] = 'A9ED';\nz[0x254A] = 'A9EE';\nz[0x254B] = 'A9EF';\nz[0x25A0] = 'A1F6';\nz[0x25A1] = 'A1F5';\nz[0x25B2] = 'A1F8';\nz[0x25B3] = 'A1F7';\nz[0x25C6] = 'A1F4';\nz[0x25C7] = 'A1F3';\nz[0x25CB] = 'A1F0';\nz[0x25CE] = 'A1F2';\nz[0x25CF] = 'A1F1';\nz[0x2605] = 'A1EF';\nz[0x2606] = 'A1EE';\nz[0x2640] = 'A1E2';\nz[0x2642] = 'A1E1';\nz[0x3000] = 'A1A1';\nz[0x3001] = 'A1A2';\nz[0x3002] = 'A1A3';\nz[0x3003] = 'A1A8';\nz[0x3005] = 'A1A9';\nz[0x3008] = 'A1B4';\nz[0x3009] = 'A1B5';\nz[0x300A] = 'A1B6';\nz[0x300B] = 'A1B7';\nz[0x300C] = 'A1B8';\nz[0x300D] = 'A1B9';\nz[0x300E] = 'A1BA';\nz[0x300F] = 'A1BB';\nz[0x3010] = 'A1BE';\nz[0x3011] = 'A1BF';\nz[0x3013] = 'A1FE';\nz[0x3014] = 'A1B2';\nz[0x3015] = 'A1B3';\nz[0x3016] = 'A1BC';\nz[0x3017] = 'A1BD';\nz[0x3041] = 'A4A1';\nz[0x3042] = 'A4A2';\nz[0x3043] = 'A4A3';\nz[0x3044] = 'A4A4';\nz[0x3045] = 'A4A5';\nz[0x3046] = 'A4A6';\nz[0x3047] = 'A4A7';\nz[0x3048] = 'A4A8';\nz[0x3049] = 'A4A9';\nz[0x304A] = 'A4AA';\nz[0x304B] = 'A4AB';\nz[0x304C] = 'A4AC';\nz[0x304D] = 'A4AD';\nz[0x304E] = 'A4AE';\nz[0x304F] = 'A4AF';\nz[0x3050] = 'A4B0';\nz[0x3051] = 'A4B1';\nz[0x3052] = 'A4B2';\nz[0x3053] = 'A4B3';\nz[0x3054] = 'A4B4';\nz[0x3055] = 'A4B5';\nz[0x3056] = 'A4B6';\nz[0x3057] = 'A4B7';\nz[0x3058] = 'A4B8';\nz[0x3059] = 'A4B9';\nz[0x305A] = 'A4BA';\nz[0x305B] = 'A4BB';\nz[0x305C] = 'A4BC';\nz[0x305D] = 'A4BD';\nz[0x305E] = 'A4BE';\nz[0x305F] = 'A4BF';\nz[0x3060] = 'A4C0';\nz[0x3061] = 'A4C1';\nz[0x3062] = 'A4C2';\nz[0x3063] = 'A4C3';\nz[0x3064] = 'A4C4';\nz[0x3065] = 'A4C5';\nz[0x3066] = 'A4C6';\nz[0x3067] = 'A4C7';\nz[0x3068] = 'A4C8';\nz[0x3069] = 'A4C9';\nz[0x306A] = 'A4CA';\nz[0x306B] = 'A4CB';\nz[0x306C] = 'A4CC';\nz[0x306D] = 'A4CD';\nz[0x306E] = 'A4CE';\nz[0x306F] = 'A4CF';\nz[0x3070] = 'A4D0';\nz[0x3071] = 'A4D1';\nz[0x3072] = 'A4D2';\nz[0x3073] = 'A4D3';\nz[0x3074] = 'A4D4';\nz[0x3075] = 'A4D5';\nz[0x3076] = 'A4D6';\nz[0x3077] = 'A4D7';\nz[0x3078] = 'A4D8';\nz[0x3079] = 'A4D9';\nz[0x307A] = 'A4DA';\nz[0x307B] = 'A4DB';\nz[0x307C] = 'A4DC';\nz[0x307D] = 'A4DD';\nz[0x307E] = 'A4DE';\nz[0x307F] = 'A4DF';\nz[0x3080] = 'A4E0';\nz[0x3081] = 'A4E1';\nz[0x3082] = 'A4E2';\nz[0x3083] = 'A4E3';\nz[0x3084] = 'A4E4';\nz[0x3085] = 'A4E5';\nz[0x3086] = 'A4E6';\nz[0x3087] = 'A4E7';\nz[0x3088] = 'A4E8';\nz[0x3089] = 'A4E9';\nz[0x308A] = 'A4EA';\nz[0x308B] = 'A4EB';\nz[0x308C] = 'A4EC';\nz[0x308D] = 'A4ED';\nz[0x308E] = 'A4EE';\nz[0x308F] = 'A4EF';\nz[0x3090] = 'A4F0';\nz[0x3091] = 'A4F1';\nz[0x3092] = 'A4F2';\nz[0x3093] = 'A4F3';\nz[0x30A1] = 'A5A1';\nz[0x30A2] = 'A5A2';\nz[0x30A3] = 'A5A3';\nz[0x30A4] = 'A5A4';\nz[0x30A5] = 'A5A5';\nz[0x30A6] = 'A5A6';\nz[0x30A7] = 'A5A7';\nz[0x30A8] = 'A5A8';\nz[0x30A9] = 'A5A9';\nz[0x30AA] = 'A5AA';\nz[0x30AB] = 'A5AB';\nz[0x30AC] = 'A5AC';\nz[0x30AD] = 'A5AD';\nz[0x30AE] = 'A5AE';\nz[0x30AF] = 'A5AF';\nz[0x30B0] = 'A5B0';\nz[0x30B1] = 'A5B1';\nz[0x30B2] = 'A5B2';\nz[0x30B3] = 'A5B3';\nz[0x30B4] = 'A5B4';\nz[0x30B5] = 'A5B5';\nz[0x30B6] = 'A5B6';\nz[0x30B7] = 'A5B7';\nz[0x30B8] = 'A5B8';\nz[0x30B9] = 'A5B9';\nz[0x30BA] = 'A5BA';\nz[0x30BB] = 'A5BB';\nz[0x30BC] = 'A5BC';\nz[0x30BD] = 'A5BD';\nz[0x30BE] = 'A5BE';\nz[0x30BF] = 'A5BF';\nz[0x30C0] = 'A5C0';\nz[0x30C1] = 'A5C1';\nz[0x30C2] = 'A5C2';\nz[0x30C3] = 'A5C3';\nz[0x30C4] = 'A5C4';\nz[0x30C5] = 'A5C5';\nz[0x30C6] = 'A5C6';\nz[0x30C7] = 'A5C7';\nz[0x30C8] = 'A5C8';\nz[0x30C9] = 'A5C9';\nz[0x30CA] = 'A5CA';\nz[0x30CB] = 'A5CB';\nz[0x30CC] = 'A5CC';\nz[0x30CD] = 'A5CD';\nz[0x30CE] = 'A5CE';\nz[0x30CF] = 'A5CF';\nz[0x30D0] = 'A5D0';\nz[0x30D1] = 'A5D1';\nz[0x30D2] = 'A5D2';\nz[0x30D3] = 'A5D3';\nz[0x30D4] = 'A5D4';\nz[0x30D5] = 'A5D5';\nz[0x30D6] = 'A5D6';\nz[0x30D7] = 'A5D7';\nz[0x30D8] = 'A5D8';\nz[0x30D9] = 'A5D9';\nz[0x30DA] = 'A5DA';\nz[0x30DB] = 'A5DB';\nz[0x30DC] = 'A5DC';\nz[0x30DD] = 'A5DD';\nz[0x30DE] = 'A5DE';\nz[0x30DF] = 'A5DF';\nz[0x30E0] = 'A5E0';\nz[0x30E1] = 'A5E1';\nz[0x30E2] = 'A5E2';\nz[0x30E3] = 'A5E3';\nz[0x30E4] = 'A5E4';\nz[0x30E5] = 'A5E5';\nz[0x30E6] = 'A5E6';\nz[0x30E7] = 'A5E7';\nz[0x30E8] = 'A5E8';\nz[0x30E9] = 'A5E9';\nz[0x30EA] = 'A5EA';\nz[0x30EB] = 'A5EB';\nz[0x30EC] = 'A5EC';\nz[0x30ED] = 'A5ED';\nz[0x30EE] = 'A5EE';\nz[0x30EF] = 'A5EF';\nz[0x30F0] = 'A5F0';\nz[0x30F1] = 'A5F1';\nz[0x30F2] = 'A5F2';\nz[0x30F3] = 'A5F3';\nz[0x30F4] = 'A5F4';\nz[0x30F5] = 'A5F5';\nz[0x30F6] = 'A5F6';\nz[0x3105] = 'A8C5';\nz[0x3106] = 'A8C6';\nz[0x3107] = 'A8C7';\nz[0x3108] = 'A8C8';\nz[0x3109] = 'A8C9';\nz[0x310A] = 'A8CA';\nz[0x310B] = 'A8CB';\nz[0x310C] = 'A8CC';\nz[0x310D] = 'A8CD';\nz[0x310E] = 'A8CE';\nz[0x310F] = 'A8CF';\nz[0x3110] = 'A8D0';\nz[0x3111] = 'A8D1';\nz[0x3112] = 'A8D2';\nz[0x3113] = 'A8D3';\nz[0x3114] = 'A8D4';\nz[0x3115] = 'A8D5';\nz[0x3116] = 'A8D6';\nz[0x3117] = 'A8D7';\nz[0x3118] = 'A8D8';\nz[0x3119] = 'A8D9';\nz[0x311A] = 'A8DA';\nz[0x311B] = 'A8DB';\nz[0x311C] = 'A8DC';\nz[0x311D] = 'A8DD';\nz[0x311E] = 'A8DE';\nz[0x311F] = 'A8DF';\nz[0x3120] = 'A8E0';\nz[0x3121] = 'A8E1';\nz[0x3122] = 'A8E2';\nz[0x3123] = 'A8E3';\nz[0x3124] = 'A8E4';\nz[0x3125] = 'A8E5';\nz[0x3126] = 'A8E6';\nz[0x3127] = 'A8E7';\nz[0x3128] = 'A8E8';\nz[0x3129] = 'A8E9';\nz[0x3220] = 'A2E5';\nz[0x3221] = 'A2E6';\nz[0x3222] = 'A2E7';\nz[0x3223] = 'A2E8';\nz[0x3224] = 'A2E9';\nz[0x3225] = 'A2EA';\nz[0x3226] = 'A2EB';\nz[0x3227] = 'A2EC';\nz[0x3228] = 'A2ED';\nz[0x3229] = 'A2EE';\nz[0x4E00] = 'D2BB';\nz[0x4E01] = 'B6A1';\nz[0x4E03] = 'C6DF';\nz[0x4E07] = 'CDF2';\nz[0x4E08] = 'D5C9';\nz[0x4E09] = 'C8FD';\nz[0x4E0A] = 'C9CF';\nz[0x4E0B] = 'CFC2';\nz[0x4E0C] = 'D8A2';\nz[0x4E0D] = 'B2BB';\nz[0x4E0E] = 'D3EB';\nz[0x4E10] = 'D8A4';\nz[0x4E11] = 'B3F3';\nz[0x4E13] = 'D7A8';\nz[0x4E14] = 'C7D2';\nz[0x4E15] = 'D8A7';\nz[0x4E16] = 'CAC0';\nz[0x4E18] = 'C7F0';\nz[0x4E19] = 'B1FB';\nz[0x4E1A] = 'D2B5';\nz[0x4E1B] = 'B4D4';\nz[0x4E1C] = 'B6AB';\nz[0x4E1D] = 'CBBF';\nz[0x4E1E] = 'D8A9';\nz[0x4E22] = 'B6AA';\nz[0x4E24] = 'C1BD';\nz[0x4E25] = 'D1CF';\nz[0x4E27] = 'C9A5';\nz[0x4E28] = 'D8AD';\nz[0x4E2A] = 'B8F6';\nz[0x4E2B] = 'D1BE';\nz[0x4E2C] = 'E3DC';\nz[0x4E2D] = 'D6D0';\nz[0x4E30] = 'B7E1';\nz[0x4E32] = 'B4AE';\nz[0x4E34] = 'C1D9';\nz[0x4E36] = 'D8BC';\nz[0x4E38] = 'CDE8';\nz[0x4E39] = 'B5A4';\nz[0x4E3A] = 'CEAA';\nz[0x4E3B] = 'D6F7';\nz[0x4E3D] = 'C0F6';\nz[0x4E3E] = 'BED9';\nz[0x4E3F] = 'D8AF';\nz[0x4E43] = 'C4CB';\nz[0x4E45] = 'BEC3';\nz[0x4E47] = 'D8B1';\nz[0x4E48] = 'C3B4';\nz[0x4E49] = 'D2E5';\nz[0x4E4B] = 'D6AE';\nz[0x4E4C] = 'CEDA';\nz[0x4E4D] = 'D5A7';\nz[0x4E4E] = 'BAF5';\nz[0x4E4F] = 'B7A6';\nz[0x4E50] = 'C0D6';\nz[0x4E52] = 'C6B9';\nz[0x4E53] = 'C5D2';\nz[0x4E54] = 'C7C7';\nz[0x4E56] = 'B9D4';\nz[0x4E58] = 'B3CB';\nz[0x4E59] = 'D2D2';\nz[0x4E5C] = 'D8BF';\nz[0x4E5D] = 'BEC5';\nz[0x4E5E] = 'C6F2';\nz[0x4E5F] = 'D2B2';\nz[0x4E60] = 'CFB0';\nz[0x4E61] = 'CFE7';\nz[0x4E66] = 'CAE9';\nz[0x4E69] = 'D8C0';\nz[0x4E70] = 'C2F2';\nz[0x4E71] = 'C2D2';\nz[0x4E73] = 'C8E9';\nz[0x4E7E] = 'C7AC';\nz[0x4E86] = 'C1CB';\nz[0x4E88] = 'D3E8';\nz[0x4E89] = 'D5F9';\nz[0x4E8B] = 'CAC2';\nz[0x4E8C] = 'B6FE';\nz[0x4E8D] = 'D8A1';\nz[0x4E8E] = 'D3DA';\nz[0x4E8F] = 'BFF7';\nz[0x4E91] = 'D4C6';\nz[0x4E92] = 'BBA5';\nz[0x4E93] = 'D8C1';\nz[0x4E94] = 'CEE5';\nz[0x4E95] = 'BEAE';\nz[0x4E98] = 'D8A8';\nz[0x4E9A] = 'D1C7';\nz[0x4E9B] = 'D0A9';\nz[0x4E9F] = 'D8BD';\nz[0x4EA0] = 'D9EF';\nz[0x4EA1] = 'CDF6';\nz[0x4EA2] = 'BFBA';\nz[0x4EA4] = 'BDBB';\nz[0x4EA5] = 'BAA5';\nz[0x4EA6] = 'D2E0';\nz[0x4EA7] = 'B2FA';\nz[0x4EA8] = 'BAE0';\nz[0x4EA9] = 'C4B6';\nz[0x4EAB] = 'CFED';\nz[0x4EAC] = 'BEA9';\nz[0x4EAD] = 'CDA4';\nz[0x4EAE] = 'C1C1';\nz[0x4EB2] = 'C7D7';\nz[0x4EB3] = 'D9F1';\nz[0x4EB5] = 'D9F4';\nz[0x4EBA] = 'C8CB';\nz[0x4EBB] = 'D8E9';\nz[0x4EBF] = 'D2DA';\nz[0x4EC0] = 'CAB2';\nz[0x4EC1] = 'C8CA';\nz[0x4EC2] = 'D8EC';\nz[0x4EC3] = 'D8EA';\nz[0x4EC4] = 'D8C6';\nz[0x4EC5] = 'BDF6';\nz[0x4EC6] = 'C6CD';\nz[0x4EC7] = 'B3F0';\nz[0x4EC9] = 'D8EB';\nz[0x4ECA] = 'BDF1';\nz[0x4ECB] = 'BDE9';\nz[0x4ECD] = 'C8D4';\nz[0x4ECE] = 'B4D3';\nz[0x4ED1] = 'C2D8';\nz[0x4ED3] = 'B2D6';\nz[0x4ED4] = 'D7D0';\nz[0x4ED5] = 'CACB';\nz[0x4ED6] = 'CBFB';\nz[0x4ED7] = 'D5CC';\nz[0x4ED8] = 'B8B6';\nz[0x4ED9] = 'CFC9';\nz[0x4EDD] = 'D9DA';\nz[0x4EDE] = 'D8F0';\nz[0x4EDF] = 'C7AA';\nz[0x4EE1] = 'D8EE';\nz[0x4EE3] = 'B4FA';\nz[0x4EE4] = 'C1EE';\nz[0x4EE5] = 'D2D4';\nz[0x4EE8] = 'D8ED';\nz[0x4EEA] = 'D2C7';\nz[0x4EEB] = 'D8EF';\nz[0x4EEC] = 'C3C7';\nz[0x4EF0] = 'D1F6';\nz[0x4EF2] = 'D6D9';\nz[0x4EF3] = 'D8F2';\nz[0x4EF5] = 'D8F5';\nz[0x4EF6] = 'BCFE';\nz[0x4EF7] = 'BCDB';\nz[0x4EFB] = 'C8CE';\nz[0x4EFD] = 'B7DD';\nz[0x4EFF] = 'B7C2';\nz[0x4F01] = 'C6F3';\nz[0x4F09] = 'D8F8';\nz[0x4F0A] = 'D2C1';\nz[0x4F0D] = 'CEE9';\nz[0x4F0E] = 'BCBF';\nz[0x4F0F] = 'B7FC';\nz[0x4F10] = 'B7A5';\nz[0x4F11] = 'D0DD';\nz[0x4F17] = 'D6DA';\nz[0x4F18] = 'D3C5';\nz[0x4F19] = 'BBEF';\nz[0x4F1A] = 'BBE1';\nz[0x4F1B] = 'D8F1';\nz[0x4F1E] = 'C9A1';\nz[0x4F1F] = 'CEB0';\nz[0x4F20] = 'B4AB';\nz[0x4F22] = 'D8F3';\nz[0x4F24] = 'C9CB';\nz[0x4F25] = 'D8F6';\nz[0x4F26] = 'C2D7';\nz[0x4F27] = 'D8F7';\nz[0x4F2A] = 'CEB1';\nz[0x4F2B] = 'D8F9';\nz[0x4F2F] = 'B2AE';\nz[0x4F30] = 'B9C0';\nz[0x4F32] = 'D9A3';\nz[0x4F34] = 'B0E9';\nz[0x4F36] = 'C1E6';\nz[0x4F38] = 'C9EC';\nz[0x4F3A] = 'CBC5';\nz[0x4F3C] = 'CBC6';\nz[0x4F3D] = 'D9A4';\nz[0x4F43] = 'B5E8';\nz[0x4F46] = 'B5AB';\nz[0x4F4D] = 'CEBB';\nz[0x4F4E] = 'B5CD';\nz[0x4F4F] = 'D7A1';\nz[0x4F50] = 'D7F4';\nz[0x4F51] = 'D3D3';\nz[0x4F53] = 'CCE5';\nz[0x4F55] = 'BACE';\nz[0x4F57] = 'D9A2';\nz[0x4F58] = 'D9DC';\nz[0x4F59] = 'D3E0';\nz[0x4F5A] = 'D8FD';\nz[0x4F5B] = 'B7F0';\nz[0x4F5C] = 'D7F7';\nz[0x4F5D] = 'D8FE';\nz[0x4F5E] = 'D8FA';\nz[0x4F5F] = 'D9A1';\nz[0x4F60] = 'C4E3';\nz[0x4F63] = 'D3B6';\nz[0x4F64] = 'D8F4';\nz[0x4F65] = 'D9DD';\nz[0x4F67] = 'D8FB';\nz[0x4F69] = 'C5E5';\nz[0x4F6C] = 'C0D0';\nz[0x4F6F] = 'D1F0';\nz[0x4F70] = 'B0DB';\nz[0x4F73] = 'BCD1';\nz[0x4F74] = 'D9A6';\nz[0x4F76] = 'D9A5';\nz[0x4F7B] = 'D9AC';\nz[0x4F7C] = 'D9AE';\nz[0x4F7E] = 'D9AB';\nz[0x4F7F] = 'CAB9';\nz[0x4F83] = 'D9A9';\nz[0x4F84] = 'D6B6';\nz[0x4F88] = 'B3DE';\nz[0x4F89] = 'D9A8';\nz[0x4F8B] = 'C0FD';\nz[0x4F8D] = 'CACC';\nz[0x4F8F] = 'D9AA';\nz[0x4F91] = 'D9A7';\nz[0x4F94] = 'D9B0';\nz[0x4F97] = 'B6B1';\nz[0x4F9B] = 'B9A9';\nz[0x4F9D] = 'D2C0';\nz[0x4FA0] = 'CFC0';\nz[0x4FA3] = 'C2C2';\nz[0x4FA5] = 'BDC4';\nz[0x4FA6] = 'D5EC';\nz[0x4FA7] = 'B2E0';\nz[0x4FA8] = 'C7C8';\nz[0x4FA9] = 'BFEB';\nz[0x4FAA] = 'D9AD';\nz[0x4FAC] = 'D9AF';\nz[0x4FAE] = 'CEEA';\nz[0x4FAF] = 'BAEE';\nz[0x4FB5] = 'C7D6';\nz[0x4FBF] = 'B1E3';\nz[0x4FC3] = 'B4D9';\nz[0x4FC4] = 'B6ED';\nz[0x4FC5] = 'D9B4';\nz[0x4FCA] = 'BFA1';\nz[0x4FCE] = 'D9DE';\nz[0x4FCF] = 'C7CE';\nz[0x4FD0] = 'C0FE';\nz[0x4FD1] = 'D9B8';\nz[0x4FD7] = 'CBD7';\nz[0x4FD8] = 'B7FD';\nz[0x4FDA] = 'D9B5';\nz[0x4FDC] = 'D9B7';\nz[0x4FDD] = 'B1A3';\nz[0x4FDE] = 'D3E1';\nz[0x4FDF] = 'D9B9';\nz[0x4FE1] = 'D0C5';\nz[0x4FE3] = 'D9B6';\nz[0x4FE6] = 'D9B1';\nz[0x4FE8] = 'D9B2';\nz[0x4FE9] = 'C1A9';\nz[0x4FEA] = 'D9B3';\nz[0x4FED] = 'BCF3';\nz[0x4FEE] = 'D0DE';\nz[0x4FEF] = 'B8A9';\nz[0x4FF1] = 'BEE3';\nz[0x4FF3] = 'D9BD';\nz[0x4FF8] = 'D9BA';\nz[0x4FFA] = 'B0B3';\nz[0x4FFE] = 'D9C2';\nz[0x500C] = 'D9C4';\nz[0x500D] = 'B1B6';\nz[0x500F] = 'D9BF';\nz[0x5012] = 'B5B9';\nz[0x5014] = 'BEF3';\nz[0x5018] = 'CCC8';\nz[0x5019] = 'BAF2';\nz[0x501A] = 'D2D0';\nz[0x501C] = 'D9C3';\nz[0x501F] = 'BDE8';\nz[0x5021] = 'B3AB';\nz[0x5025] = 'D9C5';\nz[0x5026] = 'BEEB';\nz[0x5028] = 'D9C6';\nz[0x5029] = 'D9BB';\nz[0x502A] = 'C4DF';\nz[0x502C] = 'D9BE';\nz[0x502D] = 'D9C1';\nz[0x502E] = 'D9C0';\nz[0x503A] = 'D5AE';\nz[0x503C] = 'D6B5';\nz[0x503E] = 'C7E3';\nz[0x5043] = 'D9C8';\nz[0x5047] = 'BCD9';\nz[0x5048] = 'D9CA';\nz[0x504C] = 'D9BC';\nz[0x504E] = 'D9CB';\nz[0x504F] = 'C6AB';\nz[0x5055] = 'D9C9';\nz[0x505A] = 'D7F6';\nz[0x505C] = 'CDA3';\nz[0x5065] = 'BDA1';\nz[0x506C] = 'D9CC';\nz[0x5076] = 'C5BC';\nz[0x5077] = 'CDB5';\nz[0x507B] = 'D9CD';\nz[0x507E] = 'D9C7';\nz[0x507F] = 'B3A5';\nz[0x5080] = 'BFFE';\nz[0x5085] = 'B8B5';\nz[0x5088] = 'C0FC';\nz[0x508D] = 'B0F8';\nz[0x50A3] = 'B4F6';\nz[0x50A5] = 'D9CE';\nz[0x50A7] = 'D9CF';\nz[0x50A8] = 'B4A2';\nz[0x50A9] = 'D9D0';\nz[0x50AC] = 'B4DF';\nz[0x50B2] = 'B0C1';\nz[0x50BA] = 'D9D1';\nz[0x50BB] = 'C9B5';\nz[0x50CF] = 'CFF1';\nz[0x50D6] = 'D9D2';\nz[0x50DA] = 'C1C5';\nz[0x50E6] = 'D9D6';\nz[0x50E7] = 'C9AE';\nz[0x50EC] = 'D9D5';\nz[0x50ED] = 'D9D4';\nz[0x50EE] = 'D9D7';\nz[0x50F3] = 'CBDB';\nz[0x50F5] = 'BDA9';\nz[0x50FB] = 'C6A7';\nz[0x5106] = 'D9D3';\nz[0x5107] = 'D9D8';\nz[0x510B] = 'D9D9';\nz[0x5112] = 'C8E5';\nz[0x5121] = 'C0DC';\nz[0x513F] = 'B6F9';\nz[0x5140] = 'D8A3';\nz[0x5141] = 'D4CA';\nz[0x5143] = 'D4AA';\nz[0x5144] = 'D0D6';\nz[0x5145] = 'B3E4';\nz[0x5146] = 'D5D7';\nz[0x5148] = 'CFC8';\nz[0x5149] = 'B9E2';\nz[0x514B] = 'BFCB';\nz[0x514D] = 'C3E2';\nz[0x5151] = 'B6D2';\nz[0x5154] = 'CDC3';\nz[0x5155] = 'D9EE';\nz[0x5156] = 'D9F0';\nz[0x515A] = 'B5B3';\nz[0x515C] = 'B6B5';\nz[0x5162] = 'BEA4';\nz[0x5165] = 'C8EB';\nz[0x5168] = 'C8AB';\nz[0x516B] = 'B0CB';\nz[0x516C] = 'B9AB';\nz[0x516D] = 'C1F9';\nz[0x516E] = 'D9E2';\nz[0x5170] = 'C0BC';\nz[0x5171] = 'B9B2';\nz[0x5173] = 'B9D8';\nz[0x5174] = 'D0CB';\nz[0x5175] = 'B1F8';\nz[0x5176] = 'C6E4';\nz[0x5177] = 'BEDF';\nz[0x5178] = 'B5E4';\nz[0x5179] = 'D7C8';\nz[0x517B] = 'D1F8';\nz[0x517C] = 'BCE6';\nz[0x517D] = 'CADE';\nz[0x5180] = 'BCBD';\nz[0x5181] = 'D9E6';\nz[0x5182] = 'D8E7';\nz[0x5185] = 'C4DA';\nz[0x5188] = 'B8D4';\nz[0x5189] = 'C8BD';\nz[0x518C] = 'B2E1';\nz[0x518D] = 'D4D9';\nz[0x5192] = 'C3B0';\nz[0x5195] = 'C3E1';\nz[0x5196] = 'DAA2';\nz[0x5197] = 'C8DF';\nz[0x5199] = 'D0B4';\nz[0x519B] = 'BEFC';\nz[0x519C] = 'C5A9';\nz[0x51A0] = 'B9DA';\nz[0x51A2] = 'DAA3';\nz[0x51A4] = 'D4A9';\nz[0x51A5] = 'DAA4';\nz[0x51AB] = 'D9FB';\nz[0x51AC] = 'B6AC';\nz[0x51AF] = 'B7EB';\nz[0x51B0] = 'B1F9';\nz[0x51B1] = 'D9FC';\nz[0x51B2] = 'B3E5';\nz[0x51B3] = 'BEF6';\nz[0x51B5] = 'BFF6';\nz[0x51B6] = 'D2B1';\nz[0x51B7] = 'C0E4';\nz[0x51BB] = 'B6B3';\nz[0x51BC] = 'D9FE';\nz[0x51BD] = 'D9FD';\nz[0x51C0] = 'BEBB';\nz[0x51C4] = 'C6E0';\nz[0x51C6] = 'D7BC';\nz[0x51C7] = 'DAA1';\nz[0x51C9] = 'C1B9';\nz[0x51CB] = 'B5F2';\nz[0x51CC] = 'C1E8';\nz[0x51CF] = 'BCF5';\nz[0x51D1] = 'B4D5';\nz[0x51DB] = 'C1DD';\nz[0x51DD] = 'C4FD';\nz[0x51E0] = 'BCB8';\nz[0x51E1] = 'B7B2';\nz[0x51E4] = 'B7EF';\nz[0x51EB] = 'D9EC';\nz[0x51ED] = 'C6BE';\nz[0x51EF] = 'BFAD';\nz[0x51F0] = 'BBCB';\nz[0x51F3] = 'B5CA';\nz[0x51F5] = 'DBC9';\nz[0x51F6] = 'D0D7';\nz[0x51F8] = 'CDB9';\nz[0x51F9] = 'B0BC';\nz[0x51FA] = 'B3F6';\nz[0x51FB] = 'BBF7';\nz[0x51FC] = 'DBCA';\nz[0x51FD] = 'BAAF';\nz[0x51FF] = 'D4E4';\nz[0x5200] = 'B5B6';\nz[0x5201] = 'B5F3';\nz[0x5202] = 'D8D6';\nz[0x5203] = 'C8D0';\nz[0x5206] = 'B7D6';\nz[0x5207] = 'C7D0';\nz[0x5208] = 'D8D7';\nz[0x520A] = 'BFAF';\nz[0x520D] = 'DBBB';\nz[0x520E] = 'D8D8';\nz[0x5211] = 'D0CC';\nz[0x5212] = 'BBAE';\nz[0x5216] = 'EBBE';\nz[0x5217] = 'C1D0';\nz[0x5218] = 'C1F5';\nz[0x5219] = 'D4F2';\nz[0x521A] = 'B8D5';\nz[0x521B] = 'B4B4';\nz[0x521D] = 'B3F5';\nz[0x5220] = 'C9BE';\nz[0x5224] = 'C5D0';\nz[0x5228] = 'C5D9';\nz[0x5229] = 'C0FB';\nz[0x522B] = 'B1F0';\nz[0x522D] = 'D8D9';\nz[0x522E] = 'B9CE';\nz[0x5230] = 'B5BD';\nz[0x5233] = 'D8DA';\nz[0x5236] = 'D6C6';\nz[0x5237] = 'CBA2';\nz[0x5238] = 'C8AF';\nz[0x5239] = 'C9B2';\nz[0x523A] = 'B4CC';\nz[0x523B] = 'BFCC';\nz[0x523D] = 'B9F4';\nz[0x523F] = 'D8DB';\nz[0x5240] = 'D8DC';\nz[0x5241] = 'B6E7';\nz[0x5242] = 'BCC1';\nz[0x5243] = 'CCEA';\nz[0x524A] = 'CFF7';\nz[0x524C] = 'D8DD';\nz[0x524D] = 'C7B0';\nz[0x5250] = 'B9D0';\nz[0x5251] = 'BDA3';\nz[0x5254] = 'CCDE';\nz[0x5256] = 'C6CA';\nz[0x525C] = 'D8E0';\nz[0x525E] = 'D8DE';\nz[0x5261] = 'D8DF';\nz[0x5265] = 'B0FE';\nz[0x5267] = 'BEE7';\nz[0x5269] = 'CAA3';\nz[0x526A] = 'BCF4';\nz[0x526F] = 'B8B1';\nz[0x5272] = 'B8EE';\nz[0x527D] = 'D8E2';\nz[0x527F] = 'BDCB';\nz[0x5281] = 'D8E4';\nz[0x5282] = 'D8E3';\nz[0x5288] = 'C5FC';\nz[0x5290] = 'D8E5';\nz[0x5293] = 'D8E6';\nz[0x529B] = 'C1A6';\nz[0x529D] = 'C8B0';\nz[0x529E] = 'B0EC';\nz[0x529F] = 'B9A6';\nz[0x52A0] = 'BCD3';\nz[0x52A1] = 'CEF1';\nz[0x52A2] = 'DBBD';\nz[0x52A3] = 'C1D3';\nz[0x52A8] = 'B6AF';\nz[0x52A9] = 'D6FA';\nz[0x52AA] = 'C5AC';\nz[0x52AB] = 'BDD9';\nz[0x52AC] = 'DBBE';\nz[0x52AD] = 'DBBF';\nz[0x52B1] = 'C0F8';\nz[0x52B2] = 'BEA2';\nz[0x52B3] = 'C0CD';\nz[0x52BE] = 'DBC0';\nz[0x52BF] = 'CAC6';\nz[0x52C3] = 'B2AA';\nz[0x52C7] = 'D3C2';\nz[0x52C9] = 'C3E3';\nz[0x52CB] = 'D1AB';\nz[0x52D0] = 'DBC2';\nz[0x52D2] = 'C0D5';\nz[0x52D6] = 'DBC3';\nz[0x52D8] = 'BFB1';\nz[0x52DF] = 'C4BC';\nz[0x52E4] = 'C7DA';\nz[0x52F0] = 'DBC4';\nz[0x52F9] = 'D9E8';\nz[0x52FA] = 'C9D7';\nz[0x52FE] = 'B9B4';\nz[0x52FF] = 'CEF0';\nz[0x5300] = 'D4C8';\nz[0x5305] = 'B0FC';\nz[0x5306] = 'B4D2';\nz[0x5308] = 'D0D9';\nz[0x530D] = 'D9E9';\nz[0x530F] = 'DECB';\nz[0x5310] = 'D9EB';\nz[0x5315] = 'D8B0';\nz[0x5316] = 'BBAF';\nz[0x5317] = 'B1B1';\nz[0x5319] = 'B3D7';\nz[0x531A] = 'D8CE';\nz[0x531D] = 'D4D1';\nz[0x5320] = 'BDB3';\nz[0x5321] = 'BFEF';\nz[0x5323] = 'CFBB';\nz[0x5326] = 'D8D0';\nz[0x532A] = 'B7CB';\nz[0x532E] = 'D8D1';\nz[0x5339] = 'C6A5';\nz[0x533A] = 'C7F8';\nz[0x533B] = 'D2BD';\nz[0x533E] = 'D8D2';\nz[0x533F] = 'C4E4';\nz[0x5341] = 'CAAE';\nz[0x5343] = 'C7A7';\nz[0x5345] = 'D8A6';\nz[0x5347] = 'C9FD';\nz[0x5348] = 'CEE7';\nz[0x5349] = 'BBDC';\nz[0x534A] = 'B0EB';\nz[0x534E] = 'BBAA';\nz[0x534F] = 'D0AD';\nz[0x5351] = 'B1B0';\nz[0x5352] = 'D7E4';\nz[0x5353] = 'D7BF';\nz[0x5355] = 'B5A5';\nz[0x5356] = 'C2F4';\nz[0x5357] = 'C4CF';\nz[0x535A] = 'B2A9';\nz[0x535C] = 'B2B7';\nz[0x535E] = 'B1E5';\nz[0x535F] = 'DFB2';\nz[0x5360] = 'D5BC';\nz[0x5361] = 'BFA8';\nz[0x5362] = 'C2AC';\nz[0x5363] = 'D8D5';\nz[0x5364] = 'C2B1';\nz[0x5366] = 'D8D4';\nz[0x5367] = 'CED4';\nz[0x5369] = 'DAE0';\nz[0x536B] = 'CEC0';\nz[0x536E] = 'D8B4';\nz[0x536F] = 'C3AE';\nz[0x5370] = 'D3A1';\nz[0x5371] = 'CEA3';\nz[0x5373] = 'BCB4';\nz[0x5374] = 'C8B4';\nz[0x5375] = 'C2D1';\nz[0x5377] = 'BEED';\nz[0x5378] = 'D0B6';\nz[0x537A] = 'DAE1';\nz[0x537F] = 'C7E4';\nz[0x5382] = 'B3A7';\nz[0x5384] = 'B6F2';\nz[0x5385] = 'CCFC';\nz[0x5386] = 'C0FA';\nz[0x5389] = 'C0F7';\nz[0x538B] = 'D1B9';\nz[0x538C] = 'D1E1';\nz[0x538D] = 'D8C7';\nz[0x5395] = 'B2DE';\nz[0x5398] = 'C0E5';\nz[0x539A] = 'BAF1';\nz[0x539D] = 'D8C8';\nz[0x539F] = 'D4AD';\nz[0x53A2] = 'CFE1';\nz[0x53A3] = 'D8C9';\nz[0x53A5] = 'D8CA';\nz[0x53A6] = 'CFC3';\nz[0x53A8] = 'B3F8';\nz[0x53A9] = 'BEC7';\nz[0x53AE] = 'D8CB';\nz[0x53B6] = 'DBCC';\nz[0x53BB] = 'C8A5';\nz[0x53BF] = 'CFD8';\nz[0x53C1] = 'C8FE';\nz[0x53C2] = 'B2CE';\nz[0x53C8] = 'D3D6';\nz[0x53C9] = 'B2E6';\nz[0x53CA] = 'BCB0';\nz[0x53CB] = 'D3D1';\nz[0x53CC] = 'CBAB';\nz[0x53CD] = 'B7B4';\nz[0x53D1] = 'B7A2';\nz[0x53D4] = 'CAE5';\nz[0x53D6] = 'C8A1';\nz[0x53D7] = 'CADC';\nz[0x53D8] = 'B1E4';\nz[0x53D9] = 'D0F0';\nz[0x53DB] = 'C5D1';\nz[0x53DF] = 'DBC5';\nz[0x53E0] = 'B5FE';\nz[0x53E3] = 'BFDA';\nz[0x53E4] = 'B9C5';\nz[0x53E5] = 'BEE4';\nz[0x53E6] = 'C1ED';\nz[0x53E8] = 'DFB6';\nz[0x53E9] = 'DFB5';\nz[0x53EA] = 'D6BB';\nz[0x53EB] = 'BDD0';\nz[0x53EC] = 'D5D9';\nz[0x53ED] = 'B0C8';\nz[0x53EE] = 'B6A3';\nz[0x53EF] = 'BFC9';\nz[0x53F0] = 'CCA8';\nz[0x53F1] = 'DFB3';\nz[0x53F2] = 'CAB7';\nz[0x53F3] = 'D3D2';\nz[0x53F5] = 'D8CF';\nz[0x53F6] = 'D2B6';\nz[0x53F7] = 'BAC5';\nz[0x53F8] = 'CBBE';\nz[0x53F9] = 'CCBE';\nz[0x53FB] = 'DFB7';\nz[0x53FC] = 'B5F0';\nz[0x53FD] = 'DFB4';\nz[0x5401] = 'D3F5';\nz[0x5403] = 'B3D4';\nz[0x5404] = 'B8F7';\nz[0x5406] = 'DFBA';\nz[0x5408] = 'BACF';\nz[0x5409] = 'BCAA';\nz[0x540A] = 'B5F5';\nz[0x540C] = 'CDAC';\nz[0x540D] = 'C3FB';\nz[0x540E] = 'BAF3';\nz[0x540F] = 'C0F4';\nz[0x5410] = 'CDC2';\nz[0x5411] = 'CFF2';\nz[0x5412] = 'DFB8';\nz[0x5413] = 'CFC5';\nz[0x5415] = 'C2C0';\nz[0x5416] = 'DFB9';\nz[0x5417] = 'C2F0';\nz[0x541B] = 'BEFD';\nz[0x541D] = 'C1DF';\nz[0x541E] = 'CDCC';\nz[0x541F] = 'D2F7';\nz[0x5420] = 'B7CD';\nz[0x5421] = 'DFC1';\nz[0x5423] = 'DFC4';\nz[0x5426] = 'B7F1';\nz[0x5427] = 'B0C9';\nz[0x5428] = 'B6D6';\nz[0x5429] = 'B7D4';\nz[0x542B] = 'BAAC';\nz[0x542C] = 'CCFD';\nz[0x542D] = 'BFD4';\nz[0x542E] = 'CBB1';\nz[0x542F] = 'C6F4';\nz[0x5431] = 'D6A8';\nz[0x5432] = 'DFC5';\nz[0x5434] = 'CEE2';\nz[0x5435] = 'B3B3';\nz[0x5438] = 'CEFC';\nz[0x5439] = 'B4B5';\nz[0x543B] = 'CEC7';\nz[0x543C] = 'BAF0';\nz[0x543E] = 'CEE1';\nz[0x5440] = 'D1BD';\nz[0x5443] = 'DFC0';\nz[0x5446] = 'B4F4';\nz[0x5448] = 'B3CA';\nz[0x544A] = 'B8E6';\nz[0x544B] = 'DFBB';\nz[0x5450] = 'C4C5';\nz[0x5452] = 'DFBC';\nz[0x5453] = 'DFBD';\nz[0x5454] = 'DFBE';\nz[0x5455] = 'C5BB';\nz[0x5456] = 'DFBF';\nz[0x5457] = 'DFC2';\nz[0x5458] = 'D4B1';\nz[0x5459] = 'DFC3';\nz[0x545B] = 'C7BA';\nz[0x545C] = 'CED8';\nz[0x5462] = 'C4D8';\nz[0x5464] = 'DFCA';\nz[0x5466] = 'DFCF';\nz[0x5468] = 'D6DC';\nz[0x5471] = 'DFC9';\nz[0x5472] = 'DFDA';\nz[0x5473] = 'CEB6';\nz[0x5475] = 'BAC7';\nz[0x5476] = 'DFCE';\nz[0x5477] = 'DFC8';\nz[0x5478] = 'C5DE';\nz[0x547B] = 'C9EB';\nz[0x547C] = 'BAF4';\nz[0x547D] = 'C3FC';\nz[0x5480] = 'BED7';\nz[0x5482] = 'DFC6';\nz[0x5484] = 'DFCD';\nz[0x5486] = 'C5D8';\nz[0x548B] = 'D5A6';\nz[0x548C] = 'BACD';\nz[0x548E] = 'BECC';\nz[0x548F] = 'D3BD';\nz[0x5490] = 'B8C0';\nz[0x5492] = 'D6E4';\nz[0x5494] = 'DFC7';\nz[0x5495] = 'B9BE';\nz[0x5496] = 'BFA7';\nz[0x5499] = 'C1FC';\nz[0x549A] = 'DFCB';\nz[0x549B] = 'DFCC';\nz[0x549D] = 'DFD0';\nz[0x54A3] = 'DFDB';\nz[0x54A4] = 'DFE5';\nz[0x54A6] = 'DFD7';\nz[0x54A7] = 'DFD6';\nz[0x54A8] = 'D7C9';\nz[0x54A9] = 'DFE3';\nz[0x54AA] = 'DFE4';\nz[0x54AB] = 'E5EB';\nz[0x54AC] = 'D2A7';\nz[0x54AD] = 'DFD2';\nz[0x54AF] = 'BFA9';\nz[0x54B1] = 'D4DB';\nz[0x54B3] = 'BFC8';\nz[0x54B4] = 'DFD4';\nz[0x54B8] = 'CFCC';\nz[0x54BB] = 'DFDD';\nz[0x54BD] = 'D1CA';\nz[0x54BF] = 'DFDE';\nz[0x54C0] = 'B0A7';\nz[0x54C1] = 'C6B7';\nz[0x54C2] = 'DFD3';\nz[0x54C4] = 'BAE5';\nz[0x54C6] = 'B6DF';\nz[0x54C7] = 'CDDB';\nz[0x54C8] = 'B9FE';\nz[0x54C9] = 'D4D5';\nz[0x54CC] = 'DFDF';\nz[0x54CD] = 'CFEC';\nz[0x54CE] = 'B0A5';\nz[0x54CF] = 'DFE7';\nz[0x54D0] = 'DFD1';\nz[0x54D1] = 'D1C6';\nz[0x54D2] = 'DFD5';\nz[0x54D3] = 'DFD8';\nz[0x54D4] = 'DFD9';\nz[0x54D5] = 'DFDC';\nz[0x54D7] = 'BBA9';\nz[0x54D9] = 'DFE0';\nz[0x54DA] = 'DFE1';\nz[0x54DC] = 'DFE2';\nz[0x54DD] = 'DFE6';\nz[0x54DE] = 'DFE8';\nz[0x54DF] = 'D3B4';\nz[0x54E5] = 'B8E7';\nz[0x54E6] = 'C5B6';\nz[0x54E7] = 'DFEA';\nz[0x54E8] = 'C9DA';\nz[0x54E9] = 'C1A8';\nz[0x54EA] = 'C4C4';\nz[0x54ED] = 'BFDE';\nz[0x54EE] = 'CFF8';\nz[0x54F2] = 'D5DC';\nz[0x54F3] = 'DFEE';\nz[0x54FA] = 'B2B8';\nz[0x54FC] = 'BADF';\nz[0x54FD] = 'DFEC';\nz[0x54FF] = 'DBC1';\nz[0x5501] = 'D1E4';\nz[0x5506] = 'CBF4';\nz[0x5507] = 'B4BD';\nz[0x5509] = 'B0A6';\nz[0x550F] = 'DFF1';\nz[0x5510] = 'CCC6';\nz[0x5511] = 'DFF2';\nz[0x5514] = 'DFED';\nz[0x551B] = 'DFE9';\nz[0x5520] = 'DFEB';\nz[0x5522] = 'DFEF';\nz[0x5523] = 'DFF0';\nz[0x5524] = 'BBBD';\nz[0x5527] = 'DFF3';\nz[0x552A] = 'DFF4';\nz[0x552C] = 'BBA3';\nz[0x552E] = 'CADB';\nz[0x552F] = 'CEA8';\nz[0x5530] = 'E0A7';\nz[0x5531] = 'B3AA';\nz[0x5533] = 'E0A6';\nz[0x5537] = 'E0A1';\nz[0x553C] = 'DFFE';\nz[0x553E] = 'CDD9';\nz[0x553F] = 'DFFC';\nz[0x5541] = 'DFFA';\nz[0x5543] = 'BFD0';\nz[0x5544] = 'D7C4';\nz[0x5546] = 'C9CC';\nz[0x5549] = 'DFF8';\nz[0x554A] = 'B0A1';\nz[0x5550] = 'DFFD';\nz[0x5555] = 'DFFB';\nz[0x5556] = 'E0A2';\nz[0x555C] = 'E0A8';\nz[0x5561] = 'B7C8';\nz[0x5564] = 'C6A1';\nz[0x5565] = 'C9B6';\nz[0x5566] = 'C0B2';\nz[0x5567] = 'DFF5';\nz[0x556A] = 'C5BE';\nz[0x556C] = 'D8C4';\nz[0x556D] = 'DFF9';\nz[0x556E] = 'C4F6';\nz[0x5575] = 'E0A3';\nz[0x5576] = 'E0A4';\nz[0x5577] = 'E0A5';\nz[0x5578] = 'D0A5';\nz[0x557B] = 'E0B4';\nz[0x557C] = 'CCE4';\nz[0x557E] = 'E0B1';\nz[0x5580] = 'BFA6';\nz[0x5581] = 'E0AF';\nz[0x5582] = 'CEB9';\nz[0x5583] = 'E0AB';\nz[0x5584] = 'C9C6';\nz[0x5587] = 'C0AE';\nz[0x5588] = 'E0AE';\nz[0x5589] = 'BAED';\nz[0x558A] = 'BAB0';\nz[0x558B] = 'E0A9';\nz[0x558F] = 'DFF6';\nz[0x5591] = 'E0B3';\nz[0x5594] = 'E0B8';\nz[0x5598] = 'B4AD';\nz[0x5599] = 'E0B9';\nz[0x559C] = 'CFB2';\nz[0x559D] = 'BAC8';\nz[0x559F] = 'E0B0';\nz[0x55A7] = 'D0FA';\nz[0x55B1] = 'E0AC';\nz[0x55B3] = 'D4FB';\nz[0x55B5] = 'DFF7';\nz[0x55B7] = 'C5E7';\nz[0x55B9] = 'E0AD';\nz[0x55BB] = 'D3F7';\nz[0x55BD] = 'E0B6';\nz[0x55BE] = 'E0B7';\nz[0x55C4] = 'E0C4';\nz[0x55C5] = 'D0E1';\nz[0x55C9] = 'E0BC';\nz[0x55CC] = 'E0C9';\nz[0x55CD] = 'E0CA';\nz[0x55D1] = 'E0BE';\nz[0x55D2] = 'E0AA';\nz[0x55D3] = 'C9A4';\nz[0x55D4] = 'E0C1';\nz[0x55D6] = 'E0B2';\nz[0x55DC] = 'CAC8';\nz[0x55DD] = 'E0C3';\nz[0x55DF] = 'E0B5';\nz[0x55E1] = 'CECB';\nz[0x55E3] = 'CBC3';\nz[0x55E4] = 'E0CD';\nz[0x55E5] = 'E0C6';\nz[0x55E6] = 'E0C2';\nz[0x55E8] = 'E0CB';\nz[0x55EA] = 'E0BA';\nz[0x55EB] = 'E0BF';\nz[0x55EC] = 'E0C0';\nz[0x55EF] = 'E0C5';\nz[0x55F2] = 'E0C7';\nz[0x55F3] = 'E0C8';\nz[0x55F5] = 'E0CC';\nz[0x55F7] = 'E0BB';\nz[0x55FD] = 'CBD4';\nz[0x55FE] = 'E0D5';\nz[0x5600] = 'E0D6';\nz[0x5601] = 'E0D2';\nz[0x5608] = 'E0D0';\nz[0x5609] = 'BCCE';\nz[0x560C] = 'E0D1';\nz[0x560E] = 'B8C2';\nz[0x560F] = 'D8C5';\nz[0x5618] = 'D0EA';\nz[0x561B] = 'C2EF';\nz[0x561E] = 'E0CF';\nz[0x561F] = 'E0BD';\nz[0x5623] = 'E0D4';\nz[0x5624] = 'E0D3';\nz[0x5627] = 'E0D7';\nz[0x562C] = 'E0DC';\nz[0x562D] = 'E0D8';\nz[0x5631] = 'D6F6';\nz[0x5632] = 'B3B0';\nz[0x5634] = 'D7EC';\nz[0x5636] = 'CBBB';\nz[0x5639] = 'E0DA';\nz[0x563B] = 'CEFB';\nz[0x563F] = 'BAD9';\nz[0x564C] = 'E0E1';\nz[0x564D] = 'E0DD';\nz[0x564E] = 'D2AD';\nz[0x5654] = 'E0E2';\nz[0x5657] = 'E0DB';\nz[0x5658] = 'E0D9';\nz[0x5659] = 'E0DF';\nz[0x565C] = 'E0E0';\nz[0x5662] = 'E0DE';\nz[0x5664] = 'E0E4';\nz[0x5668] = 'C6F7';\nz[0x5669] = 'D8AC';\nz[0x566A] = 'D4EB';\nz[0x566B] = 'E0E6';\nz[0x566C] = 'CAC9';\nz[0x5671] = 'E0E5';\nz[0x5676] = 'B8C1';\nz[0x567B] = 'E0E7';\nz[0x567C] = 'E0E8';\nz[0x5685] = 'E0E9';\nz[0x5686] = 'E0E3';\nz[0x568E] = 'BABF';\nz[0x568F] = 'CCE7';\nz[0x5693] = 'E0EA';\nz[0x56A3] = 'CFF9';\nz[0x56AF] = 'E0EB';\nz[0x56B7] = 'C8C2';\nz[0x56BC] = 'BDC0';\nz[0x56CA] = 'C4D2';\nz[0x56D4] = 'E0EC';\nz[0x56D7] = 'E0ED';\nz[0x56DA] = 'C7F4';\nz[0x56DB] = 'CBC4';\nz[0x56DD] = 'E0EE';\nz[0x56DE] = 'BBD8';\nz[0x56DF] = 'D8B6';\nz[0x56E0] = 'D2F2';\nz[0x56E1] = 'E0EF';\nz[0x56E2] = 'CDC5';\nz[0x56E4] = 'B6DA';\nz[0x56EB] = 'E0F1';\nz[0x56ED] = 'D4B0';\nz[0x56F0] = 'C0A7';\nz[0x56F1] = 'B4D1';\nz[0x56F4] = 'CEA7';\nz[0x56F5] = 'E0F0';\nz[0x56F9] = 'E0F2';\nz[0x56FA] = 'B9CC';\nz[0x56FD] = 'B9FA';\nz[0x56FE] = 'CDBC';\nz[0x56FF] = 'E0F3';\nz[0x5703] = 'C6D4';\nz[0x5704] = 'E0F4';\nz[0x5706] = 'D4B2';\nz[0x5708] = 'C8A6';\nz[0x5709] = 'E0F6';\nz[0x570A] = 'E0F5';\nz[0x571C] = 'E0F7';\nz[0x571F] = 'CDC1';\nz[0x5723] = 'CAA5';\nz[0x5728] = 'D4DA';\nz[0x5729] = 'DBD7';\nz[0x572A] = 'DBD9';\nz[0x572C] = 'DBD8';\nz[0x572D] = 'B9E7';\nz[0x572E] = 'DBDC';\nz[0x572F] = 'DBDD';\nz[0x5730] = 'B5D8';\nz[0x5733] = 'DBDA';\nz[0x5739] = 'DBDB';\nz[0x573A] = 'B3A1';\nz[0x573B] = 'DBDF';\nz[0x573E] = 'BBF8';\nz[0x5740] = 'D6B7';\nz[0x5742] = 'DBE0';\nz[0x5747] = 'BEF9';\nz[0x574A] = 'B7BB';\nz[0x574C] = 'DBD0';\nz[0x574D] = 'CCAE';\nz[0x574E] = 'BFB2';\nz[0x574F] = 'BBB5';\nz[0x5750] = 'D7F8';\nz[0x5751] = 'BFD3';\nz[0x5757] = 'BFE9';\nz[0x575A] = 'BCE1';\nz[0x575B] = 'CCB3';\nz[0x575C] = 'DBDE';\nz[0x575D] = 'B0D3';\nz[0x575E] = 'CEEB';\nz[0x575F] = 'B7D8';\nz[0x5760] = 'D7B9';\nz[0x5761] = 'C6C2';\nz[0x5764] = 'C0A4';\nz[0x5766] = 'CCB9';\nz[0x5768] = 'DBE7';\nz[0x5769] = 'DBE1';\nz[0x576A] = 'C6BA';\nz[0x576B] = 'DBE3';\nz[0x576D] = 'DBE8';\nz[0x576F] = 'C5F7';\nz[0x5773] = 'DBEA';\nz[0x5776] = 'DBE9';\nz[0x5777] = 'BFC0';\nz[0x577B] = 'DBE6';\nz[0x577C] = 'DBE5';\nz[0x5782] = 'B4B9';\nz[0x5783] = 'C0AC';\nz[0x5784] = 'C2A2';\nz[0x5785] = 'DBE2';\nz[0x5786] = 'DBE4';\nz[0x578B] = 'D0CD';\nz[0x578C] = 'DBED';\nz[0x5792] = 'C0DD';\nz[0x5793] = 'DBF2';\nz[0x579B] = 'B6E2';\nz[0x57A0] = 'DBF3';\nz[0x57A1] = 'DBD2';\nz[0x57A2] = 'B9B8';\nz[0x57A3] = 'D4AB';\nz[0x57A4] = 'DBEC';\nz[0x57A6] = 'BFD1';\nz[0x57A7] = 'DBF0';\nz[0x57A9] = 'DBD1';\nz[0x57AB] = 'B5E6';\nz[0x57AD] = 'DBEB';\nz[0x57AE] = 'BFE5';\nz[0x57B2] = 'DBEE';\nz[0x57B4] = 'DBF1';\nz[0x57B8] = 'DBF9';\nz[0x57C2] = 'B9A1';\nz[0x57C3] = 'B0A3';\nz[0x57CB] = 'C2F1';\nz[0x57CE] = 'B3C7';\nz[0x57CF] = 'DBEF';\nz[0x57D2] = 'DBF8';\nz[0x57D4] = 'C6D2';\nz[0x57D5] = 'DBF4';\nz[0x57D8] = 'DBF5';\nz[0x57D9] = 'DBF7';\nz[0x57DA] = 'DBF6';\nz[0x57DD] = 'DBFE';\nz[0x57DF] = 'D3F2';\nz[0x57E0] = 'B2BA';\nz[0x57E4] = 'DBFD';\nz[0x57ED] = 'DCA4';\nz[0x57EF] = 'DBFB';\nz[0x57F4] = 'DBFA';\nz[0x57F8] = 'DBFC';\nz[0x57F9] = 'C5E0';\nz[0x57FA] = 'BBF9';\nz[0x57FD] = 'DCA3';\nz[0x5800] = 'DCA5';\nz[0x5802] = 'CCC3';\nz[0x5806] = 'B6D1';\nz[0x5807] = 'DDC0';\nz[0x580B] = 'DCA1';\nz[0x580D] = 'DCA2';\nz[0x5811] = 'C7B5';\nz[0x5815] = 'B6E9';\nz[0x5819] = 'DCA7';\nz[0x581E] = 'DCA6';\nz[0x5820] = 'DCA9';\nz[0x5821] = 'B1A4';\nz[0x5824] = 'B5CC';\nz[0x582A] = 'BFB0';\nz[0x5830] = 'D1DF';\nz[0x5835] = 'B6C2';\nz[0x5844] = 'DCA8';\nz[0x584C] = 'CBFA';\nz[0x584D] = 'EBF3';\nz[0x5851] = 'CBDC';\nz[0x5854] = 'CBFE';\nz[0x5858] = 'CCC1';\nz[0x585E] = 'C8FB';\nz[0x5865] = 'DCAA';\nz[0x586B] = 'CCEE';\nz[0x586C] = 'DCAB';\nz[0x587E] = 'DBD3';\nz[0x5880] = 'DCAF';\nz[0x5881] = 'DCAC';\nz[0x5883] = 'BEB3';\nz[0x5885] = 'CAFB';\nz[0x5889] = 'DCAD';\nz[0x5892] = 'C9CA';\nz[0x5893] = 'C4B9';\nz[0x5899] = 'C7BD';\nz[0x589A] = 'DCAE';\nz[0x589E] = 'D4F6';\nz[0x589F] = 'D0E6';\nz[0x58A8] = 'C4AB';\nz[0x58A9] = 'B6D5';\nz[0x58BC] = 'DBD4';\nz[0x58C1] = 'B1DA';\nz[0x58C5] = 'DBD5';\nz[0x58D1] = 'DBD6';\nz[0x58D5] = 'BABE';\nz[0x58E4] = 'C8C0';\nz[0x58EB] = 'CABF';\nz[0x58EC] = 'C8C9';\nz[0x58EE] = 'D7B3';\nz[0x58F0] = 'C9F9';\nz[0x58F3] = 'BFC7';\nz[0x58F6] = 'BAF8';\nz[0x58F9] = 'D2BC';\nz[0x5902] = 'E2BA';\nz[0x5904] = 'B4A6';\nz[0x5907] = 'B1B8';\nz[0x590D] = 'B8B4';\nz[0x590F] = 'CFC4';\nz[0x5914] = 'D9E7';\nz[0x5915] = 'CFA6';\nz[0x5916] = 'CDE2';\nz[0x5919] = 'D9ED';\nz[0x591A] = 'B6E0';\nz[0x591C] = 'D2B9';\nz[0x591F] = 'B9BB';\nz[0x5924] = 'E2B9';\nz[0x5925] = 'E2B7';\nz[0x5927] = 'B4F3';\nz[0x5929] = 'CCEC';\nz[0x592A] = 'CCAB';\nz[0x592B] = 'B7F2';\nz[0x592D] = 'D8B2';\nz[0x592E] = 'D1EB';\nz[0x592F] = 'BABB';\nz[0x5931] = 'CAA7';\nz[0x5934] = 'CDB7';\nz[0x5937] = 'D2C4';\nz[0x5938] = 'BFE4';\nz[0x5939] = 'BCD0';\nz[0x593A] = 'B6E1';\nz[0x593C] = 'DEC5';\nz[0x5941] = 'DEC6';\nz[0x5942] = 'DBBC';\nz[0x5944] = 'D1D9';\nz[0x5947] = 'C6E6';\nz[0x5948] = 'C4CE';\nz[0x5949] = 'B7EE';\nz[0x594B] = 'B7DC';\nz[0x594E] = 'BFFC';\nz[0x594F] = 'D7E0';\nz[0x5951] = 'C6F5';\nz[0x5954] = 'B1BC';\nz[0x5955] = 'DEC8';\nz[0x5956] = 'BDB1';\nz[0x5957] = 'CCD7';\nz[0x5958] = 'DECA';\nz[0x595A] = 'DEC9';\nz[0x5960] = 'B5EC';\nz[0x5962] = 'C9DD';\nz[0x5965] = 'B0C2';\nz[0x5973] = 'C5AE';\nz[0x5974] = 'C5AB';\nz[0x5976] = 'C4CC';\nz[0x5978] = 'BCE9';\nz[0x5979] = 'CBFD';\nz[0x597D] = 'BAC3';\nz[0x5981] = 'E5F9';\nz[0x5982] = 'C8E7';\nz[0x5983] = 'E5FA';\nz[0x5984] = 'CDFD';\nz[0x5986] = 'D7B1';\nz[0x5987] = 'B8BE';\nz[0x5988] = 'C2E8';\nz[0x598A] = 'C8D1';\nz[0x598D] = 'E5FB';\nz[0x5992] = 'B6CA';\nz[0x5993] = 'BCCB';\nz[0x5996] = 'D1FD';\nz[0x5997] = 'E6A1';\nz[0x5999] = 'C3EE';\nz[0x599E] = 'E6A4';\nz[0x59A3] = 'E5FE';\nz[0x59A4] = 'E6A5';\nz[0x59A5] = 'CDD7';\nz[0x59A8] = 'B7C1';\nz[0x59A9] = 'E5FC';\nz[0x59AA] = 'E5FD';\nz[0x59AB] = 'E6A3';\nz[0x59AE] = 'C4DD';\nz[0x59AF] = 'E6A8';\nz[0x59B2] = 'E6A7';\nz[0x59B9] = 'C3C3';\nz[0x59BB] = 'C6DE';\nz[0x59BE] = 'E6AA';\nz[0x59C6] = 'C4B7';\nz[0x59CA] = 'E6A2';\nz[0x59CB] = 'CABC';\nz[0x59D0] = 'BDE3';\nz[0x59D1] = 'B9C3';\nz[0x59D2] = 'E6A6';\nz[0x59D3] = 'D0D5';\nz[0x59D4] = 'CEAF';\nz[0x59D7] = 'E6A9';\nz[0x59D8] = 'E6B0';\nz[0x59DA] = 'D2A6';\nz[0x59DC] = 'BDAA';\nz[0x59DD] = 'E6AD';\nz[0x59E3] = 'E6AF';\nz[0x59E5] = 'C0D1';\nz[0x59E8] = 'D2CC';\nz[0x59EC] = 'BCA7';\nz[0x59F9] = 'E6B1';\nz[0x59FB] = 'D2F6';\nz[0x59FF] = 'D7CB';\nz[0x5A01] = 'CDFE';\nz[0x5A03] = 'CDDE';\nz[0x5A04] = 'C2A6';\nz[0x5A05] = 'E6AB';\nz[0x5A06] = 'E6AC';\nz[0x5A07] = 'BDBF';\nz[0x5A08] = 'E6AE';\nz[0x5A09] = 'E6B3';\nz[0x5A0C] = 'E6B2';\nz[0x5A11] = 'E6B6';\nz[0x5A13] = 'E6B8';\nz[0x5A18] = 'C4EF';\nz[0x5A1C] = 'C4C8';\nz[0x5A1F] = 'BEEA';\nz[0x5A20] = 'C9EF';\nz[0x5A23] = 'E6B7';\nz[0x5A25] = 'B6F0';\nz[0x5A29] = 'C3E4';\nz[0x5A31] = 'D3E9';\nz[0x5A32] = 'E6B4';\nz[0x5A34] = 'E6B5';\nz[0x5A36] = 'C8A2';\nz[0x5A3C] = 'E6BD';\nz[0x5A40] = 'E6B9';\nz[0x5A46] = 'C6C5';\nz[0x5A49] = 'CDF1';\nz[0x5A4A] = 'E6BB';\nz[0x5A55] = 'E6BC';\nz[0x5A5A] = 'BBE9';\nz[0x5A62] = 'E6BE';\nz[0x5A67] = 'E6BA';\nz[0x5A6A] = 'C0B7';\nz[0x5A74] = 'D3A4';\nz[0x5A75] = 'E6BF';\nz[0x5A76] = 'C9F4';\nz[0x5A77] = 'E6C3';\nz[0x5A7A] = 'E6C4';\nz[0x5A7F] = 'D0F6';\nz[0x5A92] = 'C3BD';\nz[0x5A9A] = 'C3C4';\nz[0x5A9B] = 'E6C2';\nz[0x5AAA] = 'E6C1';\nz[0x5AB2] = 'E6C7';\nz[0x5AB3] = 'CFB1';\nz[0x5AB5] = 'EBF4';\nz[0x5AB8] = 'E6CA';\nz[0x5ABE] = 'E6C5';\nz[0x5AC1] = 'BCDE';\nz[0x5AC2] = 'C9A9';\nz[0x5AC9] = 'BCB5';\nz[0x5ACC] = 'CFD3';\nz[0x5AD2] = 'E6C8';\nz[0x5AD4] = 'E6C9';\nz[0x5AD6] = 'E6CE';\nz[0x5AD8] = 'E6D0';\nz[0x5ADC] = 'E6D1';\nz[0x5AE0] = 'E6CB';\nz[0x5AE1] = 'B5D5';\nz[0x5AE3] = 'E6CC';\nz[0x5AE6] = 'E6CF';\nz[0x5AE9] = 'C4DB';\nz[0x5AEB] = 'E6C6';\nz[0x5AF1] = 'E6CD';\nz[0x5B09] = 'E6D2';\nz[0x5B16] = 'E6D4';\nz[0x5B17] = 'E6D3';\nz[0x5B32] = 'E6D5';\nz[0x5B34] = 'D9F8';\nz[0x5B37] = 'E6D6';\nz[0x5B40] = 'E6D7';\nz[0x5B50] = 'D7D3';\nz[0x5B51] = 'E6DD';\nz[0x5B53] = 'E6DE';\nz[0x5B54] = 'BFD7';\nz[0x5B55] = 'D4D0';\nz[0x5B57] = 'D7D6';\nz[0x5B58] = 'B4E6';\nz[0x5B59] = 'CBEF';\nz[0x5B5A] = 'E6DA';\nz[0x5B5B] = 'D8C3';\nz[0x5B5C] = 'D7CE';\nz[0x5B5D] = 'D0A2';\nz[0x5B5F] = 'C3CF';\nz[0x5B62] = 'E6DF';\nz[0x5B63] = 'BCBE';\nz[0x5B64] = 'B9C2';\nz[0x5B65] = 'E6DB';\nz[0x5B66] = 'D1A7';\nz[0x5B69] = 'BAA2';\nz[0x5B6A] = 'C2CF';\nz[0x5B6C] = 'D8AB';\nz[0x5B70] = 'CAEB';\nz[0x5B71] = 'E5EE';\nz[0x5B73] = 'E6DC';\nz[0x5B75] = 'B7F5';\nz[0x5B7A] = 'C8E6';\nz[0x5B7D] = 'C4F5';\nz[0x5B80] = 'E5B2';\nz[0x5B81] = 'C4FE';\nz[0x5B83] = 'CBFC';\nz[0x5B84] = 'E5B3';\nz[0x5B85] = 'D5AC';\nz[0x5B87] = 'D3EE';\nz[0x5B88] = 'CAD8';\nz[0x5B89] = 'B0B2';\nz[0x5B8B] = 'CBCE';\nz[0x5B8C] = 'CDEA';\nz[0x5B8F] = 'BAEA';\nz[0x5B93] = 'E5B5';\nz[0x5B95] = 'E5B4';\nz[0x5B97] = 'D7DA';\nz[0x5B98] = 'B9D9';\nz[0x5B99] = 'D6E6';\nz[0x5B9A] = 'B6A8';\nz[0x5B9B] = 'CDF0';\nz[0x5B9C] = 'D2CB';\nz[0x5B9D] = 'B1A6';\nz[0x5B9E] = 'CAB5';\nz[0x5BA0] = 'B3E8';\nz[0x5BA1] = 'C9F3';\nz[0x5BA2] = 'BFCD';\nz[0x5BA3] = 'D0FB';\nz[0x5BA4] = 'CAD2';\nz[0x5BA5] = 'E5B6';\nz[0x5BA6] = 'BBC2';\nz[0x5BAA] = 'CFDC';\nz[0x5BAB] = 'B9AC';\nz[0x5BB0] = 'D4D7';\nz[0x5BB3] = 'BAA6';\nz[0x5BB4] = 'D1E7';\nz[0x5BB5] = 'CFFC';\nz[0x5BB6] = 'BCD2';\nz[0x5BB8] = 'E5B7';\nz[0x5BB9] = 'C8DD';\nz[0x5BBD] = 'BFED';\nz[0x5BBE] = 'B1F6';\nz[0x5BBF] = 'CBDE';\nz[0x5BC2] = 'BCC5';\nz[0x5BC4] = 'BCC4';\nz[0x5BC5] = 'D2FA';\nz[0x5BC6] = 'C3DC';\nz[0x5BC7] = 'BFDC';\nz[0x5BCC] = 'B8BB';\nz[0x5BD0] = 'C3C2';\nz[0x5BD2] = 'BAAE';\nz[0x5BD3] = 'D4A2';\nz[0x5BDD] = 'C7DE';\nz[0x5BDE] = 'C4AF';\nz[0x5BDF] = 'B2EC';\nz[0x5BE1] = 'B9D1';\nz[0x5BE4] = 'E5BB';\nz[0x5BE5] = 'C1C8';\nz[0x5BE8] = 'D5AF';\nz[0x5BEE] = 'E5BC';\nz[0x5BF0] = 'E5BE';\nz[0x5BF8] = 'B4E7';\nz[0x5BF9] = 'B6D4';\nz[0x5BFA] = 'CBC2';\nz[0x5BFB] = 'D1B0';\nz[0x5BFC] = 'B5BC';\nz[0x5BFF] = 'CAD9';\nz[0x5C01] = 'B7E2';\nz[0x5C04] = 'C9E4';\nz[0x5C06] = 'BDAB';\nz[0x5C09] = 'CEBE';\nz[0x5C0A] = 'D7F0';\nz[0x5C0F] = 'D0A1';\nz[0x5C11] = 'C9D9';\nz[0x5C14] = 'B6FB';\nz[0x5C15] = 'E6D8';\nz[0x5C16] = 'BCE2';\nz[0x5C18] = 'B3BE';\nz[0x5C1A] = 'C9D0';\nz[0x5C1C] = 'E6D9';\nz[0x5C1D] = 'B3A2';\nz[0x5C22] = 'DECC';\nz[0x5C24] = 'D3C8';\nz[0x5C25] = 'DECD';\nz[0x5C27] = 'D2A2';\nz[0x5C2C] = 'DECE';\nz[0x5C31] = 'BECD';\nz[0x5C34] = 'DECF';\nz[0x5C38] = 'CAAC';\nz[0x5C39] = 'D2FC';\nz[0x5C3A] = 'B3DF';\nz[0x5C3B] = 'E5EA';\nz[0x5C3C] = 'C4E1';\nz[0x5C3D] = 'BEA1';\nz[0x5C3E] = 'CEB2';\nz[0x5C3F] = 'C4F2';\nz[0x5C40] = 'BED6';\nz[0x5C41] = 'C6A8';\nz[0x5C42] = 'B2E3';\nz[0x5C45] = 'BED3';\nz[0x5C48] = 'C7FC';\nz[0x5C49] = 'CCEB';\nz[0x5C4A] = 'BDEC';\nz[0x5C4B] = 'CEDD';\nz[0x5C4E] = 'CABA';\nz[0x5C4F] = 'C6C1';\nz[0x5C50] = 'E5EC';\nz[0x5C51] = 'D0BC';\nz[0x5C55] = 'D5B9';\nz[0x5C59] = 'E5ED';\nz[0x5C5E] = 'CAF4';\nz[0x5C60] = 'CDC0';\nz[0x5C61] = 'C2C5';\nz[0x5C63] = 'E5EF';\nz[0x5C65] = 'C2C4';\nz[0x5C66] = 'E5F0';\nz[0x5C6E] = 'E5F8';\nz[0x5C6F] = 'CDCD';\nz[0x5C71] = 'C9BD';\nz[0x5C79] = 'D2D9';\nz[0x5C7A] = 'E1A8';\nz[0x5C7F] = 'D3EC';\nz[0x5C81] = 'CBEA';\nz[0x5C82] = 'C6F1';\nz[0x5C88] = 'E1AC';\nz[0x5C8C] = 'E1A7';\nz[0x5C8D] = 'E1A9';\nz[0x5C90] = 'E1AA';\nz[0x5C91] = 'E1AF';\nz[0x5C94] = 'B2ED';\nz[0x5C96] = 'E1AB';\nz[0x5C97] = 'B8DA';\nz[0x5C98] = 'E1AD';\nz[0x5C99] = 'E1AE';\nz[0x5C9A] = 'E1B0';\nz[0x5C9B] = 'B5BA';\nz[0x5C9C] = 'E1B1';\nz[0x5CA2] = 'E1B3';\nz[0x5CA3] = 'E1B8';\nz[0x5CA9] = 'D1D2';\nz[0x5CAB] = 'E1B6';\nz[0x5CAC] = 'E1B5';\nz[0x5CAD] = 'C1EB';\nz[0x5CB1] = 'E1B7';\nz[0x5CB3] = 'D4C0';\nz[0x5CB5] = 'E1B2';\nz[0x5CB7] = 'E1BA';\nz[0x5CB8] = 'B0B6';\nz[0x5CBD] = 'E1B4';\nz[0x5CBF] = 'BFF9';\nz[0x5CC1] = 'E1B9';\nz[0x5CC4] = 'E1BB';\nz[0x5CCB] = 'E1BE';\nz[0x5CD2] = 'E1BC';\nz[0x5CD9] = 'D6C5';\nz[0x5CE1] = 'CFBF';\nz[0x5CE4] = 'E1BD';\nz[0x5CE5] = 'E1BF';\nz[0x5CE6] = 'C2CD';\nz[0x5CE8] = 'B6EB';\nz[0x5CEA] = 'D3F8';\nz[0x5CED] = 'C7CD';\nz[0x5CF0] = 'B7E5';\nz[0x5CFB] = 'BEFE';\nz[0x5D02] = 'E1C0';\nz[0x5D03] = 'E1C1';\nz[0x5D06] = 'E1C7';\nz[0x5D07] = 'B3E7';\nz[0x5D0E] = 'C6E9';\nz[0x5D14] = 'B4DE';\nz[0x5D16] = 'D1C2';\nz[0x5D1B] = 'E1C8';\nz[0x5D1E] = 'E1C6';\nz[0x5D24] = 'E1C5';\nz[0x5D26] = 'E1C3';\nz[0x5D27] = 'E1C2';\nz[0x5D29] = 'B1C0';\nz[0x5D2D] = 'D5B8';\nz[0x5D2E] = 'E1C4';\nz[0x5D34] = 'E1CB';\nz[0x5D3D] = 'E1CC';\nz[0x5D3E] = 'E1CA';\nz[0x5D47] = 'EFFA';\nz[0x5D4A] = 'E1D3';\nz[0x5D4B] = 'E1D2';\nz[0x5D4C] = 'C7B6';\nz[0x5D58] = 'E1C9';\nz[0x5D5B] = 'E1CE';\nz[0x5D5D] = 'E1D0';\nz[0x5D69] = 'E1D4';\nz[0x5D6B] = 'E1D1';\nz[0x5D6C] = 'E1CD';\nz[0x5D6F] = 'E1CF';\nz[0x5D74] = 'E1D5';\nz[0x5D82] = 'E1D6';\nz[0x5D99] = 'E1D7';\nz[0x5D9D] = 'E1D8';\nz[0x5DB7] = 'E1DA';\nz[0x5DC5] = 'E1DB';\nz[0x5DCD] = 'CEA1';\nz[0x5DDB] = 'E7DD';\nz[0x5DDD] = 'B4A8';\nz[0x5DDE] = 'D6DD';\nz[0x5DE1] = 'D1B2';\nz[0x5DE2] = 'B3B2';\nz[0x5DE5] = 'B9A4';\nz[0x5DE6] = 'D7F3';\nz[0x5DE7] = 'C7C9';\nz[0x5DE8] = 'BEDE';\nz[0x5DE9] = 'B9AE';\nz[0x5DEB] = 'CED7';\nz[0x5DEE] = 'B2EE';\nz[0x5DEF] = 'DBCF';\nz[0x5DF1] = 'BCBA';\nz[0x5DF2] = 'D2D1';\nz[0x5DF3] = 'CBC8';\nz[0x5DF4] = 'B0CD';\nz[0x5DF7] = 'CFEF';\nz[0x5DFD] = 'D9E3';\nz[0x5DFE] = 'BDED';\nz[0x5E01] = 'B1D2';\nz[0x5E02] = 'CAD0';\nz[0x5E03] = 'B2BC';\nz[0x5E05] = 'CBA7';\nz[0x5E06] = 'B7AB';\nz[0x5E08] = 'CAA6';\nz[0x5E0C] = 'CFA3';\nz[0x5E0F] = 'E0F8';\nz[0x5E10] = 'D5CA';\nz[0x5E11] = 'E0FB';\nz[0x5E14] = 'E0FA';\nz[0x5E15] = 'C5C1';\nz[0x5E16] = 'CCFB';\nz[0x5E18] = 'C1B1';\nz[0x5E19] = 'E0F9';\nz[0x5E1A] = 'D6E3';\nz[0x5E1B] = 'B2AF';\nz[0x5E1C] = 'D6C4';\nz[0x5E1D] = 'B5DB';\nz[0x5E26] = 'B4F8';\nz[0x5E27] = 'D6A1';\nz[0x5E2D] = 'CFAF';\nz[0x5E2E] = 'B0EF';\nz[0x5E31] = 'E0FC';\nz[0x5E37] = 'E1A1';\nz[0x5E38] = 'B3A3';\nz[0x5E3B] = 'E0FD';\nz[0x5E3C] = 'E0FE';\nz[0x5E3D] = 'C3B1';\nz[0x5E42] = 'C3DD';\nz[0x5E44] = 'E1A2';\nz[0x5E45] = 'B7F9';\nz[0x5E4C] = 'BBCF';\nz[0x5E54] = 'E1A3';\nz[0x5E55] = 'C4BB';\nz[0x5E5B] = 'E1A4';\nz[0x5E5E] = 'E1A5';\nz[0x5E61] = 'E1A6';\nz[0x5E62] = 'B4B1';\nz[0x5E72] = 'B8C9';\nz[0x5E73] = 'C6BD';\nz[0x5E74] = 'C4EA';\nz[0x5E76] = 'B2A2';\nz[0x5E78] = 'D0D2';\nz[0x5E7A] = 'E7DB';\nz[0x5E7B] = 'BBC3';\nz[0x5E7C] = 'D3D7';\nz[0x5E7D] = 'D3C4';\nz[0x5E7F] = 'B9E3';\nz[0x5E80] = 'E2CF';\nz[0x5E84] = 'D7AF';\nz[0x5E86] = 'C7EC';\nz[0x5E87] = 'B1D3';\nz[0x5E8A] = 'B4B2';\nz[0x5E8B] = 'E2D1';\nz[0x5E8F] = 'D0F2';\nz[0x5E90] = 'C2AE';\nz[0x5E91] = 'E2D0';\nz[0x5E93] = 'BFE2';\nz[0x5E94] = 'D3A6';\nz[0x5E95] = 'B5D7';\nz[0x5E96] = 'E2D2';\nz[0x5E97] = 'B5EA';\nz[0x5E99] = 'C3ED';\nz[0x5E9A] = 'B8FD';\nz[0x5E9C] = 'B8AE';\nz[0x5E9E] = 'C5D3';\nz[0x5E9F] = 'B7CF';\nz[0x5EA0] = 'E2D4';\nz[0x5EA5] = 'E2D3';\nz[0x5EA6] = 'B6C8';\nz[0x5EA7] = 'D7F9';\nz[0x5EAD] = 'CDA5';\nz[0x5EB3] = 'E2D8';\nz[0x5EB5] = 'E2D6';\nz[0x5EB6] = 'CAFC';\nz[0x5EB7] = 'BFB5';\nz[0x5EB8] = 'D3B9';\nz[0x5EB9] = 'E2D5';\nz[0x5EBE] = 'E2D7';\nz[0x5EC9] = 'C1AE';\nz[0x5ECA] = 'C0C8';\nz[0x5ED1] = 'E2DB';\nz[0x5ED2] = 'E2DA';\nz[0x5ED3] = 'C0AA';\nz[0x5ED6] = 'C1CE';\nz[0x5EDB] = 'E2DC';\nz[0x5EE8] = 'E2DD';\nz[0x5EEA] = 'E2DE';\nz[0x5EF4] = 'DBC8';\nz[0x5EF6] = 'D1D3';\nz[0x5EF7] = 'CDA2';\nz[0x5EFA] = 'BDA8';\nz[0x5EFE] = 'DEC3';\nz[0x5EFF] = 'D8A5';\nz[0x5F00] = 'BFAA';\nz[0x5F01] = 'DBCD';\nz[0x5F02] = 'D2EC';\nz[0x5F03] = 'C6FA';\nz[0x5F04] = 'C5AA';\nz[0x5F08] = 'DEC4';\nz[0x5F0A] = 'B1D7';\nz[0x5F0B] = 'DFAE';\nz[0x5F0F] = 'CABD';\nz[0x5F11] = 'DFB1';\nz[0x5F13] = 'B9AD';\nz[0x5F15] = 'D2FD';\nz[0x5F17] = 'B8A5';\nz[0x5F18] = 'BAEB';\nz[0x5F1B] = 'B3DA';\nz[0x5F1F] = 'B5DC';\nz[0x5F20] = 'D5C5';\nz[0x5F25] = 'C3D6';\nz[0x5F26] = 'CFD2';\nz[0x5F27] = 'BBA1';\nz[0x5F29] = 'E5F3';\nz[0x5F2A] = 'E5F2';\nz[0x5F2D] = 'E5F4';\nz[0x5F2F] = 'CDE4';\nz[0x5F31] = 'C8F5';\nz[0x5F39] = 'B5AF';\nz[0x5F3A] = 'C7BF';\nz[0x5F3C] = 'E5F6';\nz[0x5F40] = 'ECB0';\nz[0x5F50] = 'E5E6';\nz[0x5F52] = 'B9E9';\nz[0x5F53] = 'B5B1';\nz[0x5F55] = 'C2BC';\nz[0x5F56] = 'E5E8';\nz[0x5F57] = 'E5E7';\nz[0x5F58] = 'E5E9';\nz[0x5F5D] = 'D2CD';\nz[0x5F61] = 'E1EA';\nz[0x5F62] = 'D0CE';\nz[0x5F64] = 'CDAE';\nz[0x5F66] = 'D1E5';\nz[0x5F69] = 'B2CA';\nz[0x5F6A] = 'B1EB';\nz[0x5F6C] = 'B1F2';\nz[0x5F6D] = 'C5ED';\nz[0x5F70] = 'D5C3';\nz[0x5F71] = 'D3B0';\nz[0x5F73] = 'E1DC';\nz[0x5F77] = 'E1DD';\nz[0x5F79] = 'D2DB';\nz[0x5F7B] = 'B3B9';\nz[0x5F7C] = 'B1CB';\nz[0x5F80] = 'CDF9';\nz[0x5F81] = 'D5F7';\nz[0x5F82] = 'E1DE';\nz[0x5F84] = 'BEB6';\nz[0x5F85] = 'B4FD';\nz[0x5F87] = 'E1DF';\nz[0x5F88] = 'BADC';\nz[0x5F89] = 'E1E0';\nz[0x5F8A] = 'BBB2';\nz[0x5F8B] = 'C2C9';\nz[0x5F8C] = 'E1E1';\nz[0x5F90] = 'D0EC';\nz[0x5F92] = 'CDBD';\nz[0x5F95] = 'E1E2';\nz[0x5F97] = 'B5C3';\nz[0x5F98] = 'C5C7';\nz[0x5F99] = 'E1E3';\nz[0x5F9C] = 'E1E4';\nz[0x5FA1] = 'D3F9';\nz[0x5FA8] = 'E1E5';\nz[0x5FAA] = 'D1AD';\nz[0x5FAD] = 'E1E6';\nz[0x5FAE] = 'CEA2';\nz[0x5FB5] = 'E1E7';\nz[0x5FB7] = 'B5C2';\nz[0x5FBC] = 'E1E8';\nz[0x5FBD] = 'BBD5';\nz[0x5FC3] = 'D0C4';\nz[0x5FC4] = 'E2E0';\nz[0x5FC5] = 'B1D8';\nz[0x5FC6] = 'D2E4';\nz[0x5FC9] = 'E2E1';\nz[0x5FCC] = 'BCC9';\nz[0x5FCD] = 'C8CC';\nz[0x5FCF] = 'E2E3';\nz[0x5FD0] = 'ECFE';\nz[0x5FD1] = 'ECFD';\nz[0x5FD2] = 'DFAF';\nz[0x5FD6] = 'E2E2';\nz[0x5FD7] = 'D6BE';\nz[0x5FD8] = 'CDFC';\nz[0x5FD9] = 'C3A6';\nz[0x5FDD] = 'E3C3';\nz[0x5FE0] = 'D6D2';\nz[0x5FE1] = 'E2E7';\nz[0x5FE4] = 'E2E8';\nz[0x5FE7] = 'D3C7';\nz[0x5FEA] = 'E2EC';\nz[0x5FEB] = 'BFEC';\nz[0x5FED] = 'E2ED';\nz[0x5FEE] = 'E2E5';\nz[0x5FF1] = 'B3C0';\nz[0x5FF5] = 'C4EE';\nz[0x5FF8] = 'E2EE';\nz[0x5FFB] = 'D0C3';\nz[0x5FFD] = 'BAF6';\nz[0x5FFE] = 'E2E9';\nz[0x5FFF] = 'B7DE';\nz[0x6000] = 'BBB3';\nz[0x6001] = 'CCAC';\nz[0x6002] = 'CBCB';\nz[0x6003] = 'E2E4';\nz[0x6004] = 'E2E6';\nz[0x6005] = 'E2EA';\nz[0x6006] = 'E2EB';\nz[0x600A] = 'E2F7';\nz[0x600D] = 'E2F4';\nz[0x600E] = 'D4F5';\nz[0x600F] = 'E2F3';\nz[0x6012] = 'C5AD';\nz[0x6014] = 'D5FA';\nz[0x6015] = 'C5C2';\nz[0x6016] = 'B2C0';\nz[0x6019] = 'E2EF';\nz[0x601B] = 'E2F2';\nz[0x601C] = 'C1AF';\nz[0x601D] = 'CBBC';\nz[0x6020] = 'B5A1';\nz[0x6021] = 'E2F9';\nz[0x6025] = 'BCB1';\nz[0x6026] = 'E2F1';\nz[0x6027] = 'D0D4';\nz[0x6028] = 'D4B9';\nz[0x6029] = 'E2F5';\nz[0x602A] = 'B9D6';\nz[0x602B] = 'E2F6';\nz[0x602F] = 'C7D3';\nz[0x6035] = 'E2F0';\nz[0x603B] = 'D7DC';\nz[0x603C] = 'EDA1';\nz[0x603F] = 'E2F8';\nz[0x6041] = 'EDA5';\nz[0x6042] = 'E2FE';\nz[0x6043] = 'CAD1';\nz[0x604B] = 'C1B5';\nz[0x604D] = 'BBD0';\nz[0x6050] = 'BFD6';\nz[0x6052] = 'BAE3';\nz[0x6055] = 'CBA1';\nz[0x6059] = 'EDA6';\nz[0x605A] = 'EDA3';\nz[0x605D] = 'EDA2';\nz[0x6062] = 'BBD6';\nz[0x6063] = 'EDA7';\nz[0x6064] = 'D0F4';\nz[0x6067] = 'EDA4';\nz[0x6068] = 'BADE';\nz[0x6069] = 'B6F7';\nz[0x606A] = 'E3A1';\nz[0x606B] = 'B6B2';\nz[0x606C] = 'CCF1';\nz[0x606D] = 'B9A7';\nz[0x606F] = 'CFA2';\nz[0x6070] = 'C7A1';\nz[0x6073] = 'BFD2';\nz[0x6076] = 'B6F1';\nz[0x6078] = 'E2FA';\nz[0x6079] = 'E2FB';\nz[0x607A] = 'E2FD';\nz[0x607B] = 'E2FC';\nz[0x607C] = 'C4D5';\nz[0x607D] = 'E3A2';\nz[0x607F] = 'D3C1';\nz[0x6083] = 'E3A7';\nz[0x6084] = 'C7C4';\nz[0x6089] = 'CFA4';\nz[0x608C] = 'E3A9';\nz[0x608D] = 'BAB7';\nz[0x6092] = 'E3A8';\nz[0x6094] = 'BBDA';\nz[0x6096] = 'E3A3';\nz[0x609A] = 'E3A4';\nz[0x609B] = 'E3AA';\nz[0x609D] = 'E3A6';\nz[0x609F] = 'CEF2';\nz[0x60A0] = 'D3C6';\nz[0x60A3] = 'BBBC';\nz[0x60A6] = 'D4C3';\nz[0x60A8] = 'C4FA';\nz[0x60AB] = 'EDA8';\nz[0x60AC] = 'D0FC';\nz[0x60AD] = 'E3A5';\nz[0x60AF] = 'C3F5';\nz[0x60B1] = 'E3AD';\nz[0x60B2] = 'B1AF';\nz[0x60B4] = 'E3B2';\nz[0x60B8] = 'BCC2';\nz[0x60BB] = 'E3AC';\nz[0x60BC] = 'B5BF';\nz[0x60C5] = 'C7E9';\nz[0x60C6] = 'E3B0';\nz[0x60CA] = 'BEAA';\nz[0x60CB] = 'CDEF';\nz[0x60D1] = 'BBF3';\nz[0x60D5] = 'CCE8';\nz[0x60D8] = 'E3AF';\nz[0x60DA] = 'E3B1';\nz[0x60DC] = 'CFA7';\nz[0x60DD] = 'E3AE';\nz[0x60DF] = 'CEA9';\nz[0x60E0] = 'BBDD';\nz[0x60E6] = 'B5EB';\nz[0x60E7] = 'BEE5';\nz[0x60E8] = 'B2D2';\nz[0x60E9] = 'B3CD';\nz[0x60EB] = 'B1B9';\nz[0x60EC] = 'E3AB';\nz[0x60ED] = 'B2D1';\nz[0x60EE] = 'B5AC';\nz[0x60EF] = 'B9DF';\nz[0x60F0] = 'B6E8';\nz[0x60F3] = 'CFEB';\nz[0x60F4] = 'E3B7';\nz[0x60F6] = 'BBCC';\nz[0x60F9] = 'C8C7';\nz[0x60FA] = 'D0CA';\nz[0x6100] = 'E3B8';\nz[0x6101] = 'B3EE';\nz[0x6106] = 'EDA9';\nz[0x6108] = 'D3FA';\nz[0x6109] = 'D3E4';\nz[0x610D] = 'EDAA';\nz[0x610E] = 'E3B9';\nz[0x610F] = 'D2E2';\nz[0x6115] = 'E3B5';\nz[0x611A] = 'D3DE';\nz[0x611F] = 'B8D0';\nz[0x6120] = 'E3B3';\nz[0x6123] = 'E3B6';\nz[0x6124] = 'B7DF';\nz[0x6126] = 'E3B4';\nz[0x6127] = 'C0A2';\nz[0x612B] = 'E3BA';\nz[0x613F] = 'D4B8';\nz[0x6148] = 'B4C8';\nz[0x614A] = 'E3BB';\nz[0x614C] = 'BBC5';\nz[0x614E] = 'C9F7';\nz[0x6151] = 'C9E5';\nz[0x6155] = 'C4BD';\nz[0x615D] = 'EDAB';\nz[0x6162] = 'C2FD';\nz[0x6167] = 'BBDB';\nz[0x6168] = 'BFAE';\nz[0x6170] = 'CEBF';\nz[0x6175] = 'E3BC';\nz[0x6177] = 'BFB6';\nz[0x618B] = 'B1EF';\nz[0x618E] = 'D4F7';\nz[0x6194] = 'E3BE';\nz[0x619D] = 'EDAD';\nz[0x61A7] = 'E3BF';\nz[0x61A8] = 'BAA9';\nz[0x61A9] = 'EDAC';\nz[0x61AC] = 'E3BD';\nz[0x61B7] = 'E3C0';\nz[0x61BE] = 'BAB6';\nz[0x61C2] = 'B6AE';\nz[0x61C8] = 'D0B8';\nz[0x61CA] = 'B0C3';\nz[0x61CB] = 'EDAE';\nz[0x61D1] = 'EDAF';\nz[0x61D2] = 'C0C1';\nz[0x61D4] = 'E3C1';\nz[0x61E6] = 'C5B3';\nz[0x61F5] = 'E3C2';\nz[0x61FF] = 'DCB2';\nz[0x6206] = 'EDB0';\nz[0x6208] = 'B8EA';\nz[0x620A] = 'CEEC';\nz[0x620B] = 'EAA7';\nz[0x620C] = 'D0E7';\nz[0x620D] = 'CAF9';\nz[0x620E] = 'C8D6';\nz[0x620F] = 'CFB7';\nz[0x6210] = 'B3C9';\nz[0x6211] = 'CED2';\nz[0x6212] = 'BDE4';\nz[0x6215] = 'E3DE';\nz[0x6216] = 'BBF2';\nz[0x6217] = 'EAA8';\nz[0x6218] = 'D5BD';\nz[0x621A] = 'C6DD';\nz[0x621B] = 'EAA9';\nz[0x621F] = 'EAAA';\nz[0x6221] = 'EAAC';\nz[0x6222] = 'EAAB';\nz[0x6224] = 'EAAE';\nz[0x6225] = 'EAAD';\nz[0x622A] = 'BDD8';\nz[0x622C] = 'EAAF';\nz[0x622E] = 'C2BE';\nz[0x6233] = 'B4C1';\nz[0x6234] = 'B4F7';\nz[0x6237] = 'BBA7';\nz[0x623D] = 'ECE6';\nz[0x623E] = 'ECE5';\nz[0x623F] = 'B7BF';\nz[0x6240] = 'CBF9';\nz[0x6241] = 'B1E2';\nz[0x6243] = 'ECE7';\nz[0x6247] = 'C9C8';\nz[0x6248] = 'ECE8';\nz[0x6249] = 'ECE9';\nz[0x624B] = 'CAD6';\nz[0x624C] = 'DED0';\nz[0x624D] = 'B2C5';\nz[0x624E] = 'D4FA';\nz[0x6251] = 'C6CB';\nz[0x6252] = 'B0C7';\nz[0x6253] = 'B4F2';\nz[0x6254] = 'C8D3';\nz[0x6258] = 'CDD0';\nz[0x625B] = 'BFB8';\nz[0x6263] = 'BFDB';\nz[0x6266] = 'C7A4';\nz[0x6267] = 'D6B4';\nz[0x6269] = 'C0A9';\nz[0x626A] = 'DED1';\nz[0x626B] = 'C9A8';\nz[0x626C] = 'D1EF';\nz[0x626D] = 'C5A4';\nz[0x626E] = 'B0E7';\nz[0x626F] = 'B3B6';\nz[0x6270] = 'C8C5';\nz[0x6273] = 'B0E2';\nz[0x6276] = 'B7F6';\nz[0x6279] = 'C5FA';\nz[0x627C] = 'B6F3';\nz[0x627E] = 'D5D2';\nz[0x627F] = 'B3D0';\nz[0x6280] = 'BCBC';\nz[0x6284] = 'B3AD';\nz[0x6289] = 'BEF1';\nz[0x628A] = 'B0D1';\nz[0x6291] = 'D2D6';\nz[0x6292] = 'CAE3';\nz[0x6293] = 'D7A5';\nz[0x6295] = 'CDB6';\nz[0x6296] = 'B6B6';\nz[0x6297] = 'BFB9';\nz[0x6298] = 'D5DB';\nz[0x629A] = 'B8A7';\nz[0x629B] = 'C5D7';\nz[0x629F] = 'DED2';\nz[0x62A0] = 'BFD9';\nz[0x62A1] = 'C2D5';\nz[0x62A2] = 'C7C0';\nz[0x62A4] = 'BBA4';\nz[0x62A5] = 'B1A8';\nz[0x62A8] = 'C5EA';\nz[0x62AB] = 'C5FB';\nz[0x62AC] = 'CCA7';\nz[0x62B1] = 'B1A7';\nz[0x62B5] = 'B5D6';\nz[0x62B9] = 'C4A8';\nz[0x62BB] = 'DED3';\nz[0x62BC] = 'D1BA';\nz[0x62BD] = 'B3E9';\nz[0x62BF] = 'C3F2';\nz[0x62C2] = 'B7F7';\nz[0x62C4] = 'D6F4';\nz[0x62C5] = 'B5A3';\nz[0x62C6] = 'B2F0';\nz[0x62C7] = 'C4B4';\nz[0x62C8] = 'C4E9';\nz[0x62C9] = 'C0AD';\nz[0x62CA] = 'DED4';\nz[0x62CC] = 'B0E8';\nz[0x62CD] = 'C5C4';\nz[0x62CE] = 'C1E0';\nz[0x62D0] = 'B9D5';\nz[0x62D2] = 'BEDC';\nz[0x62D3] = 'CDD8';\nz[0x62D4] = 'B0CE';\nz[0x62D6] = 'CDCF';\nz[0x62D7] = 'DED6';\nz[0x62D8] = 'BED0';\nz[0x62D9] = 'D7BE';\nz[0x62DA] = 'DED5';\nz[0x62DB] = 'D5D0';\nz[0x62DC] = 'B0DD';\nz[0x62DF] = 'C4E2';\nz[0x62E2] = 'C2A3';\nz[0x62E3] = 'BCF0';\nz[0x62E5] = 'D3B5';\nz[0x62E6] = 'C0B9';\nz[0x62E7] = 'C5A1';\nz[0x62E8] = 'B2A6';\nz[0x62E9] = 'D4F1';\nz[0x62EC] = 'C0A8';\nz[0x62ED] = 'CAC3';\nz[0x62EE] = 'DED7';\nz[0x62EF] = 'D5FC';\nz[0x62F1] = 'B9B0';\nz[0x62F3] = 'C8AD';\nz[0x62F4] = 'CBA9';\nz[0x62F6] = 'DED9';\nz[0x62F7] = 'BFBD';\nz[0x62FC] = 'C6B4';\nz[0x62FD] = 'D7A7';\nz[0x62FE] = 'CAB0';\nz[0x62FF] = 'C4C3';\nz[0x6301] = 'B3D6';\nz[0x6302] = 'B9D2';\nz[0x6307] = 'D6B8';\nz[0x6308] = 'EAFC';\nz[0x6309] = 'B0B4';\nz[0x630E] = 'BFE6';\nz[0x6311] = 'CCF4';\nz[0x6316] = 'CDDA';\nz[0x631A] = 'D6BF';\nz[0x631B] = 'C2CE';\nz[0x631D] = 'CECE';\nz[0x631E] = 'CCA2';\nz[0x631F] = 'D0AE';\nz[0x6320] = 'C4D3';\nz[0x6321] = 'B5B2';\nz[0x6322] = 'DED8';\nz[0x6323] = 'D5F5';\nz[0x6324] = 'BCB7';\nz[0x6325] = 'BBD3';\nz[0x6328] = 'B0A4';\nz[0x632A] = 'C5B2';\nz[0x632B] = 'B4EC';\nz[0x632F] = 'D5F1';\nz[0x6332] = 'EAFD';\nz[0x6339] = 'DEDA';\nz[0x633A] = 'CDA6';\nz[0x633D] = 'CDEC';\nz[0x6342] = 'CEE6';\nz[0x6343] = 'DEDC';\nz[0x6345] = 'CDB1';\nz[0x6346] = 'C0A6';\nz[0x6349] = 'D7BD';\nz[0x634B] = 'DEDB';\nz[0x634C] = 'B0C6';\nz[0x634D] = 'BAB4';\nz[0x634E] = 'C9D3';\nz[0x634F] = 'C4F3';\nz[0x6350] = 'BEE8';\nz[0x6355] = 'B2B6';\nz[0x635E] = 'C0CC';\nz[0x635F] = 'CBF0';\nz[0x6361] = 'BCF1';\nz[0x6362] = 'BBBB';\nz[0x6363] = 'B5B7';\nz[0x6367] = 'C5F5';\nz[0x6369] = 'DEE6';\nz[0x636D] = 'DEE3';\nz[0x636E] = 'BEDD';\nz[0x6371] = 'DEDF';\nz[0x6376] = 'B4B7';\nz[0x6377] = 'BDDD';\nz[0x637A] = 'DEE0';\nz[0x637B] = 'C4ED';\nz[0x6380] = 'CFC6';\nz[0x6382] = 'B5E0';\nz[0x6387] = 'B6DE';\nz[0x6388] = 'CADA';\nz[0x6389] = 'B5F4';\nz[0x638A] = 'DEE5';\nz[0x638C] = 'D5C6';\nz[0x638E] = 'DEE1';\nz[0x638F] = 'CCCD';\nz[0x6390] = 'C6FE';\nz[0x6392] = 'C5C5';\nz[0x6396] = 'D2B4';\nz[0x6398] = 'BEF2';\nz[0x63A0] = 'C2D3';\nz[0x63A2] = 'CCBD';\nz[0x63A3] = 'B3B8';\nz[0x63A5] = 'BDD3';\nz[0x63A7] = 'BFD8';\nz[0x63A8] = 'CDC6';\nz[0x63A9] = 'D1DA';\nz[0x63AA] = 'B4EB';\nz[0x63AC] = 'DEE4';\nz[0x63AD] = 'DEDD';\nz[0x63AE] = 'DEE7';\nz[0x63B0] = 'EAFE';\nz[0x63B3] = 'C2B0';\nz[0x63B4] = 'DEE2';\nz[0x63B7] = 'D6C0';\nz[0x63B8] = 'B5A7';\nz[0x63BA] = 'B2F4';\nz[0x63BC] = 'DEE8';\nz[0x63BE] = 'DEF2';\nz[0x63C4] = 'DEED';\nz[0x63C6] = 'DEF1';\nz[0x63C9] = 'C8E0';\nz[0x63CD] = 'D7E1';\nz[0x63CE] = 'DEEF';\nz[0x63CF] = 'C3E8';\nz[0x63D0] = 'CCE1';\nz[0x63D2] = 'B2E5';\nz[0x63D6] = 'D2BE';\nz[0x63DE] = 'DEEE';\nz[0x63E0] = 'DEEB';\nz[0x63E1] = 'CED5';\nz[0x63E3] = 'B4A7';\nz[0x63E9] = 'BFAB';\nz[0x63EA] = 'BEBE';\nz[0x63ED] = 'BDD2';\nz[0x63F2] = 'DEE9';\nz[0x63F4] = 'D4AE';\nz[0x63F6] = 'DEDE';\nz[0x63F8] = 'DEEA';\nz[0x63FD] = 'C0BF';\nz[0x63FF] = 'DEEC';\nz[0x6400] = 'B2F3';\nz[0x6401] = 'B8E9';\nz[0x6402] = 'C2A7';\nz[0x6405] = 'BDC1';\nz[0x640B] = 'DEF5';\nz[0x640C] = 'DEF8';\nz[0x640F] = 'B2AB';\nz[0x6410] = 'B4A4';\nz[0x6413] = 'B4EA';\nz[0x6414] = 'C9A6';\nz[0x641B] = 'DEF6';\nz[0x641C] = 'CBD1';\nz[0x641E] = 'B8E3';\nz[0x6420] = 'DEF7';\nz[0x6421] = 'DEFA';\nz[0x6426] = 'DEF9';\nz[0x642A] = 'CCC2';\nz[0x642C] = 'B0E1';\nz[0x642D] = 'B4EE';\nz[0x6434] = 'E5BA';\nz[0x643A] = 'D0AF';\nz[0x643D] = 'B2EB';\nz[0x643F] = 'EBA1';\nz[0x6441] = 'DEF4';\nz[0x6444] = 'C9E3';\nz[0x6445] = 'DEF3';\nz[0x6446] = 'B0DA';\nz[0x6447] = 'D2A1';\nz[0x6448] = 'B1F7';\nz[0x644A] = 'CCAF';\nz[0x6452] = 'DEF0';\nz[0x6454] = 'CBA4';\nz[0x6458] = 'D5AA';\nz[0x645E] = 'DEFB';\nz[0x6467] = 'B4DD';\nz[0x6469] = 'C4A6';\nz[0x646D] = 'DEFD';\nz[0x6478] = 'C3FE';\nz[0x6479] = 'C4A1';\nz[0x647A] = 'DFA1';\nz[0x6482] = 'C1CC';\nz[0x6484] = 'DEFC';\nz[0x6485] = 'BEEF';\nz[0x6487] = 'C6B2';\nz[0x6491] = 'B3C5';\nz[0x6492] = 'C8F6';\nz[0x6495] = 'CBBA';\nz[0x6496] = 'DEFE';\nz[0x6499] = 'DFA4';\nz[0x649E] = 'D7B2';\nz[0x64A4] = 'B3B7';\nz[0x64A9] = 'C1C3';\nz[0x64AC] = 'C7CB';\nz[0x64AD] = 'B2A5';\nz[0x64AE] = 'B4E9';\nz[0x64B0] = 'D7AB';\nz[0x64B5] = 'C4EC';\nz[0x64B7] = 'DFA2';\nz[0x64B8] = 'DFA3';\nz[0x64BA] = 'DFA5';\nz[0x64BC] = 'BAB3';\nz[0x64C0] = 'DFA6';\nz[0x64C2] = 'C0DE';\nz[0x64C5] = 'C9C3';\nz[0x64CD] = 'B2D9';\nz[0x64CE] = 'C7E6';\nz[0x64D0] = 'DFA7';\nz[0x64D2] = 'C7DC';\nz[0x64D7] = 'DFA8';\nz[0x64D8] = 'EBA2';\nz[0x64DE] = 'CBD3';\nz[0x64E2] = 'DFAA';\nz[0x64E4] = 'DFA9';\nz[0x64E6] = 'B2C1';\nz[0x6500] = 'C5CA';\nz[0x6509] = 'DFAB';\nz[0x6512] = 'D4DC';\nz[0x6518] = 'C8C1';\nz[0x6525] = 'DFAC';\nz[0x652B] = 'BEF0';\nz[0x652E] = 'DFAD';\nz[0x652F] = 'D6A7';\nz[0x6534] = 'EAB7';\nz[0x6535] = 'EBB6';\nz[0x6536] = 'CAD5';\nz[0x6538] = 'D8FC';\nz[0x6539] = 'B8C4';\nz[0x653B] = 'B9A5';\nz[0x653E] = 'B7C5';\nz[0x653F] = 'D5FE';\nz[0x6545] = 'B9CA';\nz[0x6548] = 'D0A7';\nz[0x6549] = 'F4CD';\nz[0x654C] = 'B5D0';\nz[0x654F] = 'C3F4';\nz[0x6551] = 'BEC8';\nz[0x6555] = 'EBB7';\nz[0x6556] = 'B0BD';\nz[0x6559] = 'BDCC';\nz[0x655B] = 'C1B2';\nz[0x655D] = 'B1D6';\nz[0x655E] = 'B3A8';\nz[0x6562] = 'B8D2';\nz[0x6563] = 'C9A2';\nz[0x6566] = 'B6D8';\nz[0x656B] = 'EBB8';\nz[0x656C] = 'BEB4';\nz[0x6570] = 'CAFD';\nz[0x6572] = 'C7C3';\nz[0x6574] = 'D5FB';\nz[0x6577] = 'B7F3';\nz[0x6587] = 'CEC4';\nz[0x658B] = 'D5AB';\nz[0x658C] = 'B1F3';\nz[0x6590] = 'ECB3';\nz[0x6591] = 'B0DF';\nz[0x6593] = 'ECB5';\nz[0x6597] = 'B6B7';\nz[0x6599] = 'C1CF';\nz[0x659B] = 'F5FA';\nz[0x659C] = 'D0B1';\nz[0x659F] = 'D5E5';\nz[0x65A1] = 'CED3';\nz[0x65A4] = 'BDEF';\nz[0x65A5] = 'B3E2';\nz[0x65A7] = 'B8AB';\nz[0x65A9] = 'D5B6';\nz[0x65AB] = 'EDBD';\nz[0x65AD] = 'B6CF';\nz[0x65AF] = 'CBB9';\nz[0x65B0] = 'D0C2';\nz[0x65B9] = 'B7BD';\nz[0x65BC] = 'ECB6';\nz[0x65BD] = 'CAA9';\nz[0x65C1] = 'C5D4';\nz[0x65C3] = 'ECB9';\nz[0x65C4] = 'ECB8';\nz[0x65C5] = 'C2C3';\nz[0x65C6] = 'ECB7';\nz[0x65CB] = 'D0FD';\nz[0x65CC] = 'ECBA';\nz[0x65CE] = 'ECBB';\nz[0x65CF] = 'D7E5';\nz[0x65D2] = 'ECBC';\nz[0x65D6] = 'ECBD';\nz[0x65D7] = 'C6EC';\nz[0x65E0] = 'CEDE';\nz[0x65E2] = 'BCC8';\nz[0x65E5] = 'C8D5';\nz[0x65E6] = 'B5A9';\nz[0x65E7] = 'BEC9';\nz[0x65E8] = 'D6BC';\nz[0x65E9] = 'D4E7';\nz[0x65EC] = 'D1AE';\nz[0x65ED] = 'D0F1';\nz[0x65EE] = 'EAB8';\nz[0x65EF] = 'EAB9';\nz[0x65F0] = 'EABA';\nz[0x65F1] = 'BAB5';\nz[0x65F6] = 'CAB1';\nz[0x65F7] = 'BFF5';\nz[0x65FA] = 'CDFA';\nz[0x6600] = 'EAC0';\nz[0x6602] = 'B0BA';\nz[0x6603] = 'EABE';\nz[0x6606] = 'C0A5';\nz[0x660A] = 'EABB';\nz[0x660C] = 'B2FD';\nz[0x660E] = 'C3F7';\nz[0x660F] = 'BBE8';\nz[0x6613] = 'D2D7';\nz[0x6614] = 'CEF4';\nz[0x6615] = 'EABF';\nz[0x6619] = 'EABC';\nz[0x661D] = 'EAC3';\nz[0x661F] = 'D0C7';\nz[0x6620] = 'D3B3';\nz[0x6625] = 'B4BA';\nz[0x6627] = 'C3C1';\nz[0x6628] = 'D7F2';\nz[0x662D] = 'D5D1';\nz[0x662F] = 'CAC7';\nz[0x6631] = 'EAC5';\nz[0x6634] = 'EAC4';\nz[0x6635] = 'EAC7';\nz[0x6636] = 'EAC6';\nz[0x663C] = 'D6E7';\nz[0x663E] = 'CFD4';\nz[0x6641] = 'EACB';\nz[0x6643] = 'BBCE';\nz[0x664B] = 'BDFA';\nz[0x664C] = 'C9CE';\nz[0x664F] = 'EACC';\nz[0x6652] = 'C9B9';\nz[0x6653] = 'CFFE';\nz[0x6654] = 'EACA';\nz[0x6655] = 'D4CE';\nz[0x6656] = 'EACD';\nz[0x6657] = 'EACF';\nz[0x665A] = 'CDED';\nz[0x665F] = 'EAC9';\nz[0x6661] = 'EACE';\nz[0x6664] = 'CEEE';\nz[0x6666] = 'BBDE';\nz[0x6668] = 'B3BF';\nz[0x666E] = 'C6D5';\nz[0x666F] = 'BEB0';\nz[0x6670] = 'CEFA';\nz[0x6674] = 'C7E7';\nz[0x6676] = 'BEA7';\nz[0x6677] = 'EAD0';\nz[0x667A] = 'D6C7';\nz[0x667E] = 'C1C0';\nz[0x6682] = 'D4DD';\nz[0x6684] = 'EAD1';\nz[0x6687] = 'CFBE';\nz[0x668C] = 'EAD2';\nz[0x6691] = 'CAEE';\nz[0x6696] = 'C5AF';\nz[0x6697] = 'B0B5';\nz[0x669D] = 'EAD4';\nz[0x66A7] = 'EAD3';\nz[0x66A8] = 'F4DF';\nz[0x66AE] = 'C4BA';\nz[0x66B4] = 'B1A9';\nz[0x66B9] = 'E5DF';\nz[0x66BE] = 'EAD5';\nz[0x66D9] = 'CAEF';\nz[0x66DB] = 'EAD6';\nz[0x66DC] = 'EAD7';\nz[0x66DD] = 'C6D8';\nz[0x66E6] = 'EAD8';\nz[0x66E9] = 'EAD9';\nz[0x66F0] = 'D4BB';\nz[0x66F2] = 'C7FA';\nz[0x66F3] = 'D2B7';\nz[0x66F4] = 'B8FC';\nz[0x66F7] = 'EAC2';\nz[0x66F9] = 'B2DC';\nz[0x66FC] = 'C2FC';\nz[0x66FE] = 'D4F8';\nz[0x66FF] = 'CCE6';\nz[0x6700] = 'D7EE';\nz[0x6708] = 'D4C2';\nz[0x6709] = 'D3D0';\nz[0x670A] = 'EBC3';\nz[0x670B] = 'C5F3';\nz[0x670D] = 'B7FE';\nz[0x6710] = 'EBD4';\nz[0x6714] = 'CBB7';\nz[0x6715] = 'EBDE';\nz[0x6717] = 'C0CA';\nz[0x671B] = 'CDFB';\nz[0x671D] = 'B3AF';\nz[0x671F] = 'C6DA';\nz[0x6726] = 'EBFC';\nz[0x6728] = 'C4BE';\nz[0x672A] = 'CEB4';\nz[0x672B] = 'C4A9';\nz[0x672C] = 'B1BE';\nz[0x672D] = 'D4FD';\nz[0x672F] = 'CAF5';\nz[0x6731] = 'D6EC';\nz[0x6734] = 'C6D3';\nz[0x6735] = 'B6E4';\nz[0x673A] = 'BBFA';\nz[0x673D] = 'D0E0';\nz[0x6740] = 'C9B1';\nz[0x6742] = 'D4D3';\nz[0x6743] = 'C8A8';\nz[0x6746] = 'B8CB';\nz[0x6748] = 'E8BE';\nz[0x6749] = 'C9BC';\nz[0x674C] = 'E8BB';\nz[0x674E] = 'C0EE';\nz[0x674F] = 'D0D3';\nz[0x6750] = 'B2C4';\nz[0x6751] = 'B4E5';\nz[0x6753] = 'E8BC';\nz[0x6756] = 'D5C8';\nz[0x675C] = 'B6C5';\nz[0x675E] = 'E8BD';\nz[0x675F] = 'CAF8';\nz[0x6760] = 'B8DC';\nz[0x6761] = 'CCF5';\nz[0x6765] = 'C0B4';\nz[0x6768] = 'D1EE';\nz[0x6769] = 'E8BF';\nz[0x676A] = 'E8C2';\nz[0x676D] = 'BABC';\nz[0x676F] = 'B1AD';\nz[0x6770] = 'BDDC';\nz[0x6772] = 'EABD';\nz[0x6773] = 'E8C3';\nz[0x6775] = 'E8C6';\nz[0x6777] = 'E8CB';\nz[0x677C] = 'E8CC';\nz[0x677E] = 'CBC9';\nz[0x677F] = 'B0E5';\nz[0x6781] = 'BCAB';\nz[0x6784] = 'B9B9';\nz[0x6787] = 'E8C1';\nz[0x6789] = 'CDF7';\nz[0x678B] = 'E8CA';\nz[0x6790] = 'CEF6';\nz[0x6795] = 'D5ED';\nz[0x6797] = 'C1D6';\nz[0x6798] = 'E8C4';\nz[0x679A] = 'C3B6';\nz[0x679C] = 'B9FB';\nz[0x679D] = 'D6A6';\nz[0x679E] = 'E8C8';\nz[0x67A2] = 'CAE0';\nz[0x67A3] = 'D4E6';\nz[0x67A5] = 'E8C0';\nz[0x67A7] = 'E8C5';\nz[0x67A8] = 'E8C7';\nz[0x67AA] = 'C7B9';\nz[0x67AB] = 'B7E3';\nz[0x67AD] = 'E8C9';\nz[0x67AF] = 'BFDD';\nz[0x67B0] = 'E8D2';\nz[0x67B3] = 'E8D7';\nz[0x67B5] = 'E8D5';\nz[0x67B6] = 'BCDC';\nz[0x67B7] = 'BCCF';\nz[0x67B8] = 'E8DB';\nz[0x67C1] = 'E8DE';\nz[0x67C3] = 'E8DA';\nz[0x67C4] = 'B1FA';\nz[0x67CF] = 'B0D8';\nz[0x67D0] = 'C4B3';\nz[0x67D1] = 'B8CC';\nz[0x67D2] = 'C6E2';\nz[0x67D3] = 'C8BE';\nz[0x67D4] = 'C8E1';\nz[0x67D8] = 'E8CF';\nz[0x67D9] = 'E8D4';\nz[0x67DA] = 'E8D6';\nz[0x67DC] = 'B9F1';\nz[0x67DD] = 'E8D8';\nz[0x67DE] = 'D7F5';\nz[0x67E0] = 'C4FB';\nz[0x67E2] = 'E8DC';\nz[0x67E5] = 'B2E9';\nz[0x67E9] = 'E8D1';\nz[0x67EC] = 'BCED';\nz[0x67EF] = 'BFC2';\nz[0x67F0] = 'E8CD';\nz[0x67F1] = 'D6F9';\nz[0x67F3] = 'C1F8';\nz[0x67F4] = 'B2F1';\nz[0x67FD] = 'E8DF';\nz[0x67FF] = 'CAC1';\nz[0x6800] = 'E8D9';\nz[0x6805] = 'D5A4';\nz[0x6807] = 'B1EA';\nz[0x6808] = 'D5BB';\nz[0x6809] = 'E8CE';\nz[0x680A] = 'E8D0';\nz[0x680B] = 'B6B0';\nz[0x680C] = 'E8D3';\nz[0x680E] = 'E8DD';\nz[0x680F] = 'C0B8';\nz[0x6811] = 'CAF7';\nz[0x6813] = 'CBA8';\nz[0x6816] = 'C6DC';\nz[0x6817] = 'C0F5';\nz[0x681D] = 'E8E9';\nz[0x6821] = 'D0A3';\nz[0x6829] = 'E8F2';\nz[0x682A] = 'D6EA';\nz[0x6832] = 'E8E0';\nz[0x6833] = 'E8E1';\nz[0x6837] = 'D1F9';\nz[0x6838] = 'BACB';\nz[0x6839] = 'B8F9';\nz[0x683C] = 'B8F1';\nz[0x683D] = 'D4D4';\nz[0x683E] = 'E8EF';\nz[0x6840] = 'E8EE';\nz[0x6841] = 'E8EC';\nz[0x6842] = 'B9F0';\nz[0x6843] = 'CCD2';\nz[0x6844] = 'E8E6';\nz[0x6845] = 'CEA6';\nz[0x6846] = 'BFF2';\nz[0x6848] = 'B0B8';\nz[0x6849] = 'E8F1';\nz[0x684A] = 'E8F0';\nz[0x684C] = 'D7C0';\nz[0x684E] = 'E8E4';\nz[0x6850] = 'CDA9';\nz[0x6851] = 'C9A3';\nz[0x6853] = 'BBB8';\nz[0x6854] = 'BDDB';\nz[0x6855] = 'E8EA';\nz[0x6860] = 'E8E2';\nz[0x6861] = 'E8E3';\nz[0x6862] = 'E8E5';\nz[0x6863] = 'B5B5';\nz[0x6864] = 'E8E7';\nz[0x6865] = 'C7C5';\nz[0x6866] = 'E8EB';\nz[0x6867] = 'E8ED';\nz[0x6868] = 'BDB0';\nz[0x6869] = 'D7AE';\nz[0x686B] = 'E8F8';\nz[0x6874] = 'E8F5';\nz[0x6876] = 'CDB0';\nz[0x6877] = 'E8F6';\nz[0x6881] = 'C1BA';\nz[0x6883] = 'E8E8';\nz[0x6885] = 'C3B7';\nz[0x6886] = 'B0F0';\nz[0x688F] = 'E8F4';\nz[0x6893] = 'E8F7';\nz[0x6897] = 'B9A3';\nz[0x68A2] = 'C9D2';\nz[0x68A6] = 'C3CE';\nz[0x68A7] = 'CEE0';\nz[0x68A8] = 'C0E6';\nz[0x68AD] = 'CBF3';\nz[0x68AF] = 'CCDD';\nz[0x68B0] = 'D0B5';\nz[0x68B3] = 'CAE1';\nz[0x68B5] = 'E8F3';\nz[0x68C0] = 'BCEC';\nz[0x68C2] = 'E8F9';\nz[0x68C9] = 'C3DE';\nz[0x68CB] = 'C6E5';\nz[0x68CD] = 'B9F7';\nz[0x68D2] = 'B0F4';\nz[0x68D5] = 'D7D8';\nz[0x68D8] = 'BCAC';\nz[0x68DA] = 'C5EF';\nz[0x68E0] = 'CCC4';\nz[0x68E3] = 'E9A6';\nz[0x68EE] = 'C9AD';\nz[0x68F0] = 'E9A2';\nz[0x68F1] = 'C0E2';\nz[0x68F5] = 'BFC3';\nz[0x68F9] = 'E8FE';\nz[0x68FA] = 'B9D7';\nz[0x68FC] = 'E8FB';\nz[0x6901] = 'E9A4';\nz[0x6905] = 'D2CE';\nz[0x690B] = 'E9A3';\nz[0x690D] = 'D6B2';\nz[0x690E] = 'D7B5';\nz[0x6910] = 'E9A7';\nz[0x6912] = 'BDB7';\nz[0x691F] = 'E8FC';\nz[0x6920] = 'E8FD';\nz[0x6924] = 'E9A1';\nz[0x692D] = 'CDD6';\nz[0x6930] = 'D2AC';\nz[0x6934] = 'E9B2';\nz[0x6939] = 'E9A9';\nz[0x693D] = 'B4AA';\nz[0x693F] = 'B4BB';\nz[0x6942] = 'E9AB';\nz[0x6954] = 'D0A8';\nz[0x6957] = 'E9A5';\nz[0x695A] = 'B3FE';\nz[0x695D] = 'E9AC';\nz[0x695E] = 'C0E3';\nz[0x6960] = 'E9AA';\nz[0x6963] = 'E9B9';\nz[0x6966] = 'E9B8';\nz[0x696B] = 'E9AE';\nz[0x696E] = 'E8FA';\nz[0x6971] = 'E9A8';\nz[0x6977] = 'BFAC';\nz[0x6978] = 'E9B1';\nz[0x6979] = 'E9BA';\nz[0x697C] = 'C2A5';\nz[0x6980] = 'E9AF';\nz[0x6982] = 'B8C5';\nz[0x6984] = 'E9AD';\nz[0x6986] = 'D3DC';\nz[0x6987] = 'E9B4';\nz[0x6988] = 'E9B5';\nz[0x6989] = 'E9B7';\nz[0x698D] = 'E9C7';\nz[0x6994] = 'C0C6';\nz[0x6995] = 'E9C5';\nz[0x6998] = 'E9B0';\nz[0x699B] = 'E9BB';\nz[0x699C] = 'B0F1';\nz[0x69A7] = 'E9BC';\nz[0x69A8] = 'D5A5';\nz[0x69AB] = 'E9BE';\nz[0x69AD] = 'E9BF';\nz[0x69B1] = 'E9C1';\nz[0x69B4] = 'C1F1';\nz[0x69B7] = 'C8B6';\nz[0x69BB] = 'E9BD';\nz[0x69C1] = 'E9C2';\nz[0x69CA] = 'E9C3';\nz[0x69CC] = 'E9B3';\nz[0x69CE] = 'E9B6';\nz[0x69D0] = 'BBB1';\nz[0x69D4] = 'E9C0';\nz[0x69DB] = 'BCF7';\nz[0x69DF] = 'E9C4';\nz[0x69E0] = 'E9C6';\nz[0x69ED] = 'E9CA';\nz[0x69F2] = 'E9CE';\nz[0x69FD] = 'B2DB';\nz[0x69FF] = 'E9C8';\nz[0x6A0A] = 'B7AE';\nz[0x6A17] = 'E9CB';\nz[0x6A18] = 'E9CC';\nz[0x6A1F] = 'D5C1';\nz[0x6A21] = 'C4A3';\nz[0x6A28] = 'E9D8';\nz[0x6A2A] = 'BAE1';\nz[0x6A2F] = 'E9C9';\nz[0x6A31] = 'D3A3';\nz[0x6A35] = 'E9D4';\nz[0x6A3D] = 'E9D7';\nz[0x6A3E] = 'E9D0';\nz[0x6A44] = 'E9CF';\nz[0x6A47] = 'C7C1';\nz[0x6A50] = 'E9D2';\nz[0x6A58] = 'E9D9';\nz[0x6A59] = 'B3C8';\nz[0x6A5B] = 'E9D3';\nz[0x6A61] = 'CFF0';\nz[0x6A65] = 'E9CD';\nz[0x6A71] = 'B3F7';\nz[0x6A79] = 'E9D6';\nz[0x6A7C] = 'E9DA';\nz[0x6A80] = 'CCB4';\nz[0x6A84] = 'CFAD';\nz[0x6A8E] = 'E9D5';\nz[0x6A90] = 'E9DC';\nz[0x6A91] = 'E9DB';\nz[0x6A97] = 'E9DE';\nz[0x6AA0] = 'E9D1';\nz[0x6AA9] = 'E9DD';\nz[0x6AAB] = 'E9DF';\nz[0x6AAC] = 'C3CA';\nz[0x6B20] = 'C7B7';\nz[0x6B21] = 'B4CE';\nz[0x6B22] = 'BBB6';\nz[0x6B23] = 'D0C0';\nz[0x6B24] = 'ECA3';\nz[0x6B27] = 'C5B7';\nz[0x6B32] = 'D3FB';\nz[0x6B37] = 'ECA4';\nz[0x6B39] = 'ECA5';\nz[0x6B3A] = 'C6DB';\nz[0x6B3E] = 'BFEE';\nz[0x6B43] = 'ECA6';\nz[0x6B46] = 'ECA7';\nz[0x6B47] = 'D0AA';\nz[0x6B49] = 'C7B8';\nz[0x6B4C] = 'B8E8';\nz[0x6B59] = 'ECA8';\nz[0x6B62] = 'D6B9';\nz[0x6B63] = 'D5FD';\nz[0x6B64] = 'B4CB';\nz[0x6B65] = 'B2BD';\nz[0x6B66] = 'CEE4';\nz[0x6B67] = 'C6E7';\nz[0x6B6A] = 'CDE1';\nz[0x6B79] = 'B4F5';\nz[0x6B7B] = 'CBC0';\nz[0x6B7C] = 'BCDF';\nz[0x6B81] = 'E9E2';\nz[0x6B82] = 'E9E3';\nz[0x6B83] = 'D1EA';\nz[0x6B84] = 'E9E5';\nz[0x6B86] = 'B4F9';\nz[0x6B87] = 'E9E4';\nz[0x6B89] = 'D1B3';\nz[0x6B8A] = 'CAE2';\nz[0x6B8B] = 'B2D0';\nz[0x6B8D] = 'E9E8';\nz[0x6B92] = 'E9E6';\nz[0x6B93] = 'E9E7';\nz[0x6B96] = 'D6B3';\nz[0x6B9A] = 'E9E9';\nz[0x6B9B] = 'E9EA';\nz[0x6BA1] = 'E9EB';\nz[0x6BAA] = 'E9EC';\nz[0x6BB3] = 'ECAF';\nz[0x6BB4] = 'C5B9';\nz[0x6BB5] = 'B6CE';\nz[0x6BB7] = 'D2F3';\nz[0x6BBF] = 'B5EE';\nz[0x6BC1] = 'BBD9';\nz[0x6BC2] = 'ECB1';\nz[0x6BC5] = 'D2E3';\nz[0x6BCB] = 'CEE3';\nz[0x6BCD] = 'C4B8';\nz[0x6BCF] = 'C3BF';\nz[0x6BD2] = 'B6BE';\nz[0x6BD3] = 'D8B9';\nz[0x6BD4] = 'B1C8';\nz[0x6BD5] = 'B1CF';\nz[0x6BD6] = 'B1D1';\nz[0x6BD7] = 'C5FE';\nz[0x6BD9] = 'B1D0';\nz[0x6BDB] = 'C3AB';\nz[0x6BE1] = 'D5B1';\nz[0x6BEA] = 'EBA4';\nz[0x6BEB] = 'BAC1';\nz[0x6BEF] = 'CCBA';\nz[0x6BF3] = 'EBA5';\nz[0x6BF5] = 'EBA7';\nz[0x6BF9] = 'EBA8';\nz[0x6BFD] = 'EBA6';\nz[0x6C05] = 'EBA9';\nz[0x6C06] = 'EBAB';\nz[0x6C07] = 'EBAA';\nz[0x6C0D] = 'EBAC';\nz[0x6C0F] = 'CACF';\nz[0x6C10] = 'D8B5';\nz[0x6C11] = 'C3F1';\nz[0x6C13] = 'C3A5';\nz[0x6C14] = 'C6F8';\nz[0x6C15] = 'EBAD';\nz[0x6C16] = 'C4CA';\nz[0x6C18] = 'EBAE';\nz[0x6C19] = 'EBAF';\nz[0x6C1A] = 'EBB0';\nz[0x6C1B] = 'B7D5';\nz[0x6C1F] = 'B7FA';\nz[0x6C21] = 'EBB1';\nz[0x6C22] = 'C7E2';\nz[0x6C24] = 'EBB3';\nz[0x6C26] = 'BAA4';\nz[0x6C27] = 'D1F5';\nz[0x6C28] = 'B0B1';\nz[0x6C29] = 'EBB2';\nz[0x6C2A] = 'EBB4';\nz[0x6C2E] = 'B5AA';\nz[0x6C2F] = 'C2C8';\nz[0x6C30] = 'C7E8';\nz[0x6C32] = 'EBB5';\nz[0x6C34] = 'CBAE';\nz[0x6C35] = 'E3DF';\nz[0x6C38] = 'D3C0';\nz[0x6C3D] = 'D9DB';\nz[0x6C40] = 'CDA1';\nz[0x6C41] = 'D6AD';\nz[0x6C42] = 'C7F3';\nz[0x6C46] = 'D9E0';\nz[0x6C47] = 'BBE3';\nz[0x6C49] = 'BABA';\nz[0x6C4A] = 'E3E2';\nz[0x6C50] = 'CFAB';\nz[0x6C54] = 'E3E0';\nz[0x6C55] = 'C9C7';\nz[0x6C57] = 'BAB9';\nz[0x6C5B] = 'D1B4';\nz[0x6C5C] = 'E3E1';\nz[0x6C5D] = 'C8EA';\nz[0x6C5E] = 'B9AF';\nz[0x6C5F] = 'BDAD';\nz[0x6C60] = 'B3D8';\nz[0x6C61] = 'CEDB';\nz[0x6C64] = 'CCC0';\nz[0x6C68] = 'E3E8';\nz[0x6C69] = 'E3E9';\nz[0x6C6A] = 'CDF4';\nz[0x6C70] = 'CCAD';\nz[0x6C72] = 'BCB3';\nz[0x6C74] = 'E3EA';\nz[0x6C76] = 'E3EB';\nz[0x6C79] = 'D0DA';\nz[0x6C7D] = 'C6FB';\nz[0x6C7E] = 'B7DA';\nz[0x6C81] = 'C7DF';\nz[0x6C82] = 'D2CA';\nz[0x6C83] = 'CED6';\nz[0x6C85] = 'E3E4';\nz[0x6C86] = 'E3EC';\nz[0x6C88] = 'C9F2';\nz[0x6C89] = 'B3C1';\nz[0x6C8C] = 'E3E7';\nz[0x6C8F] = 'C6E3';\nz[0x6C90] = 'E3E5';\nz[0x6C93] = 'EDB3';\nz[0x6C94] = 'E3E6';\nz[0x6C99] = 'C9B3';\nz[0x6C9B] = 'C5E6';\nz[0x6C9F] = 'B9B5';\nz[0x6CA1] = 'C3BB';\nz[0x6CA3] = 'E3E3';\nz[0x6CA4] = 'C5BD';\nz[0x6CA5] = 'C1A4';\nz[0x6CA6] = 'C2D9';\nz[0x6CA7] = 'B2D7';\nz[0x6CA9] = 'E3ED';\nz[0x6CAA] = 'BBA6';\nz[0x6CAB] = 'C4AD';\nz[0x6CAD] = 'E3F0';\nz[0x6CAE] = 'BEDA';\nz[0x6CB1] = 'E3FB';\nz[0x6CB2] = 'E3F5';\nz[0x6CB3] = 'BAD3';\nz[0x6CB8] = 'B7D0';\nz[0x6CB9] = 'D3CD';\nz[0x6CBB] = 'D6CE';\nz[0x6CBC] = 'D5D3';\nz[0x6CBD] = 'B9C1';\nz[0x6CBE] = 'D5B4';\nz[0x6CBF] = 'D1D8';\nz[0x6CC4] = 'D0B9';\nz[0x6CC5] = 'C7F6';\nz[0x6CC9] = 'C8AA';\nz[0x6CCA] = 'B2B4';\nz[0x6CCC] = 'C3DA';\nz[0x6CD0] = 'E3EE';\nz[0x6CD3] = 'E3FC';\nz[0x6CD4] = 'E3EF';\nz[0x6CD5] = 'B7A8';\nz[0x6CD6] = 'E3F7';\nz[0x6CD7] = 'E3F4';\nz[0x6CDB] = 'B7BA';\nz[0x6CDE] = 'C5A2';\nz[0x6CE0] = 'E3F6';\nz[0x6CE1] = 'C5DD';\nz[0x6CE2] = 'B2A8';\nz[0x6CE3] = 'C6FC';\nz[0x6CE5] = 'C4E0';\nz[0x6CE8] = 'D7A2';\nz[0x6CEA] = 'C0E1';\nz[0x6CEB] = 'E3F9';\nz[0x6CEE] = 'E3FA';\nz[0x6CEF] = 'E3FD';\nz[0x6CF0] = 'CCA9';\nz[0x6CF1] = 'E3F3';\nz[0x6CF3] = 'D3BE';\nz[0x6CF5] = 'B1C3';\nz[0x6CF6] = 'EDB4';\nz[0x6CF7] = 'E3F1';\nz[0x6CF8] = 'E3F2';\nz[0x6CFA] = 'E3F8';\nz[0x6CFB] = 'D0BA';\nz[0x6CFC] = 'C6C3';\nz[0x6CFD] = 'D4F3';\nz[0x6CFE] = 'E3FE';\nz[0x6D01] = 'BDE0';\nz[0x6D04] = 'E4A7';\nz[0x6D07] = 'E4A6';\nz[0x6D0B] = 'D1F3';\nz[0x6D0C] = 'E4A3';\nz[0x6D0E] = 'E4A9';\nz[0x6D12] = 'C8F7';\nz[0x6D17] = 'CFB4';\nz[0x6D19] = 'E4A8';\nz[0x6D1A] = 'E4AE';\nz[0x6D1B] = 'C2E5';\nz[0x6D1E] = 'B6B4';\nz[0x6D25] = 'BDF2';\nz[0x6D27] = 'E4A2';\nz[0x6D2A] = 'BAE9';\nz[0x6D2B] = 'E4AA';\nz[0x6D2E] = 'E4AC';\nz[0x6D31] = 'B6FD';\nz[0x6D32] = 'D6DE';\nz[0x6D33] = 'E4B2';\nz[0x6D35] = 'E4AD';\nz[0x6D39] = 'E4A1';\nz[0x6D3B] = 'BBEE';\nz[0x6D3C] = 'CDDD';\nz[0x6D3D] = 'C7A2';\nz[0x6D3E] = 'C5C9';\nz[0x6D41] = 'C1F7';\nz[0x6D43] = 'E4A4';\nz[0x6D45] = 'C7B3';\nz[0x6D46] = 'BDAC';\nz[0x6D47] = 'BDBD';\nz[0x6D48] = 'E4A5';\nz[0x6D4A] = 'D7C7';\nz[0x6D4B] = 'B2E2';\nz[0x6D4D] = 'E4AB';\nz[0x6D4E] = 'BCC3';\nz[0x6D4F] = 'E4AF';\nz[0x6D51] = 'BBEB';\nz[0x6D52] = 'E4B0';\nz[0x6D53] = 'C5A8';\nz[0x6D54] = 'E4B1';\nz[0x6D59] = 'D5E3';\nz[0x6D5A] = 'BFA3';\nz[0x6D5C] = 'E4BA';\nz[0x6D5E] = 'E4B7';\nz[0x6D60] = 'E4BB';\nz[0x6D63] = 'E4BD';\nz[0x6D66] = 'C6D6';\nz[0x6D69] = 'BAC6';\nz[0x6D6A] = 'C0CB';\nz[0x6D6E] = 'B8A1';\nz[0x6D6F] = 'E4B4';\nz[0x6D74] = 'D4A1';\nz[0x6D77] = 'BAA3';\nz[0x6D78] = 'BDFE';\nz[0x6D7C] = 'E4BC';\nz[0x6D82] = 'CDBF';\nz[0x6D85] = 'C4F9';\nz[0x6D88] = 'CFFB';\nz[0x6D89] = 'C9E6';\nz[0x6D8C] = 'D3BF';\nz[0x6D8E] = 'CFD1';\nz[0x6D91] = 'E4B3';\nz[0x6D93] = 'E4B8';\nz[0x6D94] = 'E4B9';\nz[0x6D95] = 'CCE9';\nz[0x6D9B] = 'CCCE';\nz[0x6D9D] = 'C0D4';\nz[0x6D9E] = 'E4B5';\nz[0x6D9F] = 'C1B0';\nz[0x6DA0] = 'E4B6';\nz[0x6DA1] = 'CED0';\nz[0x6DA3] = 'BBC1';\nz[0x6DA4] = 'B5D3';\nz[0x6DA6] = 'C8F3';\nz[0x6DA7] = 'BDA7';\nz[0x6DA8] = 'D5C7';\nz[0x6DA9] = 'C9AC';\nz[0x6DAA] = 'B8A2';\nz[0x6DAB] = 'E4CA';\nz[0x6DAE] = 'E4CC';\nz[0x6DAF] = 'D1C4';\nz[0x6DB2] = 'D2BA';\nz[0x6DB5] = 'BAAD';\nz[0x6DB8] = 'BAD4';\nz[0x6DBF] = 'E4C3';\nz[0x6DC0] = 'B5ED';\nz[0x6DC4] = 'D7CD';\nz[0x6DC5] = 'E4C0';\nz[0x6DC6] = 'CFFD';\nz[0x6DC7] = 'E4BF';\nz[0x6DCB] = 'C1DC';\nz[0x6DCC] = 'CCCA';\nz[0x6DD1] = 'CAE7';\nz[0x6DD6] = 'C4D7';\nz[0x6DD8] = 'CCD4';\nz[0x6DD9] = 'E4C8';\nz[0x6DDD] = 'E4C7';\nz[0x6DDE] = 'E4C1';\nz[0x6DE0] = 'E4C4';\nz[0x6DE1] = 'B5AD';\nz[0x6DE4] = 'D3D9';\nz[0x6DE6] = 'E4C6';\nz[0x6DEB] = 'D2F9';\nz[0x6DEC] = 'B4E3';\nz[0x6DEE] = 'BBB4';\nz[0x6DF1] = 'C9EE';\nz[0x6DF3] = 'B4BE';\nz[0x6DF7] = 'BBEC';\nz[0x6DF9] = 'D1CD';\nz[0x6DFB] = 'CCED';\nz[0x6DFC] = 'EDB5';\nz[0x6E05] = 'C7E5';\nz[0x6E0A] = 'D4A8';\nz[0x6E0C] = 'E4CB';\nz[0x6E0D] = 'D7D5';\nz[0x6E0E] = 'E4C2';\nz[0x6E10] = 'BDA5';\nz[0x6E11] = 'E4C5';\nz[0x6E14] = 'D3E6';\nz[0x6E16] = 'E4C9';\nz[0x6E17] = 'C9F8';\nz[0x6E1A] = 'E4BE';\nz[0x6E1D] = 'D3E5';\nz[0x6E20] = 'C7FE';\nz[0x6E21] = 'B6C9';\nz[0x6E23] = 'D4FC';\nz[0x6E24] = 'B2B3';\nz[0x6E25] = 'E4D7';\nz[0x6E29] = 'CEC2';\nz[0x6E2B] = 'E4CD';\nz[0x6E2D] = 'CEBC';\nz[0x6E2F] = 'B8DB';\nz[0x6E32] = 'E4D6';\nz[0x6E34] = 'BFCA';\nz[0x6E38] = 'D3CE';\nz[0x6E3A] = 'C3EC';\nz[0x6E43] = 'C5C8';\nz[0x6E44] = 'E4D8';\nz[0x6E4D] = 'CDC4';\nz[0x6E4E] = 'E4CF';\nz[0x6E53] = 'E4D4';\nz[0x6E54] = 'E4D5';\nz[0x6E56] = 'BAFE';\nz[0x6E58] = 'CFE6';\nz[0x6E5B] = 'D5BF';\nz[0x6E5F] = 'E4D2';\nz[0x6E6B] = 'E4D0';\nz[0x6E6E] = 'E4CE';\nz[0x6E7E] = 'CDE5';\nz[0x6E7F] = 'CAAA';\nz[0x6E83] = 'C0A3';\nz[0x6E85] = 'BDA6';\nz[0x6E86] = 'E4D3';\nz[0x6E89] = 'B8C8';\nz[0x6E8F] = 'E4E7';\nz[0x6E90] = 'D4B4';\nz[0x6E98] = 'E4DB';\nz[0x6E9C] = 'C1EF';\nz[0x6E9F] = 'E4E9';\nz[0x6EA2] = 'D2E7';\nz[0x6EA5] = 'E4DF';\nz[0x6EA7] = 'E4E0';\nz[0x6EAA] = 'CFAA';\nz[0x6EAF] = 'CBDD';\nz[0x6EB1] = 'E4DA';\nz[0x6EB2] = 'E4D1';\nz[0x6EB4] = 'E4E5';\nz[0x6EB6] = 'C8DC';\nz[0x6EB7] = 'E4E3';\nz[0x6EBA] = 'C4E7';\nz[0x6EBB] = 'E4E2';\nz[0x6EBD] = 'E4E1';\nz[0x6EC1] = 'B3FC';\nz[0x6EC2] = 'E4E8';\nz[0x6EC7] = 'B5E1';\nz[0x6ECB] = 'D7CC';\nz[0x6ECF] = 'E4E6';\nz[0x6ED1] = 'BBAC';\nz[0x6ED3] = 'D7D2';\nz[0x6ED4] = 'CCCF';\nz[0x6ED5] = 'EBF8';\nz[0x6ED7] = 'E4E4';\nz[0x6EDA] = 'B9F6';\nz[0x6EDE] = 'D6CD';\nz[0x6EDF] = 'E4D9';\nz[0x6EE0] = 'E4DC';\nz[0x6EE1] = 'C2FA';\nz[0x6EE2] = 'E4DE';\nz[0x6EE4] = 'C2CB';\nz[0x6EE5] = 'C0C4';\nz[0x6EE6] = 'C2D0';\nz[0x6EE8] = 'B1F5';\nz[0x6EE9] = 'CCB2';\nz[0x6EF4] = 'B5CE';\nz[0x6EF9] = 'E4EF';\nz[0x6F02] = 'C6AF';\nz[0x6F06] = 'C6E1';\nz[0x6F09] = 'E4F5';\nz[0x6F0F] = 'C2A9';\nz[0x6F13] = 'C0EC';\nz[0x6F14] = 'D1DD';\nz[0x6F15] = 'E4EE';\nz[0x6F20] = 'C4AE';\nz[0x6F24] = 'E4ED';\nz[0x6F29] = 'E4F6';\nz[0x6F2A] = 'E4F4';\nz[0x6F2B] = 'C2FE';\nz[0x6F2D] = 'E4DD';\nz[0x6F2F] = 'E4F0';\nz[0x6F31] = 'CAFE';\nz[0x6F33] = 'D5C4';\nz[0x6F36] = 'E4F1';\nz[0x6F3E] = 'D1FA';\nz[0x6F46] = 'E4EB';\nz[0x6F47] = 'E4EC';\nz[0x6F4B] = 'E4F2';\nz[0x6F4D] = 'CEAB';\nz[0x6F58] = 'C5CB';\nz[0x6F5C] = 'C7B1';\nz[0x6F5E] = 'C2BA';\nz[0x6F62] = 'E4EA';\nz[0x6F66] = 'C1CA';\nz[0x6F6D] = 'CCB6';\nz[0x6F6E] = 'B3B1';\nz[0x6F72] = 'E4FB';\nz[0x6F74] = 'E4F3';\nz[0x6F78] = 'E4FA';\nz[0x6F7A] = 'E4FD';\nz[0x6F7C] = 'E4FC';\nz[0x6F84] = 'B3CE';\nz[0x6F88] = 'B3BA';\nz[0x6F89] = 'E4F7';\nz[0x6F8C] = 'E4F9';\nz[0x6F8D] = 'E4F8';\nz[0x6F8E] = 'C5EC';\nz[0x6F9C] = 'C0BD';\nz[0x6FA1] = 'D4E8';\nz[0x6FA7] = 'E5A2';\nz[0x6FB3] = 'B0C4';\nz[0x6FB6] = 'E5A4';\nz[0x6FB9] = 'E5A3';\nz[0x6FC0] = 'BCA4';\nz[0x6FC2] = 'E5A5';\nz[0x6FC9] = 'E5A1';\nz[0x6FD1] = 'E4FE';\nz[0x6FD2] = 'B1F4';\nz[0x6FDE] = 'E5A8';\nz[0x6FE0] = 'E5A9';\nz[0x6FE1] = 'E5A6';\nz[0x6FEE] = 'E5A7';\nz[0x6FEF] = 'E5AA';\nz[0x7011] = 'C6D9';\nz[0x701A] = 'E5AB';\nz[0x701B] = 'E5AD';\nz[0x7023] = 'E5AC';\nz[0x7035] = 'E5AF';\nz[0x7039] = 'E5AE';\nz[0x704C] = 'B9E0';\nz[0x704F] = 'E5B0';\nz[0x705E] = 'E5B1';\nz[0x706B] = 'BBF0';\nz[0x706C] = 'ECE1';\nz[0x706D] = 'C3F0';\nz[0x706F] = 'B5C6';\nz[0x7070] = 'BBD2';\nz[0x7075] = 'C1E9';\nz[0x7076] = 'D4EE';\nz[0x7078] = 'BEC4';\nz[0x707C] = 'D7C6';\nz[0x707E] = 'D4D6';\nz[0x707F] = 'B2D3';\nz[0x7080] = 'ECBE';\nz[0x7085] = 'EAC1';\nz[0x7089] = 'C2AF';\nz[0x708A] = 'B4B6';\nz[0x708E] = 'D1D7';\nz[0x7092] = 'B3B4';\nz[0x7094] = 'C8B2';\nz[0x7095] = 'BFBB';\nz[0x7096] = 'ECC0';\nz[0x7099] = 'D6CB';\nz[0x709C] = 'ECBF';\nz[0x709D] = 'ECC1';\nz[0x70AB] = 'ECC5';\nz[0x70AC] = 'BEE6';\nz[0x70AD] = 'CCBF';\nz[0x70AE] = 'C5DA';\nz[0x70AF] = 'BEBC';\nz[0x70B1] = 'ECC6';\nz[0x70B3] = 'B1FE';\nz[0x70B7] = 'ECC4';\nz[0x70B8] = 'D5A8';\nz[0x70B9] = 'B5E3';\nz[0x70BB] = 'ECC2';\nz[0x70BC] = 'C1B6';\nz[0x70BD] = 'B3E3';\nz[0x70C0] = 'ECC3';\nz[0x70C1] = 'CBB8';\nz[0x70C2] = 'C0C3';\nz[0x70C3] = 'CCFE';\nz[0x70C8] = 'C1D2';\nz[0x70CA] = 'ECC8';\nz[0x70D8] = 'BAE6';\nz[0x70D9] = 'C0D3';\nz[0x70DB] = 'D6F2';\nz[0x70DF] = 'D1CC';\nz[0x70E4] = 'BFBE';\nz[0x70E6] = 'B7B3';\nz[0x70E7] = 'C9D5';\nz[0x70E8] = 'ECC7';\nz[0x70E9] = 'BBE2';\nz[0x70EB] = 'CCCC';\nz[0x70EC] = 'BDFD';\nz[0x70ED] = 'C8C8';\nz[0x70EF] = 'CFA9';\nz[0x70F7] = 'CDE9';\nz[0x70F9] = 'C5EB';\nz[0x70FD] = 'B7E9';\nz[0x7109] = 'D1C9';\nz[0x710A] = 'BAB8';\nz[0x7110] = 'ECC9';\nz[0x7113] = 'ECCA';\nz[0x7115] = 'BBC0';\nz[0x7116] = 'ECCB';\nz[0x7118] = 'ECE2';\nz[0x7119] = 'B1BA';\nz[0x711A] = 'B7D9';\nz[0x7126] = 'BDB9';\nz[0x712F] = 'ECCC';\nz[0x7130] = 'D1E6';\nz[0x7131] = 'ECCD';\nz[0x7136] = 'C8BB';\nz[0x7145] = 'ECD1';\nz[0x714A] = 'ECD3';\nz[0x714C] = 'BBCD';\nz[0x714E] = 'BCE5';\nz[0x715C] = 'ECCF';\nz[0x715E] = 'C9B7';\nz[0x7164] = 'C3BA';\nz[0x7166] = 'ECE3';\nz[0x7167] = 'D5D5';\nz[0x7168] = 'ECD0';\nz[0x716E] = 'D6F3';\nz[0x7172] = 'ECD2';\nz[0x7173] = 'ECCE';\nz[0x7178] = 'ECD4';\nz[0x717A] = 'ECD5';\nz[0x717D] = 'C9BF';\nz[0x7184] = 'CFA8';\nz[0x718A] = 'D0DC';\nz[0x718F] = 'D1AC';\nz[0x7194] = 'C8DB';\nz[0x7198] = 'ECD6';\nz[0x7199] = 'CEF5';\nz[0x719F] = 'CAEC';\nz[0x71A0] = 'ECDA';\nz[0x71A8] = 'ECD9';\nz[0x71AC] = 'B0BE';\nz[0x71B3] = 'ECD7';\nz[0x71B5] = 'ECD8';\nz[0x71B9] = 'ECE4';\nz[0x71C3] = 'C8BC';\nz[0x71CE] = 'C1C7';\nz[0x71D4] = 'ECDC';\nz[0x71D5] = 'D1E0';\nz[0x71E0] = 'ECDB';\nz[0x71E5] = 'D4EF';\nz[0x71E7] = 'ECDD';\nz[0x71EE] = 'DBC6';\nz[0x71F9] = 'ECDE';\nz[0x7206] = 'B1AC';\nz[0x721D] = 'ECDF';\nz[0x7228] = 'ECE0';\nz[0x722A] = 'D7A6';\nz[0x722C] = 'C5C0';\nz[0x7230] = 'EBBC';\nz[0x7231] = 'B0AE';\nz[0x7235] = 'BEF4';\nz[0x7236] = 'B8B8';\nz[0x7237] = 'D2AF';\nz[0x7238] = 'B0D6';\nz[0x7239] = 'B5F9';\nz[0x723B] = 'D8B3';\nz[0x723D] = 'CBAC';\nz[0x723F] = 'E3DD';\nz[0x7247] = 'C6AC';\nz[0x7248] = 'B0E6';\nz[0x724C] = 'C5C6';\nz[0x724D] = 'EBB9';\nz[0x7252] = 'EBBA';\nz[0x7256] = 'EBBB';\nz[0x7259] = 'D1C0';\nz[0x725B] = 'C5A3';\nz[0x725D] = 'EAF2';\nz[0x725F] = 'C4B2';\nz[0x7261] = 'C4B5';\nz[0x7262] = 'C0CE';\nz[0x7266] = 'EAF3';\nz[0x7267] = 'C4C1';\nz[0x7269] = 'CEEF';\nz[0x726E] = 'EAF0';\nz[0x726F] = 'EAF4';\nz[0x7272] = 'C9FC';\nz[0x7275] = 'C7A3';\nz[0x7279] = 'CCD8';\nz[0x727A] = 'CEFE';\nz[0x727E] = 'EAF5';\nz[0x727F] = 'EAF6';\nz[0x7280] = 'CFAC';\nz[0x7281] = 'C0E7';\nz[0x7284] = 'EAF7';\nz[0x728A] = 'B6BF';\nz[0x728B] = 'EAF8';\nz[0x728D] = 'EAF9';\nz[0x728F] = 'EAFA';\nz[0x7292] = 'EAFB';\nz[0x729F] = 'EAF1';\nz[0x72AC] = 'C8AE';\nz[0x72AD] = 'E1EB';\nz[0x72AF] = 'B7B8';\nz[0x72B0] = 'E1EC';\nz[0x72B4] = 'E1ED';\nz[0x72B6] = 'D7B4';\nz[0x72B7] = 'E1EE';\nz[0x72B8] = 'E1EF';\nz[0x72B9] = 'D3CC';\nz[0x72C1] = 'E1F1';\nz[0x72C2] = 'BFF1';\nz[0x72C3] = 'E1F0';\nz[0x72C4] = 'B5D2';\nz[0x72C8] = 'B1B7';\nz[0x72CD] = 'E1F3';\nz[0x72CE] = 'E1F2';\nz[0x72D0] = 'BAFC';\nz[0x72D2] = 'E1F4';\nz[0x72D7] = 'B9B7';\nz[0x72D9] = 'BED1';\nz[0x72DE] = 'C4FC';\nz[0x72E0] = 'BADD';\nz[0x72E1] = 'BDC6';\nz[0x72E8] = 'E1F5';\nz[0x72E9] = 'E1F7';\nz[0x72EC] = 'B6C0';\nz[0x72ED] = 'CFC1';\nz[0x72EE] = 'CAA8';\nz[0x72EF] = 'E1F6';\nz[0x72F0] = 'D5F8';\nz[0x72F1] = 'D3FC';\nz[0x72F2] = 'E1F8';\nz[0x72F3] = 'E1FC';\nz[0x72F4] = 'E1F9';\nz[0x72F7] = 'E1FA';\nz[0x72F8] = 'C0EA';\nz[0x72FA] = 'E1FE';\nz[0x72FB] = 'E2A1';\nz[0x72FC] = 'C0C7';\nz[0x7301] = 'E1FB';\nz[0x7303] = 'E1FD';\nz[0x730A] = 'E2A5';\nz[0x730E] = 'C1D4';\nz[0x7313] = 'E2A3';\nz[0x7315] = 'E2A8';\nz[0x7316] = 'B2FE';\nz[0x7317] = 'E2A2';\nz[0x731B] = 'C3CD';\nz[0x731C] = 'B2C2';\nz[0x731D] = 'E2A7';\nz[0x731E] = 'E2A6';\nz[0x7321] = 'E2A4';\nz[0x7322] = 'E2A9';\nz[0x7325] = 'E2AB';\nz[0x7329] = 'D0C9';\nz[0x732A] = 'D6ED';\nz[0x732B] = 'C3A8';\nz[0x732C] = 'E2AC';\nz[0x732E] = 'CFD7';\nz[0x7331] = 'E2AE';\nz[0x7334] = 'BAEF';\nz[0x7337] = 'E9E0';\nz[0x7338] = 'E2AD';\nz[0x7339] = 'E2AA';\nz[0x733E] = 'BBAB';\nz[0x733F] = 'D4B3';\nz[0x734D] = 'E2B0';\nz[0x7350] = 'E2AF';\nz[0x7352] = 'E9E1';\nz[0x7357] = 'E2B1';\nz[0x7360] = 'E2B2';\nz[0x736C] = 'E2B3';\nz[0x736D] = 'CCA1';\nz[0x736F] = 'E2B4';\nz[0x737E] = 'E2B5';\nz[0x7384] = 'D0FE';\nz[0x7387] = 'C2CA';\nz[0x7389] = 'D3F1';\nz[0x738B] = 'CDF5';\nz[0x738E] = 'E7E0';\nz[0x7391] = 'E7E1';\nz[0x7396] = 'BEC1';\nz[0x739B] = 'C2EA';\nz[0x739F] = 'E7E4';\nz[0x73A2] = 'E7E3';\nz[0x73A9] = 'CDE6';\nz[0x73AB] = 'C3B5';\nz[0x73AE] = 'E7E2';\nz[0x73AF] = 'BBB7';\nz[0x73B0] = 'CFD6';\nz[0x73B2] = 'C1E1';\nz[0x73B3] = 'E7E9';\nz[0x73B7] = 'E7E8';\nz[0x73BA] = 'E7F4';\nz[0x73BB] = 'B2A3';\nz[0x73C0] = 'E7EA';\nz[0x73C2] = 'E7E6';\nz[0x73C8] = 'E7EC';\nz[0x73C9] = 'E7EB';\nz[0x73CA] = 'C9BA';\nz[0x73CD] = 'D5E4';\nz[0x73CF] = 'E7E5';\nz[0x73D0] = 'B7A9';\nz[0x73D1] = 'E7E7';\nz[0x73D9] = 'E7EE';\nz[0x73DE] = 'E7F3';\nz[0x73E0] = 'D6E9';\nz[0x73E5] = 'E7ED';\nz[0x73E7] = 'E7F2';\nz[0x73E9] = 'E7F1';\nz[0x73ED] = 'B0E0';\nz[0x73F2] = 'E7F5';\nz[0x7403] = 'C7F2';\nz[0x7405] = 'C0C5';\nz[0x7406] = 'C0ED';\nz[0x7409] = 'C1F0';\nz[0x740A] = 'E7F0';\nz[0x740F] = 'E7F6';\nz[0x7410] = 'CBF6';\nz[0x741A] = 'E8A2';\nz[0x741B] = 'E8A1';\nz[0x7422] = 'D7C1';\nz[0x7425] = 'E7FA';\nz[0x7426] = 'E7F9';\nz[0x7428] = 'E7FB';\nz[0x742A] = 'E7F7';\nz[0x742C] = 'E7FE';\nz[0x742E] = 'E7FD';\nz[0x7430] = 'E7FC';\nz[0x7433] = 'C1D5';\nz[0x7434] = 'C7D9';\nz[0x7435] = 'C5FD';\nz[0x7436] = 'C5C3';\nz[0x743C] = 'C7ED';\nz[0x7441] = 'E8A3';\nz[0x7455] = 'E8A6';\nz[0x7457] = 'E8A5';\nz[0x7459] = 'E8A7';\nz[0x745A] = 'BAF7';\nz[0x745B] = 'E7F8';\nz[0x745C] = 'E8A4';\nz[0x745E] = 'C8F0';\nz[0x745F] = 'C9AA';\nz[0x746D] = 'E8A9';\nz[0x7470] = 'B9E5';\nz[0x7476] = 'D1FE';\nz[0x7477] = 'E8A8';\nz[0x747E] = 'E8AA';\nz[0x7480] = 'E8AD';\nz[0x7481] = 'E8AE';\nz[0x7483] = 'C1A7';\nz[0x7487] = 'E8AF';\nz[0x748B] = 'E8B0';\nz[0x748E] = 'E8AC';\nz[0x7490] = 'E8B4';\nz[0x749C] = 'E8AB';\nz[0x749E] = 'E8B1';\nz[0x74A7] = 'E8B5';\nz[0x74A8] = 'E8B2';\nz[0x74A9] = 'E8B3';\nz[0x74BA] = 'E8B7';\nz[0x74D2] = 'E8B6';\nz[0x74DC] = 'B9CF';\nz[0x74DE] = 'F0AC';\nz[0x74E0] = 'F0AD';\nz[0x74E2] = 'C6B0';\nz[0x74E3] = 'B0EA';\nz[0x74E4] = 'C8BF';\nz[0x74E6] = 'CDDF';\nz[0x74EE] = 'CECD';\nz[0x74EF] = 'EAB1';\nz[0x74F4] = 'EAB2';\nz[0x74F6] = 'C6BF';\nz[0x74F7] = 'B4C9';\nz[0x74FF] = 'EAB3';\nz[0x7504] = 'D5E7';\nz[0x750D] = 'DDF9';\nz[0x750F] = 'EAB4';\nz[0x7511] = 'EAB5';\nz[0x7513] = 'EAB6';\nz[0x7518] = 'B8CA';\nz[0x7519] = 'DFB0';\nz[0x751A] = 'C9F5';\nz[0x751C] = 'CCF0';\nz[0x751F] = 'C9FA';\nz[0x7525] = 'C9FB';\nz[0x7528] = 'D3C3';\nz[0x7529] = 'CBA6';\nz[0x752B] = 'B8A6';\nz[0x752C] = 'F0AE';\nz[0x752D] = 'B1C2';\nz[0x752F] = 'E5B8';\nz[0x7530] = 'CCEF';\nz[0x7531] = 'D3C9';\nz[0x7532] = 'BCD7';\nz[0x7533] = 'C9EA';\nz[0x7535] = 'B5E7';\nz[0x7537] = 'C4D0';\nz[0x7538] = 'B5E9';\nz[0x753A] = 'EEAE';\nz[0x753B] = 'BBAD';\nz[0x753E] = 'E7DE';\nz[0x7540] = 'EEAF';\nz[0x7545] = 'B3A9';\nz[0x7548] = 'EEB2';\nz[0x754B] = 'EEB1';\nz[0x754C] = 'BDE7';\nz[0x754E] = 'EEB0';\nz[0x754F] = 'CEB7';\nz[0x7554] = 'C5CF';\nz[0x7559] = 'C1F4';\nz[0x755A] = 'DBCE';\nz[0x755B] = 'EEB3';\nz[0x755C] = 'D0F3';\nz[0x7565] = 'C2D4';\nz[0x7566] = 'C6E8';\nz[0x756A] = 'B7AC';\nz[0x7572] = 'EEB4';\nz[0x7574] = 'B3EB';\nz[0x7578] = 'BBFB';\nz[0x7579] = 'EEB5';\nz[0x757F] = 'E7DC';\nz[0x7583] = 'EEB6';\nz[0x7586] = 'BDAE';\nz[0x758B] = 'F1E2';\nz[0x758F] = 'CAE8';\nz[0x7591] = 'D2C9';\nz[0x7592] = 'F0DA';\nz[0x7594] = 'F0DB';\nz[0x7596] = 'F0DC';\nz[0x7597] = 'C1C6';\nz[0x7599] = 'B8ED';\nz[0x759A] = 'BECE';\nz[0x759D] = 'F0DE';\nz[0x759F] = 'C5B1';\nz[0x75A0] = 'F0DD';\nz[0x75A1] = 'D1F1';\nz[0x75A3] = 'F0E0';\nz[0x75A4] = 'B0CC';\nz[0x75A5] = 'BDEA';\nz[0x75AB] = 'D2DF';\nz[0x75AC] = 'F0DF';\nz[0x75AE] = 'B4AF';\nz[0x75AF] = 'B7E8';\nz[0x75B0] = 'F0E6';\nz[0x75B1] = 'F0E5';\nz[0x75B2] = 'C6A3';\nz[0x75B3] = 'F0E1';\nz[0x75B4] = 'F0E2';\nz[0x75B5] = 'B4C3';\nz[0x75B8] = 'F0E3';\nz[0x75B9] = 'D5EE';\nz[0x75BC] = 'CCDB';\nz[0x75BD] = 'BED2';\nz[0x75BE] = 'BCB2';\nz[0x75C2] = 'F0E8';\nz[0x75C3] = 'F0E7';\nz[0x75C4] = 'F0E4';\nz[0x75C5] = 'B2A1';\nz[0x75C7] = 'D6A2';\nz[0x75C8] = 'D3B8';\nz[0x75C9] = 'BEB7';\nz[0x75CA] = 'C8AC';\nz[0x75CD] = 'F0EA';\nz[0x75D2] = 'D1F7';\nz[0x75D4] = 'D6CC';\nz[0x75D5] = 'BADB';\nz[0x75D6] = 'F0E9';\nz[0x75D8] = 'B6BB';\nz[0x75DB] = 'CDB4';\nz[0x75DE] = 'C6A6';\nz[0x75E2] = 'C1A1';\nz[0x75E3] = 'F0EB';\nz[0x75E4] = 'F0EE';\nz[0x75E6] = 'F0ED';\nz[0x75E7] = 'F0F0';\nz[0x75E8] = 'F0EC';\nz[0x75EA] = 'BBBE';\nz[0x75EB] = 'F0EF';\nz[0x75F0] = 'CCB5';\nz[0x75F1] = 'F0F2';\nz[0x75F4] = 'B3D5';\nz[0x75F9] = 'B1D4';\nz[0x75FC] = 'F0F3';\nz[0x75FF] = 'F0F4';\nz[0x7600] = 'F0F6';\nz[0x7601] = 'B4E1';\nz[0x7603] = 'F0F1';\nz[0x7605] = 'F0F7';\nz[0x760A] = 'F0FA';\nz[0x760C] = 'F0F8';\nz[0x7610] = 'F0F5';\nz[0x7615] = 'F0FD';\nz[0x7617] = 'F0F9';\nz[0x7618] = 'F0FC';\nz[0x7619] = 'F0FE';\nz[0x761B] = 'F1A1';\nz[0x761F] = 'CEC1';\nz[0x7620] = 'F1A4';\nz[0x7622] = 'F1A3';\nz[0x7624] = 'C1F6';\nz[0x7625] = 'F0FB';\nz[0x7626] = 'CADD';\nz[0x7629] = 'B4F1';\nz[0x762A] = 'B1F1';\nz[0x762B] = 'CCB1';\nz[0x762D] = 'F1A6';\nz[0x7630] = 'F1A7';\nz[0x7633] = 'F1AC';\nz[0x7634] = 'D5CE';\nz[0x7635] = 'F1A9';\nz[0x7638] = 'C8B3';\nz[0x763C] = 'F1A2';\nz[0x763E] = 'F1AB';\nz[0x763F] = 'F1A8';\nz[0x7640] = 'F1A5';\nz[0x7643] = 'F1AA';\nz[0x764C] = 'B0A9';\nz[0x764D] = 'F1AD';\nz[0x7654] = 'F1AF';\nz[0x7656] = 'F1B1';\nz[0x765C] = 'F1B0';\nz[0x765E] = 'F1AE';\nz[0x7663] = 'D1A2';\nz[0x766B] = 'F1B2';\nz[0x766F] = 'F1B3';\nz[0x7678] = 'B9EF';\nz[0x767B] = 'B5C7';\nz[0x767D] = 'B0D7';\nz[0x767E] = 'B0D9';\nz[0x7682] = 'D4ED';\nz[0x7684] = 'B5C4';\nz[0x7686] = 'BDD4';\nz[0x7687] = 'BBCA';\nz[0x7688] = 'F0A7';\nz[0x768B] = 'B8DE';\nz[0x768E] = 'F0A8';\nz[0x7691] = 'B0A8';\nz[0x7693] = 'F0A9';\nz[0x7696] = 'CDEE';\nz[0x7699] = 'F0AA';\nz[0x76A4] = 'F0AB';\nz[0x76AE] = 'C6A4';\nz[0x76B1] = 'D6E5';\nz[0x76B2] = 'F1E4';\nz[0x76B4] = 'F1E5';\nz[0x76BF] = 'C3F3';\nz[0x76C2] = 'D3DB';\nz[0x76C5] = 'D6D1';\nz[0x76C6] = 'C5E8';\nz[0x76C8] = 'D3AF';\nz[0x76CA] = 'D2E6';\nz[0x76CD] = 'EEC1';\nz[0x76CE] = 'B0BB';\nz[0x76CF] = 'D5B5';\nz[0x76D0] = 'D1CE';\nz[0x76D1] = 'BCE0';\nz[0x76D2] = 'BAD0';\nz[0x76D4] = 'BFF8';\nz[0x76D6] = 'B8C7';\nz[0x76D7] = 'B5C1';\nz[0x76D8] = 'C5CC';\nz[0x76DB] = 'CAA2';\nz[0x76DF] = 'C3CB';\nz[0x76E5] = 'EEC2';\nz[0x76EE] = 'C4BF';\nz[0x76EF] = 'B6A2';\nz[0x76F1] = 'EDEC';\nz[0x76F2] = 'C3A4';\nz[0x76F4] = 'D6B1';\nz[0x76F8] = 'CFE0';\nz[0x76F9] = 'EDEF';\nz[0x76FC] = 'C5CE';\nz[0x76FE] = 'B6DC';\nz[0x7701] = 'CAA1';\nz[0x7704] = 'EDED';\nz[0x7707] = 'EDF0';\nz[0x7708] = 'EDF1';\nz[0x7709] = 'C3BC';\nz[0x770B] = 'BFB4';\nz[0x770D] = 'EDEE';\nz[0x7719] = 'EDF4';\nz[0x771A] = 'EDF2';\nz[0x771F] = 'D5E6';\nz[0x7720] = 'C3DF';\nz[0x7722] = 'EDF3';\nz[0x7726] = 'EDF6';\nz[0x7728] = 'D5A3';\nz[0x7729] = 'D1A3';\nz[0x772D] = 'EDF5';\nz[0x772F] = 'C3D0';\nz[0x7735] = 'EDF7';\nz[0x7736] = 'BFF4';\nz[0x7737] = 'BEEC';\nz[0x7738] = 'EDF8';\nz[0x773A] = 'CCF7';\nz[0x773C] = 'D1DB';\nz[0x7740] = 'D7C5';\nz[0x7741] = 'D5F6';\nz[0x7743] = 'EDFC';\nz[0x7747] = 'EDFB';\nz[0x7750] = 'EDF9';\nz[0x7751] = 'EDFA';\nz[0x775A] = 'EDFD';\nz[0x775B] = 'BEA6';\nz[0x7761] = 'CBAF';\nz[0x7762] = 'EEA1';\nz[0x7763] = 'B6BD';\nz[0x7765] = 'EEA2';\nz[0x7766] = 'C4C0';\nz[0x7768] = 'EDFE';\nz[0x776B] = 'BDDE';\nz[0x776C] = 'B2C7';\nz[0x7779] = 'B6C3';\nz[0x777D] = 'EEA5';\nz[0x777E] = 'D8BA';\nz[0x777F] = 'EEA3';\nz[0x7780] = 'EEA6';\nz[0x7784] = 'C3E9';\nz[0x7785] = 'B3F2';\nz[0x778C] = 'EEA7';\nz[0x778D] = 'EEA4';\nz[0x778E] = 'CFB9';\nz[0x7791] = 'EEA8';\nz[0x7792] = 'C2F7';\nz[0x779F] = 'EEA9';\nz[0x77A0] = 'EEAA';\nz[0x77A2] = 'DEAB';\nz[0x77A5] = 'C6B3';\nz[0x77A7] = 'C7C6';\nz[0x77A9] = 'D6F5';\nz[0x77AA] = 'B5C9';\nz[0x77AC] = 'CBB2';\nz[0x77B0] = 'EEAB';\nz[0x77B3] = 'CDAB';\nz[0x77B5] = 'EEAC';\nz[0x77BB] = 'D5B0';\nz[0x77BD] = 'EEAD';\nz[0x77BF] = 'F6C4';\nz[0x77CD] = 'DBC7';\nz[0x77D7] = 'B4A3';\nz[0x77DB] = 'C3AC';\nz[0x77DC] = 'F1E6';\nz[0x77E2] = 'CAB8';\nz[0x77E3] = 'D2D3';\nz[0x77E5] = 'D6AA';\nz[0x77E7] = 'EFF2';\nz[0x77E9] = 'BED8';\nz[0x77EB] = 'BDC3';\nz[0x77EC] = 'EFF3';\nz[0x77ED] = 'B6CC';\nz[0x77EE] = 'B0AB';\nz[0x77F3] = 'CAAF';\nz[0x77F6] = 'EDB6';\nz[0x77F8] = 'EDB7';\nz[0x77FD] = 'CEF9';\nz[0x77FE] = 'B7AF';\nz[0x77FF] = 'BFF3';\nz[0x7800] = 'EDB8';\nz[0x7801] = 'C2EB';\nz[0x7802] = 'C9B0';\nz[0x7809] = 'EDB9';\nz[0x780C] = 'C6F6';\nz[0x780D] = 'BFB3';\nz[0x7811] = 'EDBC';\nz[0x7812] = 'C5F8';\nz[0x7814] = 'D1D0';\nz[0x7816] = 'D7A9';\nz[0x7817] = 'EDBA';\nz[0x7818] = 'EDBB';\nz[0x781A] = 'D1E2';\nz[0x781C] = 'EDBF';\nz[0x781D] = 'EDC0';\nz[0x781F] = 'EDC4';\nz[0x7823] = 'EDC8';\nz[0x7825] = 'EDC6';\nz[0x7826] = 'EDCE';\nz[0x7827] = 'D5E8';\nz[0x7829] = 'EDC9';\nz[0x782C] = 'EDC7';\nz[0x782D] = 'EDBE';\nz[0x7830] = 'C5E9';\nz[0x7834] = 'C6C6';\nz[0x7837] = 'C9E9';\nz[0x7838] = 'D4D2';\nz[0x7839] = 'EDC1';\nz[0x783A] = 'EDC2';\nz[0x783B] = 'EDC3';\nz[0x783C] = 'EDC5';\nz[0x783E] = 'C0F9';\nz[0x7840] = 'B4A1';\nz[0x7845] = 'B9E8';\nz[0x7847] = 'EDD0';\nz[0x784C] = 'EDD1';\nz[0x784E] = 'EDCA';\nz[0x7850] = 'EDCF';\nz[0x7852] = 'CEF8';\nz[0x7855] = 'CBB6';\nz[0x7856] = 'EDCC';\nz[0x7857] = 'EDCD';\nz[0x785D] = 'CFF5';\nz[0x786A] = 'EDD2';\nz[0x786B] = 'C1F2';\nz[0x786C] = 'D3B2';\nz[0x786D] = 'EDCB';\nz[0x786E] = 'C8B7';\nz[0x7877] = 'BCEF';\nz[0x787C] = 'C5F0';\nz[0x7887] = 'EDD6';\nz[0x7889] = 'B5EF';\nz[0x788C] = 'C2B5';\nz[0x788D] = 'B0AD';\nz[0x788E] = 'CBE9';\nz[0x7891] = 'B1AE';\nz[0x7893] = 'EDD4';\nz[0x7897] = 'CDEB';\nz[0x7898] = 'B5E2';\nz[0x789A] = 'EDD5';\nz[0x789B] = 'EDD3';\nz[0x789C] = 'EDD7';\nz[0x789F] = 'B5FA';\nz[0x78A1] = 'EDD8';\nz[0x78A3] = 'EDD9';\nz[0x78A5] = 'EDDC';\nz[0x78A7] = 'B1CC';\nz[0x78B0] = 'C5F6';\nz[0x78B1] = 'BCEE';\nz[0x78B2] = 'EDDA';\nz[0x78B3] = 'CCBC';\nz[0x78B4] = 'B2EA';\nz[0x78B9] = 'EDDB';\nz[0x78BE] = 'C4EB';\nz[0x78C1] = 'B4C5';\nz[0x78C5] = 'B0F5';\nz[0x78C9] = 'EDDF';\nz[0x78CA] = 'C0DA';\nz[0x78CB] = 'B4E8';\nz[0x78D0] = 'C5CD';\nz[0x78D4] = 'EDDD';\nz[0x78D5] = 'BFC4';\nz[0x78D9] = 'EDDE';\nz[0x78E8] = 'C4A5';\nz[0x78EC] = 'EDE0';\nz[0x78F2] = 'EDE1';\nz[0x78F4] = 'EDE3';\nz[0x78F7] = 'C1D7';\nz[0x78FA] = 'BBC7';\nz[0x7901] = 'BDB8';\nz[0x7905] = 'EDE2';\nz[0x7913] = 'EDE4';\nz[0x791E] = 'EDE6';\nz[0x7924] = 'EDE5';\nz[0x7934] = 'EDE7';\nz[0x793A] = 'CABE';\nz[0x793B] = 'ECEA';\nz[0x793C] = 'C0F1';\nz[0x793E] = 'C9E7';\nz[0x7940] = 'ECEB';\nz[0x7941] = 'C6EE';\nz[0x7946] = 'ECEC';\nz[0x7948] = 'C6ED';\nz[0x7949] = 'ECED';\nz[0x7953] = 'ECF0';\nz[0x7956] = 'D7E6';\nz[0x7957] = 'ECF3';\nz[0x795A] = 'ECF1';\nz[0x795B] = 'ECEE';\nz[0x795C] = 'ECEF';\nz[0x795D] = 'D7A3';\nz[0x795E] = 'C9F1';\nz[0x795F] = 'CBEE';\nz[0x7960] = 'ECF4';\nz[0x7962] = 'ECF2';\nz[0x7965] = 'CFE9';\nz[0x7967] = 'ECF6';\nz[0x7968] = 'C6B1';\nz[0x796D] = 'BCC0';\nz[0x796F] = 'ECF5';\nz[0x7977] = 'B5BB';\nz[0x7978] = 'BBF6';\nz[0x797A] = 'ECF7';\nz[0x7980] = 'D9F7';\nz[0x7981] = 'BDFB';\nz[0x7984] = 'C2BB';\nz[0x7985] = 'ECF8';\nz[0x798A] = 'ECF9';\nz[0x798F] = 'B8A3';\nz[0x799A] = 'ECFA';\nz[0x79A7] = 'ECFB';\nz[0x79B3] = 'ECFC';\nz[0x79B9] = 'D3ED';\nz[0x79BA] = 'D8AE';\nz[0x79BB] = 'C0EB';\nz[0x79BD] = 'C7DD';\nz[0x79BE] = 'BACC';\nz[0x79C0] = 'D0E3';\nz[0x79C1] = 'CBBD';\nz[0x79C3] = 'CDBA';\nz[0x79C6] = 'B8D1';\nz[0x79C9] = 'B1FC';\nz[0x79CB] = 'C7EF';\nz[0x79CD] = 'D6D6';\nz[0x79D1] = 'BFC6';\nz[0x79D2] = 'C3EB';\nz[0x79D5] = 'EFF5';\nz[0x79D8] = 'C3D8';\nz[0x79DF] = 'D7E2';\nz[0x79E3] = 'EFF7';\nz[0x79E4] = 'B3D3';\nz[0x79E6] = 'C7D8';\nz[0x79E7] = 'D1ED';\nz[0x79E9] = 'D6C8';\nz[0x79EB] = 'EFF8';\nz[0x79ED] = 'EFF6';\nz[0x79EF] = 'BBFD';\nz[0x79F0] = 'B3C6';\nz[0x79F8] = 'BDD5';\nz[0x79FB] = 'D2C6';\nz[0x79FD] = 'BBE0';\nz[0x7A00] = 'CFA1';\nz[0x7A02] = 'EFFC';\nz[0x7A03] = 'EFFB';\nz[0x7A06] = 'EFF9';\nz[0x7A0B] = 'B3CC';\nz[0x7A0D] = 'C9D4';\nz[0x7A0E] = 'CBB0';\nz[0x7A14] = 'EFFE';\nz[0x7A17] = 'B0DE';\nz[0x7A1A] = 'D6C9';\nz[0x7A1E] = 'EFFD';\nz[0x7A20] = 'B3ED';\nz[0x7A23] = 'F6D5';\nz[0x7A33] = 'CEC8';\nz[0x7A37] = 'F0A2';\nz[0x7A39] = 'F0A1';\nz[0x7A3B] = 'B5BE';\nz[0x7A3C] = 'BCDA';\nz[0x7A3D] = 'BBFC';\nz[0x7A3F] = 'B8E5';\nz[0x7A46] = 'C4C2';\nz[0x7A51] = 'F0A3';\nz[0x7A57] = 'CBEB';\nz[0x7A70] = 'F0A6';\nz[0x7A74] = 'D1A8';\nz[0x7A76] = 'BEBF';\nz[0x7A77] = 'C7EE';\nz[0x7A78] = 'F1B6';\nz[0x7A79] = 'F1B7';\nz[0x7A7A] = 'BFD5';\nz[0x7A7F] = 'B4A9';\nz[0x7A80] = 'F1B8';\nz[0x7A81] = 'CDBB';\nz[0x7A83] = 'C7D4';\nz[0x7A84] = 'D5AD';\nz[0x7A86] = 'F1B9';\nz[0x7A88] = 'F1BA';\nz[0x7A8D] = 'C7CF';\nz[0x7A91] = 'D2A4';\nz[0x7A92] = 'D6CF';\nz[0x7A95] = 'F1BB';\nz[0x7A96] = 'BDD1';\nz[0x7A97] = 'B4B0';\nz[0x7A98] = 'BEBD';\nz[0x7A9C] = 'B4DC';\nz[0x7A9D] = 'CED1';\nz[0x7A9F] = 'BFDF';\nz[0x7AA0] = 'F1BD';\nz[0x7AA5] = 'BFFA';\nz[0x7AA6] = 'F1BC';\nz[0x7AA8] = 'F1BF';\nz[0x7AAC] = 'F1BE';\nz[0x7AAD] = 'F1C0';\nz[0x7AB3] = 'F1C1';\nz[0x7ABF] = 'C1FE';\nz[0x7ACB] = 'C1A2';\nz[0x7AD6] = 'CAFA';\nz[0x7AD9] = 'D5BE';\nz[0x7ADE] = 'BEBA';\nz[0x7ADF] = 'BEB9';\nz[0x7AE0] = 'D5C2';\nz[0x7AE3] = 'BFA2';\nz[0x7AE5] = 'CDAF';\nz[0x7AE6] = 'F1B5';\nz[0x7AED] = 'BDDF';\nz[0x7AEF] = 'B6CB';\nz[0x7AF9] = 'D6F1';\nz[0x7AFA] = 'F3C3';\nz[0x7AFD] = 'F3C4';\nz[0x7AFF] = 'B8CD';\nz[0x7B03] = 'F3C6';\nz[0x7B04] = 'F3C7';\nz[0x7B06] = 'B0CA';\nz[0x7B08] = 'F3C5';\nz[0x7B0A] = 'F3C9';\nz[0x7B0B] = 'CBF1';\nz[0x7B0F] = 'F3CB';\nz[0x7B11] = 'D0A6';\nz[0x7B14] = 'B1CA';\nz[0x7B15] = 'F3C8';\nz[0x7B19] = 'F3CF';\nz[0x7B1B] = 'B5D1';\nz[0x7B1E] = 'F3D7';\nz[0x7B20] = 'F3D2';\nz[0x7B24] = 'F3D4';\nz[0x7B25] = 'F3D3';\nz[0x7B26] = 'B7FB';\nz[0x7B28] = 'B1BF';\nz[0x7B2A] = 'F3CE';\nz[0x7B2B] = 'F3CA';\nz[0x7B2C] = 'B5DA';\nz[0x7B2E] = 'F3D0';\nz[0x7B31] = 'F3D1';\nz[0x7B33] = 'F3D5';\nz[0x7B38] = 'F3CD';\nz[0x7B3A] = 'BCE3';\nz[0x7B3C] = 'C1FD';\nz[0x7B3E] = 'F3D6';\nz[0x7B45] = 'F3DA';\nz[0x7B47] = 'F3CC';\nz[0x7B49] = 'B5C8';\nz[0x7B4B] = 'BDEE';\nz[0x7B4C] = 'F3DC';\nz[0x7B4F] = 'B7A4';\nz[0x7B50] = 'BFF0';\nz[0x7B51] = 'D6FE';\nz[0x7B52] = 'CDB2';\nz[0x7B54] = 'B4F0';\nz[0x7B56] = 'B2DF';\nz[0x7B58] = 'F3D8';\nz[0x7B5A] = 'F3D9';\nz[0x7B5B] = 'C9B8';\nz[0x7B5D] = 'F3DD';\nz[0x7B60] = 'F3DE';\nz[0x7B62] = 'F3E1';\nz[0x7B6E] = 'F3DF';\nz[0x7B71] = 'F3E3';\nz[0x7B72] = 'F3E2';\nz[0x7B75] = 'F3DB';\nz[0x7B77] = 'BFEA';\nz[0x7B79] = 'B3EF';\nz[0x7B7B] = 'F3E0';\nz[0x7B7E] = 'C7A9';\nz[0x7B80] = 'BCF2';\nz[0x7B85] = 'F3EB';\nz[0x7B8D] = 'B9BF';\nz[0x7B90] = 'F3E4';\nz[0x7B94] = 'B2AD';\nz[0x7B95] = 'BBFE';\nz[0x7B97] = 'CBE3';\nz[0x7B9C] = 'F3ED';\nz[0x7B9D] = 'F3E9';\nz[0x7BA1] = 'B9DC';\nz[0x7BA2] = 'F3EE';\nz[0x7BA6] = 'F3E5';\nz[0x7BA7] = 'F3E6';\nz[0x7BA8] = 'F3EA';\nz[0x7BA9] = 'C2E1';\nz[0x7BAA] = 'F3EC';\nz[0x7BAB] = 'F3EF';\nz[0x7BAC] = 'F3E8';\nz[0x7BAD] = 'BCFD';\nz[0x7BB1] = 'CFE4';\nz[0x7BB4] = 'F3F0';\nz[0x7BB8] = 'F3E7';\nz[0x7BC1] = 'F3F2';\nz[0x7BC6] = 'D7AD';\nz[0x7BC7] = 'C6AA';\nz[0x7BCC] = 'F3F3';\nz[0x7BD1] = 'F3F1';\nz[0x7BD3] = 'C2A8';\nz[0x7BD9] = 'B8DD';\nz[0x7BDA] = 'F3F5';\nz[0x7BDD] = 'F3F4';\nz[0x7BE1] = 'B4DB';\nz[0x7BE5] = 'F3F6';\nz[0x7BE6] = 'F3F7';\nz[0x7BEA] = 'F3F8';\nz[0x7BEE] = 'C0BA';\nz[0x7BF1] = 'C0E9';\nz[0x7BF7] = 'C5F1';\nz[0x7BFC] = 'F3FB';\nz[0x7BFE] = 'F3FA';\nz[0x7C07] = 'B4D8';\nz[0x7C0B] = 'F3FE';\nz[0x7C0C] = 'F3F9';\nz[0x7C0F] = 'F3FC';\nz[0x7C16] = 'F3FD';\nz[0x7C1F] = 'F4A1';\nz[0x7C26] = 'F4A3';\nz[0x7C27] = 'BBC9';\nz[0x7C2A] = 'F4A2';\nz[0x7C38] = 'F4A4';\nz[0x7C3F] = 'B2BE';\nz[0x7C40] = 'F4A6';\nz[0x7C41] = 'F4A5';\nz[0x7C4D] = 'BCAE';\nz[0x7C73] = 'C3D7';\nz[0x7C74] = 'D9E1';\nz[0x7C7B] = 'C0E0';\nz[0x7C7C] = 'F4CC';\nz[0x7C7D] = 'D7D1';\nz[0x7C89] = 'B7DB';\nz[0x7C91] = 'F4CE';\nz[0x7C92] = 'C1A3';\nz[0x7C95] = 'C6C9';\nz[0x7C97] = 'B4D6';\nz[0x7C98] = 'D5B3';\nz[0x7C9C] = 'F4D0';\nz[0x7C9D] = 'F4CF';\nz[0x7C9E] = 'F4D1';\nz[0x7C9F] = 'CBDA';\nz[0x7CA2] = 'F4D2';\nz[0x7CA4] = 'D4C1';\nz[0x7CA5] = 'D6E0';\nz[0x7CAA] = 'B7E0';\nz[0x7CAE] = 'C1B8';\nz[0x7CB1] = 'C1BB';\nz[0x7CB2] = 'F4D3';\nz[0x7CB3] = 'BEAC';\nz[0x7CB9] = 'B4E2';\nz[0x7CBC] = 'F4D4';\nz[0x7CBD] = 'F4D5';\nz[0x7CBE] = 'BEAB';\nz[0x7CC1] = 'F4D6';\nz[0x7CC5] = 'F4DB';\nz[0x7CC7] = 'F4D7';\nz[0x7CC8] = 'F4DA';\nz[0x7CCA] = 'BAFD';\nz[0x7CCC] = 'F4D8';\nz[0x7CCD] = 'F4D9';\nz[0x7CD5] = 'B8E2';\nz[0x7CD6] = 'CCC7';\nz[0x7CD7] = 'F4DC';\nz[0x7CD9] = 'B2DA';\nz[0x7CDC] = 'C3D3';\nz[0x7CDF] = 'D4E3';\nz[0x7CE0] = 'BFB7';\nz[0x7CE8] = 'F4DD';\nz[0x7CEF] = 'C5B4';\nz[0x7CF8] = 'F4E9';\nz[0x7CFB] = 'CFB5';\nz[0x7D0A] = 'CEC9';\nz[0x7D20] = 'CBD8';\nz[0x7D22] = 'CBF7';\nz[0x7D27] = 'BDF4';\nz[0x7D2B] = 'D7CF';\nz[0x7D2F] = 'C0DB';\nz[0x7D6E] = 'D0F5';\nz[0x7D77] = 'F4EA';\nz[0x7DA6] = 'F4EB';\nz[0x7DAE] = 'F4EC';\nz[0x7E3B] = 'F7E3';\nz[0x7E41] = 'B7B1';\nz[0x7E47] = 'F4ED';\nz[0x7E82] = 'D7EB';\nz[0x7E9B] = 'F4EE';\nz[0x7E9F] = 'E6F9';\nz[0x7EA0] = 'BEC0';\nz[0x7EA1] = 'E6FA';\nz[0x7EA2] = 'BAEC';\nz[0x7EA3] = 'E6FB';\nz[0x7EA4] = 'CFCB';\nz[0x7EA5] = 'E6FC';\nz[0x7EA6] = 'D4BC';\nz[0x7EA7] = 'BCB6';\nz[0x7EA8] = 'E6FD';\nz[0x7EA9] = 'E6FE';\nz[0x7EAA] = 'BCCD';\nz[0x7EAB] = 'C8D2';\nz[0x7EAC] = 'CEB3';\nz[0x7EAD] = 'E7A1';\nz[0x7EAF] = 'B4BF';\nz[0x7EB0] = 'E7A2';\nz[0x7EB1] = 'C9B4';\nz[0x7EB2] = 'B8D9';\nz[0x7EB3] = 'C4C9';\nz[0x7EB5] = 'D7DD';\nz[0x7EB6] = 'C2DA';\nz[0x7EB7] = 'B7D7';\nz[0x7EB8] = 'D6BD';\nz[0x7EB9] = 'CEC6';\nz[0x7EBA] = 'B7C4';\nz[0x7EBD] = 'C5A6';\nz[0x7EBE] = 'E7A3';\nz[0x7EBF] = 'CFDF';\nz[0x7EC0] = 'E7A4';\nz[0x7EC1] = 'E7A5';\nz[0x7EC2] = 'E7A6';\nz[0x7EC3] = 'C1B7';\nz[0x7EC4] = 'D7E9';\nz[0x7EC5] = 'C9F0';\nz[0x7EC6] = 'CFB8';\nz[0x7EC7] = 'D6AF';\nz[0x7EC8] = 'D6D5';\nz[0x7EC9] = 'E7A7';\nz[0x7ECA] = 'B0ED';\nz[0x7ECB] = 'E7A8';\nz[0x7ECC] = 'E7A9';\nz[0x7ECD] = 'C9DC';\nz[0x7ECE] = 'D2EF';\nz[0x7ECF] = 'BEAD';\nz[0x7ED0] = 'E7AA';\nz[0x7ED1] = 'B0F3';\nz[0x7ED2] = 'C8DE';\nz[0x7ED3] = 'BDE1';\nz[0x7ED4] = 'E7AB';\nz[0x7ED5] = 'C8C6';\nz[0x7ED7] = 'E7AC';\nz[0x7ED8] = 'BBE6';\nz[0x7ED9] = 'B8F8';\nz[0x7EDA] = 'D1A4';\nz[0x7EDB] = 'E7AD';\nz[0x7EDC] = 'C2E7';\nz[0x7EDD] = 'BEF8';\nz[0x7EDE] = 'BDCA';\nz[0x7EDF] = 'CDB3';\nz[0x7EE0] = 'E7AE';\nz[0x7EE1] = 'E7AF';\nz[0x7EE2] = 'BEEE';\nz[0x7EE3] = 'D0E5';\nz[0x7EE5] = 'CBE7';\nz[0x7EE6] = 'CCD0';\nz[0x7EE7] = 'BCCC';\nz[0x7EE8] = 'E7B0';\nz[0x7EE9] = 'BCA8';\nz[0x7EEA] = 'D0F7';\nz[0x7EEB] = 'E7B1';\nz[0x7EED] = 'D0F8';\nz[0x7EEE] = 'E7B2';\nz[0x7EEF] = 'E7B3';\nz[0x7EF0] = 'B4C2';\nz[0x7EF1] = 'E7B4';\nz[0x7EF2] = 'E7B5';\nz[0x7EF3] = 'C9FE';\nz[0x7EF4] = 'CEAC';\nz[0x7EF5] = 'C3E0';\nz[0x7EF6] = 'E7B7';\nz[0x7EF7] = 'B1C1';\nz[0x7EF8] = 'B3F1';\nz[0x7EFA] = 'E7B8';\nz[0x7EFB] = 'E7B9';\nz[0x7EFC] = 'D7DB';\nz[0x7EFD] = 'D5C0';\nz[0x7EFE] = 'E7BA';\nz[0x7EFF] = 'C2CC';\nz[0x7F00] = 'D7BA';\nz[0x7F01] = 'E7BB';\nz[0x7F02] = 'E7BC';\nz[0x7F03] = 'E7BD';\nz[0x7F04] = 'BCEA';\nz[0x7F05] = 'C3E5';\nz[0x7F06] = 'C0C2';\nz[0x7F07] = 'E7BE';\nz[0x7F08] = 'E7BF';\nz[0x7F09] = 'BCA9';\nz[0x7F0B] = 'E7C0';\nz[0x7F0C] = 'E7C1';\nz[0x7F0D] = 'E7B6';\nz[0x7F0E] = 'B6D0';\nz[0x7F0F] = 'E7C2';\nz[0x7F11] = 'E7C3';\nz[0x7F12] = 'E7C4';\nz[0x7F13] = 'BBBA';\nz[0x7F14] = 'B5DE';\nz[0x7F15] = 'C2C6';\nz[0x7F16] = 'B1E0';\nz[0x7F17] = 'E7C5';\nz[0x7F18] = 'D4B5';\nz[0x7F19] = 'E7C6';\nz[0x7F1A] = 'B8BF';\nz[0x7F1B] = 'E7C8';\nz[0x7F1C] = 'E7C7';\nz[0x7F1D] = 'B7EC';\nz[0x7F1F] = 'E7C9';\nz[0x7F20] = 'B2F8';\nz[0x7F21] = 'E7CA';\nz[0x7F22] = 'E7CB';\nz[0x7F23] = 'E7CC';\nz[0x7F24] = 'E7CD';\nz[0x7F25] = 'E7CE';\nz[0x7F26] = 'E7CF';\nz[0x7F27] = 'E7D0';\nz[0x7F28] = 'D3A7';\nz[0x7F29] = 'CBF5';\nz[0x7F2A] = 'E7D1';\nz[0x7F2B] = 'E7D2';\nz[0x7F2C] = 'E7D3';\nz[0x7F2D] = 'E7D4';\nz[0x7F2E] = 'C9C9';\nz[0x7F2F] = 'E7D5';\nz[0x7F30] = 'E7D6';\nz[0x7F31] = 'E7D7';\nz[0x7F32] = 'E7D8';\nz[0x7F33] = 'E7D9';\nz[0x7F34] = 'BDC9';\nz[0x7F35] = 'E7DA';\nz[0x7F36] = 'F3BE';\nz[0x7F38] = 'B8D7';\nz[0x7F3A] = 'C8B1';\nz[0x7F42] = 'F3BF';\nz[0x7F44] = 'F3C0';\nz[0x7F45] = 'F3C1';\nz[0x7F50] = 'B9DE';\nz[0x7F51] = 'CDF8';\nz[0x7F54] = 'D8E8';\nz[0x7F55] = 'BAB1';\nz[0x7F57] = 'C2DE';\nz[0x7F58] = 'EEB7';\nz[0x7F5A] = 'B7A3';\nz[0x7F5F] = 'EEB9';\nz[0x7F61] = 'EEB8';\nz[0x7F62] = 'B0D5';\nz[0x7F68] = 'EEBB';\nz[0x7F69] = 'D5D6';\nz[0x7F6A] = 'D7EF';\nz[0x7F6E] = 'D6C3';\nz[0x7F71] = 'EEBD';\nz[0x7F72] = 'CAF0';\nz[0x7F74] = 'EEBC';\nz[0x7F79] = 'EEBE';\nz[0x7F7E] = 'EEC0';\nz[0x7F81] = 'EEBF';\nz[0x7F8A] = 'D1F2';\nz[0x7F8C] = 'C7BC';\nz[0x7F8E] = 'C3C0';\nz[0x7F94] = 'B8E1';\nz[0x7F9A] = 'C1E7';\nz[0x7F9D] = 'F4C6';\nz[0x7F9E] = 'D0DF';\nz[0x7F9F] = 'F4C7';\nz[0x7FA1] = 'CFDB';\nz[0x7FA4] = 'C8BA';\nz[0x7FA7] = 'F4C8';\nz[0x7FAF] = 'F4C9';\nz[0x7FB0] = 'F4CA';\nz[0x7FB2] = 'F4CB';\nz[0x7FB8] = 'D9FA';\nz[0x7FB9] = 'B8FE';\nz[0x7FBC] = 'E5F1';\nz[0x7FBD] = 'D3F0';\nz[0x7FBF] = 'F4E0';\nz[0x7FC1] = 'CECC';\nz[0x7FC5] = 'B3E1';\nz[0x7FCA] = 'F1B4';\nz[0x7FCC] = 'D2EE';\nz[0x7FCE] = 'F4E1';\nz[0x7FD4] = 'CFE8';\nz[0x7FD5] = 'F4E2';\nz[0x7FD8] = 'C7CC';\nz[0x7FDF] = 'B5D4';\nz[0x7FE0] = 'B4E4';\nz[0x7FE1] = 'F4E4';\nz[0x7FE5] = 'F4E3';\nz[0x7FE6] = 'F4E5';\nz[0x7FE9] = 'F4E6';\nz[0x7FEE] = 'F4E7';\nz[0x7FF0] = 'BAB2';\nz[0x7FF1] = 'B0BF';\nz[0x7FF3] = 'F4E8';\nz[0x7FFB] = 'B7AD';\nz[0x7FFC] = 'D2ED';\nz[0x8000] = 'D2AB';\nz[0x8001] = 'C0CF';\nz[0x8003] = 'BFBC';\nz[0x8004] = 'EBA3';\nz[0x8005] = 'D5DF';\nz[0x8006] = 'EAC8';\nz[0x800B] = 'F1F3';\nz[0x800C] = 'B6F8';\nz[0x800D] = 'CBA3';\nz[0x8010] = 'C4CD';\nz[0x8012] = 'F1E7';\nz[0x8014] = 'F1E8';\nz[0x8015] = 'B8FB';\nz[0x8016] = 'F1E9';\nz[0x8017] = 'BAC4';\nz[0x8018] = 'D4C5';\nz[0x8019] = 'B0D2';\nz[0x801C] = 'F1EA';\nz[0x8020] = 'F1EB';\nz[0x8022] = 'F1EC';\nz[0x8025] = 'F1ED';\nz[0x8026] = 'F1EE';\nz[0x8027] = 'F1EF';\nz[0x8028] = 'F1F1';\nz[0x8029] = 'F1F0';\nz[0x802A] = 'C5D5';\nz[0x8031] = 'F1F2';\nz[0x8033] = 'B6FA';\nz[0x8035] = 'F1F4';\nz[0x8036] = 'D2AE';\nz[0x8037] = 'DEC7';\nz[0x8038] = 'CBCA';\nz[0x803B] = 'B3DC';\nz[0x803D] = 'B5A2';\nz[0x803F] = 'B9A2';\nz[0x8042] = 'C4F4';\nz[0x8043] = 'F1F5';\nz[0x8046] = 'F1F6';\nz[0x804A] = 'C1C4';\nz[0x804B] = 'C1FB';\nz[0x804C] = 'D6B0';\nz[0x804D] = 'F1F7';\nz[0x8052] = 'F1F8';\nz[0x8054] = 'C1AA';\nz[0x8058] = 'C6B8';\nz[0x805A] = 'BEDB';\nz[0x8069] = 'F1F9';\nz[0x806A] = 'B4CF';\nz[0x8071] = 'F1FA';\nz[0x807F] = 'EDB2';\nz[0x8080] = 'EDB1';\nz[0x8083] = 'CBE0';\nz[0x8084] = 'D2DE';\nz[0x8086] = 'CBC1';\nz[0x8087] = 'D5D8';\nz[0x8089] = 'C8E2';\nz[0x808B] = 'C0DF';\nz[0x808C] = 'BCA1';\nz[0x8093] = 'EBC1';\nz[0x8096] = 'D0A4';\nz[0x8098] = 'D6E2';\nz[0x809A] = 'B6C7';\nz[0x809B] = 'B8D8';\nz[0x809C] = 'EBC0';\nz[0x809D] = 'B8CE';\nz[0x809F] = 'EBBF';\nz[0x80A0] = 'B3A6';\nz[0x80A1] = 'B9C9';\nz[0x80A2] = 'D6AB';\nz[0x80A4] = 'B7F4';\nz[0x80A5] = 'B7CA';\nz[0x80A9] = 'BCE7';\nz[0x80AA] = 'B7BE';\nz[0x80AB] = 'EBC6';\nz[0x80AD] = 'EBC7';\nz[0x80AE] = 'B0B9';\nz[0x80AF] = 'BFCF';\nz[0x80B1] = 'EBC5';\nz[0x80B2] = 'D3FD';\nz[0x80B4] = 'EBC8';\nz[0x80B7] = 'EBC9';\nz[0x80BA] = 'B7CE';\nz[0x80BC] = 'EBC2';\nz[0x80BD] = 'EBC4';\nz[0x80BE] = 'C9F6';\nz[0x80BF] = 'D6D7';\nz[0x80C0] = 'D5CD';\nz[0x80C1] = 'D0B2';\nz[0x80C2] = 'EBCF';\nz[0x80C3] = 'CEB8';\nz[0x80C4] = 'EBD0';\nz[0x80C6] = 'B5A8';\nz[0x80CC] = 'B1B3';\nz[0x80CD] = 'EBD2';\nz[0x80CE] = 'CCA5';\nz[0x80D6] = 'C5D6';\nz[0x80D7] = 'EBD3';\nz[0x80D9] = 'EBD1';\nz[0x80DA] = 'C5DF';\nz[0x80DB] = 'EBCE';\nz[0x80DC] = 'CAA4';\nz[0x80DD] = 'EBD5';\nz[0x80DE] = 'B0FB';\nz[0x80E1] = 'BAFA';\nz[0x80E4] = 'D8B7';\nz[0x80E5] = 'F1E3';\nz[0x80E7] = 'EBCA';\nz[0x80E8] = 'EBCB';\nz[0x80E9] = 'EBCC';\nz[0x80EA] = 'EBCD';\nz[0x80EB] = 'EBD6';\nz[0x80EC] = 'E6C0';\nz[0x80ED] = 'EBD9';\nz[0x80EF] = 'BFE8';\nz[0x80F0] = 'D2C8';\nz[0x80F1] = 'EBD7';\nz[0x80F2] = 'EBDC';\nz[0x80F3] = 'B8EC';\nz[0x80F4] = 'EBD8';\nz[0x80F6] = 'BDBA';\nz[0x80F8] = 'D0D8';\nz[0x80FA] = 'B0B7';\nz[0x80FC] = 'EBDD';\nz[0x80FD] = 'C4DC';\nz[0x8102] = 'D6AC';\nz[0x8106] = 'B4E0';\nz[0x8109] = 'C2F6';\nz[0x810A] = 'BCB9';\nz[0x810D] = 'EBDA';\nz[0x810E] = 'EBDB';\nz[0x810F] = 'D4E0';\nz[0x8110] = 'C6EA';\nz[0x8111] = 'C4D4';\nz[0x8112] = 'EBDF';\nz[0x8113] = 'C5A7';\nz[0x8114] = 'D9F5';\nz[0x8116] = 'B2B1';\nz[0x8118] = 'EBE4';\nz[0x811A] = 'BDC5';\nz[0x811E] = 'EBE2';\nz[0x812C] = 'EBE3';\nz[0x812F] = 'B8AC';\nz[0x8131] = 'CDD1';\nz[0x8132] = 'EBE5';\nz[0x8136] = 'EBE1';\nz[0x8138] = 'C1B3';\nz[0x813E] = 'C6A2';\nz[0x8146] = 'CCF3';\nz[0x8148] = 'EBE6';\nz[0x814A] = 'C0B0';\nz[0x814B] = 'D2B8';\nz[0x814C] = 'EBE7';\nz[0x8150] = 'B8AF';\nz[0x8151] = 'B8AD';\nz[0x8153] = 'EBE8';\nz[0x8154] = 'C7BB';\nz[0x8155] = 'CDF3';\nz[0x8159] = 'EBEA';\nz[0x815A] = 'EBEB';\nz[0x8160] = 'EBED';\nz[0x8165] = 'D0C8';\nz[0x8167] = 'EBF2';\nz[0x8169] = 'EBEE';\nz[0x816D] = 'EBF1';\nz[0x816E] = 'C8F9';\nz[0x8170] = 'D1FC';\nz[0x8171] = 'EBEC';\nz[0x8174] = 'EBE9';\nz[0x8179] = 'B8B9';\nz[0x817A] = 'CFD9';\nz[0x817B] = 'C4E5';\nz[0x817C] = 'EBEF';\nz[0x817D] = 'EBF0';\nz[0x817E] = 'CCDA';\nz[0x817F] = 'CDC8';\nz[0x8180] = 'B0F2';\nz[0x8182] = 'EBF6';\nz[0x8188] = 'EBF5';\nz[0x818A] = 'B2B2';\nz[0x818F] = 'B8E0';\nz[0x8191] = 'EBF7';\nz[0x8198] = 'B1EC';\nz[0x819B] = 'CCC5';\nz[0x819C] = 'C4A4';\nz[0x819D] = 'CFA5';\nz[0x81A3] = 'EBF9';\nz[0x81A6] = 'ECA2';\nz[0x81A8] = 'C5F2';\nz[0x81AA] = 'EBFA';\nz[0x81B3] = 'C9C5';\nz[0x81BA] = 'E2DF';\nz[0x81BB] = 'EBFE';\nz[0x81C0] = 'CDCE';\nz[0x81C1] = 'ECA1';\nz[0x81C2] = 'B1DB';\nz[0x81C3] = 'D3B7';\nz[0x81C6] = 'D2DC';\nz[0x81CA] = 'EBFD';\nz[0x81CC] = 'EBFB';\nz[0x81E3] = 'B3BC';\nz[0x81E7] = 'EAB0';\nz[0x81EA] = 'D7D4';\nz[0x81EC] = 'F4AB';\nz[0x81ED] = 'B3F4';\nz[0x81F3] = 'D6C1';\nz[0x81F4] = 'D6C2';\nz[0x81FB] = 'D5E9';\nz[0x81FC] = 'BECA';\nz[0x81FE] = 'F4A7';\nz[0x8200] = 'D2A8';\nz[0x8201] = 'F4A8';\nz[0x8202] = 'F4A9';\nz[0x8204] = 'F4AA';\nz[0x8205] = 'BECB';\nz[0x8206] = 'D3DF';\nz[0x820C] = 'C9E0';\nz[0x820D] = 'C9E1';\nz[0x8210] = 'F3C2';\nz[0x8212] = 'CAE6';\nz[0x8214] = 'CCF2';\nz[0x821B] = 'E2B6';\nz[0x821C] = 'CBB4';\nz[0x821E] = 'CEE8';\nz[0x821F] = 'D6DB';\nz[0x8221] = 'F4AD';\nz[0x8222] = 'F4AE';\nz[0x8223] = 'F4AF';\nz[0x8228] = 'F4B2';\nz[0x822A] = 'BABD';\nz[0x822B] = 'F4B3';\nz[0x822C] = 'B0E3';\nz[0x822D] = 'F4B0';\nz[0x822F] = 'F4B1';\nz[0x8230] = 'BDA2';\nz[0x8231] = 'B2D5';\nz[0x8233] = 'F4B6';\nz[0x8234] = 'F4B7';\nz[0x8235] = 'B6E6';\nz[0x8236] = 'B2B0';\nz[0x8237] = 'CFCF';\nz[0x8238] = 'F4B4';\nz[0x8239] = 'B4AC';\nz[0x823B] = 'F4B5';\nz[0x823E] = 'F4B8';\nz[0x8244] = 'F4B9';\nz[0x8247] = 'CDA7';\nz[0x8249] = 'F4BA';\nz[0x824B] = 'F4BB';\nz[0x824F] = 'F4BC';\nz[0x8258] = 'CBD2';\nz[0x825A] = 'F4BD';\nz[0x825F] = 'F4BE';\nz[0x8268] = 'F4BF';\nz[0x826E] = 'F4DE';\nz[0x826F] = 'C1BC';\nz[0x8270] = 'BCE8';\nz[0x8272] = 'C9AB';\nz[0x8273] = 'D1DE';\nz[0x8274] = 'E5F5';\nz[0x8279] = 'DCB3';\nz[0x827A] = 'D2D5';\nz[0x827D] = 'DCB4';\nz[0x827E] = 'B0AC';\nz[0x827F] = 'DCB5';\nz[0x8282] = 'BDDA';\nz[0x8284] = 'DCB9';\nz[0x8288] = 'D8C2';\nz[0x828A] = 'DCB7';\nz[0x828B] = 'D3F3';\nz[0x828D] = 'C9D6';\nz[0x828E] = 'DCBA';\nz[0x828F] = 'DCB6';\nz[0x8291] = 'DCBB';\nz[0x8292] = 'C3A2';\nz[0x8297] = 'DCBC';\nz[0x8298] = 'DCC5';\nz[0x8299] = 'DCBD';\nz[0x829C] = 'CEDF';\nz[0x829D] = 'D6A5';\nz[0x829F] = 'DCCF';\nz[0x82A1] = 'DCCD';\nz[0x82A4] = 'DCD2';\nz[0x82A5] = 'BDE6';\nz[0x82A6] = 'C2AB';\nz[0x82A8] = 'DCB8';\nz[0x82A9] = 'DCCB';\nz[0x82AA] = 'DCCE';\nz[0x82AB] = 'DCBE';\nz[0x82AC] = 'B7D2';\nz[0x82AD] = 'B0C5';\nz[0x82AE] = 'DCC7';\nz[0x82AF] = 'D0BE';\nz[0x82B0] = 'DCC1';\nz[0x82B1] = 'BBA8';\nz[0x82B3] = 'B7BC';\nz[0x82B4] = 'DCCC';\nz[0x82B7] = 'DCC6';\nz[0x82B8] = 'DCBF';\nz[0x82B9] = 'C7DB';\nz[0x82BD] = 'D1BF';\nz[0x82BE] = 'DCC0';\nz[0x82C1] = 'DCCA';\nz[0x82C4] = 'DCD0';\nz[0x82C7] = 'CEAD';\nz[0x82C8] = 'DCC2';\nz[0x82CA] = 'DCC3';\nz[0x82CB] = 'DCC8';\nz[0x82CC] = 'DCC9';\nz[0x82CD] = 'B2D4';\nz[0x82CE] = 'DCD1';\nz[0x82CF] = 'CBD5';\nz[0x82D1] = 'D4B7';\nz[0x82D2] = 'DCDB';\nz[0x82D3] = 'DCDF';\nz[0x82D4] = 'CCA6';\nz[0x82D5] = 'DCE6';\nz[0x82D7] = 'C3E7';\nz[0x82D8] = 'DCDC';\nz[0x82DB] = 'BFC1';\nz[0x82DC] = 'DCD9';\nz[0x82DE] = 'B0FA';\nz[0x82DF] = 'B9B6';\nz[0x82E0] = 'DCE5';\nz[0x82E1] = 'DCD3';\nz[0x82E3] = 'DCC4';\nz[0x82E4] = 'DCD6';\nz[0x82E5] = 'C8F4';\nz[0x82E6] = 'BFE0';\nz[0x82EB] = 'C9BB';\nz[0x82EF] = 'B1BD';\nz[0x82F1] = 'D3A2';\nz[0x82F4] = 'DCDA';\nz[0x82F7] = 'DCD5';\nz[0x82F9] = 'C6BB';\nz[0x82FB] = 'DCDE';\nz[0x8301] = 'D7C2';\nz[0x8302] = 'C3AF';\nz[0x8303] = 'B7B6';\nz[0x8304] = 'C7D1';\nz[0x8305] = 'C3A9';\nz[0x8306] = 'DCE2';\nz[0x8307] = 'DCD8';\nz[0x8308] = 'DCEB';\nz[0x8309] = 'DCD4';\nz[0x830C] = 'DCDD';\nz[0x830E] = 'BEA5';\nz[0x830F] = 'DCD7';\nz[0x8311] = 'DCE0';\nz[0x8314] = 'DCE3';\nz[0x8315] = 'DCE4';\nz[0x8317] = 'DCF8';\nz[0x831A] = 'DCE1';\nz[0x831B] = 'DDA2';\nz[0x831C] = 'DCE7';\nz[0x8327] = 'BCEB';\nz[0x8328] = 'B4C4';\nz[0x832B] = 'C3A3';\nz[0x832C] = 'B2E7';\nz[0x832D] = 'DCFA';\nz[0x832F] = 'DCF2';\nz[0x8331] = 'DCEF';\nz[0x8333] = 'DCFC';\nz[0x8334] = 'DCEE';\nz[0x8335] = 'D2F0';\nz[0x8336] = 'B2E8';\nz[0x8338] = 'C8D7';\nz[0x8339] = 'C8E3';\nz[0x833A] = 'DCFB';\nz[0x833C] = 'DCED';\nz[0x8340] = 'DCF7';\nz[0x8343] = 'DCF5';\nz[0x8346] = 'BEA3';\nz[0x8347] = 'DCF4';\nz[0x8349] = 'B2DD';\nz[0x834F] = 'DCF3';\nz[0x8350] = 'BCF6';\nz[0x8351] = 'DCE8';\nz[0x8352] = 'BBC4';\nz[0x8354] = 'C0F3';\nz[0x835A] = 'BCD4';\nz[0x835B] = 'DCE9';\nz[0x835C] = 'DCEA';\nz[0x835E] = 'DCF1';\nz[0x835F] = 'DCF6';\nz[0x8360] = 'DCF9';\nz[0x8361] = 'B5B4';\nz[0x8363] = 'C8D9';\nz[0x8364] = 'BBE7';\nz[0x8365] = 'DCFE';\nz[0x8366] = 'DCFD';\nz[0x8367] = 'D3AB';\nz[0x8368] = 'DDA1';\nz[0x8369] = 'DDA3';\nz[0x836A] = 'DDA5';\nz[0x836B] = 'D2F1';\nz[0x836C] = 'DDA4';\nz[0x836D] = 'DDA6';\nz[0x836E] = 'DDA7';\nz[0x836F] = 'D2A9';\nz[0x8377] = 'BAC9';\nz[0x8378] = 'DDA9';\nz[0x837B] = 'DDB6';\nz[0x837C] = 'DDB1';\nz[0x837D] = 'DDB4';\nz[0x8385] = 'DDB0';\nz[0x8386] = 'C6CE';\nz[0x8389] = 'C0F2';\nz[0x838E] = 'C9AF';\nz[0x8392] = 'DCEC';\nz[0x8393] = 'DDAE';\nz[0x8398] = 'DDB7';\nz[0x839B] = 'DCF0';\nz[0x839C] = 'DDAF';\nz[0x839E] = 'DDB8';\nz[0x83A0] = 'DDAC';\nz[0x83A8] = 'DDB9';\nz[0x83A9] = 'DDB3';\nz[0x83AA] = 'DDAD';\nz[0x83AB] = 'C4AA';\nz[0x83B0] = 'DDA8';\nz[0x83B1] = 'C0B3';\nz[0x83B2] = 'C1AB';\nz[0x83B3] = 'DDAA';\nz[0x83B4] = 'DDAB';\nz[0x83B6] = 'DDB2';\nz[0x83B7] = 'BBF1';\nz[0x83B8] = 'DDB5';\nz[0x83B9] = 'D3A8';\nz[0x83BA] = 'DDBA';\nz[0x83BC] = 'DDBB';\nz[0x83BD] = 'C3A7';\nz[0x83C0] = 'DDD2';\nz[0x83C1] = 'DDBC';\nz[0x83C5] = 'DDD1';\nz[0x83C7] = 'B9BD';\nz[0x83CA] = 'BED5';\nz[0x83CC] = 'BEFA';\nz[0x83CF] = 'BACA';\nz[0x83D4] = 'DDCA';\nz[0x83D6] = 'DDC5';\nz[0x83D8] = 'DDBF';\nz[0x83DC] = 'B2CB';\nz[0x83DD] = 'DDC3';\nz[0x83DF] = 'DDCB';\nz[0x83E0] = 'B2A4';\nz[0x83E1] = 'DDD5';\nz[0x83E5] = 'DDBE';\nz[0x83E9] = 'C6D0';\nz[0x83EA] = 'DDD0';\nz[0x83F0] = 'DDD4';\nz[0x83F1] = 'C1E2';\nz[0x83F2] = 'B7C6';\nz[0x83F8] = 'DDCE';\nz[0x83F9] = 'DDCF';\nz[0x83FD] = 'DDC4';\nz[0x8401] = 'DDBD';\nz[0x8403] = 'DDCD';\nz[0x8404] = 'CCD1';\nz[0x8406] = 'DDC9';\nz[0x840B] = 'DDC2';\nz[0x840C] = 'C3C8';\nz[0x840D] = 'C6BC';\nz[0x840E] = 'CEAE';\nz[0x840F] = 'DDCC';\nz[0x8411] = 'DDC8';\nz[0x8418] = 'DDC1';\nz[0x841C] = 'DDC6';\nz[0x841D] = 'C2DC';\nz[0x8424] = 'D3A9';\nz[0x8425] = 'D3AA';\nz[0x8426] = 'DDD3';\nz[0x8427] = 'CFF4';\nz[0x8428] = 'C8F8';\nz[0x8431] = 'DDE6';\nz[0x8438] = 'DDC7';\nz[0x843C] = 'DDE0';\nz[0x843D] = 'C2E4';\nz[0x8446] = 'DDE1';\nz[0x8451] = 'DDD7';\nz[0x8457] = 'D6F8';\nz[0x8459] = 'DDD9';\nz[0x845A] = 'DDD8';\nz[0x845B] = 'B8F0';\nz[0x845C] = 'DDD6';\nz[0x8461] = 'C6CF';\nz[0x8463] = 'B6AD';\nz[0x8469] = 'DDE2';\nz[0x846B] = 'BAF9';\nz[0x846C] = 'D4E1';\nz[0x846D] = 'DDE7';\nz[0x8471] = 'B4D0';\nz[0x8473] = 'DDDA';\nz[0x8475] = 'BFFB';\nz[0x8476] = 'DDE3';\nz[0x8478] = 'DDDF';\nz[0x847A] = 'DDDD';\nz[0x8482] = 'B5D9';\nz[0x8487] = 'DDDB';\nz[0x8488] = 'DDDC';\nz[0x8489] = 'DDDE';\nz[0x848B] = 'BDAF';\nz[0x848C] = 'DDE4';\nz[0x848E] = 'DDE5';\nz[0x8497] = 'DDF5';\nz[0x8499] = 'C3C9';\nz[0x849C] = 'CBE2';\nz[0x84A1] = 'DDF2';\nz[0x84AF] = 'D8E1';\nz[0x84B2] = 'C6D1';\nz[0x84B4] = 'DDF4';\nz[0x84B8] = 'D5F4';\nz[0x84B9] = 'DDF3';\nz[0x84BA] = 'DDF0';\nz[0x84BD] = 'DDEC';\nz[0x84BF] = 'DDEF';\nz[0x84C1] = 'DDE8';\nz[0x84C4] = 'D0EE';\nz[0x84C9] = 'C8D8';\nz[0x84CA] = 'DDEE';\nz[0x84CD] = 'DDE9';\nz[0x84D0] = 'DDEA';\nz[0x84D1] = 'CBF2';\nz[0x84D3] = 'DDED';\nz[0x84D6] = 'B1CD';\nz[0x84DD] = 'C0B6';\nz[0x84DF] = 'BCBB';\nz[0x84E0] = 'DDF1';\nz[0x84E3] = 'DDF7';\nz[0x84E5] = 'DDF6';\nz[0x84E6] = 'DDEB';\nz[0x84EC] = 'C5EE';\nz[0x84F0] = 'DDFB';\nz[0x84FC] = 'DEA4';\nz[0x84FF] = 'DEA3';\nz[0x850C] = 'DDF8';\nz[0x8511] = 'C3EF';\nz[0x8513] = 'C2FB';\nz[0x8517] = 'D5E1';\nz[0x851A] = 'CEB5';\nz[0x851F] = 'DDFD';\nz[0x8521] = 'B2CC';\nz[0x852B] = 'C4E8';\nz[0x852C] = 'CADF';\nz[0x8537] = 'C7BE';\nz[0x8538] = 'DDFA';\nz[0x8539] = 'DDFC';\nz[0x853A] = 'DDFE';\nz[0x853B] = 'DEA2';\nz[0x853C] = 'B0AA';\nz[0x853D] = 'B1CE';\nz[0x8543] = 'DEAC';\nz[0x8548] = 'DEA6';\nz[0x8549] = 'BDB6';\nz[0x854A] = 'C8EF';\nz[0x8556] = 'DEA1';\nz[0x8559] = 'DEA5';\nz[0x855E] = 'DEA9';\nz[0x8564] = 'DEA8';\nz[0x8568] = 'DEA7';\nz[0x8572] = 'DEAD';\nz[0x8574] = 'D4CC';\nz[0x8579] = 'DEB3';\nz[0x857A] = 'DEAA';\nz[0x857B] = 'DEAE';\nz[0x857E] = 'C0D9';\nz[0x8584] = 'B1A1';\nz[0x8585] = 'DEB6';\nz[0x8587] = 'DEB1';\nz[0x858F] = 'DEB2';\nz[0x859B] = 'D1A6';\nz[0x859C] = 'DEB5';\nz[0x85A4] = 'DEAF';\nz[0x85A8] = 'DEB0';\nz[0x85AA] = 'D0BD';\nz[0x85AE] = 'DEB4';\nz[0x85AF] = 'CAED';\nz[0x85B0] = 'DEB9';\nz[0x85B7] = 'DEB8';\nz[0x85B9] = 'DEB7';\nz[0x85C1] = 'DEBB';\nz[0x85C9] = 'BDE5';\nz[0x85CF] = 'B2D8';\nz[0x85D0] = 'C3EA';\nz[0x85D3] = 'DEBA';\nz[0x85D5] = 'C5BA';\nz[0x85DC] = 'DEBC';\nz[0x85E4] = 'CCD9';\nz[0x85E9] = 'B7AA';\nz[0x85FB] = 'D4E5';\nz[0x85FF] = 'DEBD';\nz[0x8605] = 'DEBF';\nz[0x8611] = 'C4A2';\nz[0x8616] = 'DEC1';\nz[0x8627] = 'DEBE';\nz[0x8629] = 'DEC0';\nz[0x8638] = 'D5BA';\nz[0x863C] = 'DEC2';\nz[0x864D] = 'F2AE';\nz[0x864E] = 'BBA2';\nz[0x864F] = 'C2B2';\nz[0x8650] = 'C5B0';\nz[0x8651] = 'C2C7';\nz[0x8654] = 'F2AF';\nz[0x865A] = 'D0E9';\nz[0x865E] = 'D3DD';\nz[0x8662] = 'EBBD';\nz[0x866B] = 'B3E6';\nz[0x866C] = 'F2B0';\nz[0x866E] = 'F2B1';\nz[0x8671] = 'CAAD';\nz[0x8679] = 'BAE7';\nz[0x867A] = 'F2B3';\nz[0x867B] = 'F2B5';\nz[0x867C] = 'F2B4';\nz[0x867D] = 'CBE4';\nz[0x867E] = 'CFBA';\nz[0x867F] = 'F2B2';\nz[0x8680] = 'CAB4';\nz[0x8681] = 'D2CF';\nz[0x8682] = 'C2EC';\nz[0x868A] = 'CEC3';\nz[0x868B] = 'F2B8';\nz[0x868C] = 'B0F6';\nz[0x868D] = 'F2B7';\nz[0x8693] = 'F2BE';\nz[0x8695] = 'B2CF';\nz[0x869C] = 'D1C1';\nz[0x869D] = 'F2BA';\nz[0x86A3] = 'F2BC';\nz[0x86A4] = 'D4E9';\nz[0x86A7] = 'F2BB';\nz[0x86A8] = 'F2B6';\nz[0x86A9] = 'F2BF';\nz[0x86AA] = 'F2BD';\nz[0x86AC] = 'F2B9';\nz[0x86AF] = 'F2C7';\nz[0x86B0] = 'F2C4';\nz[0x86B1] = 'F2C6';\nz[0x86B4] = 'F2CA';\nz[0x86B5] = 'F2C2';\nz[0x86B6] = 'F2C0';\nz[0x86BA] = 'F2C5';\nz[0x86C0] = 'D6FB';\nz[0x86C4] = 'F2C1';\nz[0x86C6] = 'C7F9';\nz[0x86C7] = 'C9DF';\nz[0x86C9] = 'F2C8';\nz[0x86CA] = 'B9C6';\nz[0x86CB] = 'B5B0';\nz[0x86CE] = 'F2C3';\nz[0x86CF] = 'F2C9';\nz[0x86D0] = 'F2D0';\nz[0x86D1] = 'F2D6';\nz[0x86D4] = 'BBD7';\nz[0x86D8] = 'F2D5';\nz[0x86D9] = 'CDDC';\nz[0x86DB] = 'D6EB';\nz[0x86DE] = 'F2D2';\nz[0x86DF] = 'F2D4';\nz[0x86E4] = 'B8F2';\nz[0x86E9] = 'F2CB';\nz[0x86ED] = 'F2CE';\nz[0x86EE] = 'C2F9';\nz[0x86F0] = 'D5DD';\nz[0x86F1] = 'F2CC';\nz[0x86F2] = 'F2CD';\nz[0x86F3] = 'F2CF';\nz[0x86F4] = 'F2D3';\nz[0x86F8] = 'F2D9';\nz[0x86F9] = 'D3BC';\nz[0x86FE] = 'B6EA';\nz[0x8700] = 'CAF1';\nz[0x8702] = 'B7E4';\nz[0x8703] = 'F2D7';\nz[0x8707] = 'F2D8';\nz[0x8708] = 'F2DA';\nz[0x8709] = 'F2DD';\nz[0x870A] = 'F2DB';\nz[0x870D] = 'F2DC';\nz[0x8712] = 'D1D1';\nz[0x8713] = 'F2D1';\nz[0x8715] = 'CDC9';\nz[0x8717] = 'CECF';\nz[0x8718] = 'D6A9';\nz[0x871A] = 'F2E3';\nz[0x871C] = 'C3DB';\nz[0x871E] = 'F2E0';\nz[0x8721] = 'C0AF';\nz[0x8722] = 'F2EC';\nz[0x8723] = 'F2DE';\nz[0x8725] = 'F2E1';\nz[0x8729] = 'F2E8';\nz[0x872E] = 'F2E2';\nz[0x8731] = 'F2E7';\nz[0x8734] = 'F2E6';\nz[0x8737] = 'F2E9';\nz[0x873B] = 'F2DF';\nz[0x873E] = 'F2E4';\nz[0x873F] = 'F2EA';\nz[0x8747] = 'D3AC';\nz[0x8748] = 'F2E5';\nz[0x8749] = 'B2F5';\nz[0x874C] = 'F2F2';\nz[0x874E] = 'D0AB';\nz[0x8753] = 'F2F5';\nz[0x8757] = 'BBC8';\nz[0x8759] = 'F2F9';\nz[0x8760] = 'F2F0';\nz[0x8763] = 'F2F6';\nz[0x8764] = 'F2F8';\nz[0x8765] = 'F2FA';\nz[0x876E] = 'F2F3';\nz[0x8770] = 'F2F1';\nz[0x8774] = 'BAFB';\nz[0x8776] = 'B5FB';\nz[0x877B] = 'F2EF';\nz[0x877C] = 'F2F7';\nz[0x877D] = 'F2ED';\nz[0x877E] = 'F2EE';\nz[0x8782] = 'F2EB';\nz[0x8783] = 'F3A6';\nz[0x8785] = 'F3A3';\nz[0x8788] = 'F3A2';\nz[0x878B] = 'F2F4';\nz[0x878D] = 'C8DA';\nz[0x8793] = 'F2FB';\nz[0x8797] = 'F3A5';\nz[0x879F] = 'C3F8';\nz[0x87A8] = 'F2FD';\nz[0x87AB] = 'F3A7';\nz[0x87AC] = 'F3A9';\nz[0x87AD] = 'F3A4';\nz[0x87AF] = 'F2FC';\nz[0x87B3] = 'F3AB';\nz[0x87B5] = 'F3AA';\nz[0x87BA] = 'C2DD';\nz[0x87BD] = 'F3AE';\nz[0x87C0] = 'F3B0';\nz[0x87C6] = 'F3A1';\nz[0x87CA] = 'F3B1';\nz[0x87CB] = 'F3AC';\nz[0x87D1] = 'F3AF';\nz[0x87D2] = 'F2FE';\nz[0x87D3] = 'F3AD';\nz[0x87DB] = 'F3B2';\nz[0x87E0] = 'F3B4';\nz[0x87E5] = 'F3A8';\nz[0x87EA] = 'F3B3';\nz[0x87EE] = 'F3B5';\nz[0x87F9] = 'D0B7';\nz[0x87FE] = 'F3B8';\nz[0x8803] = 'D9F9';\nz[0x880A] = 'F3B9';\nz[0x8813] = 'F3B7';\nz[0x8815] = 'C8E4';\nz[0x8816] = 'F3B6';\nz[0x881B] = 'F3BA';\nz[0x8821] = 'F3BB';\nz[0x8822] = 'B4C0';\nz[0x8832] = 'EEC3';\nz[0x8839] = 'F3BC';\nz[0x883C] = 'F3BD';\nz[0x8840] = 'D1AA';\nz[0x8844] = 'F4AC';\nz[0x8845] = 'D0C6';\nz[0x884C] = 'D0D0';\nz[0x884D] = 'D1DC';\nz[0x8854] = 'CFCE';\nz[0x8857] = 'BDD6';\nz[0x8859] = 'D1C3';\nz[0x8861] = 'BAE2';\nz[0x8862] = 'E1E9';\nz[0x8863] = 'D2C2';\nz[0x8864] = 'F1C2';\nz[0x8865] = 'B2B9';\nz[0x8868] = 'B1ED';\nz[0x8869] = 'F1C3';\nz[0x886B] = 'C9C0';\nz[0x886C] = 'B3C4';\nz[0x886E] = 'D9F2';\nz[0x8870] = 'CBA5';\nz[0x8872] = 'F1C4';\nz[0x8877] = 'D6D4';\nz[0x887D] = 'F1C5';\nz[0x887E] = 'F4C0';\nz[0x887F] = 'F1C6';\nz[0x8881] = 'D4AC';\nz[0x8882] = 'F1C7';\nz[0x8884] = 'B0C0';\nz[0x8885] = 'F4C1';\nz[0x8888] = 'F4C2';\nz[0x888B] = 'B4FC';\nz[0x888D] = 'C5DB';\nz[0x8892] = 'CCBB';\nz[0x8896] = 'D0E4';\nz[0x889C] = 'CDE0';\nz[0x88A2] = 'F1C8';\nz[0x88A4] = 'D9F3';\nz[0x88AB] = 'B1BB';\nz[0x88AD] = 'CFAE';\nz[0x88B1] = 'B8A4';\nz[0x88B7] = 'F1CA';\nz[0x88BC] = 'F1CB';\nz[0x88C1] = 'B2C3';\nz[0x88C2] = 'C1D1';\nz[0x88C5] = 'D7B0';\nz[0x88C6] = 'F1C9';\nz[0x88C9] = 'F1CC';\nz[0x88CE] = 'F1CE';\nz[0x88D2] = 'D9F6';\nz[0x88D4] = 'D2E1';\nz[0x88D5] = 'D4A3';\nz[0x88D8] = 'F4C3';\nz[0x88D9] = 'C8B9';\nz[0x88DF] = 'F4C4';\nz[0x88E2] = 'F1CD';\nz[0x88E3] = 'F1CF';\nz[0x88E4] = 'BFE3';\nz[0x88E5] = 'F1D0';\nz[0x88E8] = 'F1D4';\nz[0x88F0] = 'F1D6';\nz[0x88F1] = 'F1D1';\nz[0x88F3] = 'C9D1';\nz[0x88F4] = 'C5E1';\nz[0x88F8] = 'C2E3';\nz[0x88F9] = 'B9FC';\nz[0x88FC] = 'F1D3';\nz[0x88FE] = 'F1D5';\nz[0x8902] = 'B9D3';\nz[0x890A] = 'F1DB';\nz[0x8910] = 'BAD6';\nz[0x8912] = 'B0FD';\nz[0x8913] = 'F1D9';\nz[0x8919] = 'F1D8';\nz[0x891A] = 'F1D2';\nz[0x891B] = 'F1DA';\nz[0x8921] = 'F1D7';\nz[0x8925] = 'C8EC';\nz[0x892A] = 'CDCA';\nz[0x892B] = 'F1DD';\nz[0x8930] = 'E5BD';\nz[0x8934] = 'F1DC';\nz[0x8936] = 'F1DE';\nz[0x8941] = 'F1DF';\nz[0x8944] = 'CFE5';\nz[0x895E] = 'F4C5';\nz[0x895F] = 'BDF3';\nz[0x8966] = 'F1E0';\nz[0x897B] = 'F1E1';\nz[0x897F] = 'CEF7';\nz[0x8981] = 'D2AA';\nz[0x8983] = 'F1FB';\nz[0x8986] = 'B8B2';\nz[0x89C1] = 'BCFB';\nz[0x89C2] = 'B9DB';\nz[0x89C4] = 'B9E6';\nz[0x89C5] = 'C3D9';\nz[0x89C6] = 'CAD3';\nz[0x89C7] = 'EAE8';\nz[0x89C8] = 'C0C0';\nz[0x89C9] = 'BEF5';\nz[0x89CA] = 'EAE9';\nz[0x89CB] = 'EAEA';\nz[0x89CC] = 'EAEB';\nz[0x89CE] = 'EAEC';\nz[0x89CF] = 'EAED';\nz[0x89D0] = 'EAEE';\nz[0x89D1] = 'EAEF';\nz[0x89D2] = 'BDC7';\nz[0x89D6] = 'F5FB';\nz[0x89DA] = 'F5FD';\nz[0x89DC] = 'F5FE';\nz[0x89DE] = 'F5FC';\nz[0x89E3] = 'BDE2';\nz[0x89E5] = 'F6A1';\nz[0x89E6] = 'B4A5';\nz[0x89EB] = 'F6A2';\nz[0x89EF] = 'F6A3';\nz[0x89F3] = 'ECB2';\nz[0x8A00] = 'D1D4';\nz[0x8A07] = 'D9EA';\nz[0x8A3E] = 'F6A4';\nz[0x8A48] = 'EEBA';\nz[0x8A79] = 'D5B2';\nz[0x8A89] = 'D3FE';\nz[0x8A8A] = 'CCDC';\nz[0x8A93] = 'CAC4';\nz[0x8B07] = 'E5C0';\nz[0x8B26] = 'F6A5';\nz[0x8B66] = 'BEAF';\nz[0x8B6C] = 'C6A9';\nz[0x8BA0] = 'DAA5';\nz[0x8BA1] = 'BCC6';\nz[0x8BA2] = 'B6A9';\nz[0x8BA3] = 'B8BC';\nz[0x8BA4] = 'C8CF';\nz[0x8BA5] = 'BCA5';\nz[0x8BA6] = 'DAA6';\nz[0x8BA7] = 'DAA7';\nz[0x8BA8] = 'CCD6';\nz[0x8BA9] = 'C8C3';\nz[0x8BAA] = 'DAA8';\nz[0x8BAB] = 'C6FD';\nz[0x8BAD] = 'D1B5';\nz[0x8BAE] = 'D2E9';\nz[0x8BAF] = 'D1B6';\nz[0x8BB0] = 'BCC7';\nz[0x8BB2] = 'BDB2';\nz[0x8BB3] = 'BBE4';\nz[0x8BB4] = 'DAA9';\nz[0x8BB5] = 'DAAA';\nz[0x8BB6] = 'D1C8';\nz[0x8BB7] = 'DAAB';\nz[0x8BB8] = 'D0ED';\nz[0x8BB9] = 'B6EF';\nz[0x8BBA] = 'C2DB';\nz[0x8BBC] = 'CBCF';\nz[0x8BBD] = 'B7ED';\nz[0x8BBE] = 'C9E8';\nz[0x8BBF] = 'B7C3';\nz[0x8BC0] = 'BEF7';\nz[0x8BC1] = 'D6A4';\nz[0x8BC2] = 'DAAC';\nz[0x8BC3] = 'DAAD';\nz[0x8BC4] = 'C6C0';\nz[0x8BC5] = 'D7E7';\nz[0x8BC6] = 'CAB6';\nz[0x8BC8] = 'D5A9';\nz[0x8BC9] = 'CBDF';\nz[0x8BCA] = 'D5EF';\nz[0x8BCB] = 'DAAE';\nz[0x8BCC] = 'D6DF';\nz[0x8BCD] = 'B4CA';\nz[0x8BCE] = 'DAB0';\nz[0x8BCF] = 'DAAF';\nz[0x8BD1] = 'D2EB';\nz[0x8BD2] = 'DAB1';\nz[0x8BD3] = 'DAB2';\nz[0x8BD4] = 'DAB3';\nz[0x8BD5] = 'CAD4';\nz[0x8BD6] = 'DAB4';\nz[0x8BD7] = 'CAAB';\nz[0x8BD8] = 'DAB5';\nz[0x8BD9] = 'DAB6';\nz[0x8BDA] = 'B3CF';\nz[0x8BDB] = 'D6EF';\nz[0x8BDC] = 'DAB7';\nz[0x8BDD] = 'BBB0';\nz[0x8BDE] = 'B5AE';\nz[0x8BDF] = 'DAB8';\nz[0x8BE0] = 'DAB9';\nz[0x8BE1] = 'B9EE';\nz[0x8BE2] = 'D1AF';\nz[0x8BE3] = 'D2E8';\nz[0x8BE4] = 'DABA';\nz[0x8BE5] = 'B8C3';\nz[0x8BE6] = 'CFEA';\nz[0x8BE7] = 'B2EF';\nz[0x8BE8] = 'DABB';\nz[0x8BE9] = 'DABC';\nz[0x8BEB] = 'BDEB';\nz[0x8BEC] = 'CEDC';\nz[0x8BED] = 'D3EF';\nz[0x8BEE] = 'DABD';\nz[0x8BEF] = 'CEF3';\nz[0x8BF0] = 'DABE';\nz[0x8BF1] = 'D3D5';\nz[0x8BF2] = 'BBE5';\nz[0x8BF3] = 'DABF';\nz[0x8BF4] = 'CBB5';\nz[0x8BF5] = 'CBD0';\nz[0x8BF6] = 'DAC0';\nz[0x8BF7] = 'C7EB';\nz[0x8BF8] = 'D6EE';\nz[0x8BF9] = 'DAC1';\nz[0x8BFA] = 'C5B5';\nz[0x8BFB] = 'B6C1';\nz[0x8BFC] = 'DAC2';\nz[0x8BFD] = 'B7CC';\nz[0x8BFE] = 'BFCE';\nz[0x8BFF] = 'DAC3';\nz[0x8C00] = 'DAC4';\nz[0x8C01] = 'CBAD';\nz[0x8C02] = 'DAC5';\nz[0x8C03] = 'B5F7';\nz[0x8C04] = 'DAC6';\nz[0x8C05] = 'C1C2';\nz[0x8C06] = 'D7BB';\nz[0x8C07] = 'DAC7';\nz[0x8C08] = 'CCB8';\nz[0x8C0A] = 'D2EA';\nz[0x8C0B] = 'C4B1';\nz[0x8C0C] = 'DAC8';\nz[0x8C0D] = 'B5FD';\nz[0x8C0E] = 'BBD1';\nz[0x8C0F] = 'DAC9';\nz[0x8C10] = 'D0B3';\nz[0x8C11] = 'DACA';\nz[0x8C12] = 'DACB';\nz[0x8C13] = 'CEBD';\nz[0x8C14] = 'DACC';\nz[0x8C15] = 'DACD';\nz[0x8C16] = 'DACE';\nz[0x8C17] = 'B2F7';\nz[0x8C18] = 'DAD1';\nz[0x8C19] = 'DACF';\nz[0x8C1A] = 'D1E8';\nz[0x8C1B] = 'DAD0';\nz[0x8C1C] = 'C3D5';\nz[0x8C1D] = 'DAD2';\nz[0x8C1F] = 'DAD3';\nz[0x8C20] = 'DAD4';\nz[0x8C21] = 'DAD5';\nz[0x8C22] = 'D0BB';\nz[0x8C23] = 'D2A5';\nz[0x8C24] = 'B0F9';\nz[0x8C25] = 'DAD6';\nz[0x8C26] = 'C7AB';\nz[0x8C27] = 'DAD7';\nz[0x8C28] = 'BDF7';\nz[0x8C29] = 'C3A1';\nz[0x8C2A] = 'DAD8';\nz[0x8C2B] = 'DAD9';\nz[0x8C2C] = 'C3FD';\nz[0x8C2D] = 'CCB7';\nz[0x8C2E] = 'DADA';\nz[0x8C2F] = 'DADB';\nz[0x8C30] = 'C0BE';\nz[0x8C31] = 'C6D7';\nz[0x8C32] = 'DADC';\nz[0x8C33] = 'DADD';\nz[0x8C34] = 'C7B4';\nz[0x8C35] = 'DADE';\nz[0x8C36] = 'DADF';\nz[0x8C37] = 'B9C8';\nz[0x8C41] = 'BBED';\nz[0x8C46] = 'B6B9';\nz[0x8C47] = 'F4F8';\nz[0x8C49] = 'F4F9';\nz[0x8C4C] = 'CDE3';\nz[0x8C55] = 'F5B9';\nz[0x8C5A] = 'EBE0';\nz[0x8C61] = 'CFF3';\nz[0x8C62] = 'BBBF';\nz[0x8C6A] = 'BAC0';\nz[0x8C6B] = 'D4A5';\nz[0x8C73] = 'E1D9';\nz[0x8C78] = 'F5F4';\nz[0x8C79] = 'B1AA';\nz[0x8C7A] = 'B2F2';\nz[0x8C82] = 'F5F5';\nz[0x8C85] = 'F5F7';\nz[0x8C89] = 'BAD1';\nz[0x8C8A] = 'F5F6';\nz[0x8C8C] = 'C3B2';\nz[0x8C94] = 'F5F9';\nz[0x8C98] = 'F5F8';\nz[0x8D1D] = 'B1B4';\nz[0x8D1E] = 'D5EA';\nz[0x8D1F] = 'B8BA';\nz[0x8D21] = 'B9B1';\nz[0x8D22] = 'B2C6';\nz[0x8D23] = 'D4F0';\nz[0x8D24] = 'CFCD';\nz[0x8D25] = 'B0DC';\nz[0x8D26] = 'D5CB';\nz[0x8D27] = 'BBF5';\nz[0x8D28] = 'D6CA';\nz[0x8D29] = 'B7B7';\nz[0x8D2A] = 'CCB0';\nz[0x8D2B] = 'C6B6';\nz[0x8D2C] = 'B1E1';\nz[0x8D2D] = 'B9BA';\nz[0x8D2E] = 'D6FC';\nz[0x8D2F] = 'B9E1';\nz[0x8D30] = 'B7A1';\nz[0x8D31] = 'BCFA';\nz[0x8D32] = 'EADA';\nz[0x8D33] = 'EADB';\nz[0x8D34] = 'CCF9';\nz[0x8D35] = 'B9F3';\nz[0x8D36] = 'EADC';\nz[0x8D37] = 'B4FB';\nz[0x8D38] = 'C3B3';\nz[0x8D39] = 'B7D1';\nz[0x8D3A] = 'BAD8';\nz[0x8D3B] = 'EADD';\nz[0x8D3C] = 'D4F4';\nz[0x8D3D] = 'EADE';\nz[0x8D3E] = 'BCD6';\nz[0x8D3F] = 'BBDF';\nz[0x8D40] = 'EADF';\nz[0x8D41] = 'C1DE';\nz[0x8D42] = 'C2B8';\nz[0x8D43] = 'D4DF';\nz[0x8D44] = 'D7CA';\nz[0x8D45] = 'EAE0';\nz[0x8D46] = 'EAE1';\nz[0x8D47] = 'EAE4';\nz[0x8D48] = 'EAE2';\nz[0x8D49] = 'EAE3';\nz[0x8D4A] = 'C9DE';\nz[0x8D4B] = 'B8B3';\nz[0x8D4C] = 'B6C4';\nz[0x8D4D] = 'EAE5';\nz[0x8D4E] = 'CAEA';\nz[0x8D4F] = 'C9CD';\nz[0x8D50] = 'B4CD';\nz[0x8D53] = 'E2D9';\nz[0x8D54] = 'C5E2';\nz[0x8D55] = 'EAE6';\nz[0x8D56] = 'C0B5';\nz[0x8D58] = 'D7B8';\nz[0x8D59] = 'EAE7';\nz[0x8D5A] = 'D7AC';\nz[0x8D5B] = 'C8FC';\nz[0x8D5C] = 'D8D3';\nz[0x8D5D] = 'D8CD';\nz[0x8D5E] = 'D4DE';\nz[0x8D60] = 'D4F9';\nz[0x8D61] = 'C9C4';\nz[0x8D62] = 'D3AE';\nz[0x8D63] = 'B8D3';\nz[0x8D64] = 'B3E0';\nz[0x8D66] = 'C9E2';\nz[0x8D67] = 'F4F6';\nz[0x8D6B] = 'BAD5';\nz[0x8D6D] = 'F4F7';\nz[0x8D70] = 'D7DF';\nz[0x8D73] = 'F4F1';\nz[0x8D74] = 'B8B0';\nz[0x8D75] = 'D5D4';\nz[0x8D76] = 'B8CF';\nz[0x8D77] = 'C6F0';\nz[0x8D81] = 'B3C3';\nz[0x8D84] = 'F4F2';\nz[0x8D85] = 'B3AC';\nz[0x8D8A] = 'D4BD';\nz[0x8D8B] = 'C7F7';\nz[0x8D91] = 'F4F4';\nz[0x8D94] = 'F4F3';\nz[0x8D9F] = 'CCCB';\nz[0x8DA3] = 'C8A4';\nz[0x8DB1] = 'F4F5';\nz[0x8DB3] = 'D7E3';\nz[0x8DB4] = 'C5BF';\nz[0x8DB5] = 'F5C0';\nz[0x8DB8] = 'F5BB';\nz[0x8DBA] = 'F5C3';\nz[0x8DBC] = 'F5C2';\nz[0x8DBE] = 'D6BA';\nz[0x8DBF] = 'F5C1';\nz[0x8DC3] = 'D4BE';\nz[0x8DC4] = 'F5C4';\nz[0x8DC6] = 'F5CC';\nz[0x8DCB] = 'B0CF';\nz[0x8DCC] = 'B5F8';\nz[0x8DCE] = 'F5C9';\nz[0x8DCF] = 'F5CA';\nz[0x8DD1] = 'C5DC';\nz[0x8DD6] = 'F5C5';\nz[0x8DD7] = 'F5C6';\nz[0x8DDA] = 'F5C7';\nz[0x8DDB] = 'F5CB';\nz[0x8DDD] = 'BEE0';\nz[0x8DDE] = 'F5C8';\nz[0x8DDF] = 'B8FA';\nz[0x8DE3] = 'F5D0';\nz[0x8DE4] = 'F5D3';\nz[0x8DE8] = 'BFE7';\nz[0x8DEA] = 'B9F2';\nz[0x8DEB] = 'F5BC';\nz[0x8DEC] = 'F5CD';\nz[0x8DEF] = 'C2B7';\nz[0x8DF3] = 'CCF8';\nz[0x8DF5] = 'BCF9';\nz[0x8DF7] = 'F5CE';\nz[0x8DF8] = 'F5CF';\nz[0x8DF9] = 'F5D1';\nz[0x8DFA] = 'B6E5';\nz[0x8DFB] = 'F5D2';\nz[0x8DFD] = 'F5D5';\nz[0x8E05] = 'F5BD';\nz[0x8E09] = 'F5D4';\nz[0x8E0A] = 'D3BB';\nz[0x8E0C] = 'B3EC';\nz[0x8E0F] = 'CCA4';\nz[0x8E14] = 'F5D6';\nz[0x8E1D] = 'F5D7';\nz[0x8E1E] = 'BEE1';\nz[0x8E1F] = 'F5D8';\nz[0x8E22] = 'CCDF';\nz[0x8E23] = 'F5DB';\nz[0x8E29] = 'B2C8';\nz[0x8E2A] = 'D7D9';\nz[0x8E2C] = 'F5D9';\nz[0x8E2E] = 'F5DA';\nz[0x8E2F] = 'F5DC';\nz[0x8E31] = 'F5E2';\nz[0x8E35] = 'F5E0';\nz[0x8E39] = 'F5DF';\nz[0x8E3A] = 'F5DD';\nz[0x8E3D] = 'F5E1';\nz[0x8E40] = 'F5DE';\nz[0x8E41] = 'F5E4';\nz[0x8E42] = 'F5E5';\nz[0x8E44] = 'CCE3';\nz[0x8E47] = 'E5BF';\nz[0x8E48] = 'B5B8';\nz[0x8E49] = 'F5E3';\nz[0x8E4A] = 'F5E8';\nz[0x8E4B] = 'CCA3';\nz[0x8E51] = 'F5E6';\nz[0x8E52] = 'F5E7';\nz[0x8E59] = 'F5BE';\nz[0x8E66] = 'B1C4';\nz[0x8E69] = 'F5BF';\nz[0x8E6C] = 'B5C5';\nz[0x8E6D] = 'B2E4';\nz[0x8E6F] = 'F5EC';\nz[0x8E70] = 'F5E9';\nz[0x8E72] = 'B6D7';\nz[0x8E74] = 'F5ED';\nz[0x8E76] = 'F5EA';\nz[0x8E7C] = 'F5EB';\nz[0x8E7F] = 'B4DA';\nz[0x8E81] = 'D4EA';\nz[0x8E85] = 'F5EE';\nz[0x8E87] = 'B3F9';\nz[0x8E8F] = 'F5EF';\nz[0x8E90] = 'F5F1';\nz[0x8E94] = 'F5F0';\nz[0x8E9C] = 'F5F2';\nz[0x8E9E] = 'F5F3';\nz[0x8EAB] = 'C9ED';\nz[0x8EAC] = 'B9AA';\nz[0x8EAF] = 'C7FB';\nz[0x8EB2] = 'B6E3';\nz[0x8EBA] = 'CCC9';\nz[0x8ECE] = 'EAA6';\nz[0x8F66] = 'B3B5';\nz[0x8F67] = 'D4FE';\nz[0x8F68] = 'B9EC';\nz[0x8F69] = 'D0F9';\nz[0x8F6B] = 'E9ED';\nz[0x8F6C] = 'D7AA';\nz[0x8F6D] = 'E9EE';\nz[0x8F6E] = 'C2D6';\nz[0x8F6F] = 'C8ED';\nz[0x8F70] = 'BAE4';\nz[0x8F71] = 'E9EF';\nz[0x8F72] = 'E9F0';\nz[0x8F73] = 'E9F1';\nz[0x8F74] = 'D6E1';\nz[0x8F75] = 'E9F2';\nz[0x8F76] = 'E9F3';\nz[0x8F77] = 'E9F5';\nz[0x8F78] = 'E9F4';\nz[0x8F79] = 'E9F6';\nz[0x8F7A] = 'E9F7';\nz[0x8F7B] = 'C7E1';\nz[0x8F7C] = 'E9F8';\nz[0x8F7D] = 'D4D8';\nz[0x8F7E] = 'E9F9';\nz[0x8F7F] = 'BDCE';\nz[0x8F81] = 'E9FA';\nz[0x8F82] = 'E9FB';\nz[0x8F83] = 'BDCF';\nz[0x8F84] = 'E9FC';\nz[0x8F85] = 'B8A8';\nz[0x8F86] = 'C1BE';\nz[0x8F87] = 'E9FD';\nz[0x8F88] = 'B1B2';\nz[0x8F89] = 'BBD4';\nz[0x8F8A] = 'B9F5';\nz[0x8F8B] = 'E9FE';\nz[0x8F8D] = 'EAA1';\nz[0x8F8E] = 'EAA2';\nz[0x8F8F] = 'EAA3';\nz[0x8F90] = 'B7F8';\nz[0x8F91] = 'BCAD';\nz[0x8F93] = 'CAE4';\nz[0x8F94] = 'E0CE';\nz[0x8F95] = 'D4AF';\nz[0x8F96] = 'CFBD';\nz[0x8F97] = 'D5B7';\nz[0x8F98] = 'EAA4';\nz[0x8F99] = 'D5DE';\nz[0x8F9A] = 'EAA5';\nz[0x8F9B] = 'D0C1';\nz[0x8F9C] = 'B9BC';\nz[0x8F9E] = 'B4C7';\nz[0x8F9F] = 'B1D9';\nz[0x8FA3] = 'C0B1';\nz[0x8FA8] = 'B1E6';\nz[0x8FA9] = 'B1E7';\nz[0x8FAB] = 'B1E8';\nz[0x8FB0] = 'B3BD';\nz[0x8FB1] = 'C8E8';\nz[0x8FB6] = 'E5C1';\nz[0x8FB9] = 'B1DF';\nz[0x8FBD] = 'C1C9';\nz[0x8FBE] = 'B4EF';\nz[0x8FC1] = 'C7A8';\nz[0x8FC2] = 'D3D8';\nz[0x8FC4] = 'C6F9';\nz[0x8FC5] = 'D1B8';\nz[0x8FC7] = 'B9FD';\nz[0x8FC8] = 'C2F5';\nz[0x8FCE] = 'D3AD';\nz[0x8FD0] = 'D4CB';\nz[0x8FD1] = 'BDFC';\nz[0x8FD3] = 'E5C2';\nz[0x8FD4] = 'B7B5';\nz[0x8FD5] = 'E5C3';\nz[0x8FD8] = 'BBB9';\nz[0x8FD9] = 'D5E2';\nz[0x8FDB] = 'BDF8';\nz[0x8FDC] = 'D4B6';\nz[0x8FDD] = 'CEA5';\nz[0x8FDE] = 'C1AC';\nz[0x8FDF] = 'B3D9';\nz[0x8FE2] = 'CCF6';\nz[0x8FE4] = 'E5C6';\nz[0x8FE5] = 'E5C4';\nz[0x8FE6] = 'E5C8';\nz[0x8FE8] = 'E5CA';\nz[0x8FE9] = 'E5C7';\nz[0x8FEA] = 'B5CF';\nz[0x8FEB] = 'C6C8';\nz[0x8FED] = 'B5FC';\nz[0x8FEE] = 'E5C5';\nz[0x8FF0] = 'CAF6';\nz[0x8FF3] = 'E5C9';\nz[0x8FF7] = 'C3D4';\nz[0x8FF8] = 'B1C5';\nz[0x8FF9] = 'BCA3';\nz[0x8FFD] = 'D7B7';\nz[0x9000] = 'CDCB';\nz[0x9001] = 'CBCD';\nz[0x9002] = 'CACA';\nz[0x9003] = 'CCD3';\nz[0x9004] = 'E5CC';\nz[0x9005] = 'E5CB';\nz[0x9006] = 'C4E6';\nz[0x9009] = 'D1A1';\nz[0x900A] = 'D1B7';\nz[0x900B] = 'E5CD';\nz[0x900D] = 'E5D0';\nz[0x900F] = 'CDB8';\nz[0x9010] = 'D6F0';\nz[0x9011] = 'E5CF';\nz[0x9012] = 'B5DD';\nz[0x9014] = 'CDBE';\nz[0x9016] = 'E5D1';\nz[0x9017] = 'B6BA';\nz[0x901A] = 'CDA8';\nz[0x901B] = 'B9E4';\nz[0x901D] = 'CAC5';\nz[0x901E] = 'B3D1';\nz[0x901F] = 'CBD9';\nz[0x9020] = 'D4EC';\nz[0x9021] = 'E5D2';\nz[0x9022] = 'B7EA';\nz[0x9026] = 'E5CE';\nz[0x902D] = 'E5D5';\nz[0x902E] = 'B4FE';\nz[0x902F] = 'E5D6';\nz[0x9035] = 'E5D3';\nz[0x9036] = 'E5D4';\nz[0x9038] = 'D2DD';\nz[0x903B] = 'C2DF';\nz[0x903C] = 'B1C6';\nz[0x903E] = 'D3E2';\nz[0x9041] = 'B6DD';\nz[0x9042] = 'CBEC';\nz[0x9044] = 'E5D7';\nz[0x9047] = 'D3F6';\nz[0x904D] = 'B1E9';\nz[0x904F] = 'B6F4';\nz[0x9050] = 'E5DA';\nz[0x9051] = 'E5D8';\nz[0x9052] = 'E5D9';\nz[0x9053] = 'B5C0';\nz[0x9057] = 'D2C5';\nz[0x9058] = 'E5DC';\nz[0x905B] = 'E5DE';\nz[0x9062] = 'E5DD';\nz[0x9063] = 'C7B2';\nz[0x9065] = 'D2A3';\nz[0x9068] = 'E5DB';\nz[0x906D] = 'D4E2';\nz[0x906E] = 'D5DA';\nz[0x9074] = 'E5E0';\nz[0x9075] = 'D7F1';\nz[0x907D] = 'E5E1';\nz[0x907F] = 'B1DC';\nz[0x9080] = 'D1FB';\nz[0x9082] = 'E5E2';\nz[0x9083] = 'E5E4';\nz[0x9088] = 'E5E3';\nz[0x908B] = 'E5E5';\nz[0x9091] = 'D2D8';\nz[0x9093] = 'B5CB';\nz[0x9095] = 'E7DF';\nz[0x9097] = 'DAF5';\nz[0x9099] = 'DAF8';\nz[0x909B] = 'DAF6';\nz[0x909D] = 'DAF7';\nz[0x90A1] = 'DAFA';\nz[0x90A2] = 'D0CF';\nz[0x90A3] = 'C4C7';\nz[0x90A6] = 'B0EE';\nz[0x90AA] = 'D0B0';\nz[0x90AC] = 'DAF9';\nz[0x90AE] = 'D3CA';\nz[0x90AF] = 'BAAA';\nz[0x90B0] = 'DBA2';\nz[0x90B1] = 'C7F1';\nz[0x90B3] = 'DAFC';\nz[0x90B4] = 'DAFB';\nz[0x90B5] = 'C9DB';\nz[0x90B6] = 'DAFD';\nz[0x90B8] = 'DBA1';\nz[0x90B9] = 'D7DE';\nz[0x90BA] = 'DAFE';\nz[0x90BB] = 'C1DA';\nz[0x90BE] = 'DBA5';\nz[0x90C1] = 'D3F4';\nz[0x90C4] = 'DBA7';\nz[0x90C5] = 'DBA4';\nz[0x90C7] = 'DBA8';\nz[0x90CA] = 'BDBC';\nz[0x90CE] = 'C0C9';\nz[0x90CF] = 'DBA3';\nz[0x90D0] = 'DBA6';\nz[0x90D1] = 'D6A3';\nz[0x90D3] = 'DBA9';\nz[0x90D7] = 'DBAD';\nz[0x90DB] = 'DBAE';\nz[0x90DC] = 'DBAC';\nz[0x90DD] = 'BAC2';\nz[0x90E1] = 'BFA4';\nz[0x90E2] = 'DBAB';\nz[0x90E6] = 'DBAA';\nz[0x90E7] = 'D4C7';\nz[0x90E8] = 'B2BF';\nz[0x90EB] = 'DBAF';\nz[0x90ED] = 'B9F9';\nz[0x90EF] = 'DBB0';\nz[0x90F4] = 'B3BB';\nz[0x90F8] = 'B5A6';\nz[0x90FD] = 'B6BC';\nz[0x90FE] = 'DBB1';\nz[0x9102] = 'B6F5';\nz[0x9104] = 'DBB2';\nz[0x9119] = 'B1C9';\nz[0x911E] = 'DBB4';\nz[0x9122] = 'DBB3';\nz[0x9123] = 'DBB5';\nz[0x912F] = 'DBB7';\nz[0x9131] = 'DBB6';\nz[0x9139] = 'DBB8';\nz[0x9143] = 'DBB9';\nz[0x9146] = 'DBBA';\nz[0x9149] = 'D3CF';\nz[0x914A] = 'F4FA';\nz[0x914B] = 'C7F5';\nz[0x914C] = 'D7C3';\nz[0x914D] = 'C5E4';\nz[0x914E] = 'F4FC';\nz[0x914F] = 'F4FD';\nz[0x9150] = 'F4FB';\nz[0x9152] = 'BEC6';\nz[0x9157] = 'D0EF';\nz[0x915A] = 'B7D3';\nz[0x915D] = 'D4CD';\nz[0x915E] = 'CCAA';\nz[0x9161] = 'F5A2';\nz[0x9162] = 'F5A1';\nz[0x9163] = 'BAA8';\nz[0x9164] = 'F4FE';\nz[0x9165] = 'CBD6';\nz[0x9169] = 'F5A4';\nz[0x916A] = 'C0D2';\nz[0x916C] = 'B3EA';\nz[0x916E] = 'CDAA';\nz[0x916F] = 'F5A5';\nz[0x9170] = 'F5A3';\nz[0x9171] = 'BDB4';\nz[0x9172] = 'F5A8';\nz[0x9174] = 'F5A9';\nz[0x9175] = 'BDCD';\nz[0x9176] = 'C3B8';\nz[0x9177] = 'BFE1';\nz[0x9178] = 'CBE1';\nz[0x9179] = 'F5AA';\nz[0x917D] = 'F5A6';\nz[0x917E] = 'F5A7';\nz[0x917F] = 'C4F0';\nz[0x9185] = 'F5AC';\nz[0x9187] = 'B4BC';\nz[0x9189] = 'D7ED';\nz[0x918B] = 'B4D7';\nz[0x918C] = 'F5AB';\nz[0x918D] = 'F5AE';\nz[0x9190] = 'F5AD';\nz[0x9191] = 'F5AF';\nz[0x9192] = 'D0D1';\nz[0x919A] = 'C3D1';\nz[0x919B] = 'C8A9';\nz[0x91A2] = 'F5B0';\nz[0x91A3] = 'F5B1';\nz[0x91AA] = 'F5B2';\nz[0x91AD] = 'F5B3';\nz[0x91AE] = 'F5B4';\nz[0x91AF] = 'F5B5';\nz[0x91B4] = 'F5B7';\nz[0x91B5] = 'F5B6';\nz[0x91BA] = 'F5B8';\nz[0x91C7] = 'B2C9';\nz[0x91C9] = 'D3D4';\nz[0x91CA] = 'CACD';\nz[0x91CC] = 'C0EF';\nz[0x91CD] = 'D6D8';\nz[0x91CE] = 'D2B0';\nz[0x91CF] = 'C1BF';\nz[0x91D1] = 'BDF0';\nz[0x91DC] = 'B8AA';\nz[0x9274] = 'BCF8';\nz[0x928E] = 'F6C6';\nz[0x92AE] = 'F6C7';\nz[0x92C8] = 'F6C8';\nz[0x933E] = 'F6C9';\nz[0x936A] = 'F6CA';\nz[0x938F] = 'F6CC';\nz[0x93CA] = 'F6CB';\nz[0x93D6] = 'F7E9';\nz[0x943E] = 'F6CD';\nz[0x946B] = 'F6CE';\nz[0x9485] = 'EEC4';\nz[0x9486] = 'EEC5';\nz[0x9487] = 'EEC6';\nz[0x9488] = 'D5EB';\nz[0x9489] = 'B6A4';\nz[0x948A] = 'EEC8';\nz[0x948B] = 'EEC7';\nz[0x948C] = 'EEC9';\nz[0x948D] = 'EECA';\nz[0x948E] = 'C7A5';\nz[0x948F] = 'EECB';\nz[0x9490] = 'EECC';\nz[0x9492] = 'B7B0';\nz[0x9493] = 'B5F6';\nz[0x9494] = 'EECD';\nz[0x9495] = 'EECF';\nz[0x9497] = 'EECE';\nz[0x9499] = 'B8C6';\nz[0x949A] = 'EED0';\nz[0x949B] = 'EED1';\nz[0x949C] = 'EED2';\nz[0x949D] = 'B6DB';\nz[0x949E] = 'B3AE';\nz[0x949F] = 'D6D3';\nz[0x94A0] = 'C4C6';\nz[0x94A1] = 'B1B5';\nz[0x94A2] = 'B8D6';\nz[0x94A3] = 'EED3';\nz[0x94A4] = 'EED4';\nz[0x94A5] = 'D4BF';\nz[0x94A6] = 'C7D5';\nz[0x94A7] = 'BEFB';\nz[0x94A8] = 'CED9';\nz[0x94A9] = 'B9B3';\nz[0x94AA] = 'EED6';\nz[0x94AB] = 'EED5';\nz[0x94AC] = 'EED8';\nz[0x94AD] = 'EED7';\nz[0x94AE] = 'C5A5';\nz[0x94AF] = 'EED9';\nz[0x94B0] = 'EEDA';\nz[0x94B1] = 'C7AE';\nz[0x94B2] = 'EEDB';\nz[0x94B3] = 'C7AF';\nz[0x94B4] = 'EEDC';\nz[0x94B5] = 'B2A7';\nz[0x94B6] = 'EEDD';\nz[0x94B7] = 'EEDE';\nz[0x94B8] = 'EEDF';\nz[0x94B9] = 'EEE0';\nz[0x94BA] = 'EEE1';\nz[0x94BB] = 'D7EA';\nz[0x94BC] = 'EEE2';\nz[0x94BD] = 'EEE3';\nz[0x94BE] = 'BCD8';\nz[0x94BF] = 'EEE4';\nz[0x94C0] = 'D3CB';\nz[0x94C1] = 'CCFA';\nz[0x94C2] = 'B2AC';\nz[0x94C3] = 'C1E5';\nz[0x94C4] = 'EEE5';\nz[0x94C5] = 'C7A6';\nz[0x94C6] = 'C3AD';\nz[0x94C8] = 'EEE6';\nz[0x94C9] = 'EEE7';\nz[0x94CA] = 'EEE8';\nz[0x94CB] = 'EEE9';\nz[0x94CC] = 'EEEA';\nz[0x94CD] = 'EEEB';\nz[0x94CE] = 'EEEC';\nz[0x94D0] = 'EEED';\nz[0x94D1] = 'EEEE';\nz[0x94D2] = 'EEEF';\nz[0x94D5] = 'EEF0';\nz[0x94D6] = 'EEF1';\nz[0x94D7] = 'EEF2';\nz[0x94D8] = 'EEF4';\nz[0x94D9] = 'EEF3';\nz[0x94DB] = 'EEF5';\nz[0x94DC] = 'CDAD';\nz[0x94DD] = 'C2C1';\nz[0x94DE] = 'EEF6';\nz[0x94DF] = 'EEF7';\nz[0x94E0] = 'EEF8';\nz[0x94E1] = 'D5A1';\nz[0x94E2] = 'EEF9';\nz[0x94E3] = 'CFB3';\nz[0x94E4] = 'EEFA';\nz[0x94E5] = 'EEFB';\nz[0x94E7] = 'EEFC';\nz[0x94E8] = 'EEFD';\nz[0x94E9] = 'EFA1';\nz[0x94EA] = 'EEFE';\nz[0x94EB] = 'EFA2';\nz[0x94EC] = 'B8F5';\nz[0x94ED] = 'C3FA';\nz[0x94EE] = 'EFA3';\nz[0x94EF] = 'EFA4';\nz[0x94F0] = 'BDC2';\nz[0x94F1] = 'D2BF';\nz[0x94F2] = 'B2F9';\nz[0x94F3] = 'EFA5';\nz[0x94F4] = 'EFA6';\nz[0x94F5] = 'EFA7';\nz[0x94F6] = 'D2F8';\nz[0x94F7] = 'EFA8';\nz[0x94F8] = 'D6FD';\nz[0x94F9] = 'EFA9';\nz[0x94FA] = 'C6CC';\nz[0x94FC] = 'EFAA';\nz[0x94FD] = 'EFAB';\nz[0x94FE] = 'C1B4';\nz[0x94FF] = 'EFAC';\nz[0x9500] = 'CFFA';\nz[0x9501] = 'CBF8';\nz[0x9502] = 'EFAE';\nz[0x9503] = 'EFAD';\nz[0x9504] = 'B3FA';\nz[0x9505] = 'B9F8';\nz[0x9506] = 'EFAF';\nz[0x9507] = 'EFB0';\nz[0x9508] = 'D0E2';\nz[0x9509] = 'EFB1';\nz[0x950A] = 'EFB2';\nz[0x950B] = 'B7E6';\nz[0x950C] = 'D0BF';\nz[0x950D] = 'EFB3';\nz[0x950E] = 'EFB4';\nz[0x950F] = 'EFB5';\nz[0x9510] = 'C8F1';\nz[0x9511] = 'CCE0';\nz[0x9512] = 'EFB6';\nz[0x9513] = 'EFB7';\nz[0x9514] = 'EFB8';\nz[0x9515] = 'EFB9';\nz[0x9516] = 'EFBA';\nz[0x9517] = 'D5E0';\nz[0x9518] = 'EFBB';\nz[0x9519] = 'B4ED';\nz[0x951A] = 'C3AA';\nz[0x951B] = 'EFBC';\nz[0x951D] = 'EFBD';\nz[0x951E] = 'EFBE';\nz[0x951F] = 'EFBF';\nz[0x9521] = 'CEFD';\nz[0x9522] = 'EFC0';\nz[0x9523] = 'C2E0';\nz[0x9524] = 'B4B8';\nz[0x9525] = 'D7B6';\nz[0x9526] = 'BDF5';\nz[0x9528] = 'CFC7';\nz[0x9529] = 'EFC3';\nz[0x952A] = 'EFC1';\nz[0x952B] = 'EFC2';\nz[0x952C] = 'EFC4';\nz[0x952D] = 'B6A7';\nz[0x952E] = 'BCFC';\nz[0x952F] = 'BEE2';\nz[0x9530] = 'C3CC';\nz[0x9531] = 'EFC5';\nz[0x9532] = 'EFC6';\nz[0x9534] = 'EFC7';\nz[0x9535] = 'EFCF';\nz[0x9536] = 'EFC8';\nz[0x9537] = 'EFC9';\nz[0x9538] = 'EFCA';\nz[0x9539] = 'C7C2';\nz[0x953A] = 'EFF1';\nz[0x953B] = 'B6CD';\nz[0x953C] = 'EFCB';\nz[0x953E] = 'EFCC';\nz[0x953F] = 'EFCD';\nz[0x9540] = 'B6C6';\nz[0x9541] = 'C3BE';\nz[0x9542] = 'EFCE';\nz[0x9544] = 'EFD0';\nz[0x9545] = 'EFD1';\nz[0x9546] = 'EFD2';\nz[0x9547] = 'D5F2';\nz[0x9549] = 'EFD3';\nz[0x954A] = 'C4F7';\nz[0x954C] = 'EFD4';\nz[0x954D] = 'C4F8';\nz[0x954E] = 'EFD5';\nz[0x954F] = 'EFD6';\nz[0x9550] = 'B8E4';\nz[0x9551] = 'B0F7';\nz[0x9552] = 'EFD7';\nz[0x9553] = 'EFD8';\nz[0x9554] = 'EFD9';\nz[0x9556] = 'EFDA';\nz[0x9557] = 'EFDB';\nz[0x9558] = 'EFDC';\nz[0x9559] = 'EFDD';\nz[0x955B] = 'EFDE';\nz[0x955C] = 'BEB5';\nz[0x955D] = 'EFE1';\nz[0x955E] = 'EFDF';\nz[0x955F] = 'EFE0';\nz[0x9561] = 'EFE2';\nz[0x9562] = 'EFE3';\nz[0x9563] = 'C1CD';\nz[0x9564] = 'EFE4';\nz[0x9565] = 'EFE5';\nz[0x9566] = 'EFE6';\nz[0x9567] = 'EFE7';\nz[0x9568] = 'EFE8';\nz[0x9569] = 'EFE9';\nz[0x956A] = 'EFEA';\nz[0x956B] = 'EFEB';\nz[0x956C] = 'EFEC';\nz[0x956D] = 'C0D8';\nz[0x956F] = 'EFED';\nz[0x9570] = 'C1AD';\nz[0x9571] = 'EFEE';\nz[0x9572] = 'EFEF';\nz[0x9573] = 'EFF0';\nz[0x9576] = 'CFE2';\nz[0x957F] = 'B3A4';\nz[0x95E8] = 'C3C5';\nz[0x95E9] = 'E3C5';\nz[0x95EA] = 'C9C1';\nz[0x95EB] = 'E3C6';\nz[0x95ED] = 'B1D5';\nz[0x95EE] = 'CECA';\nz[0x95EF] = 'B4B3';\nz[0x95F0] = 'C8F2';\nz[0x95F1] = 'E3C7';\nz[0x95F2] = 'CFD0';\nz[0x95F3] = 'E3C8';\nz[0x95F4] = 'BCE4';\nz[0x95F5] = 'E3C9';\nz[0x95F6] = 'E3CA';\nz[0x95F7] = 'C3C6';\nz[0x95F8] = 'D5A2';\nz[0x95F9] = 'C4D6';\nz[0x95FA] = 'B9EB';\nz[0x95FB] = 'CEC5';\nz[0x95FC] = 'E3CB';\nz[0x95FD] = 'C3F6';\nz[0x95FE] = 'E3CC';\nz[0x9600] = 'B7A7';\nz[0x9601] = 'B8F3';\nz[0x9602] = 'BAD2';\nz[0x9603] = 'E3CD';\nz[0x9604] = 'E3CE';\nz[0x9605] = 'D4C4';\nz[0x9606] = 'E3CF';\nz[0x9608] = 'E3D0';\nz[0x9609] = 'D1CB';\nz[0x960A] = 'E3D1';\nz[0x960B] = 'E3D2';\nz[0x960C] = 'E3D3';\nz[0x960D] = 'E3D4';\nz[0x960E] = 'D1D6';\nz[0x960F] = 'E3D5';\nz[0x9610] = 'B2FB';\nz[0x9611] = 'C0BB';\nz[0x9612] = 'E3D6';\nz[0x9614] = 'C0AB';\nz[0x9615] = 'E3D7';\nz[0x9616] = 'E3D8';\nz[0x9617] = 'E3D9';\nz[0x9619] = 'E3DA';\nz[0x961A] = 'E3DB';\nz[0x961C] = 'B8B7';\nz[0x961D] = 'DAE2';\nz[0x961F] = 'B6D3';\nz[0x9621] = 'DAE4';\nz[0x9622] = 'DAE3';\nz[0x962A] = 'DAE6';\nz[0x962E] = 'C8EE';\nz[0x9631] = 'DAE5';\nz[0x9632] = 'B7C0';\nz[0x9633] = 'D1F4';\nz[0x9634] = 'D2F5';\nz[0x9635] = 'D5F3';\nz[0x9636] = 'BDD7';\nz[0x963B] = 'D7E8';\nz[0x963C] = 'DAE8';\nz[0x963D] = 'DAE7';\nz[0x963F] = 'B0A2';\nz[0x9640] = 'CDD3';\nz[0x9642] = 'DAE9';\nz[0x9644] = 'B8BD';\nz[0x9645] = 'BCCA';\nz[0x9646] = 'C2BD';\nz[0x9647] = 'C2A4';\nz[0x9648] = 'B3C2';\nz[0x9649] = 'DAEA';\nz[0x964B] = 'C2AA';\nz[0x964C] = 'C4B0';\nz[0x964D] = 'BDB5';\nz[0x9650] = 'CFDE';\nz[0x9654] = 'DAEB';\nz[0x9655] = 'C9C2';\nz[0x965B] = 'B1DD';\nz[0x965F] = 'DAEC';\nz[0x9661] = 'B6B8';\nz[0x9662] = 'D4BA';\nz[0x9664] = 'B3FD';\nz[0x9667] = 'DAED';\nz[0x9668] = 'D4C9';\nz[0x9669] = 'CFD5';\nz[0x966A] = 'C5E3';\nz[0x966C] = 'DAEE';\nz[0x9672] = 'DAEF';\nz[0x9674] = 'DAF0';\nz[0x9675] = 'C1EA';\nz[0x9676] = 'CCD5';\nz[0x9677] = 'CFDD';\nz[0x9685] = 'D3E7';\nz[0x9686] = 'C2A1';\nz[0x9688] = 'DAF1';\nz[0x968B] = 'CBE5';\nz[0x968D] = 'DAF2';\nz[0x968F] = 'CBE6';\nz[0x9690] = 'D2FE';\nz[0x9694] = 'B8F4';\nz[0x9697] = 'DAF3';\nz[0x9698] = 'B0AF';\nz[0x9699] = 'CFB6';\nz[0x969C] = 'D5CF';\nz[0x96A7] = 'CBED';\nz[0x96B0] = 'DAF4';\nz[0x96B3] = 'E3C4';\nz[0x96B6] = 'C1A5';\nz[0x96B9] = 'F6BF';\nz[0x96BC] = 'F6C0';\nz[0x96BD] = 'F6C1';\nz[0x96BE] = 'C4D1';\nz[0x96C0] = 'C8B8';\nz[0x96C1] = 'D1E3';\nz[0x96C4] = 'D0DB';\nz[0x96C5] = 'D1C5';\nz[0x96C6] = 'BCAF';\nz[0x96C7] = 'B9CD';\nz[0x96C9] = 'EFF4';\nz[0x96CC] = 'B4C6';\nz[0x96CD] = 'D3BA';\nz[0x96CE] = 'F6C2';\nz[0x96CF] = 'B3FB';\nz[0x96D2] = 'F6C3';\nz[0x96D5] = 'B5F1';\nz[0x96E0] = 'F6C5';\nz[0x96E8] = 'D3EA';\nz[0x96E9] = 'F6A7';\nz[0x96EA] = 'D1A9';\nz[0x96EF] = 'F6A9';\nz[0x96F3] = 'F6A8';\nz[0x96F6] = 'C1E3';\nz[0x96F7] = 'C0D7';\nz[0x96F9] = 'B1A2';\nz[0x96FE] = 'CEED';\nz[0x9700] = 'D0E8';\nz[0x9701] = 'F6AB';\nz[0x9704] = 'CFF6';\nz[0x9706] = 'F6AA';\nz[0x9707] = 'D5F0';\nz[0x9708] = 'F6AC';\nz[0x9709] = 'C3B9';\nz[0x970D] = 'BBF4';\nz[0x970E] = 'F6AE';\nz[0x970F] = 'F6AD';\nz[0x9713] = 'C4DE';\nz[0x9716] = 'C1D8';\nz[0x971C] = 'CBAA';\nz[0x971E] = 'CFBC';\nz[0x972A] = 'F6AF';\nz[0x972D] = 'F6B0';\nz[0x9730] = 'F6B1';\nz[0x9732] = 'C2B6';\nz[0x9738] = 'B0D4';\nz[0x9739] = 'C5F9';\nz[0x973E] = 'F6B2';\nz[0x9752] = 'C7E0';\nz[0x9753] = 'F6A6';\nz[0x9756] = 'BEB8';\nz[0x9759] = 'BEB2';\nz[0x975B] = 'B5E5';\nz[0x975E] = 'B7C7';\nz[0x9760] = 'BFBF';\nz[0x9761] = 'C3D2';\nz[0x9762] = 'C3E6';\nz[0x9765] = 'D8CC';\nz[0x9769] = 'B8EF';\nz[0x9773] = 'BDF9';\nz[0x9774] = 'D1A5';\nz[0x9776] = 'B0D0';\nz[0x977C] = 'F7B0';\nz[0x9785] = 'F7B1';\nz[0x978B] = 'D0AC';\nz[0x978D] = 'B0B0';\nz[0x9791] = 'F7B2';\nz[0x9792] = 'F7B3';\nz[0x9794] = 'F7B4';\nz[0x9798] = 'C7CA';\nz[0x97A0] = 'BECF';\nz[0x97A3] = 'F7B7';\nz[0x97AB] = 'F7B6';\nz[0x97AD] = 'B1DE';\nz[0x97AF] = 'F7B5';\nz[0x97B2] = 'F7B8';\nz[0x97B4] = 'F7B9';\nz[0x97E6] = 'CEA4';\nz[0x97E7] = 'C8CD';\nz[0x97E9] = 'BAAB';\nz[0x97EA] = 'E8B8';\nz[0x97EB] = 'E8B9';\nz[0x97EC] = 'E8BA';\nz[0x97ED] = 'BEC2';\nz[0x97F3] = 'D2F4';\nz[0x97F5] = 'D4CF';\nz[0x97F6] = 'C9D8';\nz[0x9875] = 'D2B3';\nz[0x9876] = 'B6A5';\nz[0x9877] = 'C7EA';\nz[0x9878] = 'F1FC';\nz[0x9879] = 'CFEE';\nz[0x987A] = 'CBB3';\nz[0x987B] = 'D0EB';\nz[0x987C] = 'E7EF';\nz[0x987D] = 'CDE7';\nz[0x987E] = 'B9CB';\nz[0x987F] = 'B6D9';\nz[0x9880] = 'F1FD';\nz[0x9881] = 'B0E4';\nz[0x9882] = 'CBCC';\nz[0x9883] = 'F1FE';\nz[0x9884] = 'D4A4';\nz[0x9885] = 'C2AD';\nz[0x9886] = 'C1EC';\nz[0x9887] = 'C6C4';\nz[0x9888] = 'BEB1';\nz[0x9889] = 'F2A1';\nz[0x988A] = 'BCD5';\nz[0x988C] = 'F2A2';\nz[0x988D] = 'F2A3';\nz[0x988F] = 'F2A4';\nz[0x9890] = 'D2C3';\nz[0x9891] = 'C6B5';\nz[0x9893] = 'CDC7';\nz[0x9894] = 'F2A5';\nz[0x9896] = 'D3B1';\nz[0x9897] = 'BFC5';\nz[0x9898] = 'CCE2';\nz[0x989A] = 'F2A6';\nz[0x989B] = 'F2A7';\nz[0x989C] = 'D1D5';\nz[0x989D] = 'B6EE';\nz[0x989E] = 'F2A8';\nz[0x989F] = 'F2A9';\nz[0x98A0] = 'B5DF';\nz[0x98A1] = 'F2AA';\nz[0x98A2] = 'F2AB';\nz[0x98A4] = 'B2FC';\nz[0x98A5] = 'F2AC';\nz[0x98A6] = 'F2AD';\nz[0x98A7] = 'C8A7';\nz[0x98CE] = 'B7E7';\nz[0x98D1] = 'ECA9';\nz[0x98D2] = 'ECAA';\nz[0x98D3] = 'ECAB';\nz[0x98D5] = 'ECAC';\nz[0x98D8] = 'C6AE';\nz[0x98D9] = 'ECAD';\nz[0x98DA] = 'ECAE';\nz[0x98DE] = 'B7C9';\nz[0x98DF] = 'CAB3';\nz[0x98E7] = 'E2B8';\nz[0x98E8] = 'F7CF';\nz[0x990D] = 'F7D0';\nz[0x9910] = 'B2CD';\nz[0x992E] = 'F7D1';\nz[0x9954] = 'F7D3';\nz[0x9955] = 'F7D2';\nz[0x9963] = 'E2BB';\nz[0x9965] = 'BCA2';\nz[0x9967] = 'E2BC';\nz[0x9968] = 'E2BD';\nz[0x9969] = 'E2BE';\nz[0x996A] = 'E2BF';\nz[0x996B] = 'E2C0';\nz[0x996C] = 'E2C1';\nz[0x996D] = 'B7B9';\nz[0x996E] = 'D2FB';\nz[0x996F] = 'BDA4';\nz[0x9970] = 'CACE';\nz[0x9971] = 'B1A5';\nz[0x9972] = 'CBC7';\nz[0x9974] = 'E2C2';\nz[0x9975] = 'B6FC';\nz[0x9976] = 'C8C4';\nz[0x9977] = 'E2C3';\nz[0x997A] = 'BDC8';\nz[0x997C] = 'B1FD';\nz[0x997D] = 'E2C4';\nz[0x997F] = 'B6F6';\nz[0x9980] = 'E2C5';\nz[0x9981] = 'C4D9';\nz[0x9984] = 'E2C6';\nz[0x9985] = 'CFDA';\nz[0x9986] = 'B9DD';\nz[0x9987] = 'E2C7';\nz[0x9988] = 'C0A1';\nz[0x998A] = 'E2C8';\nz[0x998B] = 'B2F6';\nz[0x998D] = 'E2C9';\nz[0x998F] = 'C1F3';\nz[0x9990] = 'E2CA';\nz[0x9991] = 'E2CB';\nz[0x9992] = 'C2F8';\nz[0x9993] = 'E2CC';\nz[0x9994] = 'E2CD';\nz[0x9995] = 'E2CE';\nz[0x9996] = 'CAD7';\nz[0x9997] = 'D8B8';\nz[0x9998] = 'D9E5';\nz[0x9999] = 'CFE3';\nz[0x99A5] = 'F0A5';\nz[0x99A8] = 'DCB0';\nz[0x9A6C] = 'C2ED';\nz[0x9A6D] = 'D4A6';\nz[0x9A6E] = 'CDD4';\nz[0x9A6F] = 'D1B1';\nz[0x9A70] = 'B3DB';\nz[0x9A71] = 'C7FD';\nz[0x9A73] = 'B2B5';\nz[0x9A74] = 'C2BF';\nz[0x9A75] = 'E6E0';\nz[0x9A76] = 'CABB';\nz[0x9A77] = 'E6E1';\nz[0x9A78] = 'E6E2';\nz[0x9A79] = 'BED4';\nz[0x9A7A] = 'E6E3';\nz[0x9A7B] = 'D7A4';\nz[0x9A7C] = 'CDD5';\nz[0x9A7D] = 'E6E5';\nz[0x9A7E] = 'BCDD';\nz[0x9A7F] = 'E6E4';\nz[0x9A80] = 'E6E6';\nz[0x9A81] = 'E6E7';\nz[0x9A82] = 'C2EE';\nz[0x9A84] = 'BDBE';\nz[0x9A85] = 'E6E8';\nz[0x9A86] = 'C2E6';\nz[0x9A87] = 'BAA7';\nz[0x9A88] = 'E6E9';\nz[0x9A8A] = 'E6EA';\nz[0x9A8B] = 'B3D2';\nz[0x9A8C] = 'D1E9';\nz[0x9A8F] = 'BFA5';\nz[0x9A90] = 'E6EB';\nz[0x9A91] = 'C6EF';\nz[0x9A92] = 'E6EC';\nz[0x9A93] = 'E6ED';\nz[0x9A96] = 'E6EE';\nz[0x9A97] = 'C6AD';\nz[0x9A98] = 'E6EF';\nz[0x9A9A] = 'C9A7';\nz[0x9A9B] = 'E6F0';\nz[0x9A9C] = 'E6F1';\nz[0x9A9D] = 'E6F2';\nz[0x9A9E] = 'E5B9';\nz[0x9A9F] = 'E6F3';\nz[0x9AA0] = 'E6F4';\nz[0x9AA1] = 'C2E2';\nz[0x9AA2] = 'E6F5';\nz[0x9AA3] = 'E6F6';\nz[0x9AA4] = 'D6E8';\nz[0x9AA5] = 'E6F7';\nz[0x9AA7] = 'E6F8';\nz[0x9AA8] = 'B9C7';\nz[0x9AB0] = 'F7BB';\nz[0x9AB1] = 'F7BA';\nz[0x9AB6] = 'F7BE';\nz[0x9AB7] = 'F7BC';\nz[0x9AB8] = 'BAA1';\nz[0x9ABA] = 'F7BF';\nz[0x9ABC] = 'F7C0';\nz[0x9AC0] = 'F7C2';\nz[0x9AC1] = 'F7C1';\nz[0x9AC2] = 'F7C4';\nz[0x9AC5] = 'F7C3';\nz[0x9ACB] = 'F7C5';\nz[0x9ACC] = 'F7C6';\nz[0x9AD1] = 'F7C7';\nz[0x9AD3] = 'CBE8';\nz[0x9AD8] = 'B8DF';\nz[0x9ADF] = 'F7D4';\nz[0x9AE1] = 'F7D5';\nz[0x9AE6] = 'F7D6';\nz[0x9AEB] = 'F7D8';\nz[0x9AED] = 'F7DA';\nz[0x9AEF] = 'F7D7';\nz[0x9AF9] = 'F7DB';\nz[0x9AFB] = 'F7D9';\nz[0x9B03] = 'D7D7';\nz[0x9B08] = 'F7DC';\nz[0x9B0F] = 'F7DD';\nz[0x9B13] = 'F7DE';\nz[0x9B1F] = 'F7DF';\nz[0x9B23] = 'F7E0';\nz[0x9B2F] = 'DBCB';\nz[0x9B32] = 'D8AA';\nz[0x9B3B] = 'E5F7';\nz[0x9B3C] = 'B9ED';\nz[0x9B41] = 'BFFD';\nz[0x9B42] = 'BBEA';\nz[0x9B43] = 'F7C9';\nz[0x9B44] = 'C6C7';\nz[0x9B45] = 'F7C8';\nz[0x9B47] = 'F7CA';\nz[0x9B48] = 'F7CC';\nz[0x9B49] = 'F7CB';\nz[0x9B4D] = 'F7CD';\nz[0x9B4F] = 'CEBA';\nz[0x9B51] = 'F7CE';\nz[0x9B54] = 'C4A7';\nz[0x9C7C] = 'D3E3';\nz[0x9C7F] = 'F6CF';\nz[0x9C81] = 'C2B3';\nz[0x9C82] = 'F6D0';\nz[0x9C85] = 'F6D1';\nz[0x9C86] = 'F6D2';\nz[0x9C87] = 'F6D3';\nz[0x9C88] = 'F6D4';\nz[0x9C8B] = 'F6D6';\nz[0x9C8D] = 'B1AB';\nz[0x9C8E] = 'F6D7';\nz[0x9C90] = 'F6D8';\nz[0x9C91] = 'F6D9';\nz[0x9C92] = 'F6DA';\nz[0x9C94] = 'F6DB';\nz[0x9C95] = 'F6DC';\nz[0x9C9A] = 'F6DD';\nz[0x9C9B] = 'F6DE';\nz[0x9C9C] = 'CFCA';\nz[0x9C9E] = 'F6DF';\nz[0x9C9F] = 'F6E0';\nz[0x9CA0] = 'F6E1';\nz[0x9CA1] = 'F6E2';\nz[0x9CA2] = 'F6E3';\nz[0x9CA3] = 'F6E4';\nz[0x9CA4] = 'C0F0';\nz[0x9CA5] = 'F6E5';\nz[0x9CA6] = 'F6E6';\nz[0x9CA7] = 'F6E7';\nz[0x9CA8] = 'F6E8';\nz[0x9CA9] = 'F6E9';\nz[0x9CAB] = 'F6EA';\nz[0x9CAD] = 'F6EB';\nz[0x9CAE] = 'F6EC';\nz[0x9CB0] = 'F6ED';\nz[0x9CB1] = 'F6EE';\nz[0x9CB2] = 'F6EF';\nz[0x9CB3] = 'F6F0';\nz[0x9CB4] = 'F6F1';\nz[0x9CB5] = 'F6F2';\nz[0x9CB6] = 'F6F3';\nz[0x9CB7] = 'F6F4';\nz[0x9CB8] = 'BEA8';\nz[0x9CBA] = 'F6F5';\nz[0x9CBB] = 'F6F6';\nz[0x9CBC] = 'F6F7';\nz[0x9CBD] = 'F6F8';\nz[0x9CC3] = 'C8FA';\nz[0x9CC4] = 'F6F9';\nz[0x9CC5] = 'F6FA';\nz[0x9CC6] = 'F6FB';\nz[0x9CC7] = 'F6FC';\nz[0x9CCA] = 'F6FD';\nz[0x9CCB] = 'F6FE';\nz[0x9CCC] = 'F7A1';\nz[0x9CCD] = 'F7A2';\nz[0x9CCE] = 'F7A3';\nz[0x9CCF] = 'F7A4';\nz[0x9CD0] = 'F7A5';\nz[0x9CD3] = 'F7A6';\nz[0x9CD4] = 'F7A7';\nz[0x9CD5] = 'F7A8';\nz[0x9CD6] = 'B1EE';\nz[0x9CD7] = 'F7A9';\nz[0x9CD8] = 'F7AA';\nz[0x9CD9] = 'F7AB';\nz[0x9CDC] = 'F7AC';\nz[0x9CDD] = 'F7AD';\nz[0x9CDE] = 'C1DB';\nz[0x9CDF] = 'F7AE';\nz[0x9CE2] = 'F7AF';\nz[0x9E1F] = 'C4F1';\nz[0x9E20] = 'F0AF';\nz[0x9E21] = 'BCA6';\nz[0x9E22] = 'F0B0';\nz[0x9E23] = 'C3F9';\nz[0x9E25] = 'C5B8';\nz[0x9E26] = 'D1BB';\nz[0x9E28] = 'F0B1';\nz[0x9E29] = 'F0B2';\nz[0x9E2A] = 'F0B3';\nz[0x9E2B] = 'F0B4';\nz[0x9E2C] = 'F0B5';\nz[0x9E2D] = 'D1BC';\nz[0x9E2F] = 'D1EC';\nz[0x9E31] = 'F0B7';\nz[0x9E32] = 'F0B6';\nz[0x9E33] = 'D4A7';\nz[0x9E35] = 'CDD2';\nz[0x9E36] = 'F0B8';\nz[0x9E37] = 'F0BA';\nz[0x9E38] = 'F0B9';\nz[0x9E39] = 'F0BB';\nz[0x9E3A] = 'F0BC';\nz[0x9E3D] = 'B8EB';\nz[0x9E3E] = 'F0BD';\nz[0x9E3F] = 'BAE8';\nz[0x9E41] = 'F0BE';\nz[0x9E42] = 'F0BF';\nz[0x9E43] = 'BEE9';\nz[0x9E44] = 'F0C0';\nz[0x9E45] = 'B6EC';\nz[0x9E46] = 'F0C1';\nz[0x9E47] = 'F0C2';\nz[0x9E48] = 'F0C3';\nz[0x9E49] = 'F0C4';\nz[0x9E4A] = 'C8B5';\nz[0x9E4B] = 'F0C5';\nz[0x9E4C] = 'F0C6';\nz[0x9E4E] = 'F0C7';\nz[0x9E4F] = 'C5F4';\nz[0x9E51] = 'F0C8';\nz[0x9E55] = 'F0C9';\nz[0x9E57] = 'F0CA';\nz[0x9E58] = 'F7BD';\nz[0x9E5A] = 'F0CB';\nz[0x9E5B] = 'F0CC';\nz[0x9E5C] = 'F0CD';\nz[0x9E5E] = 'F0CE';\nz[0x9E63] = 'F0CF';\nz[0x9E64] = 'BAD7';\nz[0x9E66] = 'F0D0';\nz[0x9E67] = 'F0D1';\nz[0x9E68] = 'F0D2';\nz[0x9E69] = 'F0D3';\nz[0x9E6A] = 'F0D4';\nz[0x9E6B] = 'F0D5';\nz[0x9E6C] = 'F0D6';\nz[0x9E6D] = 'F0D8';\nz[0x9E70] = 'D3A5';\nz[0x9E71] = 'F0D7';\nz[0x9E73] = 'F0D9';\nz[0x9E7E] = 'F5BA';\nz[0x9E7F] = 'C2B9';\nz[0x9E82] = 'F7E4';\nz[0x9E87] = 'F7E5';\nz[0x9E88] = 'F7E6';\nz[0x9E8B] = 'F7E7';\nz[0x9E92] = 'F7E8';\nz[0x9E93] = 'C2B4';\nz[0x9E9D] = 'F7EA';\nz[0x9E9F] = 'F7EB';\nz[0x9EA6] = 'C2F3';\nz[0x9EB4] = 'F4F0';\nz[0x9EB8] = 'F4EF';\nz[0x9EBB] = 'C2E9';\nz[0x9EBD] = 'F7E1';\nz[0x9EBE] = 'F7E2';\nz[0x9EC4] = 'BBC6';\nz[0x9EC9] = 'D9E4';\nz[0x9ECD] = 'CAF2';\nz[0x9ECE] = 'C0E8';\nz[0x9ECF] = 'F0A4';\nz[0x9ED1] = 'BADA';\nz[0x9ED4] = 'C7AD';\nz[0x9ED8] = 'C4AC';\nz[0x9EDB] = 'F7EC';\nz[0x9EDC] = 'F7ED';\nz[0x9EDD] = 'F7EE';\nz[0x9EDF] = 'F7F0';\nz[0x9EE0] = 'F7EF';\nz[0x9EE2] = 'F7F1';\nz[0x9EE5] = 'F7F4';\nz[0x9EE7] = 'F7F3';\nz[0x9EE9] = 'F7F2';\nz[0x9EEA] = 'F7F5';\nz[0x9EEF] = 'F7F6';\nz[0x9EF9] = 'EDE9';\nz[0x9EFB] = 'EDEA';\nz[0x9EFC] = 'EDEB';\nz[0x9EFE] = 'F6BC';\nz[0x9F0B] = 'F6BD';\nz[0x9F0D] = 'F6BE';\nz[0x9F0E] = 'B6A6';\nz[0x9F10] = 'D8BE';\nz[0x9F13] = 'B9C4';\nz[0x9F17] = 'D8BB';\nz[0x9F19] = 'DCB1';\nz[0x9F20] = 'CAF3';\nz[0x9F22] = 'F7F7';\nz[0x9F2C] = 'F7F8';\nz[0x9F2F] = 'F7F9';\nz[0x9F37] = 'F7FB';\nz[0x9F39] = 'F7FA';\nz[0x9F3B] = 'B1C7';\nz[0x9F3D] = 'F7FC';\nz[0x9F3E] = 'F7FD';\nz[0x9F44] = 'F7FE';\nz[0x9F50] = 'C6EB';\nz[0x9F51] = 'ECB4';\nz[0x9F7F] = 'B3DD';\nz[0x9F80] = 'F6B3';\nz[0x9F83] = 'F6B4';\nz[0x9F84] = 'C1E4';\nz[0x9F85] = 'F6B5';\nz[0x9F86] = 'F6B6';\nz[0x9F87] = 'F6B7';\nz[0x9F88] = 'F6B8';\nz[0x9F89] = 'F6B9';\nz[0x9F8A] = 'F6BA';\nz[0x9F8B] = 'C8A3';\nz[0x9F8C] = 'F6BB';\nz[0x9F99] = 'C1FA';\nz[0x9F9A] = 'B9A8';\nz[0x9F9B] = 'EDE8';\nz[0x9F9F] = 'B9EA';\nz[0x9FA0] = 'D9DF';\nz[0xFF01] = 'A3A1';\nz[0xFF02] = 'A3A2';\nz[0xFF03] = 'A3A3';\nz[0xFF04] = 'A1E7';\nz[0xFF05] = 'A3A5';\nz[0xFF06] = 'A3A6';\nz[0xFF07] = 'A3A7';\nz[0xFF08] = 'A3A8';\nz[0xFF09] = 'A3A9';\nz[0xFF0A] = 'A3AA';\nz[0xFF0B] = 'A3AB';\nz[0xFF0C] = 'A3AC';\nz[0xFF0D] = 'A3AD';\nz[0xFF0E] = 'A3AE';\nz[0xFF0F] = 'A3AF';\nz[0xFF10] = 'A3B0';\nz[0xFF11] = 'A3B1';\nz[0xFF12] = 'A3B2';\nz[0xFF13] = 'A3B3';\nz[0xFF14] = 'A3B4';\nz[0xFF15] = 'A3B5';\nz[0xFF16] = 'A3B6';\nz[0xFF17] = 'A3B7';\nz[0xFF18] = 'A3B8';\nz[0xFF19] = 'A3B9';\nz[0xFF1A] = 'A3BA';\nz[0xFF1B] = 'A3BB';\nz[0xFF1C] = 'A3BC';\nz[0xFF1D] = 'A3BD';\nz[0xFF1E] = 'A3BE';\nz[0xFF1F] = 'A3BF';\nz[0xFF20] = 'A3C0';\nz[0xFF21] = 'A3C1';\nz[0xFF22] = 'A3C2';\nz[0xFF23] = 'A3C3';\nz[0xFF24] = 'A3C4';\nz[0xFF25] = 'A3C5';\nz[0xFF26] = 'A3C6';\nz[0xFF27] = 'A3C7';\nz[0xFF28] = 'A3C8';\nz[0xFF29] = 'A3C9';\nz[0xFF2A] = 'A3CA';\nz[0xFF2B] = 'A3CB';\nz[0xFF2C] = 'A3CC';\nz[0xFF2D] = 'A3CD';\nz[0xFF2E] = 'A3CE';\nz[0xFF2F] = 'A3CF';\nz[0xFF30] = 'A3D0';\nz[0xFF31] = 'A3D1';\nz[0xFF32] = 'A3D2';\nz[0xFF33] = 'A3D3';\nz[0xFF34] = 'A3D4';\nz[0xFF35] = 'A3D5';\nz[0xFF36] = 'A3D6';\nz[0xFF37] = 'A3D7';\nz[0xFF38] = 'A3D8';\nz[0xFF39] = 'A3D9';\nz[0xFF3A] = 'A3DA';\nz[0xFF3B] = 'A3DB';\nz[0xFF3C] = 'A3DC';\nz[0xFF3D] = 'A3DD';\nz[0xFF3E] = 'A3DE';\nz[0xFF3F] = 'A3DF';\nz[0xFF40] = 'A3E0';\nz[0xFF41] = 'A3E1';\nz[0xFF42] = 'A3E2';\nz[0xFF43] = 'A3E3';\nz[0xFF44] = 'A3E4';\nz[0xFF45] = 'A3E5';\nz[0xFF46] = 'A3E6';\nz[0xFF47] = 'A3E7';\nz[0xFF48] = 'A3E8';\nz[0xFF49] = 'A3E9';\nz[0xFF4A] = 'A3EA';\nz[0xFF4B] = 'A3EB';\nz[0xFF4C] = 'A3EC';\nz[0xFF4D] = 'A3ED';\nz[0xFF4E] = 'A3EE';\nz[0xFF4F] = 'A3EF';\nz[0xFF50] = 'A3F0';\nz[0xFF51] = 'A3F1';\nz[0xFF52] = 'A3F2';\nz[0xFF53] = 'A3F3';\nz[0xFF54] = 'A3F4';\nz[0xFF55] = 'A3F5';\nz[0xFF56] = 'A3F6';\nz[0xFF57] = 'A3F7';\nz[0xFF58] = 'A3F8';\nz[0xFF59] = 'A3F9';\nz[0xFF5A] = 'A3FA';\nz[0xFF5B] = 'A3FB';\nz[0xFF5C] = 'A3FC';\nz[0xFF5D] = 'A3FD';\nz[0xFF5E] = 'A1AB';\nz[0xFFE0] = 'A1E9';\nz[0xFFE1] = 'A1EA';\nz[0xFFE3] = 'A3FE';\nz[0xFFE5] = 'A3A4';\n\nvar qswhSpell = [\"a\", 45217, \"ai\", 45219, \"an\", 45232, \"ang\", 45241, \"ao\", 45244, \"ba\", 45253, \"bai\", 45271, \"ban\",\n45279, \"bang\", 45294, \"bao\", 45306, \"bei\", 45485, \"ben\", 45500, \"beng\", 45504, \"bi\", 45510, \"bian\", 45534,\n\"biao\", 45546, \"bie\", 45550, \"bin\", 45554, \"bing\", 45560, \"bo\", 45731, \"bu\", 45752, \"ca\", 45761, \"cai\", 45762,\n\"can\", 45773, \"cang\", 45780, \"cao\", 45785, \"ce\", 45790, \"ceng\", 45795, \"cha\", 45797, \"chai\", 45808, \"chan\",\n45811, \"chang\", 45821, \"chao\", 45996, \"che\", 46005, \"chen\", 46011, \"cheng\", 46021, \"chi\", 46036, \"chong\", 46052,\n\"chou\", 46057, \"chu\", 46069, \"chuai\", 46247, \"chuan\", 46248, \"chuang\", 46255, \"chui\", 46261, \"chun\", 46266,\n\"chuo\", 46273, \"ci\", 46275, \"cong\", 46287, \"cou\", 46293, \"cu\", 46294, \"cuan\", 46298, \"cui\", 46301, \"cun\", 46309,\n\"cuo\", 46312, \"da\", 46318, \"dai\", 46324, \"dan\", 46498, \"dang\", 46513, \"dao\", 46518, \"de\", 46530, \"deng\", 46533,\n\"di\", 46540, \"dian\", 46559, \"diao\", 46575, \"die\", 46584, \"ding\", 46753, \"diu\", 46762, \"dong\", 46763, \"dou\",\n46773, \"du\", 46780, \"duan\", 46795, \"dui\", 46801, \"dun\", 46805, \"duo\", 46814, \"e\", 46826, \"en\", 46839, \"er\",\n46840, \"fa\", 47010, \"fan\", 47018, \"fang\", 47035, \"fei\", 47046, \"fen\", 47058, \"feng\", 47073, \"fo\", 47088, \"fou\",\n47089, \"fu\", 47090, \"ga\", 47297, \"gai\", 47299, \"gan\", 47305, \"gang\", 47316, \"gao\", 47325, \"ge\", 47335, \"gei\",\n47352, \"gen\", 47353, \"geng\", 47355, \"gong\", 47524, \"gou\", 47539, \"gu\", 47548, \"gua\", 47566, \"guai\", 47572,\n\"guan\", 47575, \"guang\", 47586, \"gui\", 47589, \"gun\", 47605, \"guo\", 47608, \"ha\", 47614, \"hai\", 47777, \"han\",\n47784, \"hang\", 47803, \"hao\", 47806, \"he\", 47815, \"hei\", 47833, \"hen\", 47835, \"heng\", 47839, \"hong\", 47844,\n\"hou\", 47853, \"hu\", 47860, \"hua\", 48040, \"huai\", 48049, \"huan\", 48054, \"huang\", 48068, \"hui\", 48082, \"hun\",\n48103, \"huo\", 48109, \"ji\", 48119, \"jia\", 48334, \"jian\", 48351, \"jiang\", 48553, \"jiao\", 48566, \"jie\", 48594,\n\"jin\", 48621, \"jing\", 48803, \"jiong\", 48828, \"jiu\", 48830, \"ju\", 48847, \"juan\", 48872, \"jue\", 48879, \"jun\",\n48889, \"ka\", 49062, \"kai\", 49066, \"kan\", 49071, \"kang\", 49077, \"kao\", 49084, \"ke\", 49088, \"ken\", 49103, \"keng\",\n49107, \"kong\", 49109, \"kou\", 49113, \"ku\", 49117, \"kua\", 49124, \"kuai\", 49129, \"kuan\", 49133, \"kuang\", 49135,\n\"kui\", 49143, \"kun\", 49316, \"kuo\", 49320, \"la\", 49324, \"lai\", 49331, \"lan\", 49334, \"lang\", 49349, \"lao\", 49356,\n\"le\", 49365, \"lei\", 49367, \"leng\", 49378, \"li\", 49381, \"lia\", 49577, \"lian\", 49578, \"liang\", 49592, \"liao\",\n49603, \"lie\", 49616, \"lin\", 49621, \"ling\", 49633, \"liu\", 49647, \"long\", 49658, \"lou\", 49829, \"lu\", 49835, \"lv\",\n49855, \"luan\", 49869, \"lue\", 49875, \"lun\", 49877, \"luo\", 49884, \"ma\", 49896, \"mai\", 49905, \"man\", 49911, \"mang\",\n50082, \"mao\", 50088, \"me\", 50100, \"mei\", 50101, \"men\", 50117, \"meng\", 50120, \"mi\", 50128, \"mian\", 50142, \"miao\",\n50151, \"mie\", 50159, \"min\", 50161, \"ming\", 50167, \"miu\", 50173, \"mo\", 50174, \"mou\", 50353, \"mu\", 50356, \"na\",\n50371, \"nai\", 50378, \"nan\", 50383, \"nang\", 50386, \"nao\", 50387, \"ne\", 50392, \"nei\", 50393, \"nen\", 50395, \"neng\",\n50396, \"ni\", 50397, \"nian\", 50408, \"niang\", 50415, \"niao\", 50417, \"nie\", 50419, \"nin\", 50426, \"ning\", 50427,\n\"niu\", 50595, \"nong\", 50599, \"nu\", 50603, \"nv\", 50606, \"nuan\", 50607, \"nue\", 50608, \"nuo\", 50610, \"o\", 50614,\n\"ou\", 50615, \"pa\", 50622, \"pai\", 50628, \"pan\", 50634, \"pang\", 50642, \"pao\", 50647, \"pei\", 50654, \"pen\", 50663,\n\"peng\", 50665, \"pi\", 50679, \"pian\", 50858, \"piao\", 50862, \"pie\", 50866, \"pin\", 50868, \"ping\", 50873, \"po\",\n50882, \"pu\", 50891, \"qi\", 50906, \"qia\", 50942, \"qian\", 51107, \"qiang\", 51129, \"qiao\", 51137, \"qie\", 51152,\n\"qin\", 51157, \"qing\", 51168, \"qiong\", 51181, \"qiu\", 51183, \"qu\", 51191, \"quan\", 51366, \"que\", 51377, \"qun\",\n51385, \"ran\", 51387, \"rang\", 51391, \"rao\", 51396, \"re\", 51399, \"ren\", 51401, \"reng\", 51411, \"ri\", 51413, \"rong\",\n51414, \"rou\", 51424, \"ru\", 51427, \"ruan\", 51437, \"rui\", 51439, \"run\", 51442, \"ruo\", 51444, \"sa\", 51446, \"sai\",\n51449, \"san\", 51453, \"sang\", 51619, \"sao\", 51622, \"se\", 51626, \"sen\", 51629, \"seng\", 51630, \"sha\", 51631,\n\"shai\", 51640, \"shan\", 51642, \"shang\", 51658, \"shao\", 51666, \"she\", 51677, \"shen\", 51689, \"sheng\", 51705, \"shi\",\n51878, \"shou\", 51925, \"shu\", 51935, \"shua\", 52130, \"shuai\", 52132, \"shuan\", 52136, \"shuang\", 52138, \"shui\",\n52141, \"shun\", 52145, \"shuo\", 52149, \"si\", 52153, \"song\", 52169, \"sou\", 52177, \"su\", 52180, \"suan\", 52193,\n\"sui\", 52196, \"sun\", 52207, \"suo\", 52210, \"ta\", 52218, \"tai\", 52389, \"tan\", 52398, \"tang\", 52416, \"tao\", 52429,\n\"te\", 52440, \"teng\", 52441, \"ti\", 52445, \"tian\", 52460, \"tiao\", 52468, \"tie\", 52473, \"ting\", 52476, \"tong\",\n52648, \"tou\", 52661, \"tu\", 52665, \"tuan\", 52676, \"tui\", 52678, \"tun\", 52684, \"tuo\", 52687, \"wa\", 52698, \"wai\",\n52705, \"wan\", 52707, \"wang\", 52724, \"wei\", 52734, \"wen\", 52929, \"weng\", 52939, \"wo\", 52942, \"wu\", 52951, \"xi\",\n52980, \"xia\", 53177, \"xian\", 53190, \"xiang\", 53216, \"xiao\", 53236, \"xie\", 53416, \"xin\", 53437, \"xing\", 53447,\n\"xiong\", 53462, \"xiu\", 53469, \"xu\", 53478, \"xuan\", 53497, \"xue\", 53669, \"xun\", 53675, \"ya\", 53689, \"yan\", 53705,\n\"yang\", 53738, \"yao\", 53755, \"ye\", 53932, \"yi\", 53947, \"yin\", 54000, \"ying\", 54178, \"yo\", 54196, \"yong\", 54197,\n\"you\", 54212, \"yu\", 54233, \"yuan\", 54439, \"yue\", 54459, \"yun\", 54469, \"za\", 54481, \"zai\", 54484, \"zan\", 54491,\n\"zang\", 54495, \"zao\", 54498, \"ze\", 54512, \"zei\", 54516, \"zen\", 54517, \"zeng\", 54518, \"zha\", 54522, \"zhai\",\n54698, \"zhan\", 54704, \"zhang\", 54721, \"zhao\", 54736, \"zhe\", 54746, \"zhen\", 54756, \"zheng\", 54772, \"zhi\", 54949,\n\"zhong\", 54992, \"zhou\", 55003, \"zhu\", 55017, \"zhua\", 55205, \"zhuai\", 55207, \"zhuan\", 55208, \"zhuang\", 55214,\n\"zhui\", 55221, \"zhun\", 55227, \"zhuo\", 55229, \"zi\", 55240, \"zong\", 55255, \"zou\", 55262, \"zu\", 55266, \"zuan\",\n55274, \"zui\", 55276, \"zun\", 55280, \"zuo\", 55282];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///113\n");

/***/ }),
/* 114 */
/*!***************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/book.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}var\n\ndateFormat = _util.default.dateFormat;var\n\nBook =\nfunction Book(_ref) {var title = _ref.title,bookId = _ref.bookId,commentId = _ref.commentId,src = _ref.src,cover = _ref.cover,author = _ref.author,desc = _ref.desc,payread = _ref.payread,readnum = _ref.readnum,isEnd = _ref.isEnd,lastChapter = _ref.lastChapter,size = _ref.size,style = _ref.style,tag = _ref.tag,isAdult = _ref.isAdult,extra = _ref.extra,type = _ref.type,createTime = _ref.createTime,updateTime = _ref.updateTime,source = _ref.source;_classCallCheck(this, Book);\n  this.id = (bookId || '') + '_' + source;\n  this.title = title || ''; //名称\n  this.bookId = bookId || ''; //书籍ID\n  this.commentId = commentId || ''; //评论ID\n  this.src = src || ''; //本地路径\n  this.cover = cover || '/static/cover/cover_default.jpg'; //封面\n  this.author = author || '不详'; //作者\n  this.desc = desc || ''; //介绍\n  this.payread = payread || false; //是否需要支付观看\n  this.readnum = readnum || 0; //阅读次数\n  this.isEnd = isEnd || false; //是否完结\n  this.lastChapter = lastChapter || ''; //最新章节\n  this.size = size || ''; //小说大小\n  this.style = style || ''; //风格\n  this.tag = tag || []; //标签\n  this.isAdult = isAdult || false; //是否青壮年内容\n  this.extra = extra || {}; //附加字段\n  this.type = type || 'story'; //书籍类型 <story | 小说> <comic | 漫画>\n  this.createTime = createTime || dateFormat(new Date().getTime());\n  this.updateTime = updateTime || '';\n  this.source = source; //来源\n};exports.default = Book;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2Jvb2suanMiXSwibmFtZXMiOlsiZGF0ZUZvcm1hdCIsIlV0aWxzIiwiQm9vayIsInRpdGxlIiwiYm9va0lkIiwiY29tbWVudElkIiwic3JjIiwiY292ZXIiLCJhdXRob3IiLCJkZXNjIiwicGF5cmVhZCIsInJlYWRudW0iLCJpc0VuZCIsImxhc3RDaGFwdGVyIiwic2l6ZSIsInN0eWxlIiwidGFnIiwiaXNBZHVsdCIsImV4dHJhIiwidHlwZSIsImNyZWF0ZVRpbWUiLCJ1cGRhdGVUaW1lIiwic291cmNlIiwiaWQiLCJEYXRlIiwiZ2V0VGltZSJdLCJtYXBwaW5ncyI6IjtBQUNBLHVGOztBQUVRQSxVLEdBQWVDLGEsQ0FBZkQsVTs7QUFFYUUsSTtBQUNwQixvQkFBaUwsS0FBcEtDLEtBQW9LLFFBQXBLQSxLQUFvSyxDQUE3SkMsTUFBNkosUUFBN0pBLE1BQTZKLENBQXJKQyxTQUFxSixRQUFySkEsU0FBcUosQ0FBMUlDLEdBQTBJLFFBQTFJQSxHQUEwSSxDQUFySUMsS0FBcUksUUFBcklBLEtBQXFJLENBQTlIQyxNQUE4SCxRQUE5SEEsTUFBOEgsQ0FBdEhDLElBQXNILFFBQXRIQSxJQUFzSCxDQUFoSEMsT0FBZ0gsUUFBaEhBLE9BQWdILENBQXZHQyxPQUF1RyxRQUF2R0EsT0FBdUcsQ0FBOUZDLEtBQThGLFFBQTlGQSxLQUE4RixDQUF2RkMsV0FBdUYsUUFBdkZBLFdBQXVGLENBQTFFQyxJQUEwRSxRQUExRUEsSUFBMEUsQ0FBcEVDLEtBQW9FLFFBQXBFQSxLQUFvRSxDQUE3REMsR0FBNkQsUUFBN0RBLEdBQTZELENBQXhEQyxPQUF3RCxRQUF4REEsT0FBd0QsQ0FBL0NDLEtBQStDLFFBQS9DQSxLQUErQyxDQUF4Q0MsSUFBd0MsUUFBeENBLElBQXdDLENBQWxDQyxVQUFrQyxRQUFsQ0EsVUFBa0MsQ0FBdEJDLFVBQXNCLFFBQXRCQSxVQUFzQixDQUFWQyxNQUFVLFFBQVZBLE1BQVU7QUFDaEwsT0FBS0MsRUFBTCxHQUFVLENBQUNuQixNQUFNLElBQUksRUFBWCxJQUFpQixHQUFqQixHQUF1QmtCLE1BQWpDO0FBQ0UsT0FBS25CLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBRjhLLENBRXRKO0FBQ3hCLE9BQUtDLE1BQUwsR0FBY0EsTUFBTSxJQUFJLEVBQXhCLENBSDhLLENBR3BKO0FBQzFCLE9BQUtDLFNBQUwsR0FBaUJBLFNBQVMsSUFBSSxFQUE5QixDQUo4SyxDQUk5STtBQUNoQyxPQUFLQyxHQUFMLEdBQVdBLEdBQUcsSUFBSSxFQUFsQixDQUw4SyxDQUsxSjtBQUNwQixPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSxpQ0FBdEIsQ0FOOEssQ0FNdkg7QUFDdkQsT0FBS0MsTUFBTCxHQUFjQSxNQUFNLElBQUksSUFBeEIsQ0FQOEssQ0FPbEo7QUFDNUIsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FSOEssQ0FReEo7QUFDdEIsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksS0FBMUIsQ0FUOEssQ0FTL0k7QUFDL0IsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksQ0FBMUIsQ0FWOEssQ0FVbko7QUFDN0IsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksS0FBdEIsQ0FYZ0wsQ0FXcko7QUFDM0IsT0FBS0MsV0FBTCxHQUFtQkEsV0FBVyxJQUFJLEVBQWxDLENBWmdMLENBWTVJO0FBQ3BDLE9BQUtDLElBQUwsR0FBWUEsSUFBSSxJQUFJLEVBQXBCLENBYmdMLENBYTFKO0FBQ3RCLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCLENBZGdMLENBY3hKO0FBQ3hCLE9BQUtDLEdBQUwsR0FBV0EsR0FBRyxJQUFJLEVBQWxCLENBZmdMLENBZTVKO0FBQ3BCLE9BQUtDLE9BQUwsR0FBZUEsT0FBTyxJQUFJLEtBQTFCLENBaEJnTCxDQWdCako7QUFDN0IsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEIsQ0FqQjhLLENBaUJ0SjtBQUN4QixPQUFLQyxJQUFMLEdBQVlBLElBQUksSUFBSSxPQUFwQixDQWxCOEssQ0FrQm5KO0FBQzdCLE9BQUtDLFVBQUwsR0FBa0JBLFVBQVUsSUFBSXBCLFVBQVUsQ0FBQyxJQUFJd0IsSUFBSixHQUFXQyxPQUFYLEVBQUQsQ0FBMUM7QUFDQSxPQUFLSixVQUFMLEdBQWtCQSxVQUFVLElBQUksRUFBaEM7QUFDRSxPQUFLQyxNQUFMLEdBQWNBLE1BQWQsQ0FyQjhLLENBcUIxSjtBQUN0QixDIiwiZmlsZSI6IjExNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8v5Lmm57GNXHJcbmltcG9ydCBVdGlscyBmcm9tICdAL2Fzc2V0cy9qcy91dGlsLmpzJ1xyXG5cclxuY29uc3QgeyBkYXRlRm9ybWF0IH0gPSBVdGlscztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvb2sge1xyXG5cdGNvbnN0cnVjdG9yKHt0aXRsZSwgYm9va0lkLCBjb21tZW50SWQsIHNyYywgY292ZXIsIGF1dGhvciwgZGVzYywgcGF5cmVhZCwgcmVhZG51bSwgaXNFbmQsIGxhc3RDaGFwdGVyLCBzaXplLCBzdHlsZSwgdGFnLCBpc0FkdWx0LCBleHRyYSwgdHlwZSwgY3JlYXRlVGltZSwgdXBkYXRlVGltZSwgc291cmNlIH0pIHtcclxuXHRcdHRoaXMuaWQgPSAoYm9va0lkIHx8ICcnKSArICdfJyArIHNvdXJjZVxyXG5cdCAgXHR0aGlzLnRpdGxlID0gdGl0bGUgfHwgJycvL+WQjeensFxyXG5cdCAgXHR0aGlzLmJvb2tJZCA9IGJvb2tJZCB8fCAnJy8v5Lmm57GNSURcclxuXHQgIFx0dGhpcy5jb21tZW50SWQgPSBjb21tZW50SWQgfHwgJycvL+ivhOiuuklEXHJcblx0ICBcdHRoaXMuc3JjID0gc3JjIHx8ICcnLy/mnKzlnLDot6/lvoRcclxuXHQgIFx0dGhpcy5jb3ZlciA9IGNvdmVyIHx8ICcvc3RhdGljL2NvdmVyL2NvdmVyX2RlZmF1bHQuanBnJy8v5bCB6Z2iXHJcblx0ICBcdHRoaXMuYXV0aG9yID0gYXV0aG9yIHx8ICfkuI3or6YnLy/kvZzogIVcclxuXHQgIFx0dGhpcy5kZXNjID0gZGVzYyB8fCAnJy8v5LuL57uNXHJcblx0ICBcdHRoaXMucGF5cmVhZCA9IHBheXJlYWQgfHwgZmFsc2UvL+aYr+WQpumcgOimgeaUr+S7mOingueci1xyXG5cdCAgXHR0aGlzLnJlYWRudW0gPSByZWFkbnVtIHx8IDAvL+mYheivu+asoeaVsFxyXG5cdFx0dGhpcy5pc0VuZCA9IGlzRW5kIHx8IGZhbHNlLy/mmK/lkKblroznu5NcclxuXHRcdHRoaXMubGFzdENoYXB0ZXIgPSBsYXN0Q2hhcHRlciB8fCAnJy8v5pyA5paw56ug6IqCXHJcblx0XHR0aGlzLnNpemUgPSBzaXplIHx8ICcnLy/lsI/or7TlpKflsI9cclxuXHRcdHRoaXMuc3R5bGUgPSBzdHlsZSB8fCAnJy8v6aOO5qC8XHJcblx0XHR0aGlzLnRhZyA9IHRhZyB8fCBbXS8v5qCH562+XHJcblx0XHR0aGlzLmlzQWR1bHQgPSBpc0FkdWx0IHx8IGZhbHNlLy/mmK/lkKbpnZLlo67lubTlhoXlrrlcclxuXHQgIFx0dGhpcy5leHRyYSA9IGV4dHJhIHx8IHt9Ly/pmYTliqDlrZfmrrVcclxuXHQgIFx0dGhpcy50eXBlID0gdHlwZSB8fCAnc3RvcnknLy/kuabnsY3nsbvlnosgPHN0b3J5IHwg5bCP6K+0PiA8Y29taWMgfCDmvKvnlLs+XHJcblx0XHR0aGlzLmNyZWF0ZVRpbWUgPSBjcmVhdGVUaW1lIHx8IGRhdGVGb3JtYXQobmV3IERhdGUoKS5nZXRUaW1lKCkpXHJcblx0XHR0aGlzLnVwZGF0ZVRpbWUgPSB1cGRhdGVUaW1lIHx8ICcnXHJcblx0ICBcdHRoaXMuc291cmNlID0gc291cmNlLy/mnaXmupBcclxuXHR9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///114\n");

/***/ }),
/* 115 */
/*!********************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/bookshelf.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //书单\nvar\nBookshelf =\nfunction Bookshelf(_ref) {var shelfId = _ref.shelfId,commentId = _ref.commentId,title = _ref.title,cover = _ref.cover,desc = _ref.desc,book = _ref.book,creator = _ref.creator,readnum = _ref.readnum,style = _ref.style,tag = _ref.tag,isAdult = _ref.isAdult,extra = _ref.extra,type = _ref.type,source = _ref.source;_classCallCheck(this, Bookshelf);\n  this.id = shelfId + '_' + source;\n  this.shelfId = shelfId; //书单ID\n  this.commentId = commentId || ''; //评论ID\n  this.title = title; //名称\n  this.cover = cover || '/static/book/rank_' + Math.floor(Math.random() * 6 + 1) + '.jpg'; //封面\n  this.desc = desc || ''; //介绍\n  this.book = book || []; //书籍集合\n  this.creator = creator || '不详'; //创建者\n  this.readnum = readnum || 0; //阅读次数\n  this.style = style || ''; //风格\n  this.tag = tag || []; //标签\n  this.isAdult = isAdult || false; //是否青壮年内容\n  this.extra = extra || {}; //附加字段\n  this.type = type || 'story'; //type包含 story:<小说> comic: <漫画>\n  this.source = source; //来源\n};exports.default = Bookshelf;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2Jvb2tzaGVsZi5qcyJdLCJuYW1lcyI6WyJCb29rc2hlbGYiLCJzaGVsZklkIiwiY29tbWVudElkIiwidGl0bGUiLCJjb3ZlciIsImRlc2MiLCJib29rIiwiY3JlYXRvciIsInJlYWRudW0iLCJzdHlsZSIsInRhZyIsImlzQWR1bHQiLCJleHRyYSIsInR5cGUiLCJzb3VyY2UiLCJpZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSJdLCJtYXBwaW5ncyI6IjZPQUFBOztBQUVxQkEsUztBQUNwQix5QkFBd0gsS0FBM0dDLE9BQTJHLFFBQTNHQSxPQUEyRyxDQUFsR0MsU0FBa0csUUFBbEdBLFNBQWtHLENBQXZGQyxLQUF1RixRQUF2RkEsS0FBdUYsQ0FBaEZDLEtBQWdGLFFBQWhGQSxLQUFnRixDQUF6RUMsSUFBeUUsUUFBekVBLElBQXlFLENBQW5FQyxJQUFtRSxRQUFuRUEsSUFBbUUsQ0FBN0RDLE9BQTZELFFBQTdEQSxPQUE2RCxDQUFwREMsT0FBb0QsUUFBcERBLE9BQW9ELENBQTNDQyxLQUEyQyxRQUEzQ0EsS0FBMkMsQ0FBcENDLEdBQW9DLFFBQXBDQSxHQUFvQyxDQUEvQkMsT0FBK0IsUUFBL0JBLE9BQStCLENBQXRCQyxLQUFzQixRQUF0QkEsS0FBc0IsQ0FBZkMsSUFBZSxRQUFmQSxJQUFlLENBQVRDLE1BQVMsUUFBVEEsTUFBUztBQUN2SCxPQUFLQyxFQUFMLEdBQVVkLE9BQU8sR0FBRyxHQUFWLEdBQWdCYSxNQUExQjtBQUNBLE9BQUtiLE9BQUwsR0FBZUEsT0FBZixDQUZ1SCxDQUVoRztBQUN2QixPQUFLQyxTQUFMLEdBQWlCQSxTQUFTLElBQUksRUFBOUIsQ0FIdUgsQ0FHdEY7QUFDakMsT0FBS0MsS0FBTCxHQUFhQSxLQUFiLENBSnVILENBSXBHO0FBQ25CLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFLLHVCQUF1QlksSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFjLENBQWQsR0FBa0IsQ0FBN0IsQ0FBdkIsR0FBeUQsTUFBaEYsQ0FMdUgsQ0FLL0I7QUFDeEYsT0FBS2IsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FOdUgsQ0FNaEc7QUFDdkIsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksRUFBcEIsQ0FQdUgsQ0FPaEc7QUFDdkIsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksSUFBMUIsQ0FSdUgsQ0FReEY7QUFDL0IsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksQ0FBMUIsQ0FUdUgsQ0FTM0Y7QUFDNUIsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEIsQ0FWdUgsQ0FVL0Y7QUFDeEIsT0FBS0MsR0FBTCxHQUFXQSxHQUFHLElBQUksRUFBbEIsQ0FYdUgsQ0FXbkc7QUFDcEIsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksS0FBMUIsQ0FadUgsQ0FZeEY7QUFDL0IsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEIsQ0FidUgsQ0FhOUY7QUFDekIsT0FBS0MsSUFBTCxHQUFZQSxJQUFJLElBQUksT0FBcEIsQ0FkdUgsQ0FjM0Y7QUFDNUIsT0FBS0MsTUFBTCxHQUFjQSxNQUFkLENBZnVILENBZWxHO0FBQ3JCLEMiLCJmaWxlIjoiMTE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy/kuabljZVcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvb2tzaGVsZiB7XHJcblx0Y29uc3RydWN0b3Ioe3NoZWxmSWQsIGNvbW1lbnRJZCwgdGl0bGUsIGNvdmVyLCBkZXNjLCBib29rLCBjcmVhdG9yLCByZWFkbnVtLCBzdHlsZSwgdGFnLCBpc0FkdWx0LCBleHRyYSwgdHlwZSwgc291cmNlfSkge1xyXG5cdFx0dGhpcy5pZCA9IHNoZWxmSWQgKyAnXycgKyBzb3VyY2VcclxuXHRcdHRoaXMuc2hlbGZJZCA9IHNoZWxmSWQgLy/kuabljZVJRFxyXG5cdFx0dGhpcy5jb21tZW50SWQgPSBjb21tZW50SWQgfHwgJycgLy/or4TorrpJRFxyXG5cdFx0dGhpcy50aXRsZSA9IHRpdGxlIC8v5ZCN56ewXHJcblx0XHR0aGlzLmNvdmVyID0gY292ZXIgfHwgKCcvc3RhdGljL2Jvb2svcmFua18nICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKjYgKyAxKSArICcuanBnJykgLy/lsIHpnaJcclxuXHRcdHRoaXMuZGVzYyA9IGRlc2MgfHwgJycgLy/ku4vnu41cclxuXHRcdHRoaXMuYm9vayA9IGJvb2sgfHwgW10gLy/kuabnsY3pm4blkIhcclxuXHRcdHRoaXMuY3JlYXRvciA9IGNyZWF0b3IgfHwgJ+S4jeivpicgLy/liJvlu7rogIVcclxuXHRcdHRoaXMucmVhZG51bSA9IHJlYWRudW0gfHwgMCAvL+mYheivu+asoeaVsFxyXG5cdFx0dGhpcy5zdHlsZSA9IHN0eWxlIHx8ICcnLy/po47moLxcclxuXHRcdHRoaXMudGFnID0gdGFnIHx8IFtdLy/moIfnrb5cclxuXHRcdHRoaXMuaXNBZHVsdCA9IGlzQWR1bHQgfHwgZmFsc2UvL+aYr+WQpumdkuWjruW5tOWGheWuuVxyXG5cdFx0dGhpcy5leHRyYSA9IGV4dHJhIHx8IHt9IC8v6ZmE5Yqg5a2X5q61XHJcblx0XHR0aGlzLnR5cGUgPSB0eXBlIHx8ICdzdG9yeScgLy90eXBl5YyF5ZCrIHN0b3J5OjzlsI/or7Q+IGNvbWljOiA85ryr55S7PlxyXG5cdFx0dGhpcy5zb3VyY2UgPSBzb3VyY2UgLy/mnaXmupBcclxuXHR9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///115\n");

/***/ }),
/* 116 */
/*!******************************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/constructor/chapter.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}} //书籍章节\nvar\nChapter =\nfunction Chapter(_ref) {var id = _ref.id,commentId = _ref.commentId,title = _ref.title,chapter = _ref.chapter,isStart = _ref.isStart,isEnd = _ref.isEnd,content = _ref.content,payread = _ref.payread,extra = _ref.extra,source = _ref.source;_classCallCheck(this, Chapter);\n  this.id = id;\n  this.commentId = commentId || '';\n  this.title = title || '';\n  this.chapter = chapter;\n  this.isStart = isStart || false;\n  this.isEnd = isEnd || false;\n  this.content = content || null;\n  this.payread = payread || false; //该章节是否需要支付观看\n  this.extra = extra || {};\n  this.source = source;\n};exports.default = Chapter;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2NvbnN0cnVjdG9yL2NoYXB0ZXIuanMiXSwibmFtZXMiOlsiQ2hhcHRlciIsImlkIiwiY29tbWVudElkIiwidGl0bGUiLCJjaGFwdGVyIiwiaXNTdGFydCIsImlzRW5kIiwiY29udGVudCIsInBheXJlYWQiLCJleHRyYSIsInNvdXJjZSJdLCJtYXBwaW5ncyI6IjZPQUFBOztBQUVxQkEsTztBQUNwQix1QkFBOEYsS0FBakZDLEVBQWlGLFFBQWpGQSxFQUFpRixDQUE3RUMsU0FBNkUsUUFBN0VBLFNBQTZFLENBQWxFQyxLQUFrRSxRQUFsRUEsS0FBa0UsQ0FBM0RDLE9BQTJELFFBQTNEQSxPQUEyRCxDQUFsREMsT0FBa0QsUUFBbERBLE9BQWtELENBQXpDQyxLQUF5QyxRQUF6Q0EsS0FBeUMsQ0FBbENDLE9BQWtDLFFBQWxDQSxPQUFrQyxDQUF6QkMsT0FBeUIsUUFBekJBLE9BQXlCLENBQWhCQyxLQUFnQixRQUFoQkEsS0FBZ0IsQ0FBVEMsTUFBUyxRQUFUQSxNQUFTO0FBQzdGLE9BQUtULEVBQUwsR0FBVUEsRUFBVjtBQUNBLE9BQUtDLFNBQUwsR0FBaUJBLFNBQVMsSUFBSSxFQUE5QjtBQUNBLE9BQUtDLEtBQUwsR0FBYUEsS0FBSyxJQUFJLEVBQXRCO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksS0FBMUI7QUFDQSxPQUFLQyxLQUFMLEdBQWFBLEtBQUssSUFBSSxLQUF0QjtBQUNBLE9BQUtDLE9BQUwsR0FBZUEsT0FBTyxJQUFJLElBQTFCO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFPLElBQUksS0FBMUIsQ0FSNkYsQ0FROUQ7QUFDL0IsT0FBS0MsS0FBTCxHQUFhQSxLQUFLLElBQUksRUFBdEI7QUFDQSxPQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxDIiwiZmlsZSI6IjExNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8v5Lmm57GN56ug6IqCXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFwdGVyIHtcclxuXHRjb25zdHJ1Y3Rvcih7aWQsIGNvbW1lbnRJZCwgdGl0bGUsIGNoYXB0ZXIsIGlzU3RhcnQsIGlzRW5kLCBjb250ZW50LCBwYXlyZWFkLCBleHRyYSwgc291cmNlfSkge1xyXG5cdFx0dGhpcy5pZCA9IGlkXHJcblx0XHR0aGlzLmNvbW1lbnRJZCA9IGNvbW1lbnRJZCB8fCAnJ1xyXG5cdFx0dGhpcy50aXRsZSA9IHRpdGxlIHx8ICcnXHJcblx0XHR0aGlzLmNoYXB0ZXIgPSBjaGFwdGVyXHJcblx0XHR0aGlzLmlzU3RhcnQgPSBpc1N0YXJ0IHx8IGZhbHNlXHJcblx0XHR0aGlzLmlzRW5kID0gaXNFbmQgfHwgZmFsc2VcclxuXHRcdHRoaXMuY29udGVudCA9IGNvbnRlbnQgfHwgbnVsbFxyXG5cdFx0dGhpcy5wYXlyZWFkID0gcGF5cmVhZCB8fCBmYWxzZS8v6K+l56ug6IqC5piv5ZCm6ZyA6KaB5pSv5LuY6KeC55yLXHJcblx0XHR0aGlzLmV4dHJhID0gZXh0cmEgfHwge31cclxuXHRcdHRoaXMuc291cmNlID0gc291cmNlXHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///116\n");

/***/ }),
/* 117 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/api/comic.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/plugins/request/index.js */ 57));\nvar _index2 = _interopRequireDefault(__webpack_require__(/*! @/plugins/xhr/index.js */ 60));\nvar _gb = _interopRequireDefault(__webpack_require__(/*! @/assets/other/gb2312.js */ 113));\nvar _book = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/book.js */ 114));\nvar _bookshelf = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/bookshelf.js */ 115));\nvar _chapter = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/chapter.js */ 116));\nvar _comment = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/comment.js */ 97));\nvar _global = __webpack_require__(/*! @/assets/api/global.js */ 103);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // 获取 Vuex Store 实例，注意是**实例**，而不是 vuex 这个库\nvar\ngetters = _store.default.getters;var\nERR_OK = _config.default.ERR_OK,ERR_FALSE = _config.default.ERR_FALSE;var\ndateFormat = _util.default.dateFormat,time2seconds = _util.default.time2seconds;\nvar context = {\n  xhr: _index2.default,\n  http: _index.default,\n  gb2312: _gb.default,\n  Book: _book.default,\n  Bookshelf: _bookshelf.default,\n  Chapter: _chapter.default,\n  Comment: _comment.default,\n  ERR_OK: ERR_OK,\n  ERR_FALSE: ERR_FALSE,\n  replaceHTML: _global.replaceHTML,\n  htmlDecodeByRegExp: _global.htmlDecodeByRegExp,\n  getTag: _global.getTag,\n  dateFormat: dateFormat,\n  time2seconds: time2seconds };var _default =\n\n\n{\n  //搜索列表\n  search: function search() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'comic';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$searc;\n      if (((_source$request$searc = source.request.search) === null || _source$request$searc === void 0 ? void 0 : _source$request$searc.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.search.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取热门搜索关键词\n  getHotKeyword: function getHotKeyword() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'comic';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getHo;\n      if (((_source$request$getHo = source.request.getHotKeyword) === null || _source$request$getHo === void 0 ? void 0 : _source$request$getHo.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getHotKeyword.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n\n  //获取热门推荐\n  getRecome: function getRecome() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'comic';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getRe;\n      if (((_source$request$getRe = source.request.getRecome) === null || _source$request$getRe === void 0 ? void 0 : _source$request$getRe.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getRecome.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取分类列表\n  getTypeList: function getTypeList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'comic';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getTy;\n      if (((_source$request$getTy = source.request.getTypeList) === null || _source$request$getTy === void 0 ? void 0 : _source$request$getTy.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getTypeList.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取分类详情\n  getTypeDetail: function getTypeDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getTypeDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取书籍详情\n  getDetail: function getDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取书籍内容\n  getContent: function getContent() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getContent.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取评论\n  getComment: function getComment() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getComment.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2FwaS9jb21pYy5qcyJdLCJuYW1lcyI6WyJnZXR0ZXJzIiwiU3RvcmUiLCJFUlJfT0siLCJDb25maWciLCJFUlJfRkFMU0UiLCJkYXRlRm9ybWF0IiwiVXRpbHMiLCJ0aW1lMnNlY29uZHMiLCJjb250ZXh0IiwieGhyIiwiaHR0cCIsImdiMjMxMiIsIkJvb2siLCJCb29rc2hlbGYiLCJDaGFwdGVyIiwiQ29tbWVudCIsInJlcGxhY2VIVE1MIiwiaHRtbERlY29kZUJ5UmVnRXhwIiwiZ2V0VGFnIiwic2VhcmNoIiwiZGF0YSIsIm5ld0FyciIsInNvdXJjZXMiLCJmaWx0ZXIiLCJzb3VyY2UiLCJ0eXBlIiwiYWR1bHQiLCJmb3JFYWNoIiwicmVxdWVzdCIsInZhbHVlIiwiaXNBZHVsdCIsImlzT3BlbiIsImJhc2VVcmwiLCJocmVmIiwiaWQiLCJoYW5kbGUiLCJldmFsIiwicHVzaCIsImUiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNvZGUiLCJhbGwiLCJtYXAiLCJwcm9taXNlIiwiY2F0Y2giLCJnZXRIb3RLZXl3b3JkIiwiZ2V0UmVjb21lIiwiZ2V0VHlwZUxpc3QiLCJnZXRUeXBlRGV0YWlsIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJnZXREZXRhaWwiLCJnZXRDb250ZW50IiwiZ2V0Q29tbWVudCJdLCJtYXBwaW5ncyI6InVGQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUUsOEZBVjRCOztBQVlwQkEsTyxHQUFZQyxjLENBQVpELE87QUFDQUUsTSxHQUFzQkMsZSxDQUF0QkQsTSxDQUFRRSxTLEdBQWNELGUsQ0FBZEMsUztBQUNSQyxVLEdBQTZCQyxhLENBQTdCRCxVLENBQVlFLFksR0FBaUJELGEsQ0FBakJDLFk7QUFDcEIsSUFBTUMsT0FBTyxHQUFHO0FBQ2ZDLEtBQUcsRUFBRUEsZUFEVTtBQUVmQyxNQUFJLEVBQUVBLGNBRlM7QUFHZkMsUUFBTSxFQUFFQSxXQUhPO0FBSWZDLE1BQUksRUFBRUEsYUFKUztBQUtmQyxXQUFTLEVBQUVBLGtCQUxJO0FBTWZDLFNBQU8sRUFBRUEsZ0JBTk07QUFPZkMsU0FBTyxFQUFFQSxnQkFQTTtBQVFmYixRQUFNLEVBQUVBLE1BUk87QUFTZkUsV0FBUyxFQUFFQSxTQVRJO0FBVWZZLGFBQVcsRUFBRUEsbUJBVkU7QUFXZkMsb0JBQWtCLEVBQUVBLDBCQVhMO0FBWWZDLFFBQU0sRUFBRUEsY0FaTztBQWFmYixZQUFVLEVBQUVBLFVBYkc7QUFjZkUsY0FBWSxFQUFFQSxZQWRDLEVBQWhCLEM7OztBQWlCZTtBQUNkO0FBQ0FZLFFBRmMsb0JBRUssS0FBWEMsSUFBVyx1RUFBSixFQUFJO0FBQ2xCLFFBQUlDLE1BQU0sR0FBRyxFQUFiO0FBQ0EsUUFBTUMsT0FBTyxHQUFHdEIsT0FBTyxDQUFDLFlBQUQsQ0FBUCxDQUFzQnVCLE1BQXRCLENBQTZCLFVBQUFDLE1BQU0sVUFBSUEsTUFBTSxDQUFDQyxJQUFQLElBQWUsT0FBbkIsRUFBbkMsQ0FBaEI7QUFDQSxRQUFNQyxLQUFLLEdBQUcxQixPQUFPLENBQUMsY0FBRCxDQUFyQjtBQUNBc0IsV0FBTyxDQUFDSyxPQUFSLENBQWdCLFVBQUFILE1BQU0sRUFBSTtBQUN6QixVQUFLLDBCQUFBQSxNQUFNLENBQUNJLE9BQVAsQ0FBZVQsTUFBZixnRkFBdUJVLEtBQXZCLE1BQWlDTCxNQUFNLENBQUNNLE9BQVAsSUFBa0JKLEtBQW5ELEtBQTZERixNQUFNLENBQUNPLE1BQXpFLEVBQWtGO0FBQ2pGWCxZQUFJLENBQUNZLE9BQUwsR0FBZVIsTUFBTSxDQUFDUyxJQUF0QjtBQUNBYixZQUFJLENBQUNJLE1BQUwsR0FBY0EsTUFBTSxDQUFDVSxFQUFyQjtBQUNBLFlBQUc7QUFDRixjQUFJQyxNQUFNLEdBQUdDLElBQUksQ0FBQyxNQUFNWixNQUFNLENBQUNJLE9BQVAsQ0FBZVQsTUFBZixDQUFzQlUsS0FBNUIsR0FBb0MsR0FBckMsQ0FBakI7QUFDQVIsZ0JBQU0sQ0FBQ2dCLElBQVAsQ0FBWUYsTUFBTSxDQUFDM0IsT0FBRCxFQUFVWSxJQUFWLENBQWxCO0FBQ0EsU0FIRCxDQUdDLE9BQU1rQixDQUFOLEVBQVE7QUFDUmpCLGdCQUFNLENBQUNnQixJQUFQO0FBQ0NFLGlCQUFPLENBQUNDLE9BQVIsQ0FBZ0I7QUFDZkMsZ0JBQUksRUFBRXJDLFNBRFM7QUFFZmdCLGdCQUFJLEVBQUUsSUFGUyxFQUFoQixDQUREOzs7QUFNQTtBQUNEO0FBQ0QsS0FoQkQ7QUFpQkEsV0FBT21CLE9BQU8sQ0FBQ0csR0FBUixDQUFZckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFVBQUNDLE9BQUQsVUFBV0EsT0FBTyxDQUFDQyxLQUFSLENBQWMsVUFBQ1AsQ0FBRCxFQUFLLENBQUNNLE9BQU8sQ0FBQ0osT0FBUixDQUFnQkYsQ0FBaEIsRUFBbUIsQ0FBdkMsQ0FBWCxFQUFYLENBQVosQ0FBUDtBQUNBLEdBeEJhO0FBeUJkO0FBQ0FRLGVBMUJjLDJCQTBCWSxLQUFYMUIsSUFBVyx1RUFBSixFQUFJO0FBQ3pCLFFBQUlDLE1BQU0sR0FBRyxFQUFiO0FBQ0EsUUFBTUMsT0FBTyxHQUFHdEIsT0FBTyxDQUFDLFlBQUQsQ0FBUCxDQUFzQnVCLE1BQXRCLENBQTZCLFVBQUFDLE1BQU0sVUFBSUEsTUFBTSxDQUFDQyxJQUFQLElBQWUsT0FBbkIsRUFBbkMsQ0FBaEI7QUFDQSxRQUFNQyxLQUFLLEdBQUcxQixPQUFPLENBQUMsY0FBRCxDQUFyQjtBQUNBc0IsV0FBTyxDQUFDSyxPQUFSLENBQWdCLFVBQUFILE1BQU0sRUFBSTtBQUN6QixVQUFLLDBCQUFBQSxNQUFNLENBQUNJLE9BQVAsQ0FBZWtCLGFBQWYsZ0ZBQThCakIsS0FBOUIsTUFBd0NMLE1BQU0sQ0FBQ00sT0FBUCxJQUFrQkosS0FBMUQsS0FBb0VGLE1BQU0sQ0FBQ08sTUFBaEYsRUFBeUY7QUFDeEZYLFlBQUksQ0FBQ1ksT0FBTCxHQUFlUixNQUFNLENBQUNTLElBQXRCO0FBQ0FiLFlBQUksQ0FBQ0ksTUFBTCxHQUFjQSxNQUFNLENBQUNVLEVBQXJCO0FBQ0EsWUFBRztBQUNGLGNBQUlDLE1BQU0sR0FBR0MsSUFBSSxDQUFDLE1BQU1aLE1BQU0sQ0FBQ0ksT0FBUCxDQUFla0IsYUFBZixDQUE2QmpCLEtBQW5DLEdBQTJDLEdBQTVDLENBQWpCO0FBQ0FSLGdCQUFNLENBQUNnQixJQUFQLENBQVlGLE1BQU0sQ0FBQzNCLE9BQUQsRUFBVVksSUFBVixDQUFsQjtBQUNBLFNBSEQsQ0FHQyxPQUFNa0IsQ0FBTixFQUFRO0FBQ1JqQixnQkFBTSxDQUFDZ0IsSUFBUDtBQUNDRSxpQkFBTyxDQUFDQyxPQUFSLENBQWdCO0FBQ2ZDLGdCQUFJLEVBQUVyQyxTQURTO0FBRWZnQixnQkFBSSxFQUFFLElBRlMsRUFBaEIsQ0FERDs7O0FBTUE7QUFDRDtBQUNELEtBaEJEO0FBaUJBLFdBQU9tQixPQUFPLENBQUNHLEdBQVIsQ0FBWXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxVQUFDQyxPQUFELFVBQVdBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLFVBQUNQLENBQUQsRUFBSyxDQUFDTSxPQUFPLENBQUNKLE9BQVIsQ0FBZ0JGLENBQWhCLEVBQW1CLENBQXZDLENBQVgsRUFBWCxDQUFaLENBQVA7QUFDQSxHQWhEYTs7QUFrRGQ7QUFDQVMsV0FuRGMsdUJBbURRLEtBQVgzQixJQUFXLHVFQUFKLEVBQUk7QUFDckIsUUFBSUMsTUFBTSxHQUFHLEVBQWI7QUFDQSxRQUFNQyxPQUFPLEdBQUd0QixPQUFPLENBQUMsWUFBRCxDQUFQLENBQXNCdUIsTUFBdEIsQ0FBNkIsVUFBQUMsTUFBTSxVQUFJQSxNQUFNLENBQUNDLElBQVAsSUFBZSxPQUFuQixFQUFuQyxDQUFoQjtBQUNBLFFBQU1DLEtBQUssR0FBRzFCLE9BQU8sQ0FBQyxjQUFELENBQXJCO0FBQ0FzQixXQUFPLENBQUNLLE9BQVIsQ0FBZ0IsVUFBQUgsTUFBTSxFQUFJO0FBQ3pCLFVBQUssMEJBQUFBLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlbUIsU0FBZixnRkFBMEJsQixLQUExQixNQUFvQ0wsTUFBTSxDQUFDTSxPQUFQLElBQWtCSixLQUF0RCxLQUFnRUYsTUFBTSxDQUFDTyxNQUE1RSxFQUFxRjtBQUNwRlgsWUFBSSxDQUFDWSxPQUFMLEdBQWVSLE1BQU0sQ0FBQ1MsSUFBdEI7QUFDQWIsWUFBSSxDQUFDSSxNQUFMLEdBQWNBLE1BQU0sQ0FBQ1UsRUFBckI7QUFDQSxZQUFHO0FBQ0YsY0FBSUMsTUFBTSxHQUFHQyxJQUFJLENBQUMsTUFBTVosTUFBTSxDQUFDSSxPQUFQLENBQWVtQixTQUFmLENBQXlCbEIsS0FBL0IsR0FBdUMsR0FBeEMsQ0FBakI7QUFDQVIsZ0JBQU0sQ0FBQ2dCLElBQVAsQ0FBWUYsTUFBTSxDQUFDM0IsT0FBRCxFQUFVWSxJQUFWLENBQWxCO0FBQ0EsU0FIRCxDQUdDLE9BQU1rQixDQUFOLEVBQVE7QUFDUmpCLGdCQUFNLENBQUNnQixJQUFQO0FBQ0NFLGlCQUFPLENBQUNDLE9BQVIsQ0FBZ0I7QUFDZkMsZ0JBQUksRUFBRXJDLFNBRFM7QUFFZmdCLGdCQUFJLEVBQUUsSUFGUyxFQUFoQixDQUREOzs7QUFNQTtBQUNEO0FBQ0QsS0FoQkQ7QUFpQkEsV0FBT21CLE9BQU8sQ0FBQ0csR0FBUixDQUFZckIsTUFBTSxDQUFDc0IsR0FBUCxDQUFXLFVBQUNDLE9BQUQsVUFBV0EsT0FBTyxDQUFDQyxLQUFSLENBQWMsVUFBQ1AsQ0FBRCxFQUFLLENBQUNNLE9BQU8sQ0FBQ0osT0FBUixDQUFnQkYsQ0FBaEIsRUFBbUIsQ0FBdkMsQ0FBWCxFQUFYLENBQVosQ0FBUDtBQUNBLEdBekVhO0FBMEVkO0FBQ0FVLGFBM0VjLHlCQTJFVSxLQUFYNUIsSUFBVyx1RUFBSixFQUFJO0FBQ3ZCLFFBQUlDLE1BQU0sR0FBRyxFQUFiO0FBQ0EsUUFBTUMsT0FBTyxHQUFHdEIsT0FBTyxDQUFDLFlBQUQsQ0FBUCxDQUFzQnVCLE1BQXRCLENBQTZCLFVBQUFDLE1BQU0sVUFBSUEsTUFBTSxDQUFDQyxJQUFQLElBQWUsT0FBbkIsRUFBbkMsQ0FBaEI7QUFDQSxRQUFNQyxLQUFLLEdBQUcxQixPQUFPLENBQUMsY0FBRCxDQUFyQjtBQUNBc0IsV0FBTyxDQUFDSyxPQUFSLENBQWdCLFVBQUFILE1BQU0sRUFBSTtBQUN6QixVQUFLLDBCQUFBQSxNQUFNLENBQUNJLE9BQVAsQ0FBZW9CLFdBQWYsZ0ZBQTRCbkIsS0FBNUIsTUFBc0NMLE1BQU0sQ0FBQ00sT0FBUCxJQUFrQkosS0FBeEQsS0FBa0VGLE1BQU0sQ0FBQ08sTUFBOUUsRUFBdUY7QUFDdEZYLFlBQUksQ0FBQ1ksT0FBTCxHQUFlUixNQUFNLENBQUNTLElBQXRCO0FBQ0FiLFlBQUksQ0FBQ0ksTUFBTCxHQUFjQSxNQUFNLENBQUNVLEVBQXJCO0FBQ0EsWUFBRztBQUNGLGNBQUlDLE1BQU0sR0FBR0MsSUFBSSxDQUFDLE1BQU1aLE1BQU0sQ0FBQ0ksT0FBUCxDQUFlb0IsV0FBZixDQUEyQm5CLEtBQWpDLEdBQXlDLEdBQTFDLENBQWpCO0FBQ0FSLGdCQUFNLENBQUNnQixJQUFQLENBQVlGLE1BQU0sQ0FBQzNCLE9BQUQsRUFBVVksSUFBVixDQUFsQjtBQUNBLFNBSEQsQ0FHQyxPQUFNa0IsQ0FBTixFQUFRO0FBQ1JqQixnQkFBTSxDQUFDZ0IsSUFBUDtBQUNDRSxpQkFBTyxDQUFDQyxPQUFSLENBQWdCO0FBQ2ZDLGdCQUFJLEVBQUVyQyxTQURTO0FBRWZnQixnQkFBSSxFQUFFLElBRlMsRUFBaEIsQ0FERDs7O0FBTUE7QUFDRDtBQUNELEtBaEJEO0FBaUJBLFdBQU9tQixPQUFPLENBQUNHLEdBQVIsQ0FBWXJCLE1BQU0sQ0FBQ3NCLEdBQVAsQ0FBVyxVQUFDQyxPQUFELFVBQVdBLE9BQU8sQ0FBQ0MsS0FBUixDQUFjLFVBQUNQLENBQUQsRUFBSyxDQUFDTSxPQUFPLENBQUNKLE9BQVIsQ0FBZ0JGLENBQWhCLEVBQW1CLENBQXZDLENBQVgsRUFBWCxDQUFaLENBQVA7QUFDQSxHQWpHYTtBQWtHZDtBQUNBVyxlQW5HYywyQkFtR1ksS0FBWDdCLElBQVcsdUVBQUosRUFBSTtBQUN6QixRQUFNRSxPQUFPLEdBQUd0QixPQUFPLENBQUMsWUFBRCxDQUF2QjtBQUNBLFFBQUlrRCxLQUFLLEdBQUc1QixPQUFPLENBQUM2QixTQUFSLENBQWtCLFVBQUEzQixNQUFNLFVBQUlBLE1BQU0sQ0FBQ1UsRUFBUCxJQUFhZCxJQUFJLENBQUNJLE1BQXRCLEVBQXhCLENBQVo7QUFDQSxRQUFHO0FBQ0ZKLFVBQUksQ0FBQ1ksT0FBTCxHQUFlVixPQUFPLENBQUM0QixLQUFELENBQVAsQ0FBZWpCLElBQTlCO0FBQ0EsVUFBSUUsTUFBTSxHQUFHQyxJQUFJLENBQUMsTUFBTWQsT0FBTyxDQUFDNEIsS0FBRCxDQUFQLENBQWV0QixPQUFmLENBQXVCcUIsYUFBdkIsQ0FBcUNwQixLQUEzQyxHQUFtRCxHQUFwRCxDQUFqQjtBQUNBLGFBQU9NLE1BQU0sQ0FBQzNCLE9BQUQsRUFBVVksSUFBVixDQUFiO0FBQ0EsS0FKRCxDQUlDLE9BQU1rQixDQUFOLEVBQVM7QUFDVCxhQUFPQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0I7QUFDdEJDLFlBQUksRUFBRXJDLFNBRGdCO0FBRXRCZ0IsWUFBSSxFQUFFLElBRmdCLEVBQWhCLENBQVA7O0FBSUE7QUFDRCxHQWhIYTtBQWlIZDtBQUNBZ0MsV0FsSGMsdUJBa0hRLEtBQVhoQyxJQUFXLHVFQUFKLEVBQUk7QUFDckIsUUFBTUUsT0FBTyxHQUFHdEIsT0FBTyxDQUFDLFlBQUQsQ0FBdkI7QUFDQSxRQUFJa0QsS0FBSyxHQUFHNUIsT0FBTyxDQUFDNkIsU0FBUixDQUFrQixVQUFBM0IsTUFBTSxVQUFJQSxNQUFNLENBQUNVLEVBQVAsSUFBYWQsSUFBSSxDQUFDSSxNQUF0QixFQUF4QixDQUFaO0FBQ0EsUUFBRztBQUNGSixVQUFJLENBQUNZLE9BQUwsR0FBZVYsT0FBTyxDQUFDNEIsS0FBRCxDQUFQLENBQWVqQixJQUE5QjtBQUNBLFVBQUlFLE1BQU0sR0FBR0MsSUFBSSxDQUFDLE1BQU1kLE9BQU8sQ0FBQzRCLEtBQUQsQ0FBUCxDQUFldEIsT0FBZixDQUF1QndCLFNBQXZCLENBQWlDdkIsS0FBdkMsR0FBK0MsR0FBaEQsQ0FBakI7QUFDQSxhQUFPTSxNQUFNLENBQUMzQixPQUFELEVBQVVZLElBQVYsQ0FBYjtBQUNBLEtBSkQsQ0FJQyxPQUFNa0IsQ0FBTixFQUFTO0FBQ1QsYUFBT0MsT0FBTyxDQUFDQyxPQUFSLENBQWdCO0FBQ3RCQyxZQUFJLEVBQUVyQyxTQURnQjtBQUV0QmdCLFlBQUksRUFBRSxJQUZnQixFQUFoQixDQUFQOztBQUlBO0FBQ0QsR0EvSGE7QUFnSWQ7QUFDQWlDLFlBakljLHdCQWlJUyxLQUFYakMsSUFBVyx1RUFBSixFQUFJO0FBQ3RCLFFBQU1FLE9BQU8sR0FBR3RCLE9BQU8sQ0FBQyxZQUFELENBQXZCO0FBQ0EsUUFBSWtELEtBQUssR0FBRzVCLE9BQU8sQ0FBQzZCLFNBQVIsQ0FBa0IsVUFBQTNCLE1BQU0sVUFBSUEsTUFBTSxDQUFDVSxFQUFQLElBQWFkLElBQUksQ0FBQ0ksTUFBdEIsRUFBeEIsQ0FBWjtBQUNBLFFBQUc7QUFDRkosVUFBSSxDQUFDWSxPQUFMLEdBQWVWLE9BQU8sQ0FBQzRCLEtBQUQsQ0FBUCxDQUFlakIsSUFBOUI7QUFDQSxVQUFJRSxNQUFNLEdBQUdDLElBQUksQ0FBQyxNQUFNZCxPQUFPLENBQUM0QixLQUFELENBQVAsQ0FBZXRCLE9BQWYsQ0FBdUJ5QixVQUF2QixDQUFrQ3hCLEtBQXhDLEdBQWdELEdBQWpELENBQWpCO0FBQ0EsYUFBT00sTUFBTSxDQUFDM0IsT0FBRCxFQUFVWSxJQUFWLENBQWI7QUFDQSxLQUpELENBSUMsT0FBTWtCLENBQU4sRUFBUztBQUNULGFBQU9DLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQjtBQUN0QkMsWUFBSSxFQUFFckMsU0FEZ0I7QUFFdEJnQixZQUFJLEVBQUUsSUFGZ0IsRUFBaEIsQ0FBUDs7QUFJQTtBQUNELEdBOUlhO0FBK0lkO0FBQ0FrQyxZQWhKYyx3QkFnSlMsS0FBWGxDLElBQVcsdUVBQUosRUFBSTtBQUN0QixRQUFNRSxPQUFPLEdBQUd0QixPQUFPLENBQUMsWUFBRCxDQUF2QjtBQUNBLFFBQUlrRCxLQUFLLEdBQUc1QixPQUFPLENBQUM2QixTQUFSLENBQWtCLFVBQUEzQixNQUFNLFVBQUlBLE1BQU0sQ0FBQ1UsRUFBUCxJQUFhZCxJQUFJLENBQUNJLE1BQXRCLEVBQXhCLENBQVo7QUFDQSxRQUFHO0FBQ0ZKLFVBQUksQ0FBQ1ksT0FBTCxHQUFlVixPQUFPLENBQUM0QixLQUFELENBQVAsQ0FBZWpCLElBQTlCO0FBQ0EsVUFBSUUsTUFBTSxHQUFHQyxJQUFJLENBQUMsTUFBTWQsT0FBTyxDQUFDNEIsS0FBRCxDQUFQLENBQWV0QixPQUFmLENBQXVCMEIsVUFBdkIsQ0FBa0N6QixLQUF4QyxHQUFnRCxHQUFqRCxDQUFqQjtBQUNBLGFBQU9NLE1BQU0sQ0FBQzNCLE9BQUQsRUFBVVksSUFBVixDQUFiO0FBQ0EsS0FKRCxDQUlDLE9BQU1rQixDQUFOLEVBQVM7QUFDVCxhQUFPQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0I7QUFDdEJDLFlBQUksRUFBRXJDLFNBRGdCO0FBRXRCZ0IsWUFBSSxFQUFFLElBRmdCLEVBQWhCLENBQVA7O0FBSUE7QUFDRCxHQTdKYSxFIiwiZmlsZSI6IjExNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdG9yZSBmcm9tICdAL3N0b3JlJyAvLyDojrflj5YgVnVleCBTdG9yZSDlrp7kvovvvIzms6jmhI/mmK8qKuWunuS+iyoq77yM6ICM5LiN5pivIHZ1ZXgg6L+Z5Liq5bqTXHJcbmltcG9ydCBDb25maWcgIGZyb20gJ0AvYXNzZXRzL2pzL2NvbmZpZy5qcydcclxuaW1wb3J0IFV0aWxzIGZyb20gJ0AvYXNzZXRzL2pzL3V0aWwuanMnXHJcbmltcG9ydCBodHRwIGZyb20gJ0AvcGx1Z2lucy9yZXF1ZXN0L2luZGV4LmpzJ1xyXG5pbXBvcnQgeGhyIGZyb20gJ0AvcGx1Z2lucy94aHIvaW5kZXguanMnXHJcbmltcG9ydCBnYjIzMTIgZnJvbSAnQC9hc3NldHMvb3RoZXIvZ2IyMzEyLmpzJ1xyXG5pbXBvcnQgQm9vayBmcm9tICdAL2Fzc2V0cy9jb25zdHJ1Y3Rvci9ib29rLmpzJ1xyXG5pbXBvcnQgQm9va3NoZWxmIGZyb20gJ0AvYXNzZXRzL2NvbnN0cnVjdG9yL2Jvb2tzaGVsZi5qcydcclxuaW1wb3J0IENoYXB0ZXIgZnJvbSAnQC9hc3NldHMvY29uc3RydWN0b3IvY2hhcHRlci5qcydcclxuaW1wb3J0IENvbW1lbnQgZnJvbSAnQC9hc3NldHMvY29uc3RydWN0b3IvY29tbWVudC5qcydcclxuaW1wb3J0IHsgcmVwbGFjZUhUTUwsIGh0bWxEZWNvZGVCeVJlZ0V4cCwgZ2V0VGFnIH0gZnJvbSAnQC9hc3NldHMvYXBpL2dsb2JhbC5qcydcclxuXHJcbmNvbnN0IHsgZ2V0dGVycyB9ID0gU3RvcmU7XHJcbmNvbnN0IHsgRVJSX09LLCBFUlJfRkFMU0UgfSA9IENvbmZpZztcclxuY29uc3QgeyBkYXRlRm9ybWF0LCB0aW1lMnNlY29uZHMgfSA9IFV0aWxzO1xyXG5jb25zdCBjb250ZXh0ID0ge1xyXG5cdHhocjogeGhyLFxyXG5cdGh0dHA6IGh0dHAsXHJcblx0Z2IyMzEyOiBnYjIzMTIsXHJcblx0Qm9vazogQm9vayxcclxuXHRCb29rc2hlbGY6IEJvb2tzaGVsZixcclxuXHRDaGFwdGVyOiBDaGFwdGVyLFxyXG5cdENvbW1lbnQ6IENvbW1lbnQsXHJcblx0RVJSX09LOiBFUlJfT0ssXHJcblx0RVJSX0ZBTFNFOiBFUlJfRkFMU0UsXHJcblx0cmVwbGFjZUhUTUw6IHJlcGxhY2VIVE1MLFxyXG5cdGh0bWxEZWNvZGVCeVJlZ0V4cDogaHRtbERlY29kZUJ5UmVnRXhwLFxyXG5cdGdldFRhZzogZ2V0VGFnLFxyXG5cdGRhdGVGb3JtYXQ6IGRhdGVGb3JtYXQsXHJcblx0dGltZTJzZWNvbmRzOiB0aW1lMnNlY29uZHNcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdC8v5pCc57Si5YiX6KGoXHJcblx0c2VhcmNoIChkYXRhID0ge30pIHtcclxuXHRcdGxldCBuZXdBcnIgPSBbXTtcclxuXHRcdGNvbnN0IHNvdXJjZXMgPSBnZXR0ZXJzWydzb3VyY2UvZ2V0J10uZmlsdGVyKHNvdXJjZSA9PiBzb3VyY2UudHlwZSA9PSAnY29taWMnKTtcclxuXHRcdGNvbnN0IGFkdWx0ID0gZ2V0dGVyc1snYXBwL2dldEFkdWx0J107XHJcblx0XHRzb3VyY2VzLmZvckVhY2goc291cmNlID0+IHtcclxuXHRcdFx0aWYgKCBzb3VyY2UucmVxdWVzdC5zZWFyY2g/LnZhbHVlICYmIChzb3VyY2UuaXNBZHVsdCB8fCBhZHVsdCkgJiYgc291cmNlLmlzT3BlbiApIHtcclxuXHRcdFx0XHRkYXRhLmJhc2VVcmwgPSBzb3VyY2UuaHJlZlxyXG5cdFx0XHRcdGRhdGEuc291cmNlID0gc291cmNlLmlkXHJcblx0XHRcdFx0dHJ5e1xyXG5cdFx0XHRcdFx0bGV0IGhhbmRsZSA9IGV2YWwoXCIoXCIgKyBzb3VyY2UucmVxdWVzdC5zZWFyY2gudmFsdWUgKyBcIilcIilcclxuXHRcdFx0XHRcdG5ld0Fyci5wdXNoKGhhbmRsZShjb250ZXh0LCBkYXRhKSlcclxuXHRcdFx0XHR9Y2F0Y2goZSl7XHJcblx0XHRcdFx0XHRuZXdBcnIucHVzaChcclxuXHRcdFx0XHRcdFx0UHJvbWlzZS5yZXNvbHZlKHtcclxuXHRcdFx0XHRcdFx0XHRjb2RlOiBFUlJfRkFMU0UsXHJcblx0XHRcdFx0XHRcdFx0ZGF0YTogbnVsbFxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdHJldHVybiBQcm9taXNlLmFsbChuZXdBcnIubWFwKChwcm9taXNlKT0+cHJvbWlzZS5jYXRjaCgoZSk9Pntwcm9taXNlLnJlc29sdmUoZSl9KSkpXHJcblx0fSxcclxuXHQvL+iOt+WPlueDremXqOaQnOe0ouWFs+mUruivjVxyXG5cdGdldEhvdEtleXdvcmQgKGRhdGEgPSB7fSkge1xyXG5cdFx0bGV0IG5ld0FyciA9IFtdO1xyXG5cdFx0Y29uc3Qgc291cmNlcyA9IGdldHRlcnNbJ3NvdXJjZS9nZXQnXS5maWx0ZXIoc291cmNlID0+IHNvdXJjZS50eXBlID09ICdjb21pYycpO1xyXG5cdFx0Y29uc3QgYWR1bHQgPSBnZXR0ZXJzWydhcHAvZ2V0QWR1bHQnXTtcclxuXHRcdHNvdXJjZXMuZm9yRWFjaChzb3VyY2UgPT4ge1xyXG5cdFx0XHRpZiAoIHNvdXJjZS5yZXF1ZXN0LmdldEhvdEtleXdvcmQ/LnZhbHVlICYmIChzb3VyY2UuaXNBZHVsdCB8fCBhZHVsdCkgJiYgc291cmNlLmlzT3BlbiApIHtcclxuXHRcdFx0XHRkYXRhLmJhc2VVcmwgPSBzb3VyY2UuaHJlZlxyXG5cdFx0XHRcdGRhdGEuc291cmNlID0gc291cmNlLmlkXHJcblx0XHRcdFx0dHJ5e1xyXG5cdFx0XHRcdFx0bGV0IGhhbmRsZSA9IGV2YWwoXCIoXCIgKyBzb3VyY2UucmVxdWVzdC5nZXRIb3RLZXl3b3JkLnZhbHVlICsgXCIpXCIpXHJcblx0XHRcdFx0XHRuZXdBcnIucHVzaChoYW5kbGUoY29udGV4dCwgZGF0YSkpXHJcblx0XHRcdFx0fWNhdGNoKGUpe1xyXG5cdFx0XHRcdFx0bmV3QXJyLnB1c2goXHJcblx0XHRcdFx0XHRcdFByb21pc2UucmVzb2x2ZSh7XHJcblx0XHRcdFx0XHRcdFx0Y29kZTogRVJSX0ZBTFNFLFxyXG5cdFx0XHRcdFx0XHRcdGRhdGE6IG51bGxcclxuXHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdClcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0pXHJcblx0XHRyZXR1cm4gUHJvbWlzZS5hbGwobmV3QXJyLm1hcCgocHJvbWlzZSk9PnByb21pc2UuY2F0Y2goKGUpPT57cHJvbWlzZS5yZXNvbHZlKGUpfSkpKVxyXG5cdH0sXHJcblx0XHJcblx0Ly/ojrflj5bng63pl6jmjqjojZBcclxuXHRnZXRSZWNvbWUgKGRhdGEgPSB7fSkge1xyXG5cdFx0bGV0IG5ld0FyciA9IFtdO1xyXG5cdFx0Y29uc3Qgc291cmNlcyA9IGdldHRlcnNbJ3NvdXJjZS9nZXQnXS5maWx0ZXIoc291cmNlID0+IHNvdXJjZS50eXBlID09ICdjb21pYycpO1xyXG5cdFx0Y29uc3QgYWR1bHQgPSBnZXR0ZXJzWydhcHAvZ2V0QWR1bHQnXTtcclxuXHRcdHNvdXJjZXMuZm9yRWFjaChzb3VyY2UgPT4ge1xyXG5cdFx0XHRpZiAoIHNvdXJjZS5yZXF1ZXN0LmdldFJlY29tZT8udmFsdWUgJiYgKHNvdXJjZS5pc0FkdWx0IHx8IGFkdWx0KSAmJiBzb3VyY2UuaXNPcGVuICkge1xyXG5cdFx0XHRcdGRhdGEuYmFzZVVybCA9IHNvdXJjZS5ocmVmXHJcblx0XHRcdFx0ZGF0YS5zb3VyY2UgPSBzb3VyY2UuaWRcclxuXHRcdFx0XHR0cnl7XHJcblx0XHRcdFx0XHRsZXQgaGFuZGxlID0gZXZhbChcIihcIiArIHNvdXJjZS5yZXF1ZXN0LmdldFJlY29tZS52YWx1ZSArIFwiKVwiKVxyXG5cdFx0XHRcdFx0bmV3QXJyLnB1c2goaGFuZGxlKGNvbnRleHQsIGRhdGEpKVxyXG5cdFx0XHRcdH1jYXRjaChlKXtcclxuXHRcdFx0XHRcdG5ld0Fyci5wdXNoKFxyXG5cdFx0XHRcdFx0XHRQcm9taXNlLnJlc29sdmUoe1xyXG5cdFx0XHRcdFx0XHRcdGNvZGU6IEVSUl9GQUxTRSxcclxuXHRcdFx0XHRcdFx0XHRkYXRhOiBudWxsXHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHQpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KVxyXG5cdFx0cmV0dXJuIFByb21pc2UuYWxsKG5ld0Fyci5tYXAoKHByb21pc2UpPT5wcm9taXNlLmNhdGNoKChlKT0+e3Byb21pc2UucmVzb2x2ZShlKX0pKSlcclxuXHR9LFxyXG5cdC8v6I635Y+W5YiG57G75YiX6KGoXHJcblx0Z2V0VHlwZUxpc3QgKGRhdGEgPSB7fSkge1xyXG5cdFx0bGV0IG5ld0FyciA9IFtdO1xyXG5cdFx0Y29uc3Qgc291cmNlcyA9IGdldHRlcnNbJ3NvdXJjZS9nZXQnXS5maWx0ZXIoc291cmNlID0+IHNvdXJjZS50eXBlID09ICdjb21pYycpO1xyXG5cdFx0Y29uc3QgYWR1bHQgPSBnZXR0ZXJzWydhcHAvZ2V0QWR1bHQnXTtcclxuXHRcdHNvdXJjZXMuZm9yRWFjaChzb3VyY2UgPT4ge1xyXG5cdFx0XHRpZiAoIHNvdXJjZS5yZXF1ZXN0LmdldFR5cGVMaXN0Py52YWx1ZSAmJiAoc291cmNlLmlzQWR1bHQgfHwgYWR1bHQpICYmIHNvdXJjZS5pc09wZW4gKSB7XHJcblx0XHRcdFx0ZGF0YS5iYXNlVXJsID0gc291cmNlLmhyZWZcclxuXHRcdFx0XHRkYXRhLnNvdXJjZSA9IHNvdXJjZS5pZFxyXG5cdFx0XHRcdHRyeXtcclxuXHRcdFx0XHRcdGxldCBoYW5kbGUgPSBldmFsKFwiKFwiICsgc291cmNlLnJlcXVlc3QuZ2V0VHlwZUxpc3QudmFsdWUgKyBcIilcIilcclxuXHRcdFx0XHRcdG5ld0Fyci5wdXNoKGhhbmRsZShjb250ZXh0LCBkYXRhKSlcclxuXHRcdFx0XHR9Y2F0Y2goZSl7XHJcblx0XHRcdFx0XHRuZXdBcnIucHVzaChcclxuXHRcdFx0XHRcdFx0UHJvbWlzZS5yZXNvbHZlKHtcclxuXHRcdFx0XHRcdFx0XHRjb2RlOiBFUlJfRkFMU0UsXHJcblx0XHRcdFx0XHRcdFx0ZGF0YTogbnVsbFxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSlcclxuXHRcdHJldHVybiBQcm9taXNlLmFsbChuZXdBcnIubWFwKChwcm9taXNlKT0+cHJvbWlzZS5jYXRjaCgoZSk9Pntwcm9taXNlLnJlc29sdmUoZSl9KSkpXHJcblx0fSxcclxuXHQvL+iOt+WPluWIhuexu+ivpuaDhVxyXG5cdGdldFR5cGVEZXRhaWwgKGRhdGEgPSB7fSkge1xyXG5cdFx0Y29uc3Qgc291cmNlcyA9IGdldHRlcnNbJ3NvdXJjZS9nZXQnXTtcclxuXHRcdGxldCBpbmRleCA9IHNvdXJjZXMuZmluZEluZGV4KHNvdXJjZSA9PiBzb3VyY2UuaWQgPT0gZGF0YS5zb3VyY2UpXHJcblx0XHR0cnl7XHJcblx0XHRcdGRhdGEuYmFzZVVybCA9IHNvdXJjZXNbaW5kZXhdLmhyZWZcclxuXHRcdFx0bGV0IGhhbmRsZSA9IGV2YWwoXCIoXCIgKyBzb3VyY2VzW2luZGV4XS5yZXF1ZXN0LmdldFR5cGVEZXRhaWwudmFsdWUgKyBcIilcIilcclxuXHRcdFx0cmV0dXJuIGhhbmRsZShjb250ZXh0LCBkYXRhKVxyXG5cdFx0fWNhdGNoKGUpIHtcclxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XHJcblx0XHRcdFx0Y29kZTogRVJSX0ZBTFNFLFxyXG5cdFx0XHRcdGRhdGE6IG51bGxcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9LFxyXG5cdC8v6I635Y+W5Lmm57GN6K+m5oOFXHJcblx0Z2V0RGV0YWlsIChkYXRhID0ge30pIHtcclxuXHRcdGNvbnN0IHNvdXJjZXMgPSBnZXR0ZXJzWydzb3VyY2UvZ2V0J107XHJcblx0XHRsZXQgaW5kZXggPSBzb3VyY2VzLmZpbmRJbmRleChzb3VyY2UgPT4gc291cmNlLmlkID09IGRhdGEuc291cmNlKVxyXG5cdFx0dHJ5e1xyXG5cdFx0XHRkYXRhLmJhc2VVcmwgPSBzb3VyY2VzW2luZGV4XS5ocmVmXHJcblx0XHRcdGxldCBoYW5kbGUgPSBldmFsKFwiKFwiICsgc291cmNlc1tpbmRleF0ucmVxdWVzdC5nZXREZXRhaWwudmFsdWUgKyBcIilcIilcclxuXHRcdFx0cmV0dXJuIGhhbmRsZShjb250ZXh0LCBkYXRhKVxyXG5cdFx0fWNhdGNoKGUpIHtcclxuXHRcdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XHJcblx0XHRcdFx0Y29kZTogRVJSX0ZBTFNFLFxyXG5cdFx0XHRcdGRhdGE6IG51bGxcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHR9LFxyXG5cdC8v6I635Y+W5Lmm57GN5YaF5a65XHJcblx0Z2V0Q29udGVudCAoZGF0YSA9IHt9KSB7XHJcblx0XHRjb25zdCBzb3VyY2VzID0gZ2V0dGVyc1snc291cmNlL2dldCddO1xyXG5cdFx0bGV0IGluZGV4ID0gc291cmNlcy5maW5kSW5kZXgoc291cmNlID0+IHNvdXJjZS5pZCA9PSBkYXRhLnNvdXJjZSlcclxuXHRcdHRyeXtcclxuXHRcdFx0ZGF0YS5iYXNlVXJsID0gc291cmNlc1tpbmRleF0uaHJlZlxyXG5cdFx0XHRsZXQgaGFuZGxlID0gZXZhbChcIihcIiArIHNvdXJjZXNbaW5kZXhdLnJlcXVlc3QuZ2V0Q29udGVudC52YWx1ZSArIFwiKVwiKVxyXG5cdFx0XHRyZXR1cm4gaGFuZGxlKGNvbnRleHQsIGRhdGEpXHJcblx0XHR9Y2F0Y2goZSkge1xyXG5cdFx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcclxuXHRcdFx0XHRjb2RlOiBFUlJfRkFMU0UsXHJcblx0XHRcdFx0ZGF0YTogbnVsbFxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH0sXHJcblx0Ly/ojrflj5bor4TorrpcclxuXHRnZXRDb21tZW50IChkYXRhID0ge30pIHtcclxuXHRcdGNvbnN0IHNvdXJjZXMgPSBnZXR0ZXJzWydzb3VyY2UvZ2V0J107XHJcblx0XHRsZXQgaW5kZXggPSBzb3VyY2VzLmZpbmRJbmRleChzb3VyY2UgPT4gc291cmNlLmlkID09IGRhdGEuc291cmNlKVxyXG5cdFx0dHJ5e1xyXG5cdFx0XHRkYXRhLmJhc2VVcmwgPSBzb3VyY2VzW2luZGV4XS5ocmVmXHJcblx0XHRcdGxldCBoYW5kbGUgPSBldmFsKFwiKFwiICsgc291cmNlc1tpbmRleF0ucmVxdWVzdC5nZXRDb21tZW50LnZhbHVlICsgXCIpXCIpXHJcblx0XHRcdHJldHVybiBoYW5kbGUoY29udGV4dCwgZGF0YSlcclxuXHRcdH1jYXRjaChlKSB7XHJcblx0XHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xyXG5cdFx0XHRcdGNvZGU6IEVSUl9GQUxTRSxcclxuXHRcdFx0XHRkYXRhOiBudWxsXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///117\n");

/***/ }),
/* 118 */
/*!*****************************************************!*\
  !*** G:/my-project/uni-polymerize/plugins/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 50));\nvar _router = __webpack_require__(/*! @/plugins/router/router.js */ 55);\nvar _router2 = _interopRequireDefault(__webpack_require__(/*! @/plugins/router */ 56));\nvar _request = _interopRequireDefault(__webpack_require__(/*! @/plugins/request */ 57));\nvar _xhr = _interopRequireDefault(__webpack_require__(/*! @/plugins/xhr */ 60));\nvar _modules = _interopRequireDefault(__webpack_require__(/*! @/plugins/modules */ 62));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n_vue.default.prototype.$http = _request.default;\n_vue.default.prototype.$xhr = _xhr.default;\n_vue.default.prototype.$modules = _modules.default;\n_vue.default.prototype.$Router = _router2.default;\n_vue.default.prototype.$Route = new _router.Route();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGx1Z2lucy9pbmRleC5qcyJdLCJuYW1lcyI6WyJWdWUiLCJwcm90b3R5cGUiLCIkaHR0cCIsIkh0dHAiLCIkeGhyIiwiWGhyIiwiJG1vZHVsZXMiLCJNb2R1bGVzIiwiJFJvdXRlciIsIlJvdXRlciIsIiRSb3V0ZSIsIlJvdXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0Y7QUFDQUEsYUFBSUMsU0FBSixDQUFjQyxLQUFkLEdBQXNCQyxnQkFBdEI7QUFDQUgsYUFBSUMsU0FBSixDQUFjRyxJQUFkLEdBQXFCQyxZQUFyQjtBQUNBTCxhQUFJQyxTQUFKLENBQWNLLFFBQWQsR0FBeUJDLGdCQUF6QjtBQUNBUCxhQUFJQyxTQUFKLENBQWNPLE9BQWQsR0FBd0JDLGdCQUF4QjtBQUNBVCxhQUFJQyxTQUFKLENBQWNTLE1BQWQsR0FBdUIsSUFBSUMsYUFBSixFQUF2QiIsImZpbGUiOiIxMTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVnVlIGZyb20gXCJ2dWVcIjtcclxuaW1wb3J0IHsgUm91dGUgfSBmcm9tICdAL3BsdWdpbnMvcm91dGVyL3JvdXRlci5qcyc7XHJcbmltcG9ydCBSb3V0ZXIgZnJvbSAnQC9wbHVnaW5zL3JvdXRlcic7XHJcbmltcG9ydCBIdHRwIGZyb20gJ0AvcGx1Z2lucy9yZXF1ZXN0J1xyXG5pbXBvcnQgWGhyIGZyb20gJ0AvcGx1Z2lucy94aHInXHJcbmltcG9ydCBNb2R1bGVzIGZyb20gJ0AvcGx1Z2lucy9tb2R1bGVzJ1xyXG5WdWUucHJvdG90eXBlLiRodHRwID0gSHR0cDtcclxuVnVlLnByb3RvdHlwZS4keGhyID0gWGhyO1xyXG5WdWUucHJvdG90eXBlLiRtb2R1bGVzID0gTW9kdWxlcztcclxuVnVlLnByb3RvdHlwZS4kUm91dGVyID0gUm91dGVyO1xyXG5WdWUucHJvdG90eXBlLiRSb3V0ZSA9IG5ldyBSb3V0ZSgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///118\n");

/***/ }),
/* 119 */
/*!*******************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/js/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 50));\nvar _util = _interopRequireDefault(__webpack_require__(/*! ./util.js */ 63));\nvar _config = _interopRequireDefault(__webpack_require__(/*! ./config.js */ 59));\nvar _business = _interopRequireDefault(__webpack_require__(/*! ./business.js */ 64));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n_vue.default.prototype.$utils = _util.default;\n_vue.default.prototype.$config = _config.default;\n_vue.default.prototype.$business = _business.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vYXNzZXRzL2pzL2luZGV4LmpzIl0sIm5hbWVzIjpbIlZ1ZSIsInByb3RvdHlwZSIsIiR1dGlscyIsIlV0aWxzIiwiJGNvbmZpZyIsIkNvbmZpZyIsIiRidXNpbmVzcyIsIkJ1c2luZXNzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxxRjs7QUFFQUEsYUFBSUMsU0FBSixDQUFjQyxNQUFkLEdBQXVCQyxhQUF2QjtBQUNBSCxhQUFJQyxTQUFKLENBQWNHLE9BQWQsR0FBd0JDLGVBQXhCO0FBQ0FMLGFBQUlDLFNBQUosQ0FBY0ssU0FBZCxHQUEwQkMsaUJBQTFCIiwiZmlsZSI6IjExOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xyXG5pbXBvcnQgVXRpbHMgZnJvbSAnLi91dGlsLmpzJztcclxuaW1wb3J0IENvbmZpZyBmcm9tICcuL2NvbmZpZy5qcyc7XHJcbmltcG9ydCBCdXNpbmVzcyBmcm9tICcuL2J1c2luZXNzLmpzJztcclxuXHJcblZ1ZS5wcm90b3R5cGUuJHV0aWxzID0gVXRpbHM7XHJcblZ1ZS5wcm90b3R5cGUuJGNvbmZpZyA9IENvbmZpZztcclxuVnVlLnByb3RvdHlwZS4kYnVzaW5lc3MgPSBCdXNpbmVzczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///119\n");

/***/ }),
/* 120 */
/*!********************************************************!*\
  !*** G:/my-project/uni-polymerize/assets/api/music.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 65));\nvar _config = _interopRequireDefault(__webpack_require__(/*! @/assets/js/config.js */ 59));\nvar _util = _interopRequireDefault(__webpack_require__(/*! @/assets/js/util.js */ 63));\nvar _index = _interopRequireDefault(__webpack_require__(/*! @/plugins/request/index.js */ 57));\nvar _index2 = _interopRequireDefault(__webpack_require__(/*! @/plugins/xhr/index.js */ 60));\nvar _song = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/song.js */ 94));\nvar _album = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/album.js */ 95));\nvar _singer = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/singer.js */ 96));\nvar _comment = _interopRequireDefault(__webpack_require__(/*! @/assets/constructor/comment.js */ 97));\nvar _qqSign = _interopRequireDefault(__webpack_require__(/*! @/assets/other/qqSign.js */ 98));\nvar _asrsea = _interopRequireDefault(__webpack_require__(/*! @/assets/other/asrsea.js */ 99));\nvar _global = __webpack_require__(/*! @/assets/api/global.js */ 103);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // 获取 Vuex Store 实例，注意是**实例**，而不是 vuex 这个库\nvar\ngetters = _store.default.getters;var\nERR_OK = _config.default.ERR_OK,ERR_FALSE = _config.default.ERR_FALSE;var\ndateFormat = _util.default.dateFormat,time2seconds = _util.default.time2seconds;\nvar qqmusicCommonParams = {\n  g_tk: 5381,\n  loginUin: 0,\n  hostUin: 0,\n  format: 'json',\n  inCharset: 'utf8',\n  outCharset: 'utf-8',\n  notice: 0,\n  platform: 'yqq.json',\n  needNewCode: 0 };\n\nvar context = {\n  xhr: _index2.default,\n  http: _index.default,\n  Song: _song.default,\n  Album: _album.default,\n  Singer: _singer.default,\n  Comment: _comment.default,\n  ERR_OK: ERR_OK,\n  ERR_FALSE: ERR_FALSE,\n  replaceHTML: _global.replaceHTML,\n  htmlDecodeByRegExp: _global.htmlDecodeByRegExp,\n  getTag: _global.getTag,\n  dateFormat: dateFormat,\n  time2seconds: time2seconds,\n  qqmusicCommonParams: qqmusicCommonParams,\n  qqSign: _qqSign.default,\n  Asrsea: _asrsea.default };var _default =\n\n\n{\n  //搜索音乐列表\n  search: function search(data) {\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$searc;\n      if (((_source$request$searc = source.request.search) === null || _source$request$searc === void 0 ? void 0 : _source$request$searc.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.search.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n\n  //获取热门搜索关键词\n  getHotKeyword: function getHotKeyword() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getHo;\n      if (((_source$request$getHo = source.request.getHotKeyword) === null || _source$request$getHo === void 0 ? void 0 : _source$request$getHo.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getHotKeyword.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n\n  //获取热门推荐\n  getRecom: function getRecom() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {\n      if ((source.isAdult || adult) && source.isOpen) {var _source$request$getBa, _source$request$getTo, _source$request$getHo2, _source$request$getHo3;\n        var https = [];\n        data.baseUrl = source.href;\n        data.source = source.id;\n        if ((_source$request$getBa = source.request.getBannerList) === null || _source$request$getBa === void 0 ? void 0 : _source$request$getBa.value) {\n          try {\n            var handle = eval(\"(\" + source.request.getBannerList.value + \")\");\n            https.push(handle(context, data));\n          } catch (e) {\n            https.push(\n            Promise.resolve({\n              code: ERR_FALSE,\n              data: null }));\n\n\n          }\n        }\n        if ((_source$request$getTo = source.request.getTopList) === null || _source$request$getTo === void 0 ? void 0 : _source$request$getTo.value) {\n          try {\n            var _handle = eval(\"(\" + source.request.getTopList.value + \")\");\n            https.push(_handle(context, data));\n          } catch (e) {\n            https.push(\n            Promise.resolve({\n              code: ERR_FALSE,\n              data: null }));\n\n\n          }\n        }\n        if ((_source$request$getHo2 = source.request.getHotAlbumList) === null || _source$request$getHo2 === void 0 ? void 0 : _source$request$getHo2.value) {\n          try {\n            var _handle2 = eval(\"(\" + source.request.getHotAlbumList.value + \")\");\n            https.push(_handle2(context, data));\n          } catch (e) {\n            https.push(\n            Promise.resolve({\n              code: ERR_FALSE,\n              data: null }));\n\n\n          }\n        }\n        if ((_source$request$getHo3 = source.request.getHotSingerList) === null || _source$request$getHo3 === void 0 ? void 0 : _source$request$getHo3.value) {\n          try {\n            var _handle3 = eval(\"(\" + source.request.getHotSingerList.value + \")\");\n            https.push(_handle3(context, data));\n          } catch (e) {\n            https.push(\n            Promise.resolve({\n              code: ERR_FALSE,\n              data: null }));\n\n\n          }\n        }\n        newArr.push(\n        new Promise(function (resolve) {\n          var hotSingers = [];\n          var hotAlbums = [];\n          var hotTops = [];\n          var banners = [];\n          Promise.all(https).then(function (ress) {\n            ress.forEach(function (res) {\n              if (res.code == ERR_OK) {\n                switch (res.data.module) {\n                  case 'BANNER':\n                    banners = res.data.list;\n                    break;\n                  case 'HOT_SINGER':\n                    hotSingers = res.data.list;\n                    break;\n                  case 'TOP':\n                    hotTops = res.data.list;\n                    break;\n                  default:\n                    hotAlbums = res.data.list;}\n\n              }\n            });\n            resolve({\n              code: ERR_OK,\n              data: {\n                banners: banners,\n                hotSingers: hotSingers,\n                hotTops: hotTops,\n                hotAlbums: hotAlbums,\n                source: ress[0].data.source } });\n\n\n          }).catch(function () {\n            resolve({\n              code: ERR_FALSE,\n              data: {\n                banners: [],\n                hotSinger: [],\n                hotTops: [],\n                hotAlbums: [],\n                source: ress[0].data.source } });\n\n\n          });\n        }));\n\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取轮播图详情\n  getBannerDetail: function getBannerDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getBannerDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取排行榜详情\n  getTopDetail: function getTopDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getTopDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取新发单曲\n  getNewSongList: function getNewSongList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getNe;\n      if (((_source$request$getNe = source.request.getNewSongList) === null || _source$request$getNe === void 0 ? void 0 : _source$request$getNe.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getNewSongList.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取新碟分类\n  getNewAlbumType: function getNewAlbumType() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getNe2;\n      if (((_source$request$getNe2 = source.request.getNewAlbumType) === null || _source$request$getNe2 === void 0 ? void 0 : _source$request$getNe2.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getNewAlbumType.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取分类详情\n  getNewAlbumList: function getNewAlbumList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getNewAlbumList.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取新碟详情\n  getNewAlbumDetail: function getNewAlbumDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getNewAlbumDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取热门歌手\n  getHotSingerList: function getHotSingerList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getHo4;\n      if (((_source$request$getHo4 = source.request.getHotSingerList) === null || _source$request$getHo4 === void 0 ? void 0 : _source$request$getHo4.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getHotSingerList.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取歌手分类\n  getSingerType: function getSingerType() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getSi;\n      if (((_source$request$getSi = source.request.getSingerType) === null || _source$request$getSi === void 0 ? void 0 : _source$request$getSi.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getSingerType.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取歌手列表\n  getSingerList: function getSingerList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getSingerList.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取歌手详情\n  getSingerDetail: function getSingerDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getSingerDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取热门歌单列表\n  getHotAlbumList: function getHotAlbumList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getHo5;\n      if (((_source$request$getHo5 = source.request.getHotAlbumList) === null || _source$request$getHo5 === void 0 ? void 0 : _source$request$getHo5.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getHotAlbumList.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  //获取歌单分类\n  getAlbumType: function getAlbumType() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var newArr = [];\n    var sources = getters['source/get'].filter(function (source) {return source.type == 'music';});\n    var adult = getters['app/getAdult'];\n    sources.forEach(function (source) {var _source$request$getAl;\n      if (((_source$request$getAl = source.request.getAlbumType) === null || _source$request$getAl === void 0 ? void 0 : _source$request$getAl.value) && (source.isAdult || adult) && source.isOpen) {\n        data.baseUrl = source.href;\n        data.source = source.id;\n        try {\n          var handle = eval(\"(\" + source.request.getAlbumType.value + \")\");\n          newArr.push(handle(context, data));\n        } catch (e) {\n          newArr.push(\n          Promise.resolve({\n            code: ERR_FALSE,\n            data: null }));\n\n\n        }\n      }\n    });\n    return Promise.all(newArr.map(function (promise) {return promise.catch(function (e) {promise.resolve(e);});}));\n  },\n  getAlbumList: function getAlbumList() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getAlbumList.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  getAlbumDetail: function getAlbumDetail() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getAlbumDetail.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取播放链接\n  getPlayUrl: function getPlayUrl() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getPlayUrl.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取歌词\n  getLyric: function getLyric() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getLyric.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  },\n  //获取评论\n  getComment: function getComment() {var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var sources = getters['source/get'];\n    var index = sources.findIndex(function (source) {return source.id == data.source;});\n    try {\n      data.baseUrl = sources[index].href;\n      var handle = eval(\"(\" + sources[index].request.getComment.value + \")\");\n      return handle(context, data);\n    } catch (e) {\n      return Promise.resolve({\n        code: ERR_FALSE,\n        data: null });\n\n    }\n  } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///120\n");

/***/ })
],[[0,"app-config"]]]);