{
	"id": "qqmusic",
	"title": "QQ音乐",
	"href": "https://u.y.qq.com",
	"isAdult": false,
	"type": "music",
	"request": {
		"search": {
			"label": "搜索功能",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, Singer, qqmusicCommonParams } = context;http.get('https://c.y.qq.com/soso/fcgi-bin/client_search_cp', {params: Object.assign({_: '15778592' + Math.floor(Math.random() * Math.pow(10, 5)),}, qqmusicCommonParams, {w: params.keyword,zhidaqu: 1,catZhida: 1,t: 0,flag: 1,ie: 'utf-8',sem: 1,aggr: 0,perpage: 20,n: 20,p: params.page[source],remoteplace: 'txt.mqq.all'}),headers: {referer: 'https://c.y.qq.com',host: 'c.y.qq.com',}}).then((res) => {if (res.data.code == 0) {let songs = res.data.data.song.list;let list = [];const zhidaqu = res.data.data.zhida;const zhida = zhidaqu.zhida_singer ? new Singer({singerId: zhidaqu.zhida_singer.singerMID,title: zhidaqu.zhida_singer.singerName,cover: `https://y.gtimg.cn/music/photo_new/T001R68x68M000${zhidaqu.zhida_singer.singerMID}.jpg?max_age=2592000`,albumSize: zhidaqu.zhida_singer.albumNum,source: source}) : null;songs.forEach(song => {let singer = '';song.singer.forEach((sin, k) => {singer += sin.name + (k < song.singer.length ? ' ' : '');});list.push(new Song({songId: song.songmid,lyricId: song.songid,commentId: song.songid,title: song.songname,cover: `https://y.gtimg.cn/music/photo_new/T002R300x300M000${song.albummid}.jpg?max_age=2592000`,singer: singer,payplay: song.pay.payplay == 1,extra: {bizType: 1},source: source}))});zhida ? list.unshift(zhida) : null;resolve({code: ERR_OK,data: {list: list,zhida: zhida,isLastPage: list.length < 20,currentPage: params.page[source],source: source}})}}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],zhida: null,isLastPage: false,currentPage: params.page[source] - 1,source: source}})})})}"
		},
		"getHotKeyword": {
			"label": "热门关键词",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, qqmusicCommonParams } = context;const dataValue = Object.assign({}, {'comm': qqmusicCommonParams,}, {'hotkey':{'module':'tencent_musicsoso_hotkey.HotkeyService','method':'GetHotkeyForQQMusicMobile','param':{'remoteplace':'txt.miniapp.wxada7aab80ba27074','searchid':'1559616839293',}}});http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: {cgiKey: 'GetHomePage','_': 1577857656236,data: JSON.stringify(dataValue)},headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.hotkey.data.vec_hotkey.forEach(top => {list.push(top.title);});}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getBannerList": {
			"label": "轮播图列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'-': 'recom61961704538089270',}, qqmusicCommonParams, {data: JSON.stringify({"comm": {"ct": 24},"focus": {"module": "QQMusic.MusichallServer","method": "GetFocus","param": {}}})}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {const group = res.data.focus.data.content;group.forEach(top => {list.push(new Album({albumId: top.jump_info.url,commentId: top.id,title: top.title,cover: top.pic_info.url,type: 'banner',extra: {bizType: 2},source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'BANNER',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'BANNER',source: source}})})})}"
		},
		"getBannerDetail": {
			"label": "轮播图详情",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'-': 'albumSonglist' + Math.random() * Math.pow(10, 17)}, qqmusicCommonParams, {data: JSON.stringify({"comm":{"ct":24,"cv":10000,},"albumSonglist":{"method":"GetAlbumSongList","module":"music.musichallAlbum.AlbumSongList","param":{"albumMid": params.id,"albumID": 0,"begin": 0,"num": 100,"order": 2,}}})}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.albumSonglist.data.songList.forEach(song => {let singer = '';song.songInfo.singer.forEach((sin, k) => {singer += sin.name + (k < song.songInfo.singer.length ? ' ' : '');});list.push(new Song({songId: song.songInfo.mid,lyricId: song.songInfo.id,commentId: song.songInfo.id,title: song.songInfo.title,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${song.songInfo.album.pmid}.jpg?max_age=2592000`,singer: singer,payplay: song.songInfo.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getTopList": {
			"label": "排行榜列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: {'-': '1577850668501',data: JSON.stringify({"comm": Object.assign({}, qqmusicCommonParams, {"ct": 23,"cv": 0}),"topList": {"module": "musicToplist.ToplistInfoServer","method": "GetAll","param": {}}})},headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.topList.data.group.forEach(item => {item.toplist.forEach(top => {if ( top.recType === 10005 ) {list.push(new Album({albumId: top.topId,commentId: top.topId,title: top.musichallTitle,cover: top.frontPicUrl,desc: top.intro?.replace(/<br>/g, '\n') || '',extra: {period: top.period,recType: top.recType,bizType: 4},type: 'top',source: source}))}})})}resolve({code: ERR_OK,data: {list: list,module: 'TOP',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'TOP',source: source}})})})}"
		},
		"getTopDetail": {
			"label": "排行榜详情",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqSign, qqmusicCommonParams } = context;const dataValue = {"comm":{"cv":4747474,"ct":24,},"topListDetail":{"module":"musicToplist.ToplistInfoServer","method":"GetDetail","param":{"topid": params.id,"offset":0,"num":1000,"period": params.extra.period},}};http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'_': Math.random() * Math.pow(10, 17),sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.topListDetail.data.songInfoList.forEach(song => {let singer = '';song.singer.forEach((sin, k) => {singer += sin.name + (k < song.singer.length ? ' ' : '');});list.push(new Song({songId: song.mid,lyricId: song.id,commentId: song.id,title: song.title,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${song.album.pmid}.jpg?max_age=2592000`,singer: singer,payplay: song.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getHotSingerList": {
			"label": "热门歌手",
			"value": "function (context, params) {return new Promise((resolve) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Singer, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'-': 'getUCGI' + Math.random() * Math.pow(10, 17)}, qqmusicCommonParams, {data: JSON.stringify({"comm":{"ct":24,"cv":0},"singerList":{"module":"Music.SingerListServer","method":"get_singer_list","param":{"area": -100,"sex":-100,"genre":-100,"index":-100,"sin":0,"cur_page":1}}})}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.singerList.data.singerlist.forEach(singer => {list.push(new Singer({singerId: singer.singer_mid,title: singer.singer_name,cover: singer.singer_pic,source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'HOT_SINGER',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'HOT_SINGER',source: source}})})})}"
		},
		"getSingerType": {
			"label": "歌手分类",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { ERR_OK } = context;const list = [{label: '内地歌手',value: '200',source: source},{label: '港台歌手',value: '2',source: source},{label: '欧美歌手',value: '5',source: source},{label: '韩国歌手',value: '3',source: source},{label: '日本歌手',value: '4',source: source}];resolve({code: ERR_OK,data: {list: list,source: source}})})}"
		},
		"getSingerList": {
			"label": "歌手列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Singer, qqSign, qqmusicCommonParams } = context;const dataValue = {'comm': {'cv': 4747474,'ct': 24},'singerList': {'module': 'music.musichallSinger.SingerList','method': 'GetSingerListIndex','param': {"area": parseInt(params.id),"sex":-100,"genre":-100,"index":-100,"sin":0,"cur_page":1}},};http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'_': '1636341064564',sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.singerList.data.singerlist.forEach(singer => {list.push(new Singer({singerId: singer.singer_mid,title: singer.singer_name,cover: singer.singer_pic,source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: true,currentPage: 1,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: true,currentPage: 1,source: source}})})})}"
		},
		"getSingerDetail": {
			"label": "歌手详情",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'-': 'getSingerSong' + Math.random() * Math.pow(10, 17)}, qqmusicCommonParams, {data: JSON.stringify({"comm":{"ct":24,"cv":0,},"singerInfo": {"method":"GetSingerDetail","module":"musichall.singer_info_server","param":{"singer_mids": [params.id],"ex_singer": 1,"wiki_singer": 0,"group_singer":0,"pic": 0,"photos":0,},},"singerSongList":{"module":"musichall.song_list_server","method":"GetSingerSongList","param":{"order":1,"singerMid": params.id,"begin":0,"num":100,}},})}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];let desc = '';if (res.data.code == 0) {desc = res.data.singerInfo.data.singer_list[0].ex_info.desc;res.data.singerSongList.data.songList.forEach(song => {let singer = '';song.songInfo.singer.forEach((sin, k) => {singer += sin.name + (k < song.songInfo.singer.length ? ' ' : '');});list.push(new Song({songId: song.songInfo.mid,lyricId: song.songInfo.id,commentId: song.songInfo.id,title: song.songInfo.title,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${song.songInfo.album.pmid}.jpg?max_age=2592000`,singer: singer,payplay: song.songInfo.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,desc: desc,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],desc: '',source: source}})})})}"
		},
		"getHotAlbumList": {
			"label": "热门歌单",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, qqmusicCommonParams } = context;http.get('https://c.y.qq.com/splcloud/fcgi-bin/fcg_get_diss_by_tag.fcg', {params: Object.assign({}, qqmusicCommonParams, {picmid: 1,rnd: 0.660100644751829,categoryId: 10000000,sortId: 5,sin: 0,ein: 19}),headers: {referer: 'https://c.y.qq.com',host: 'c.y.qq.com',}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.data.list.forEach(top => {list.push(new Album({albumId: top.dissid,commentId: top.dissid,title: top.dissname,cover: top.imgurl,playnum: top.listennum,creator: top.creator.name,type: 'album',extra: {bizType: 3},source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'HOT_ALBUM',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'HOT_ALBUM',source: source}})})})}"
		},
		"getAlbumType": {
			"label": "歌单类型",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, qqSign, qqmusicCommonParams } = context;const dataValue = {'comm': {'ct': 24},'discType': {'method': 'GetAllTag','module': 'music.playlist.PlaylistSquare','param': {}}};http.get(baseUrl + '/cgi-bin/musics.fcg', {params: Object.assign({_: '1635937136254',sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.discType.data.v_group.forEach(cat => {list.push({label: cat.group_name + '（QQ音乐）',child: cat.v_item.map(sub => {return {label: sub.name,value: sub.id,source: source}})})})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getAlbumList": {
			"label": "歌单列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, qqSign, qqmusicCommonParams } = context;const dataValue = {'comm': {'ct': 24},'playlist': {'param': {'caller': '0','category_id': params.id,'size': 100,'page': params.page - 1,'use_page': 1},'method': 'get_category_content','module': 'music.playlist.PlayListCategory'}};http.get(baseUrl + '/cgi-bin/musics.fcg', {params: Object.assign({'-': 'recom' + (Math.random() + '').replace('0.', ''),sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.playlist.data.content.v_item.forEach(top => {list.push(new Album({albumId: top.basic.tid,commentId: top.basic.tid,title: top.basic.title,cover: top.basic.cover.small_url,desc: top.basic.desc,playnum: top.basic.play_cnt,creator: top.basic.creator.nick,type: 'album',extra: {bizType: 3},source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: true,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: false,currentPage: params.page - 1,source: source}})})})}"
		},
		"getAlbumDetail": {
			"label": "歌单详情",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqmusicCommonParams } = context;http.get('https://c.y.qq.com/qzone/fcg-bin/fcg_ucc_getcdinfo_byids_cp.fcg', {params: Object.assign({}, qqmusicCommonParams, {type: 1,json: 1,utf8: 1,onlysong: 0,new_format: 1,disstid: params.id}),headers: {referer: 'https://c.y.qq.com/',host: 'c.y.qq.com',}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.cdlist[0].songlist.forEach(song => {let singer = '';song.singer.forEach((sin, k) => {singer += sin.name + (k < song.singer.length - 1 ? ' ' : '');});list.push(new Song({songId: song.mid,lyricId: song.id,commentId: song.id,title: song.title,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${song.album.pmid}.jpg?max_age=2592000`,singer: singer,payplay: song.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getNewSongList": {
			"label": "新歌上架",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqmusicCommonParams, qqSign } = context;const dataValue = {'comm': {'ct': 24},'new_song': {'module': 'newsong.NewSongServer','method': 'get_new_song_info','param': {'type': 5}},};http.get(baseUrl + '/cgi-bin/musics.fcg', {params: Object.assign({'-': 'recom' + (Math.random() + '').replace('0.', ''),sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.new_song.data.songlist.forEach(song => {let singer = '';song.singer.forEach((sin, k) => {singer += sin.name + (k < song.singer.length - 1 ? ' ' : '');});list.push(new Song({songId: song.mid,lyricId: song.id,commentId: song.id,title: song.title,cover: `https://y.gtimg.cn/music/photo_new/T002R300x300M000${song.album.mid}.jpg?max_age=2592000`,desc: song.desc,singer: singer,payplay: song.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getNewAlbumType": {
			"label": "新碟类型",
			"value": "function (context, params) {const { baseUrl, source } = params;const { ERR_OK } = context;return new Promise(resolve => {const list = [{label: '内地新碟',value: 1,source: source},{label: '港台新碟',value: 2,source: source},{label: '欧美新碟',value: 3,source: source},{label: '韩国新碟',value: 4,source: source},{label: '日本新碟',value: 5,source: source},{label: '其他新碟',value: 6,source: source}];resolve({code: ERR_OK,data: {list: list,source: source}})})}"
		},
		"getNewAlbumList": {
			"label": "新碟上架",
			"value": "function (context, params) {return new Promise(resolve=> {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, qqmusicCommonParams, qqSign } = context;const dataValue = {'comm': {'ct': 24},'new_album': {'module': 'newalbum.NewAlbumServer','method': 'get_new_album_info','param': {"area": params.id,"start": (parseInt(params.page) - 1) * 20,"sin":0,"num": 20}},};http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'_': '1636341064564',sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.new_album.data.albums.forEach(album => {let singer = '';album.singers.forEach((sin, k) => {singer += sin.name + (k < album.singers.length - 1 ? ' / ' : '');});list.push(new Album({albumId: album.mid,commentId: album.id,title: album.name,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${album.photo.pic_mid}.jpg?max_age=2592000`,creator: singer,type: 'newAlbum',extra: {bizType: 2},source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: list.length < 20,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: false,currentPage: params.page - 1,source: source}})})})}"
		},
		"getNewAlbumDetail": {
			"label": "新碟详情",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, qqSign, qqmusicCommonParams } = context;const dataValue = {'comm': {'ct': 24},'songList': {"module":"music.musichallAlbum.AlbumSongList","method":"GetAlbumSongList","param":{"albumMid": params.id,"albumID":0,"begin":0,"num":100,"order":2,}}};http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'_': '1636341064564',sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.songList.data.songList.forEach(songInfo => {const song = songInfo.songInfo;let singer = '';song.singer.forEach((sin, k) => {singer += sin.name + (k < song.singer.length - 1 ? ' / ' : '');});list.push(new Song({songId: song.mid,lyricId: song.id,commentId: song.id,title: song.title,cover: `https://y.qq.com/music/photo_new/T002R300x300M000${song.album.pmid}.jpg?max_age=2592000`,singer: singer,payplay: song.pay.pay_play == 1,extra: {bizType: 1},source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getPlayUrl": {
			"label": "播放链接",
			"value": "function (context, params) {return new Promise((resolve, reject) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, qqmusicCommonParams } = context;http.get(baseUrl + '/cgi-bin/musicu.fcg', {params: Object.assign({'-': 'getplaysongvkey700897959535075'}, qqmusicCommonParams, {data: JSON.stringify({"req": {"module": "CDN.SrfCdnDispatchServer","method": "GetCdnDispatch","param": {"guid": "7764863790","calltype": 0}},"req_0": {"module": "vkey.GetVkeyServer","method": "CgiGetVkey","param": {"guid": "7764863790","songmid": [params.id],"songtype": [0],"uin": '0',"loginflag": 1,"platform": '20'}},"comm": {"uin": 0,"format": 'json',"ct": 24,"cv": 0}})}),headers: {referer: baseUrl,host: baseUrl.replace('https://', '')}}).then((res) => {let playUrl = '';if (res.data.code == 0) {if (res.data.req_0.data.midurlinfo['0'].purl) {playUrl = res.data.req_0.data.midurlinfo['0'].purl ? res.data.req_0.data.sip[1] + res.data.req_0.data.midurlinfo['0'].purl : '';}}resolve({code: ERR_OK,data: {src: playUrl,source: source}})}).catch((err) => {reject({code: ERR_FALSE,data: {src: '',source: source}})})})}"
		},
		"getLyric": {
			"label": "歌词",
			"value": "function (context, params) {return new Promise((resolve, reject) => {const { source } = params;const { http, ERR_OK, ERR_FALSE, qqmusicCommonParams, htmlDecodeByRegExp, time2seconds } = context;http.get('https://c.y.qq.com/lyric/fcgi-bin/fcg_query_lyric_yqq.fcg', {params: Object.assign({}, qqmusicCommonParams, {'-': 'jsonp1',nobase64: 1,musicid: params.id}),headers: {referer: 'https://c.y.qq.com',host: 'c.y.qq.com',}}).then((res) => {let lyrics = [];if (res.data.code == 0) {let arr = htmlDecodeByRegExp(res.data.lyric).split('&#10;');for (let i in arr) {if (i >= 5) {let time = arr[i].match(/\[(\S*)\]/) ? arr[i].match(/\[(\S*)\]/)[0] : '';let title = arr[i].split(']')[1];if (title && time) {lyrics.push({time: time2seconds(time.substring(1, time.length - 1)),title: title});}}}}resolve({code: ERR_OK,data: {lyric: lyrics,source: source}})}).catch((err) => {reject({code: ERR_FALSE,data: {lyric: [],source: source}})})})}"
		},
		"getComment": {
			"label": "评论",
			"value": "function (context, params) {return new Promise((resolve) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, qqSign, Comment, qqmusicCommonParams, dateFormat } = context;const dataValue = {"comm": {"ct": 24},"comments": {"module":"music.globalComment.CommentReadServer","method":"GetNewCommentList","param":{"BizType": params.extra.bizType,"BizId": params.id.toString(),"LastCommentSeqNo": params.extra.seqNo || '',"PageSize": 25,"PageNum": params.page - 1,"FromCommentId":"","WithHot": 0,}}};http.get(baseUrl + '/cgi-bin/musics.fcg', {params: Object.assign({'_': Math.random() * Math.pow(10, 17),sign: qqSign(dataValue)}, qqmusicCommonParams, {data: dataValue}),headers: {referer: baseUrl,host: baseUrl.replace('https://', ''),}}).then((res) => {let list = [];if (res.data.code == 0) {res.data.comments.data.CommentList.Comments.forEach(comment => {const subComments = comment.SubComments || [];let subComment = [];subComments.forEach(sub => {subComment.push(new Comment({id: sub.SeqNo,avatar: sub.Avatar,title: sub.Nick,subtitle: dateFormat(sub.PubTime * 1000),content: sub.Content}))});list.push(new Comment({id: comment.SeqNo,avatar: comment.Avatar,title: comment.Nick,subtitle: dateFormat(comment.PubTime * 1000),subComment: subComment,content: comment.Content,source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: list.length < 25,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: false,currentPage: params.page - 1,source: source}})})})}"
		}
	}
}