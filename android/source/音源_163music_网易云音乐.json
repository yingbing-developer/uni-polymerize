{
	"id": "163music",
	"title": "网易云音乐",
	"href": "https://autumnfish.cn",
	"isAdult": false,
	"type": "music",
	"request": {
		"search": {
			"label": "搜索功能",
			"value": "function (context, params) {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, Singer, Asrsea } = context;let song = new Promise(resolve => {const dataValue = Asrsea({'s':params.keyword,'limit':20,'offset':(params.page[source] - 1) * 20,'type':1,'strategy':5,'queryCorrect':true}, 'xNQjoijbLvYRFhCF');http.post('https://interface.music.163.com/weapi/search/get', {params: {params: dataValue,encSecKey: 'b4817de5baa70f1add165575040d354df276f10747ee29231e20eff099db2a5556f15de01fdb7899a12ef1c1cfd27eff07fd12ed2ded945825807488459ad381d80388b566a9c4cf32b0a3d056c82251b3199c2d1d4cf2c3b158fff1af91ffd2350c173286c26d323c7c339ed2610e2772106ae4c0927355e30da796c1240a91'},headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.result.songs.forEach(song => {let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length - 1 ? ' ' : '');});list.push(new Song({songId: song.id,commentId: 'R_SO_4_' + song.id,lyricId: song.id,title: song.name,cover: song.al.picUrl,singer: singer || '未知歌手',payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})});let arr = [song];if ( params.page[source] <= 1 ) {arr.push(new Promise(resolve => {http.get(baseUrl + '/search/multimatch', {params: {keywords: params.keyword}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.result.artist.forEach(artist => {list.push(new Singer({singerId: artist.id,title: artist.name,cover: artist.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',albumSize: artist.albumSize,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch(() => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})}))}return new Promise(resolve => {Promise.all(arr).then((ress) => {let list = [];ress.forEach((res) => {if ( res.code == ERR_OK ) {list = res.data.list.concat(list);}});resolve({code: ERR_OK,data: {list: list,isLastPage: ress[0].data.list.length < 20,currentPage: params.page[source],source: source}})})})}"
		},
		"getHotKeyword": {
			"label": "热门关键词",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE } = context;http.get(baseUrl + '/search/hot').then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.result.hots.forEach(hot => {list.push(hot.first)})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getBannerList": {
			"label": "轮播图列表",
			"value": "function (context, params) {return new Promise((resolve) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album, Song } = context;http.get(baseUrl + '/banner', {params: {type: 1}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.banners.forEach(top => {let item = '';if ( top.targetType == 1000 ) {item = new Album({albumId: top.targetId,title: top.typeTitle,cover: top.pic,type: 'album',source: source})}if ( top.targetType == 1 ) {const song = top.song;let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length ? ' ' : '')});const single = new Song({songId: song.id,commentId: 'R_SO_4_' + song.id,lyricId: song.id,title: song.name,cover: song.al.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer || '未知歌手',source: source});item = new Album({albumId: top.targetId,title: top.typeTitle,cover: top.pic,song: [single],type: 'newAlbum',source: source});}item ? list.push(item) : null;})}resolve({code: ERR_OK,data: {list: list,module: 'BANNER',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'BANNER',source: source}})})})}"
		},
		"getTopList": {
			"label": "排行榜列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album } = context;http.get(baseUrl + '/toplist').then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.list.forEach(top => {list.push(new Album({albumId: top.id,commentId: 'A_PL_0_' + top.id,title: top.name,cover: top.coverImgUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',desc: top.description?.replace(/<br>/g, '') || '',type: 'top',source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'TOP',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'TOP',source: source}})})})}"
		},
		"getTopDetail": {
			"label": "排行榜详情",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { http, ERR_OK, ERR_FALSE, Song, Asrsea } = context;const dataValue = Asrsea({'id': data.id,'n':1000,'shareUserId':0}, 'avNrNiiiQqgFTkg3');http.post('https://interface.music.163.com/weapi/v6/playlist/detail', {params: {params: dataValue,encSecKey: 'aca49f84485cfa76dc80e13bc10be021a42559a8fec9839c01d873db7e615bf7fbeebbdd47f9f76dd94fda8afce2d3fa5ff91208a8d75a182229d8f6d8ace52163e1cd095e9db8d04e7804898e0a12a6767916fbc3af2976624af9eb71dd259a4977f471c41468a904b54a7aae75f7ff0090d3a852959e2b9424e6bc70843b36'},headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.playlist.tracks.forEach(song => {let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length ? ' ' : '');});list.push(new Song({songId: song.id,lyricId: song.id,commentId: 'R_SO_4_' + song.id,title: song.al.name,cover: song.al.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer,payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getHotSingerList": {
			"label": "热门歌手",
			"value": "function (context, params) {return new Promise(resolve=> {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Singer } = context;http.get(baseUrl + '/top/artists', {params: {limit: 100}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.artists.forEach(singer => {list.push(new Singer({singerId: singer.id,title: singer.name,cover: singer.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'HOT_SINGER',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'HOT_SINGER',source: source}})})})}"
		},
		"getSingerType": {
			"label": "歌手分类",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { ERR_OK } = context;const list = [{label: '华语歌手',value: '7',source: source},{label: '欧美歌手',value: '96',source: source},{label: '韩国歌手',value: '16',source: source},{label: '日本歌手',value: '8',source: source},{label: '其它歌手',value: '0',source: source}];resolve({code: ERR_OK,data: {list: list,source: source}})})}"
		},
		"getSingerList": {
			"label": "歌手列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Singer } = context;http.get(baseUrl + '/artist/list', {params: {limit: 80,initial: -1,type: -1,area: params.id}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.artists.forEach(singer => {list.push(new Singer({singerId: singer.id,title: singer.name,cover: singer.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: true,currentPage: 1,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: true,currentPage: 1,source: source}})})})}"
		},
		"getSingerDetail": {
			"label": "歌手详情",
			"value": "function (context, params) {return new Promise(resolve => {const {baseUrl,source} = params;const {http,ERR_OK,ERR_FALSE,Song,Asrsea} = context;http.post('https://music.163.com/weapi/artist/top/song', {params: {params: Asrsea({'id': params.id,'work_type': 1,'csrf_token': '',}, 'qg6zKW19haRDEm5S'),encSecKey: '13ea6c3e1d013b209e16ef2d6971485f9505eae6c243bd0ebda2d1b9cbec0538c0fb05f3e80b8ffdb676ac0240ca4cb31d827980077981f5d6ccb4721ea931fc127790c18f4b2691e83a93cb7bd00440a494d1d33d69b27ba8d8a4b4ab0c6d2e56e666aa988a139b7c9b3b5504d1d4f6a4c362364d2f7f0f75ab0df40d034336'} ,headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if (res.data.code == 200) {res.data.songs.forEach(song => {let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length ? ' ' : '')});list.push(new Song({songId: song.id,lyricId: song.id,commentId: 'R_SO_4_' + song.id,title: song.name,cover: song.al.picUrl +'?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer,payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getHotAlbumList": {
			"label": "热门歌单",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album } = context;http.get(baseUrl + '/top/playlist', {params: {order: 'hot',limit: 15,cat: '全部',offset: 0}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.playlists.forEach(top => {list.push(new Album({albumId: top.id,commentId: 'A_PL_0_' + top.id,title: top.name,cover: top.coverImgUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',desc: top.description,playnum: top.playCount,creator: top.creator.nickname,type: 'album',source: source}))})}resolve({code: ERR_OK,data: {list: list,module: 'HOT_ALBUM',source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],module: 'HOT_ALBUM',source: source}})})})}"
		},
		"getAlbumType": {
			"label": "歌单类型",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE } = context;http.get(baseUrl + '/playlist/catlist').then((res) => {let list = [];if ( res.data.code == 200 ) {const categories = res.data.categories;const subs = res.data.sub;Object.keys(categories).forEach(key => {const arr = subs.filter(sub => sub.category == key);list.push({label: categories[key] + '（网易云音乐）',child: arr.map(sub => {return {label: sub.name,value: sub.name,source: source}})})})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getAlbumList": {
			"label": "歌单列表",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album } = context;http.get(baseUrl + '/top/playlist', {params: {order: 'hot',limit: 50,cat: params.id,offset: ( params.page - 1 ) * 50}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.playlists.forEach(top => {list.push(new Album({albumId: top.id,commentId: 'A_PL_0_' + top.id,title: top.name,cover: top.coverImgUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',desc: top.description,playnum: top.playCount,creator: top.creator.nickname,type: 'album',source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: list.length < 50,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: false,currentPage: params.page - 1,source: source}})})})}"
		},
		"getAlbumDetail": {
			"label": "歌单详情",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song, Asrsea } = context;const dataValue = Asrsea({'id': params.id, 'n':1000,'shareUserId':0}, 'avNrNiiiQqgFTkg3');http.post('https://interface.music.163.com/weapi/v6/playlist/detail', {params: {params: dataValue,encSecKey: 'aca49f84485cfa76dc80e13bc10be021a42559a8fec9839c01d873db7e615bf7fbeebbdd47f9f76dd94fda8afce2d3fa5ff91208a8d75a182229d8f6d8ace52163e1cd095e9db8d04e7804898e0a12a6767916fbc3af2976624af9eb71dd259a4977f471c41468a904b54a7aae75f7ff0090d3a852959e2b9424e6bc70843b36'},headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.playlist.tracks.forEach(song => {let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length ? ' ' : '')});list.push(new Song({songId: song.id,lyricId: song.id,commentId: 'R_SO_4_' + song.id,title: song.al.name,cover: song.al.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer,payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getNewSongList": {
			"label": "新歌上架",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Song } = context;http.get(baseUrl + '/top/song', {params: {type: 0}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.data.forEach(song => {let singer = '';song.artists.forEach((sin, k) => {singer += sin.name + (k < song.artists.length ? ' ' : '');});list.push(new Song({songId: song.id,commentId: 'R_SO_4_' + song.id,lyricId: song.id,title: song.name,cover: song.album.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer || '未知歌手',payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getNewAlbumType": {
			"label": "新碟类型",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { ERR_OK } = context;const list = [{label: '全部新碟',value: 'ALL',source: source},{label: '华语新碟',value: 'ZH',source: source},{label: '欧美新碟',value: 'EA',source: source},{label: '韩国新碟',value: 'KR',source: source},{label: '日本新碟',value: 'JP',source: source}];resolve({code: ERR_OK,data: {list: list,source: source}})})}"
		},
		"getNewAlbumList": {
			"label": "新碟上架",
			"value": "function (context, params) {return new Promise(resolve => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, Album } = context;http.get(baseUrl + '/album/new', {params: {limit: 40,offset: (params.page - 1) * 40,area: params.id}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.albums.forEach(album => {let singer = '';album.artists.forEach((sin, k) => {singer += sin.name + (k < album.artists.length - 1 ? ' / ' : '')});list.push(new Album({albumId: album.id,commentId: 'R_AL_3_' + album.id,title: album.name,cover: album.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',creator: singer,type: 'newAlbum',source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: list.length < 40,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: false,currentPage: params.page - 1,source: source}})})})}"
		},
		"getNewAlbumDetail": {
			"label": "新碟详情",
			"value": "function (context, params) {return new Promise(resolve => {const { source } = params;const { http, ERR_OK, ERR_FALSE, Song, Asrsea } = context;const dataValue = Asrsea({}, 'GGUrx9xMnkNBwqd7');http.post('https://interface.music.163.com/weapi/v1/album/' + params.id, {params: {params: dataValue,encSecKey: '3b7bf6bd5eef5ccd3923e0ac08584032a0293d77c16d67c0c80e1c7b354525a68354e92fa50ec85efb65ac3f4ae1dce383fec67fff1d51be9d5b9b606136b97f563eccbcbb14d20616a68e45edcd75704c1b40f4a13bb985b66fdae8da4c5b0e78e71b535a772a7baaa685e64dc8cce7203762d7b646bbea06fde702f1480939'},headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if ( res.data.code == 200 ) {res.data.songs.forEach(song => {let singer = '';song.ar.forEach((sin, k) => {singer += sin.name + (k < song.ar.length ? ' ' : '')});list.push(new Song({songId: song.id,lyricId: song.id,commentId: 'R_SO_4_' + song.id,title: song.name,cover: song.al.picUrl + '?imageView&thumbnail=360y360&quality=75&tostatic=0',singer: singer,payplay: song.fee != 8 && song.fee != 0,source: source}))})}resolve({code: ERR_OK,data: {list: list,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],source: source}})})})}"
		},
		"getPlayUrl": {
			"label": "播放链接",
			"value": "function (context, params) {return new Promise((resolve, reject) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE } = context;http.get(baseUrl + '/song/url', {params: {id: params.id}}).then((res) => {let playUrl = '';if ( res.data.code == 200 ) {playUrl = res.data.data[0].url || '';} else {playUrl = `https://music.163.com/song/media/outer/url?id=${params.id}.mp3`;}resolve({code: ERR_OK,data: {src: playUrl,source: source}})}).catch((err) => {reject({code: ERR_FALSE,data: {src: '',source: source}})})})}"
		},
		"getLyric": {
			"label": "歌词",
			"value": "function (context, params) {return new Promise((resolve, reject) => {const { baseUrl, source } = params;const { http, ERR_OK, ERR_FALSE, time2seconds } = context;http.get(baseUrl + '/lyric', {params: {id: params.id}}).then((res) => {let lyrics = [];if ( res.data.code == 200 ) {let arr = res.data.lrc.lyric.split('\n');for ( let i in arr ) {let time = arr[i].match(/\[(\S*)\]/) ? arr[i].match(/\[(\S*)\]/)[0] : '';let title = arr[i].split(']')[1];if ( title && time ) {lyrics.push({time: time2seconds(time.substring(1, time.length-1)),title: title})}}}resolve({code: ERR_OK,data: {lyric: lyrics,source: source}})}).catch((err) => {reject({code: ERR_FALSE,data: {lyric: [],source: source}})})})}"
		},
		"getComment": {
			"label": "评论",
			"value": "function (context, params) {return new Promise(resolve => {const {source} = params;const {http,ERR_OK,ERR_FALSE,Comment,Asrsea,dateFormat} = context;const dataValue = Asrsea({'rid': params.id,'threadId': params.id,'pageNo': params.page,'pageSize': '20','cursor': '1638966725671','offset': (params.page - 1) * 20,'orderType': '1','csrf_token': ''}, '1yhgKF2pMaAlYNcX');http.post('https://music.163.com/weapi/comment/resource/comments/get?csrf_token=', {params: {params: dataValue,encSecKey: 'a27eb3deda2cf5a473ffb868f29cf1b33693e0fa234d739e998d7481537b5482e21e190943cde4ba814253ad3ff0ee3a80842ecf45c1b091b9077908f2a394ef713991f35f2721663c55ee53a6cf0647776bf825823ac116cde4dee9c47f06c935c59b96bfb99041de4e32d109c650fb3dd24c15eab5d3ce194a6f1e47ae10db'},headers: {referer: 'https://y.music.163.com','Content-Type': 'application/x-www-form-urlencoded'}}).then((res) => {let list = [];if (res.data.code == 200) {res.data.data.comments.forEach(comment => {const masterComments = comment.beReplied || [];let masterComment = [];masterComments.forEach(sub => {masterComment.push(new Comment({id: sub.beRepliedCommentId,avatar: sub.user.avatarUrl +'?imageView&thumbnail=360y360&quality=75&tostatic=0',title: sub.user.nickname,subtitle: dateFormat(comment.time),content: sub.content}))});list.push(new Comment({id: comment.commentId,avatar: comment.user.avatarUrl +'?imageView&thumbnail=360y360&quality=75&tostatic=0',title: comment.user.nickname,subtitle: dateFormat(comment.time),masterComment: masterComment,content: comment.content,source: source}))})}resolve({code: ERR_OK,data: {list: list,isLastPage: list.length < 20,currentPage: params.page,source: source}})}).catch((err) => {resolve({code: ERR_FALSE,data: {list: [],isLastPage: true,currentPage: params.page - 1,source: source}})})})}"
		}
	}
}